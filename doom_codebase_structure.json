{
  "name": "DOOM",
  "type": "directory",
  "root_directory": "/mnt/d/OneDrive/JJT/dev/DOOM/doom-codebase-analyzer/source-original",
  "children": [
    {
      "name": "ipx",
      "type": "directory",
      "children": [
        {
          "name": "DOOMNET.C",
          "type": "file",
          "size": 1642,
          "last_modified": "2024-09-05T16:00:02.100922",
          "path": "ipx/DOOMNET.C",
          "readme": "# DOOMNET.C\n\nThis file contains functionality related to DOOMNET.",
          "dependencies": [
            "ipxstr.h",
            "process.h",
            "string.h",
            "conio.h",
            "stdio.h",
            "dos.h",
            "doomnet.h",
            "stdlib.h",
            "ipx_frch.h"
          ],
          "inputs": [
            "void"
          ],
          "outputs": [],
          "content": {
            "functions": [
              {
                "name": "LaunchDOOM",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 40,
                "end_line": 73,
                "local_variables": [
                  {
                    "type": "char",
                    "name": "adrstring",
                    "array_size": "10",
                    "line_number": 43
                  },
                  {
                    "type": "long",
                    "name": "flatadr",
                    "array_size": null,
                    "line_number": 44
                  }
                ],
                "function_calls": [
                  {
                    "name": "getvect",
                    "line_number": 50
                  },
                  {
                    "name": "setvect",
                    "line_number": 51
                  },
                  {
                    "name": "interrupt",
                    "line_number": 51
                  },
                  {
                    "name": "MK_FP",
                    "line_number": 51
                  },
                  {
                    "name": "memcpy",
                    "line_number": 56
                  },
                  {
                    "name": "sprintf",
                    "line_number": 59
                  },
                  {
                    "name": "if",
                    "line_number": 63
                  },
                  {
                    "name": "access",
                    "line_number": 63
                  },
                  {
                    "name": "spawnv",
                    "line_number": 64
                  },
                  {
                    "name": "spawnv",
                    "line_number": 66
                  },
                  {
                    "name": "printf",
                    "line_number": 69
                  },
                  {
                    "name": "printf",
                    "line_number": 71
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 46
                  },
                  {
                    "type": "for",
                    "line_number": 55
                  },
                  {
                    "type": "if",
                    "line_number": 63
                  },
                  {
                    "type": "else",
                    "line_number": 65
                  },
                  {
                    "type": "else",
                    "line_number": 70
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "setvect",
                  "if",
                  "MK_FP",
                  "interrupt",
                  "printf",
                  "memcpy",
                  "sprintf",
                  "spawnv",
                  "getvect",
                  "access"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "doomcom",
                "type": "doomcom_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 14
              },
              {
                "name": "vectorishooked",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 15
              },
              {
                "name": "numnodes",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 27
              },
              {
                "name": "ticdup",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 28
              },
              {
                "name": "extratics",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 30
              },
              {
                "name": "consoleplayer",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 33
              },
              {
                "name": "numplayers",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 34
              },
              {
                "name": "angleoffset",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 35
              },
              {
                "name": "drone",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 36
              },
              {
                "name": "adrstring",
                "type": "char",
                "storage_class": null,
                "array_size": "10",
                "line_number": 43
              },
              {
                "name": "flatadr",
                "type": "long",
                "storage_class": null,
                "array_size": null,
                "line_number": 44
              }
            ],
            "defines": []
          },
          "source_code_path": "ipx/DOOMNET.C",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "DOOMNET.H",
          "type": "file",
          "size": 1778,
          "last_modified": "2024-09-05T16:00:02.134935",
          "path": "ipx/DOOMNET.H",
          "readme": "# DOOMNET.H\n\nThis file contains functionality related to DOOMNET.",
          "dependencies": [],
          "inputs": [
            "r",
            "g",
            "b"
          ],
          "outputs": [
            "define"
          ],
          "content": {
            "functions": [
              {
                "name": "I_ColorBlack",
                "return_type": "define",
                "parameters": [
                  {
                    "type": "",
                    "name": "r"
                  },
                  {
                    "type": "",
                    "name": "g"
                  },
                  {
                    "type": "",
                    "name": "b"
                  }
                ],
                "start_line": 6,
                "end_line": 7,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "outp",
                    "line_number": 7
                  },
                  {
                    "name": "outp",
                    "line_number": 7
                  },
                  {
                    "name": "outp",
                    "line_number": 7
                  },
                  {
                    "name": "outp",
                    "line_number": 7
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "r",
                  "g",
                  "b"
                ],
                "outputs": [
                  "define"
                ],
                "dependencies": [
                  "outp"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "id",
                "type": "long",
                "storage_class": null,
                "array_size": null,
                "line_number": 21
              },
              {
                "name": "intnum",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 22
              },
              {
                "name": "command",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 25
              },
              {
                "name": "remotenode",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 26
              },
              {
                "name": "datalength",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 27
              },
              {
                "name": "numnodes",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 30
              },
              {
                "name": "ticdup",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 31
              },
              {
                "name": "extratics",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 32
              },
              {
                "name": "deathmatch",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 33
              },
              {
                "name": "savegame",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 34
              },
              {
                "name": "episode",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 35
              },
              {
                "name": "map",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 36
              },
              {
                "name": "skill",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 37
              },
              {
                "name": "consoleplayer",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 40
              },
              {
                "name": "numplayers",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 41
              },
              {
                "name": "angleoffset",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 42
              },
              {
                "name": "drone",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 43
              },
              {
                "name": "data",
                "type": "char",
                "storage_class": null,
                "array_size": "512",
                "line_number": 46
              },
              {
                "name": "doomcom",
                "type": "doomcom_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 51
              },
              {
                "name": "vectorishooked",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 53
              }
            ],
            "defines": [
              {
                "name": "PEL_WRITE_ADR",
                "value": "0x3c8",
                "line_number": 3
              },
              {
                "name": "PEL_DATA",
                "value": "0x3c9",
                "line_number": 4
              },
              {
                "name": "MAXNETNODES",
                "value": "8              // max computers in a game",
                "line_number": 10
              },
              {
                "name": "MAXPLAYERS",
                "value": "4              // 4 players max + drones",
                "line_number": 11
              },
              {
                "name": "CMD_SEND",
                "value": "1",
                "line_number": 14
              },
              {
                "name": "CMD_GET",
                "value": "2",
                "line_number": 15
              },
              {
                "name": "DOOMCOM_ID",
                "value": "0x12345678l",
                "line_number": 17
              }
            ]
          },
          "source_code_path": "ipx/DOOMNET.H",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "IPXNET.C",
          "type": "file",
          "size": 5992,
          "last_modified": "2024-09-05T16:00:02.164457",
          "path": "ipx/IPXNET.C",
          "readme": "# IPXNET.C\n\nThis file contains functionality related to IPXNET.",
          "dependencies": [
            "values.h",
            "process.h",
            "string.h",
            "stdio.h",
            "dos.h",
            "ipxnet.h",
            "stdlib.h"
          ],
          "inputs": [
            "destination",
            "i",
            "void",
            "*ecb",
            "socketNumber"
          ],
          "outputs": [
            "int",
            "unsigned short"
          ],
          "content": {
            "functions": [
              {
                "name": "OpenSocket",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "short",
                    "name": "socketNumber"
                  }
                ],
                "start_line": 39,
                "end_line": 48,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "_DX",
                    "array_size": null,
                    "line_number": 47
                  }
                ],
                "function_calls": [
                  {
                    "name": "IPX",
                    "line_number": 44
                  },
                  {
                    "name": "if",
                    "line_number": 45
                  },
                  {
                    "name": "Error",
                    "line_number": 46
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 45
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "socketNumber"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "Error",
                  "IPX",
                  "if"
                ]
              },
              {
                "name": "CloseSocket",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "short",
                    "name": "socketNumber"
                  }
                ],
                "start_line": 51,
                "end_line": 56,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "IPX",
                    "line_number": 55
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "socketNumber"
                ],
                "outputs": [],
                "dependencies": [
                  "IPX"
                ]
              },
              {
                "name": "ListenForPacket",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "ECB",
                    "name": "*ecb"
                  }
                ],
                "start_line": 58,
                "end_line": 66,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "FP_OFF",
                    "line_number": 60
                  },
                  {
                    "name": "FP_SEG",
                    "line_number": 61
                  },
                  {
                    "name": "IPX",
                    "line_number": 63
                  },
                  {
                    "name": "if",
                    "line_number": 64
                  },
                  {
                    "name": "Error",
                    "line_number": 65
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 64
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "*ecb"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "IPX",
                  "FP_SEG",
                  "FP_OFF",
                  "Error"
                ]
              },
              {
                "name": "GetLocalAddress",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 69,
                "end_line": 75,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "FP_OFF",
                    "line_number": 71
                  },
                  {
                    "name": "FP_SEG",
                    "line_number": 72
                  },
                  {
                    "name": "IPX",
                    "line_number": 74
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "FP_OFF",
                  "IPX",
                  "FP_SEG"
                ]
              },
              {
                "name": "InitNetwork",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 87,
                "end_line": 147,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "geninterrupt",
                    "line_number": 95
                  },
                  {
                    "name": "if",
                    "line_number": 96
                  },
                  {
                    "name": "Error",
                    "line_number": 97
                  },
                  {
                    "name": "MK_FP",
                    "line_number": 98
                  },
                  {
                    "name": "OpenSocket",
                    "line_number": 104
                  },
                  {
                    "name": "GetLocalAddress",
                    "line_number": 106
                  },
                  {
                    "name": "memset",
                    "line_number": 111
                  },
                  {
                    "name": "sizeof",
                    "line_number": 111
                  },
                  {
                    "name": "for",
                    "line_number": 113
                  },
                  {
                    "name": "FP_OFF",
                    "line_number": 117
                  },
                  {
                    "name": "FP_SEG",
                    "line_number": 118
                  },
                  {
                    "name": "sizeof",
                    "line_number": 119
                  },
                  {
                    "name": "sizeof",
                    "line_number": 119
                  },
                  {
                    "name": "ListenForPacket",
                    "line_number": 121
                  },
                  {
                    "name": "memset",
                    "line_number": 127
                  },
                  {
                    "name": "sizeof",
                    "line_number": 127
                  },
                  {
                    "name": "FP_OFF",
                    "line_number": 131
                  },
                  {
                    "name": "FP_SEG",
                    "line_number": 132
                  },
                  {
                    "name": "for",
                    "line_number": 133
                  },
                  {
                    "name": "FP_OFF",
                    "line_number": 137
                  },
                  {
                    "name": "FP_SEG",
                    "line_number": 138
                  },
                  {
                    "name": "for",
                    "line_number": 141
                  },
                  {
                    "name": "for",
                    "line_number": 145
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 96
                  },
                  {
                    "type": "for",
                    "line_number": 102
                  },
                  {
                    "type": "for",
                    "line_number": 113
                  },
                  {
                    "type": "for",
                    "line_number": 133
                  },
                  {
                    "type": "for",
                    "line_number": 141
                  },
                  {
                    "type": "for",
                    "line_number": 145
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "GetLocalAddress",
                  "for",
                  "ListenForPacket",
                  "memset",
                  "MK_FP",
                  "FP_SEG",
                  "sizeof",
                  "geninterrupt",
                  "FP_OFF",
                  "OpenSocket",
                  "Error"
                ]
              },
              {
                "name": "ShutdownNetwork",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 158,
                "end_line": 162,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 160
                  },
                  {
                    "name": "CloseSocket",
                    "line_number": 161
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 160
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "CloseSocket",
                  "if"
                ]
              },
              {
                "name": "SendPacket",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "destination"
                  }
                ],
                "start_line": 174,
                "end_line": 205,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 176
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 182
                  },
                  {
                    "name": "length",
                    "line_number": 187
                  },
                  {
                    "name": "sizeof",
                    "line_number": 188
                  },
                  {
                    "name": "FP_OFF",
                    "line_number": 192
                  },
                  {
                    "name": "FP_SEG",
                    "line_number": 193
                  },
                  {
                    "name": "IPX",
                    "line_number": 195
                  },
                  {
                    "name": "if",
                    "line_number": 196
                  },
                  {
                    "name": "Error",
                    "line_number": 197
                  },
                  {
                    "name": "while",
                    "line_number": 199
                  },
                  {
                    "name": "IPX",
                    "line_number": 203
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 182
                  },
                  {
                    "type": "if",
                    "line_number": 196
                  },
                  {
                    "type": "while",
                    "line_number": 199
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "destination"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "length",
                  "for",
                  "if",
                  "IPX",
                  "FP_SEG",
                  "sizeof",
                  "FP_OFF",
                  "Error"
                ]
              },
              {
                "name": "ShortSwap",
                "return_type": "unsigned short",
                "parameters": [
                  {
                    "type": "unsigned short",
                    "name": "i"
                  }
                ],
                "start_line": 208,
                "end_line": 211,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "return",
                    "line_number": 210
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i"
                ],
                "outputs": [
                  "unsigned short"
                ],
                "dependencies": [
                  "return"
                ]
              },
              {
                "name": "GetPacket",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 223,
                "end_line": 293,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "packetnum",
                    "array_size": null,
                    "line_number": 225
                  },
                  {
                    "type": "long",
                    "name": "besttic",
                    "array_size": null,
                    "line_number": 227
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 251
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 258
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 281
                  },
                  {
                    "type": "return",
                    "name": "1",
                    "array_size": null,
                    "line_number": 292
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 236
                  },
                  {
                    "name": "if",
                    "line_number": 238
                  },
                  {
                    "name": "if",
                    "line_number": 243
                  },
                  {
                    "name": "if",
                    "line_number": 250
                  },
                  {
                    "name": "if",
                    "line_number": 255
                  },
                  {
                    "name": "ListenForPacket",
                    "line_number": 257
                  },
                  {
                    "name": "if",
                    "line_number": 266
                  },
                  {
                    "name": "Error",
                    "line_number": 267
                  },
                  {
                    "name": "memcpy",
                    "line_number": 270
                  },
                  {
                    "name": "sizeof",
                    "line_number": 270
                  },
                  {
                    "name": "for",
                    "line_number": 271
                  },
                  {
                    "name": "if",
                    "line_number": 272
                  },
                  {
                    "name": "memcmp",
                    "line_number": 272
                  },
                  {
                    "name": "sizeof",
                    "line_number": 272
                  },
                  {
                    "name": "if",
                    "line_number": 274
                  },
                  {
                    "name": "if",
                    "line_number": 278
                  },
                  {
                    "name": "ListenForPacket",
                    "line_number": 280
                  },
                  {
                    "name": "ShortSwap",
                    "line_number": 286
                  },
                  {
                    "name": "memcpy",
                    "line_number": 287
                  },
                  {
                    "name": "ListenForPacket",
                    "line_number": 290
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 230
                  },
                  {
                    "type": "for",
                    "line_number": 236
                  },
                  {
                    "type": "if",
                    "line_number": 238
                  },
                  {
                    "type": "if",
                    "line_number": 243
                  },
                  {
                    "type": "if",
                    "line_number": 250
                  },
                  {
                    "type": "if",
                    "line_number": 255
                  },
                  {
                    "type": "if",
                    "line_number": 266
                  },
                  {
                    "type": "for",
                    "line_number": 271
                  },
                  {
                    "type": "if",
                    "line_number": 272
                  },
                  {
                    "type": "if",
                    "line_number": 274
                  },
                  {
                    "type": "else",
                    "line_number": 276
                  },
                  {
                    "type": "if",
                    "line_number": 278
                  }
                ],
                "complexity": 11,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "if",
                  "ListenForPacket",
                  "for",
                  "memcmp",
                  "sizeof",
                  "ShortSwap",
                  "memcpy",
                  "Error"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "remoteadr",
                "type": "nodeadr_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 26
              },
              {
                "name": "localadr",
                "type": "localadr_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 28
              },
              {
                "name": "socketid",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 30
              },
              {
                "name": "localtime",
                "type": "long",
                "storage_class": null,
                "array_size": null,
                "line_number": 34
              },
              {
                "name": "remotetime",
                "type": "long",
                "storage_class": null,
                "array_size": null,
                "line_number": 35
              },
              {
                "name": "_DX",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 47
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 176
              },
              {
                "name": "packetnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 225
              },
              {
                "name": "besttic",
                "type": "long",
                "storage_class": null,
                "array_size": null,
                "line_number": 227
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 251
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 258
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 281
              },
              {
                "name": "1",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 292
              }
            ],
            "defines": []
          },
          "source_code_path": "ipx/IPXNET.C",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "IPXNET.H",
          "type": "file",
          "size": 2871,
          "last_modified": "2024-09-05T16:00:02.191454",
          "path": "ipx/IPXNET.H",
          "readme": "# IPXNET.H\n\nThis file contains functionality related to IPXNET.",
          "dependencies": [
            "DoomNet.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "private",
                "type": "char",
                "storage_class": null,
                "array_size": "512",
                "line_number": 6
              },
              {
                "name": "gameid",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 19
              },
              {
                "name": "drone",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 20
              },
              {
                "name": "nodesfound",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 21
              },
              {
                "name": "nodeswanted",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 22
              },
              {
                "name": "BYTE",
                "type": "typedef unsigned char",
                "storage_class": null,
                "array_size": null,
                "line_number": 27
              },
              {
                "name": "WORD",
                "type": "typedef unsigned short",
                "storage_class": null,
                "array_size": null,
                "line_number": 28
              },
              {
                "name": "LONG",
                "type": "typedef unsigned long",
                "storage_class": null,
                "array_size": null,
                "line_number": 29
              },
              {
                "name": "PacketCheckSum",
                "type": "WORD",
                "storage_class": null,
                "array_size": null,
                "line_number": 33
              },
              {
                "name": "PacketLength",
                "type": "WORD",
                "storage_class": null,
                "array_size": null,
                "line_number": 34
              },
              {
                "name": "PacketTransportControl",
                "type": "BYTE",
                "storage_class": null,
                "array_size": null,
                "line_number": 35
              },
              {
                "name": "PacketType",
                "type": "BYTE",
                "storage_class": null,
                "array_size": null,
                "line_number": 36
              },
              {
                "name": "dNetwork",
                "type": "BYTE",
                "storage_class": null,
                "array_size": "4",
                "line_number": 38
              },
              {
                "name": "dNode",
                "type": "BYTE",
                "storage_class": null,
                "array_size": "6",
                "line_number": 39
              },
              {
                "name": "dSocket",
                "type": "BYTE",
                "storage_class": null,
                "array_size": "2",
                "line_number": 40
              },
              {
                "name": "sNetwork",
                "type": "BYTE",
                "storage_class": null,
                "array_size": "4",
                "line_number": 42
              },
              {
                "name": "sNode",
                "type": "BYTE",
                "storage_class": null,
                "array_size": "6",
                "line_number": 43
              },
              {
                "name": "sSocket",
                "type": "BYTE",
                "storage_class": null,
                "array_size": "2",
                "line_number": 44
              },
              {
                "name": "network",
                "type": "BYTE",
                "storage_class": null,
                "array_size": "4",
                "line_number": 50
              },
              {
                "name": "node",
                "type": "BYTE",
                "storage_class": null,
                "array_size": "6",
                "line_number": 51
              },
              {
                "name": "node",
                "type": "BYTE",
                "storage_class": null,
                "array_size": "6",
                "line_number": 56
              },
              {
                "name": "Link",
                "type": "WORD",
                "storage_class": null,
                "array_size": "2",
                "line_number": 61
              },
              {
                "name": "ESRAddress",
                "type": "WORD",
                "storage_class": null,
                "array_size": "2",
                "line_number": 62
              },
              {
                "name": "InUseFlag",
                "type": "BYTE",
                "storage_class": null,
                "array_size": null,
                "line_number": 63
              },
              {
                "name": "CompletionCode",
                "type": "BYTE",
                "storage_class": null,
                "array_size": null,
                "line_number": 64
              },
              {
                "name": "ECBSocket",
                "type": "WORD",
                "storage_class": null,
                "array_size": null,
                "line_number": 65
              },
              {
                "name": "IPXWorkspace",
                "type": "BYTE",
                "storage_class": null,
                "array_size": "4",
                "line_number": 66
              },
              {
                "name": "DriverWorkspace",
                "type": "BYTE",
                "storage_class": null,
                "array_size": "12",
                "line_number": 67
              },
              {
                "name": "ImmediateAddress",
                "type": "BYTE",
                "storage_class": null,
                "array_size": "6",
                "line_number": 68
              },
              {
                "name": "FragmentCount",
                "type": "WORD",
                "storage_class": null,
                "array_size": null,
                "line_number": 69
              },
              {
                "name": "fAddress",
                "type": "WORD",
                "storage_class": null,
                "array_size": "2",
                "line_number": 71
              },
              {
                "name": "fSize",
                "type": "WORD",
                "storage_class": null,
                "array_size": null,
                "line_number": 72
              },
              {
                "name": "f2Address",
                "type": "WORD",
                "storage_class": null,
                "array_size": "2",
                "line_number": 74
              },
              {
                "name": "f2Size",
                "type": "WORD",
                "storage_class": null,
                "array_size": null,
                "line_number": 75
              },
              {
                "name": "ecb",
                "type": "ECB",
                "storage_class": null,
                "array_size": null,
                "line_number": 84
              },
              {
                "name": "ipx",
                "type": "IPXPacket",
                "storage_class": null,
                "array_size": null,
                "line_number": 85
              },
              {
                "name": "time",
                "type": "long",
                "storage_class": null,
                "array_size": null,
                "line_number": 87
              },
              {
                "name": "data",
                "type": "doomdata_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 88
              },
              {
                "name": "doomcom",
                "type": "doomcom_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 92
              },
              {
                "name": "gameid",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 93
              },
              {
                "name": "localnodenum",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 96
              },
              {
                "name": "localtime",
                "type": "long",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 98
              },
              {
                "name": "remotetime",
                "type": "long",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 99
              },
              {
                "name": "remoteadr",
                "type": "nodeadr_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 101
              },
              {
                "name": "myargc",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 103
              }
            ],
            "defines": [
              {
                "name": "NUMPACKETS",
                "value": "10              // max outstanding packets before loss",
                "line_number": 14
              }
            ]
          },
          "source_code_path": "ipx/IPXNET.H",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "IPXSETUP.C",
          "type": "file",
          "size": 8155,
          "last_modified": "2024-09-05T16:00:02.225455",
          "path": "ipx/IPXSETUP.C",
          "readme": "# IPXSETUP.C\n\nThis file contains functionality related to IPXSETUP.",
          "dependencies": [
            "bios.h",
            "ipxstr.h",
            "process.h",
            "string.h",
            "conio.h",
            "stdio.h",
            "dos.h",
            "stdarg.h",
            "ipxnet.h",
            "stdlib.h",
            "ipx_frch.h"
          ],
          "inputs": [
            "CMD_GET",
            "...",
            "*error",
            "void",
            "*parm"
          ],
          "outputs": [
            "int",
            "void interrupt",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "Error",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char",
                    "name": "*error"
                  },
                  {
                    "type": "",
                    "name": "..."
                  }
                ],
                "start_line": 37,
                "end_line": 50,
                "local_variables": [
                  {
                    "type": "va_list",
                    "name": "argptr",
                    "array_size": null,
                    "line_number": 39
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 41
                  },
                  {
                    "name": "setvect",
                    "line_number": 42
                  },
                  {
                    "name": "va_start",
                    "line_number": 44
                  },
                  {
                    "name": "vprintf",
                    "line_number": 45
                  },
                  {
                    "name": "va_end",
                    "line_number": 46
                  },
                  {
                    "name": "printf",
                    "line_number": 47
                  },
                  {
                    "name": "ShutdownNetwork",
                    "line_number": 48
                  },
                  {
                    "name": "exit",
                    "line_number": 49
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 41
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "*error",
                  "..."
                ],
                "outputs": [],
                "dependencies": [
                  "setvect",
                  "exit",
                  "ShutdownNetwork",
                  "if",
                  "vprintf",
                  "printf",
                  "va_start",
                  "va_end"
                ]
              },
              {
                "name": "CheckParm",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "char",
                    "name": "*parm"
                  }
                ],
                "start_line": 65,
                "end_line": 74,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 67
                  },
                  {
                    "type": "return",
                    "name": "i",
                    "array_size": null,
                    "line_number": 71
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 73
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 69
                  },
                  {
                    "name": "if",
                    "line_number": 70
                  },
                  {
                    "name": "stricmp",
                    "line_number": 70
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 69
                  },
                  {
                    "type": "if",
                    "line_number": 70
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "*parm"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "stricmp",
                  "if",
                  "for"
                ]
              },
              {
                "name": "NetISR",
                "return_type": "void interrupt",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 85,
                "end_line": 96,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 87
                  },
                  {
                    "name": "SendPacket",
                    "line_number": 90
                  },
                  {
                    "name": "if",
                    "line_number": 92
                  },
                  {
                    "name": "GetPacket",
                    "line_number": 94
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 87
                  },
                  {
                    "type": "if",
                    "line_number": 92
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "void interrupt"
                ],
                "dependencies": [
                  "GetPacket",
                  "SendPacket",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "doomcom.command ==",
                    "name": "CMD_GET"
                  }
                ],
                "start_line": 92,
                "end_line": 95,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "GetPacket",
                    "line_number": 94
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CMD_GET"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "GetPacket"
                ]
              },
              {
                "name": "LookForNodes",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 112,
                "end_line": 253,
                "local_variables": [
                  {
                    "type": "struct time",
                    "name": "time",
                    "array_size": null,
                    "line_number": 117
                  },
                  {
                    "type": "int",
                    "name": "oldsec",
                    "array_size": null,
                    "line_number": 118
                  },
                  {
                    "type": "char",
                    "name": "str",
                    "array_size": "80",
                    "line_number": 120
                  }
                ],
                "function_calls": [
                  {
                    "name": "printf",
                    "line_number": 127
                  },
                  {
                    "name": "printf",
                    "line_number": 129
                  },
                  {
                    "name": "while",
                    "line_number": 147
                  },
                  {
                    "name": "bioskey",
                    "line_number": 147
                  },
                  {
                    "name": "if",
                    "line_number": 149
                  },
                  {
                    "name": "bioskey",
                    "line_number": 149
                  },
                  {
                    "name": "Error",
                    "line_number": 150
                  },
                  {
                    "name": "while",
                    "line_number": 156
                  },
                  {
                    "name": "GetPacket",
                    "line_number": 156
                  },
                  {
                    "name": "if",
                    "line_number": 158
                  },
                  {
                    "name": "if",
                    "line_number": 163
                  },
                  {
                    "name": "if",
                    "line_number": 165
                  },
                  {
                    "name": "Error",
                    "line_number": 166
                  },
                  {
                    "name": "memcpy",
                    "line_number": 173
                  },
                  {
                    "name": "sizeof",
                    "line_number": 173
                  },
                  {
                    "name": "if",
                    "line_number": 175
                  },
                  {
                    "name": "memcpy",
                    "line_number": 181
                  },
                  {
                    "name": "sizeof",
                    "line_number": 182
                  },
                  {
                    "name": "if",
                    "line_number": 187
                  },
                  {
                    "name": "memcmp",
                    "line_number": 187
                  },
                  {
                    "name": "sizeof",
                    "line_number": 187
                  },
                  {
                    "name": "printf",
                    "line_number": 194
                  },
                  {
                    "name": "if",
                    "line_number": 196
                  },
                  {
                    "name": "printf",
                    "line_number": 197
                  },
                  {
                    "name": "for",
                    "line_number": 202
                  },
                  {
                    "name": "if",
                    "line_number": 203
                  },
                  {
                    "name": "if",
                    "line_number": 206
                  },
                  {
                    "name": "gettime",
                    "line_number": 212
                  },
                  {
                    "name": "if",
                    "line_number": 213
                  },
                  {
                    "name": "printf",
                    "line_number": 217
                  },
                  {
                    "name": "sizeof",
                    "line_number": 218
                  },
                  {
                    "name": "memcpy",
                    "line_number": 222
                  },
                  {
                    "name": "sizeof",
                    "line_number": 222
                  },
                  {
                    "name": "SendPacket",
                    "line_number": 224
                  },
                  {
                    "name": "while",
                    "line_number": 226
                  },
                  {
                    "name": "for",
                    "line_number": 234
                  },
                  {
                    "name": "if",
                    "line_number": 236
                  },
                  {
                    "name": "if",
                    "line_number": 239
                  },
                  {
                    "name": "Error",
                    "line_number": 240
                  },
                  {
                    "name": "if",
                    "line_number": 241
                  },
                  {
                    "name": "memcmp",
                    "line_number": 241
                  },
                  {
                    "name": "sizeof",
                    "line_number": 241
                  },
                  {
                    "name": "if",
                    "line_number": 246
                  },
                  {
                    "name": "Error",
                    "line_number": 247
                  },
                  {
                    "name": "printf",
                    "line_number": 252
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 145
                  },
                  {
                    "type": "while",
                    "line_number": 147
                  },
                  {
                    "type": "if",
                    "line_number": 149
                  },
                  {
                    "type": "while",
                    "line_number": 156
                  },
                  {
                    "type": "if",
                    "line_number": 158
                  },
                  {
                    "type": "else",
                    "line_number": 160
                  },
                  {
                    "type": "if",
                    "line_number": 163
                  },
                  {
                    "type": "if",
                    "line_number": 165
                  },
                  {
                    "type": "if",
                    "line_number": 167
                  },
                  {
                    "type": "if",
                    "line_number": 175
                  },
                  {
                    "type": "if",
                    "line_number": 185
                  },
                  {
                    "type": "if",
                    "line_number": 187
                  },
                  {
                    "type": "if",
                    "line_number": 196
                  },
                  {
                    "type": "if",
                    "line_number": 200
                  },
                  {
                    "type": "for",
                    "line_number": 202
                  },
                  {
                    "type": "if",
                    "line_number": 203
                  },
                  {
                    "type": "if",
                    "line_number": 206
                  },
                  {
                    "type": "if",
                    "line_number": 213
                  },
                  {
                    "type": "while",
                    "line_number": 226
                  },
                  {
                    "type": "for",
                    "line_number": 234
                  },
                  {
                    "type": "if",
                    "line_number": 236
                  },
                  {
                    "type": "if",
                    "line_number": 239
                  },
                  {
                    "type": "if",
                    "line_number": 241
                  },
                  {
                    "type": "if",
                    "line_number": 246
                  }
                ],
                "complexity": 19,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "if",
                  "for",
                  "bioskey",
                  "GetPacket",
                  "memcmp",
                  "gettime",
                  "sizeof",
                  "printf",
                  "memcpy",
                  "SendPacket",
                  "Error"
                ]
              },
              {
                "name": "FindResponseFile",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 261,
                "end_line": 326,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 263
                  },
                  {
                    "type": "int",
                    "name": "size",
                    "array_size": null,
                    "line_number": 270
                  },
                  {
                    "type": "int",
                    "name": "k",
                    "array_size": null,
                    "line_number": 271
                  },
                  {
                    "type": "int",
                    "name": "index",
                    "array_size": null,
                    "line_number": 272
                  },
                  {
                    "type": "int",
                    "name": "indexinfile",
                    "array_size": null,
                    "line_number": 273
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 266
                  },
                  {
                    "name": "if",
                    "line_number": 267
                  },
                  {
                    "name": "fopen",
                    "line_number": 280
                  },
                  {
                    "name": "if",
                    "line_number": 281
                  },
                  {
                    "name": "Error",
                    "line_number": 282
                  },
                  {
                    "name": "printf",
                    "line_number": 283
                  },
                  {
                    "name": "strupr",
                    "line_number": 283
                  },
                  {
                    "name": "fseek",
                    "line_number": 284
                  },
                  {
                    "name": "ftell",
                    "line_number": 285
                  },
                  {
                    "name": "fseek",
                    "line_number": 286
                  },
                  {
                    "name": "malloc",
                    "line_number": 287
                  },
                  {
                    "name": "fread",
                    "line_number": 288
                  },
                  {
                    "name": "fclose",
                    "line_number": 289
                  },
                  {
                    "name": "for",
                    "line_number": 292
                  },
                  {
                    "name": "malloc",
                    "line_number": 296
                  },
                  {
                    "name": "sizeof",
                    "line_number": 296
                  },
                  {
                    "name": "memset",
                    "line_number": 297
                  },
                  {
                    "name": "sizeof",
                    "line_number": 297
                  },
                  {
                    "name": "while",
                    "line_number": 306
                  },
                  {
                    "name": "while",
                    "line_number": 310
                  },
                  {
                    "name": "while",
                    "line_number": 313
                  },
                  {
                    "name": "for",
                    "line_number": 315
                  },
                  {
                    "name": "printf",
                    "line_number": 320
                  },
                  {
                    "name": "for",
                    "line_number": 321
                  },
                  {
                    "name": "printf",
                    "line_number": 322
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 266
                  },
                  {
                    "type": "if",
                    "line_number": 267
                  },
                  {
                    "type": "if",
                    "line_number": 281
                  },
                  {
                    "type": "for",
                    "line_number": 292
                  },
                  {
                    "type": "while",
                    "line_number": 306
                  },
                  {
                    "type": "while",
                    "line_number": 310
                  },
                  {
                    "type": "while",
                    "line_number": 313
                  },
                  {
                    "type": "for",
                    "line_number": 315
                  },
                  {
                    "type": "for",
                    "line_number": 321
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "fseek",
                  "if",
                  "for",
                  "memset",
                  "fopen",
                  "sizeof",
                  "malloc",
                  "fread",
                  "fclose",
                  "printf",
                  "ftell",
                  "strupr",
                  "Error"
                ]
              },
              {
                "name": "main",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 337,
                "end_line": 418,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 339
                  }
                ],
                "function_calls": [
                  {
                    "name": "printf",
                    "line_number": 354
                  },
                  {
                    "name": "FindResponseFile",
                    "line_number": 366
                  },
                  {
                    "name": "if",
                    "line_number": 368
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 368
                  },
                  {
                    "name": "atoi",
                    "line_number": 369
                  },
                  {
                    "name": "if",
                    "line_number": 371
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 371
                  },
                  {
                    "name": "sscanf",
                    "line_number": 373
                  },
                  {
                    "name": "if",
                    "line_number": 375
                  },
                  {
                    "name": "printf",
                    "line_number": 377
                  },
                  {
                    "name": "exit",
                    "line_number": 378
                  },
                  {
                    "name": "for",
                    "line_number": 383
                  },
                  {
                    "name": "if",
                    "line_number": 387
                  },
                  {
                    "name": "if",
                    "line_number": 390
                  },
                  {
                    "name": "printf",
                    "line_number": 392
                  },
                  {
                    "name": "exit",
                    "line_number": 393
                  },
                  {
                    "name": "printf",
                    "line_number": 396
                  },
                  {
                    "name": "if",
                    "line_number": 398
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 398
                  },
                  {
                    "name": "atoi",
                    "line_number": 400
                  },
                  {
                    "name": "printf",
                    "line_number": 401
                  },
                  {
                    "name": "InitNetwork",
                    "line_number": 404
                  },
                  {
                    "name": "LookForNodes",
                    "line_number": 406
                  },
                  {
                    "name": "LaunchDOOM",
                    "line_number": 410
                  },
                  {
                    "name": "ShutdownNetwork",
                    "line_number": 412
                  },
                  {
                    "name": "if",
                    "line_number": 414
                  },
                  {
                    "name": "setvect",
                    "line_number": 415
                  },
                  {
                    "name": "exit",
                    "line_number": 417
                  }
                ],
                "control_flow": [
                  {
                    "type": "else",
                    "line_number": 358
                  },
                  {
                    "type": "if",
                    "line_number": 368
                  },
                  {
                    "type": "if",
                    "line_number": 371
                  },
                  {
                    "type": "if",
                    "line_number": 375
                  },
                  {
                    "type": "else",
                    "line_number": 381
                  },
                  {
                    "type": "for",
                    "line_number": 383
                  },
                  {
                    "type": "if",
                    "line_number": 387
                  },
                  {
                    "type": "if",
                    "line_number": 390
                  },
                  {
                    "type": "if",
                    "line_number": 398
                  },
                  {
                    "type": "if",
                    "line_number": 414
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "exit",
                  "setvect",
                  "LaunchDOOM",
                  "ShutdownNetwork",
                  "CheckParm",
                  "if",
                  "for",
                  "atoi",
                  "LookForNodes",
                  "sscanf",
                  "printf",
                  "FindResponseFile",
                  "InitNetwork"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "gameid",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 18
              },
              {
                "name": "numnetnodes",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 19
              },
              {
                "name": "myargc",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 21
              },
              {
                "name": "argptr",
                "type": "va_list",
                "storage_class": null,
                "array_size": null,
                "line_number": 39
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 67
              },
              {
                "name": "i",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 71
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 73
              },
              {
                "name": "time",
                "type": "struct time",
                "storage_class": null,
                "array_size": null,
                "line_number": 117
              },
              {
                "name": "oldsec",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 118
              },
              {
                "name": "str",
                "type": "char",
                "storage_class": null,
                "array_size": "80",
                "line_number": 120
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 263
              },
              {
                "name": "size",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 270
              },
              {
                "name": "k",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 271
              },
              {
                "name": "index",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 272
              },
              {
                "name": "indexinfile",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 273
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 339
              }
            ],
            "defines": []
          },
          "source_code_path": "ipx/IPXSETUP.C",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "IPXSTR.H",
          "type": "file",
          "size": 1027,
          "last_modified": "2024-09-05T16:00:02.253974",
          "path": "ipx/IPXSTR.H",
          "readme": "# IPXSTR.H\n\nThis file contains functionality related to IPXSTR.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [],
            "defines": [
              {
                "name": "STR_NETABORT",
                "value": "\"Network game synchronization aborted.\"",
                "line_number": 1
              },
              {
                "name": "STR_UNKNOWN",
                "value": "\"Got an unknown game packet during setup\"",
                "line_number": 2
              },
              {
                "name": "STR_FOUND",
                "value": "\"Found a node!\"",
                "line_number": 3
              },
              {
                "name": "STR_LOOKING",
                "value": "\"Looking for a node\"",
                "line_number": 4
              },
              {
                "name": "STR_MORETHAN",
                "value": "\"More than %i players specified!\"",
                "line_number": 5
              },
              {
                "name": "STR_NONESPEC",
                "value": "\"No players specified for game!\"",
                "line_number": 6
              },
              {
                "name": "STR_CONSOLEIS",
                "value": "\"Console is player %i of %i\"",
                "line_number": 7
              },
              {
                "name": "STR_NORESP",
                "value": "\"No such response file!\"",
                "line_number": 8
              },
              {
                "name": "STR_FOUNDRESP",
                "value": "\"Found response file\"",
                "line_number": 9
              },
              {
                "name": "STR_DOOMNETDRV",
                "value": "\"DOOM II NETWORK DEVICE DRIVER\"",
                "line_number": 10
              },
              {
                "name": "STR_VECTSPEC",
                "value": "\"The specified vector (0x%02x) was already hooked.\"",
                "line_number": 11
              },
              {
                "name": "STR_NONULL",
                "value": "\\",
                "line_number": 12
              },
              {
                "name": "STR_COMMVECT",
                "value": "\"Communicating with interrupt vector 0x%x\"",
                "line_number": 15
              },
              {
                "name": "STR_USEALT",
                "value": "\"Using alternate port %i for network\"",
                "line_number": 16
              },
              {
                "name": "STR_RETURNED",
                "value": "\"Returned from DOOM II\"",
                "line_number": 17
              },
              {
                "name": "STR_ATTEMPT",
                "value": "\"Attempting to find all players for %i player net play. \"\\",
                "line_number": 18
              }
            ]
          },
          "source_code_path": "ipx/IPXSTR.H",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "IPX_FRCH.H",
          "type": "file",
          "size": 1127,
          "last_modified": "2024-09-05T16:00:02.281977",
          "path": "ipx/IPX_FRCH.H",
          "readme": "# IPX_FRCH.H\n\nThis file contains functionality related to IPX_FRCH.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [],
            "defines": [
              {
                "name": "STR_NETABORT",
                "value": "\"Synchronisation du jeu sur rseau annule.\"",
                "line_number": 1
              },
              {
                "name": "STR_UNKNOWN",
                "value": "\"Paquet de jeu inconnu durant la configuration\"",
                "line_number": 2
              },
              {
                "name": "STR_FOUND",
                "value": "\"Noeud dtect!\"",
                "line_number": 3
              },
              {
                "name": "STR_LOOKING",
                "value": "\"Recherche d'un noeud\"",
                "line_number": 4
              },
              {
                "name": "STR_MORETHAN",
                "value": "\"Plus de %i joueurs spcifis!\"",
                "line_number": 5
              },
              {
                "name": "STR_NONESPEC",
                "value": "\"Pas de joueurs spcifis pour le jeu!\"",
                "line_number": 6
              },
              {
                "name": "STR_CONSOLEIS",
                "value": "\"Console: joueur %i sur %i\"",
                "line_number": 7
              },
              {
                "name": "STR_NORESP",
                "value": "\"Ce fichier de rponse n'existe pas!\"",
                "line_number": 8
              },
              {
                "name": "STR_FOUNDRESP",
                "value": "\"Fichier de rponse trouv\"",
                "line_number": 9
              },
              {
                "name": "STR_DOOMNETDRV",
                "value": "\"GESTIONNAIRE DE RESEAU DOOM II\"",
                "line_number": 10
              },
              {
                "name": "STR_VECTSPEC",
                "value": "\"Le vecteur spcifi (0x%02x) tait dj connect.\"",
                "line_number": 11
              },
              {
                "name": "STR_NONULL",
                "value": "\\",
                "line_number": 12
              },
              {
                "name": "STR_COMMVECT",
                "value": "\"Communication avec le vecteur d'interruption 0x%x\"",
                "line_number": 15
              },
              {
                "name": "STR_USEALT",
                "value": "\"Utilisation du port alternatif %i pour le rseau\"",
                "line_number": 16
              },
              {
                "name": "STR_RETURNED",
                "value": "\"Retour de DOOM II\"",
                "line_number": 17
              },
              {
                "name": "STR_ATTEMPT",
                "value": "\\",
                "line_number": 18
              }
            ]
          },
          "source_code_path": "ipx/IPX_FRCH.H",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        }
      ]
    },
    {
      "name": "linuxdoom-1.10",
      "type": "directory",
      "children": [
        {
          "name": "am_map.c",
          "type": "file",
          "size": 27129,
          "last_modified": "2024-09-05T16:00:02.659586",
          "path": "linuxdoom-1.10/am_map.c",
          "readme": "# am_map.c\n\nThis file contains functionality related to am_map.",
          "dependencies": [
            "st_stuff.h",
            "v_video.h",
            "w_wad.h",
            "stdio.h",
            "p_local.h",
            "z_zone.h",
            "m_cheat.h",
            "i_system.h",
            "doomstat.h",
            "r_state.h",
            "doomdef.h",
            "dstrings.h",
            "am_map.h"
          ],
          "inputs": [
            "lineguylines",
            "LEFT",
            "angle",
            "TOP",
            "ml",
            "BOTTOM",
            "f_h",
            "lineguy",
            "scale",
            "amclock>nexttic",
            "is",
            "colorrange",
            "color",
            "colors",
            "ev",
            "a",
            "x",
            "y",
            "ev_keydown",
            "void",
            "cheating",
            "RIGHT",
            "lines[i].frontsector->ceilingheight",
            "plr->powers[pw_allmap]",
            "fl",
            "lines[i].frontsector->floorheight",
            "ev_keyup"
          ],
          "outputs": [
            "For debugging only",
            "clip to each side",
            "else",
            "boolean",
            "Change light level"
          ],
          "content": {
            "functions": [
              {
                "name": "AM_getIslope",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mline_t*",
                    "name": "ml"
                  },
                  {
                    "type": "islope_t*",
                    "name": "is"
                  }
                ],
                "start_line": 308,
                "end_line": 319,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 314
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 315
                  },
                  {
                    "name": "if",
                    "line_number": 316
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 317
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 314
                  },
                  {
                    "type": "else",
                    "line_number": 315
                  },
                  {
                    "type": "if",
                    "line_number": 316
                  },
                  {
                    "type": "else",
                    "line_number": 317
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "ml",
                  "is"
                ],
                "outputs": [],
                "dependencies": [
                  "FixedDiv",
                  "if"
                ]
              },
              {
                "name": "AM_activateNewScale",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 327,
                "end_line": 337,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "FTOM",
                    "line_number": 331
                  },
                  {
                    "name": "FTOM",
                    "line_number": 332
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "FTOM"
                ]
              },
              {
                "name": "AM_saveScaleAndLoc",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 342,
                "end_line": 348,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "AM_restoreScaleAndLoc",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 353,
                "end_line": 372,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 358
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 370
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 371
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 358
                  },
                  {
                    "type": "else",
                    "line_number": 362
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "FixedDiv",
                  "if"
                ]
              },
              {
                "name": "AM_addMark",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 377,
                "end_line": 383,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "AM_findMinMaxBoundaries",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 389,
                "end_line": 423,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 391
                  },
                  {
                    "type": "fixed_t",
                    "name": "a",
                    "array_size": null,
                    "line_number": 392
                  },
                  {
                    "type": "fixed_t",
                    "name": "b",
                    "array_size": null,
                    "line_number": 393
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 398
                  },
                  {
                    "name": "if",
                    "line_number": 400
                  },
                  {
                    "name": "if",
                    "line_number": 402
                  },
                  {
                    "name": "if",
                    "line_number": 405
                  },
                  {
                    "name": "if",
                    "line_number": 407
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 417
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 418
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 421
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 398
                  },
                  {
                    "type": "if",
                    "line_number": 400
                  },
                  {
                    "type": "if",
                    "line_number": 402
                  },
                  {
                    "type": "if",
                    "line_number": 405
                  },
                  {
                    "type": "if",
                    "line_number": 407
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "FixedDiv",
                  "if",
                  "for"
                ]
              },
              {
                "name": "AM_changeWindowLoc",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 429,
                "end_line": 452,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 431
                  },
                  {
                    "name": "if",
                    "line_number": 440
                  },
                  {
                    "name": "if",
                    "line_number": 442
                  },
                  {
                    "name": "if",
                    "line_number": 445
                  },
                  {
                    "name": "if",
                    "line_number": 447
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 431
                  },
                  {
                    "type": "if",
                    "line_number": 440
                  },
                  {
                    "type": "if",
                    "line_number": 442
                  },
                  {
                    "type": "if",
                    "line_number": 445
                  },
                  {
                    "type": "if",
                    "line_number": 447
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "AM_initVariables",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 458,
                "end_line": 497,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "pnum",
                    "array_size": null,
                    "line_number": 460
                  }
                ],
                "function_calls": [
                  {
                    "name": "FTOM",
                    "line_number": 474
                  },
                  {
                    "name": "FTOM",
                    "line_number": 475
                  },
                  {
                    "name": "if",
                    "line_number": 478
                  },
                  {
                    "name": "for",
                    "line_number": 479
                  },
                  {
                    "name": "if",
                    "line_number": 480
                  },
                  {
                    "name": "AM_changeWindowLoc",
                    "line_number": 486
                  },
                  {
                    "name": "ST_Responder",
                    "line_number": 495
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 478
                  },
                  {
                    "type": "for",
                    "line_number": 479
                  },
                  {
                    "type": "if",
                    "line_number": 480
                  },
                  {
                    "type": "for",
                    "line_number": 488
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "AM_changeWindowLoc",
                  "ST_Responder",
                  "for",
                  "if",
                  "FTOM"
                ]
              },
              {
                "name": "AM_loadPics",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 502,
                "end_line": 513,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 504
                  },
                  {
                    "type": "char",
                    "name": "namebuf",
                    "array_size": "9",
                    "line_number": 505
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 507
                  },
                  {
                    "name": "sprintf",
                    "line_number": 509
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 510
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 507
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "sprintf",
                  "W_CacheLumpName",
                  "for"
                ]
              },
              {
                "name": "AM_unloadPics",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 515,
                "end_line": 522,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 517
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 519
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 520
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 519
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "Z_ChangeTag",
                  "for"
                ]
              },
              {
                "name": "AM_clearMarks",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 524,
                "end_line": 531,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 526
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 528
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 528
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for"
                ]
              },
              {
                "name": "AM_LevelInit",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 537,
                "end_line": 552,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "AM_clearMarks",
                    "line_number": 545
                  },
                  {
                    "name": "AM_findMinMaxBoundaries",
                    "line_number": 547
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 548
                  },
                  {
                    "name": "if",
                    "line_number": 549
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 551
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 549
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "FixedDiv",
                  "AM_clearMarks",
                  "if",
                  "AM_findMinMaxBoundaries"
                ]
              },
              {
                "name": "AM_Stop",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 560,
                "end_line": 568,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "AM_unloadPics",
                    "line_number": 564
                  },
                  {
                    "name": "ST_Responder",
                    "line_number": 566
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "AM_unloadPics",
                  "ST_Responder"
                ]
              },
              {
                "name": "AM_Start",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 573,
                "end_line": 587,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 577
                  },
                  {
                    "name": "AM_Stop",
                    "line_number": 577
                  },
                  {
                    "name": "if",
                    "line_number": 579
                  },
                  {
                    "name": "AM_LevelInit",
                    "line_number": 581
                  },
                  {
                    "name": "AM_initVariables",
                    "line_number": 585
                  },
                  {
                    "name": "AM_loadPics",
                    "line_number": 586
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 577
                  },
                  {
                    "type": "if",
                    "line_number": 579
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "AM_LevelInit",
                  "AM_initVariables",
                  "AM_Stop",
                  "AM_loadPics"
                ]
              },
              {
                "name": "AM_minOutWindowScale",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 592,
                "end_line": 597,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "FixedDiv",
                    "line_number": 595
                  },
                  {
                    "name": "AM_activateNewScale",
                    "line_number": 596
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "FixedDiv",
                  "AM_activateNewScale"
                ]
              },
              {
                "name": "AM_maxOutWindowScale",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 602,
                "end_line": 607,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "FixedDiv",
                    "line_number": 605
                  },
                  {
                    "name": "AM_activateNewScale",
                    "line_number": 606
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "FixedDiv",
                  "AM_activateNewScale"
                ]
              },
              {
                "name": "AM_Responder",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "event_t*",
                    "name": "ev"
                  }
                ],
                "start_line": 613,
                "end_line": 733,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "rc",
                    "array_size": null,
                    "line_number": 616
                  },
                  {
                    "type": "static char",
                    "name": "buffer",
                    "array_size": "20",
                    "line_number": 619
                  },
                  {
                    "type": "return",
                    "name": "rc",
                    "array_size": null,
                    "line_number": 731
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 623
                  },
                  {
                    "name": "if",
                    "line_number": 625
                  },
                  {
                    "name": "AM_Start",
                    "line_number": 627
                  },
                  {
                    "name": "if",
                    "line_number": 633
                  },
                  {
                    "name": "switch",
                    "line_number": 637
                  },
                  {
                    "name": "if",
                    "line_number": 640
                  },
                  {
                    "name": "FTOM",
                    "line_number": 640
                  },
                  {
                    "name": "if",
                    "line_number": 644
                  },
                  {
                    "name": "FTOM",
                    "line_number": 644
                  },
                  {
                    "name": "if",
                    "line_number": 648
                  },
                  {
                    "name": "FTOM",
                    "line_number": 648
                  },
                  {
                    "name": "if",
                    "line_number": 652
                  },
                  {
                    "name": "FTOM",
                    "line_number": 652
                  },
                  {
                    "name": "AM_Stop",
                    "line_number": 666
                  },
                  {
                    "name": "if",
                    "line_number": 670
                  },
                  {
                    "name": "AM_saveScaleAndLoc",
                    "line_number": 672
                  },
                  {
                    "name": "AM_minOutWindowScale",
                    "line_number": 673
                  },
                  {
                    "name": "AM_restoreScaleAndLoc",
                    "line_number": 675
                  },
                  {
                    "name": "sprintf",
                    "line_number": 687
                  },
                  {
                    "name": "AM_addMark",
                    "line_number": 689
                  },
                  {
                    "name": "AM_clearMarks",
                    "line_number": 692
                  },
                  {
                    "name": "if",
                    "line_number": 699
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 699
                  },
                  {
                    "name": "if",
                    "line_number": 706
                  },
                  {
                    "name": "switch",
                    "line_number": 709
                  },
                  {
                    "name": "if",
                    "line_number": 712
                  },
                  {
                    "name": "if",
                    "line_number": 715
                  },
                  {
                    "name": "if",
                    "line_number": 718
                  },
                  {
                    "name": "if",
                    "line_number": 721
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 623
                  },
                  {
                    "type": "if",
                    "line_number": 625
                  },
                  {
                    "type": "if",
                    "line_number": 633
                  },
                  {
                    "type": "if",
                    "line_number": 640
                  },
                  {
                    "type": "else",
                    "line_number": 641
                  },
                  {
                    "type": "if",
                    "line_number": 644
                  },
                  {
                    "type": "else",
                    "line_number": 645
                  },
                  {
                    "type": "if",
                    "line_number": 648
                  },
                  {
                    "type": "else",
                    "line_number": 649
                  },
                  {
                    "type": "if",
                    "line_number": 652
                  },
                  {
                    "type": "else",
                    "line_number": 653
                  },
                  {
                    "type": "if",
                    "line_number": 670
                  },
                  {
                    "type": "else",
                    "line_number": 675
                  },
                  {
                    "type": "if",
                    "line_number": 699
                  },
                  {
                    "type": "if",
                    "line_number": 706
                  },
                  {
                    "type": "if",
                    "line_number": 712
                  },
                  {
                    "type": "if",
                    "line_number": 715
                  },
                  {
                    "type": "if",
                    "line_number": 718
                  },
                  {
                    "type": "if",
                    "line_number": 721
                  }
                ],
                "complexity": 13,
                "inputs": [
                  "ev"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "AM_addMark",
                  "if",
                  "AM_saveScaleAndLoc",
                  "cht_CheckCheat",
                  "FTOM",
                  "AM_restoreScaleAndLoc",
                  "AM_clearMarks",
                  "sprintf",
                  "switch",
                  "AM_Stop",
                  "AM_Start",
                  "AM_minOutWindowScale"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "ev->type ==",
                    "name": "ev_keydown"
                  }
                ],
                "start_line": 635,
                "end_line": 706,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 639
                  },
                  {
                    "name": "if",
                    "line_number": 642
                  },
                  {
                    "name": "FTOM",
                    "line_number": 642
                  },
                  {
                    "name": "if",
                    "line_number": 646
                  },
                  {
                    "name": "FTOM",
                    "line_number": 646
                  },
                  {
                    "name": "if",
                    "line_number": 650
                  },
                  {
                    "name": "FTOM",
                    "line_number": 650
                  },
                  {
                    "name": "if",
                    "line_number": 654
                  },
                  {
                    "name": "FTOM",
                    "line_number": 654
                  },
                  {
                    "name": "AM_Stop",
                    "line_number": 668
                  },
                  {
                    "name": "if",
                    "line_number": 672
                  },
                  {
                    "name": "AM_saveScaleAndLoc",
                    "line_number": 674
                  },
                  {
                    "name": "AM_minOutWindowScale",
                    "line_number": 675
                  },
                  {
                    "name": "AM_restoreScaleAndLoc",
                    "line_number": 677
                  },
                  {
                    "name": "sprintf",
                    "line_number": 689
                  },
                  {
                    "name": "AM_addMark",
                    "line_number": 691
                  },
                  {
                    "name": "AM_clearMarks",
                    "line_number": 694
                  },
                  {
                    "name": "if",
                    "line_number": 701
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 701
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 642
                  },
                  {
                    "type": "else",
                    "line_number": 643
                  },
                  {
                    "type": "if",
                    "line_number": 646
                  },
                  {
                    "type": "else",
                    "line_number": 647
                  },
                  {
                    "type": "if",
                    "line_number": 650
                  },
                  {
                    "type": "else",
                    "line_number": 651
                  },
                  {
                    "type": "if",
                    "line_number": 654
                  },
                  {
                    "type": "else",
                    "line_number": 655
                  },
                  {
                    "type": "if",
                    "line_number": 672
                  },
                  {
                    "type": "else",
                    "line_number": 677
                  },
                  {
                    "type": "if",
                    "line_number": 701
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "ev_keydown"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "AM_addMark",
                  "if",
                  "AM_saveScaleAndLoc",
                  "cht_CheckCheat",
                  "FTOM",
                  "AM_restoreScaleAndLoc",
                  "AM_clearMarks",
                  "sprintf",
                  "switch",
                  "AM_Stop",
                  "AM_minOutWindowScale"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "ev->type ==",
                    "name": "ev_keyup"
                  }
                ],
                "start_line": 708,
                "end_line": 731,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 711
                  },
                  {
                    "name": "if",
                    "line_number": 714
                  },
                  {
                    "name": "if",
                    "line_number": 717
                  },
                  {
                    "name": "if",
                    "line_number": 720
                  },
                  {
                    "name": "if",
                    "line_number": 723
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 714
                  },
                  {
                    "type": "if",
                    "line_number": 717
                  },
                  {
                    "type": "if",
                    "line_number": 720
                  },
                  {
                    "type": "if",
                    "line_number": 723
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "ev_keyup"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "switch",
                  "if"
                ]
              },
              {
                "name": "AM_changeWindowScale",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 741,
                "end_line": 754,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "FixedMul",
                    "line_number": 745
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 746
                  },
                  {
                    "name": "if",
                    "line_number": 748
                  },
                  {
                    "name": "AM_minOutWindowScale",
                    "line_number": 749
                  },
                  {
                    "name": "if",
                    "line_number": 750
                  },
                  {
                    "name": "AM_maxOutWindowScale",
                    "line_number": 751
                  },
                  {
                    "name": "AM_activateNewScale",
                    "line_number": 753
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 748
                  },
                  {
                    "type": "if",
                    "line_number": 750
                  },
                  {
                    "type": "else",
                    "line_number": 752
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "AM_activateNewScale",
                  "AM_maxOutWindowScale",
                  "FixedDiv",
                  "FixedMul",
                  "AM_minOutWindowScale"
                ]
              },
              {
                "name": "AM_doFollowPlayer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 760,
                "end_line": 779,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 763
                  },
                  {
                    "name": "FTOM",
                    "line_number": 765
                  },
                  {
                    "name": "MTOF",
                    "line_number": 765
                  },
                  {
                    "name": "FTOM",
                    "line_number": 766
                  },
                  {
                    "name": "MTOF",
                    "line_number": 766
                  },
                  {
                    "name": "FTOM",
                    "line_number": 772
                  },
                  {
                    "name": "MTOF",
                    "line_number": 772
                  },
                  {
                    "name": "FTOM",
                    "line_number": 773
                  },
                  {
                    "name": "MTOF",
                    "line_number": 773
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 763
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "MTOF",
                  "FTOM",
                  "if"
                ]
              },
              {
                "name": "AM_updateLightLev",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 784,
                "end_line": 799,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 792
                  },
                  {
                    "name": "if",
                    "line_number": 795
                  },
                  {
                    "name": "sizeof",
                    "line_number": 795
                  },
                  {
                    "name": "sizeof",
                    "line_number": 795
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 792
                  },
                  {
                    "type": "if",
                    "line_number": 795
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "sizeof",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "Change light level",
                "parameters": [
                  {
                    "type": "",
                    "name": "amclock>nexttic"
                  }
                ],
                "start_line": 791,
                "end_line": 796,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 794
                  },
                  {
                    "name": "sizeof",
                    "line_number": 794
                  },
                  {
                    "name": "sizeof",
                    "line_number": 794
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 794
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "amclock>nexttic"
                ],
                "outputs": [
                  "Change light level"
                ],
                "dependencies": [
                  "sizeof",
                  "if"
                ]
              },
              {
                "name": "AM_Ticker",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 805,
                "end_line": 827,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 808
                  },
                  {
                    "name": "if",
                    "line_number": 813
                  },
                  {
                    "name": "AM_doFollowPlayer",
                    "line_number": 814
                  },
                  {
                    "name": "if",
                    "line_number": 817
                  },
                  {
                    "name": "AM_changeWindowScale",
                    "line_number": 818
                  },
                  {
                    "name": "if",
                    "line_number": 821
                  },
                  {
                    "name": "AM_changeWindowLoc",
                    "line_number": 822
                  },
                  {
                    "name": "AM_updateLightLev",
                    "line_number": 825
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 808
                  },
                  {
                    "type": "if",
                    "line_number": 813
                  },
                  {
                    "type": "if",
                    "line_number": 816
                  },
                  {
                    "type": "if",
                    "line_number": 817
                  },
                  {
                    "type": "if",
                    "line_number": 821
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "AM_changeWindowScale",
                  "AM_changeWindowLoc",
                  "if",
                  "AM_doFollowPlayer",
                  "AM_updateLightLev"
                ]
              },
              {
                "name": "AM_clearFB",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "color"
                  }
                ],
                "start_line": 833,
                "end_line": 836,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "memset",
                    "line_number": 835
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "color"
                ],
                "outputs": [],
                "dependencies": [
                  "memset"
                ]
              },
              {
                "name": "AM_clipMline",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mline_t*",
                    "name": "ml"
                  },
                  {
                    "type": "fline_t*",
                    "name": "fl"
                  }
                ],
                "start_line": 846,
                "end_line": 967,
                "local_variables": [
                  {
                    "type": "register",
                    "name": "outside",
                    "array_size": null,
                    "line_number": 858
                  },
                  {
                    "type": "fpoint_t",
                    "name": "tmp",
                    "array_size": null,
                    "line_number": 860
                  },
                  {
                    "type": "int",
                    "name": "dx",
                    "array_size": null,
                    "line_number": 861
                  },
                  {
                    "type": "int",
                    "name": "dy",
                    "array_size": null,
                    "line_number": 862
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 885
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 898
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 910
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 963
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 966
                  }
                ],
                "function_calls": [
                  {
                    "name": "DOOUTCODE",
                    "line_number": 865
                  },
                  {
                    "name": "if",
                    "line_number": 867
                  },
                  {
                    "name": "if",
                    "line_number": 868
                  },
                  {
                    "name": "if",
                    "line_number": 869
                  },
                  {
                    "name": "if",
                    "line_number": 870
                  },
                  {
                    "name": "if",
                    "line_number": 874
                  },
                  {
                    "name": "if",
                    "line_number": 876
                  },
                  {
                    "name": "if",
                    "line_number": 879
                  },
                  {
                    "name": "if",
                    "line_number": 881
                  },
                  {
                    "name": "if",
                    "line_number": 884
                  },
                  {
                    "name": "if",
                    "line_number": 887
                  },
                  {
                    "name": "if",
                    "line_number": 889
                  },
                  {
                    "name": "if",
                    "line_number": 892
                  },
                  {
                    "name": "if",
                    "line_number": 894
                  },
                  {
                    "name": "if",
                    "line_number": 897
                  },
                  {
                    "name": "CXMTOF",
                    "line_number": 901
                  },
                  {
                    "name": "CYMTOF",
                    "line_number": 902
                  },
                  {
                    "name": "CXMTOF",
                    "line_number": 903
                  },
                  {
                    "name": "CYMTOF",
                    "line_number": 904
                  },
                  {
                    "name": "DOOUTCODE",
                    "line_number": 906
                  },
                  {
                    "name": "DOOUTCODE",
                    "line_number": 907
                  },
                  {
                    "name": "if",
                    "line_number": 909
                  },
                  {
                    "name": "while",
                    "line_number": 912
                  },
                  {
                    "name": "if",
                    "line_number": 916
                  },
                  {
                    "name": "if",
                    "line_number": 922
                  },
                  {
                    "name": "if",
                    "line_number": 929
                  },
                  {
                    "name": "if",
                    "line_number": 936
                  },
                  {
                    "name": "if",
                    "line_number": 943
                  },
                  {
                    "name": "if",
                    "line_number": 951
                  },
                  {
                    "name": "DOOUTCODE",
                    "line_number": 954
                  },
                  {
                    "name": "DOOUTCODE",
                    "line_number": 959
                  },
                  {
                    "name": "if",
                    "line_number": 962
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 867
                  },
                  {
                    "type": "if",
                    "line_number": 868
                  },
                  {
                    "type": "if",
                    "line_number": 869
                  },
                  {
                    "type": "if",
                    "line_number": 870
                  },
                  {
                    "type": "if",
                    "line_number": 874
                  },
                  {
                    "type": "if",
                    "line_number": 876
                  },
                  {
                    "type": "if",
                    "line_number": 879
                  },
                  {
                    "type": "if",
                    "line_number": 881
                  },
                  {
                    "type": "if",
                    "line_number": 884
                  },
                  {
                    "type": "if",
                    "line_number": 887
                  },
                  {
                    "type": "if",
                    "line_number": 889
                  },
                  {
                    "type": "if",
                    "line_number": 892
                  },
                  {
                    "type": "if",
                    "line_number": 894
                  },
                  {
                    "type": "if",
                    "line_number": 897
                  },
                  {
                    "type": "if",
                    "line_number": 909
                  },
                  {
                    "type": "while",
                    "line_number": 912
                  },
                  {
                    "type": "if",
                    "line_number": 916
                  },
                  {
                    "type": "else",
                    "line_number": 918
                  },
                  {
                    "type": "if",
                    "line_number": 922
                  },
                  {
                    "type": "if",
                    "line_number": 929
                  },
                  {
                    "type": "if",
                    "line_number": 936
                  },
                  {
                    "type": "if",
                    "line_number": 943
                  },
                  {
                    "type": "if",
                    "line_number": 951
                  },
                  {
                    "type": "else",
                    "line_number": 956
                  },
                  {
                    "type": "if",
                    "line_number": 962
                  }
                ],
                "complexity": 15,
                "inputs": [
                  "ml",
                  "fl"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "while",
                  "CYMTOF",
                  "if",
                  "CXMTOF",
                  "DOOUTCODE"
                ]
              },
              {
                "name": "if",
                "return_type": "clip to each side",
                "parameters": [
                  {
                    "type": "outside &",
                    "name": "TOP"
                  }
                ],
                "start_line": 924,
                "end_line": 930,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "TOP"
                ],
                "outputs": [
                  "clip to each side"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "outside &",
                    "name": "BOTTOM"
                  }
                ],
                "start_line": 932,
                "end_line": 938,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "BOTTOM"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "outside &",
                    "name": "RIGHT"
                  }
                ],
                "start_line": 939,
                "end_line": 945,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "RIGHT"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "outside &",
                    "name": "LEFT"
                  }
                ],
                "start_line": 946,
                "end_line": 952,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "LEFT"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "AM_drawFline",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "fline_t*",
                    "name": "fl"
                  },
                  {
                    "type": "int",
                    "name": "color"
                  }
                ],
                "start_line": 977,
                "end_line": 1046,
                "local_variables": [
                  {
                    "type": "register int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 979
                  },
                  {
                    "type": "register int",
                    "name": "y",
                    "array_size": null,
                    "line_number": 980
                  },
                  {
                    "type": "register int",
                    "name": "dx",
                    "array_size": null,
                    "line_number": 981
                  },
                  {
                    "type": "register int",
                    "name": "dy",
                    "array_size": null,
                    "line_number": 982
                  },
                  {
                    "type": "register int",
                    "name": "sx",
                    "array_size": null,
                    "line_number": 983
                  },
                  {
                    "type": "register int",
                    "name": "sy",
                    "array_size": null,
                    "line_number": 984
                  },
                  {
                    "type": "register int",
                    "name": "ax",
                    "array_size": null,
                    "line_number": 985
                  },
                  {
                    "type": "register int",
                    "name": "ay",
                    "array_size": null,
                    "line_number": 986
                  },
                  {
                    "type": "register int",
                    "name": "d",
                    "array_size": null,
                    "line_number": 987
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 992
                  },
                  {
                    "name": "fprintf",
                    "line_number": 997
                  },
                  {
                    "name": "PUTDOT",
                    "line_number": 1001
                  },
                  {
                    "name": "if",
                    "line_number": 1014
                  },
                  {
                    "name": "while",
                    "line_number": 1017
                  },
                  {
                    "name": "PUTDOT",
                    "line_number": 1019
                  },
                  {
                    "name": "if",
                    "line_number": 1020
                  },
                  {
                    "name": "if",
                    "line_number": 1021
                  },
                  {
                    "name": "while",
                    "line_number": 1033
                  },
                  {
                    "name": "PUTDOT",
                    "line_number": 1035
                  },
                  {
                    "name": "if",
                    "line_number": 1036
                  },
                  {
                    "name": "if",
                    "line_number": 1037
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 992
                  },
                  {
                    "type": "if",
                    "line_number": 1014
                  },
                  {
                    "type": "while",
                    "line_number": 1017
                  },
                  {
                    "type": "if",
                    "line_number": 1020
                  },
                  {
                    "type": "if",
                    "line_number": 1021
                  },
                  {
                    "type": "else",
                    "line_number": 1030
                  },
                  {
                    "type": "while",
                    "line_number": 1033
                  },
                  {
                    "type": "if",
                    "line_number": 1036
                  },
                  {
                    "type": "if",
                    "line_number": 1037
                  }
                ],
                "complexity": 12,
                "inputs": [
                  "fl",
                  "color"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "while",
                  "PUTDOT",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "For debugging only",
                "parameters": [
                  {
                    "type": "fl->a.x < 0 || fl->a.x >= f_w || fl->a.y < 0 || fl->a.y >= f_h || fl->b.x < 0 || fl->b.x >= f_w || fl->b.y < 0 || fl->b.y >=",
                    "name": "f_h"
                  }
                ],
                "start_line": 994,
                "end_line": 998,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "fprintf",
                    "line_number": 996
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "f_h"
                ],
                "outputs": [
                  "For debugging only"
                ],
                "dependencies": [
                  "fprintf"
                ]
              },
              {
                "name": "AM_drawMline",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mline_t*",
                    "name": "ml"
                  },
                  {
                    "type": "int",
                    "name": "color"
                  }
                ],
                "start_line": 1055,
                "end_line": 1061,
                "local_variables": [
                  {
                    "type": "static fline_t",
                    "name": "fl",
                    "array_size": null,
                    "line_number": 1057
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1059
                  },
                  {
                    "name": "AM_clipMline",
                    "line_number": 1059
                  },
                  {
                    "name": "AM_drawFline",
                    "line_number": 1060
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1059
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "ml",
                  "color"
                ],
                "outputs": [],
                "dependencies": [
                  "AM_drawFline",
                  "AM_clipMline",
                  "if"
                ]
              },
              {
                "name": "AM_drawGrid",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "color"
                  }
                ],
                "start_line": 1071,
                "end_line": 1111,
                "local_variables": [
                  {
                    "type": "mline_t",
                    "name": "ml",
                    "array_size": null,
                    "line_number": 1075
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1079
                  },
                  {
                    "name": "for",
                    "line_number": 1087
                  },
                  {
                    "name": "AM_drawMline",
                    "line_number": 1091
                  },
                  {
                    "name": "if",
                    "line_number": 1096
                  },
                  {
                    "name": "for",
                    "line_number": 1104
                  },
                  {
                    "name": "AM_drawMline",
                    "line_number": 1108
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1079
                  },
                  {
                    "type": "for",
                    "line_number": 1087
                  },
                  {
                    "type": "if",
                    "line_number": 1096
                  },
                  {
                    "type": "for",
                    "line_number": 1104
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "color"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "AM_drawMline",
                  "if"
                ]
              },
              {
                "name": "AM_drawWalls",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1117,
                "end_line": 1165,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1119
                  },
                  {
                    "type": "static mline_t",
                    "name": "l",
                    "array_size": null,
                    "line_number": 1120
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1122
                  },
                  {
                    "name": "if",
                    "line_number": 1128
                  },
                  {
                    "name": "if",
                    "line_number": 1130
                  },
                  {
                    "name": "if",
                    "line_number": 1132
                  },
                  {
                    "name": "AM_drawMline",
                    "line_number": 1134
                  },
                  {
                    "name": "if",
                    "line_number": 1138
                  },
                  {
                    "name": "AM_drawMline",
                    "line_number": 1140
                  },
                  {
                    "name": "if",
                    "line_number": 1142
                  },
                  {
                    "name": "if",
                    "line_number": 1144
                  },
                  {
                    "name": "AM_drawMline",
                    "line_number": 1144
                  },
                  {
                    "name": "AM_drawMline",
                    "line_number": 1145
                  },
                  {
                    "name": "if",
                    "line_number": 1147
                  },
                  {
                    "name": "AM_drawMline",
                    "line_number": 1149
                  },
                  {
                    "name": "if",
                    "line_number": 1151
                  },
                  {
                    "name": "AM_drawMline",
                    "line_number": 1153
                  },
                  {
                    "name": "if",
                    "line_number": 1155
                  },
                  {
                    "name": "AM_drawMline",
                    "line_number": 1156
                  },
                  {
                    "name": "if",
                    "line_number": 1160
                  },
                  {
                    "name": "if",
                    "line_number": 1162
                  },
                  {
                    "name": "AM_drawMline",
                    "line_number": 1162
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1122
                  },
                  {
                    "type": "if",
                    "line_number": 1128
                  },
                  {
                    "type": "if",
                    "line_number": 1130
                  },
                  {
                    "type": "if",
                    "line_number": 1132
                  },
                  {
                    "type": "else",
                    "line_number": 1136
                  },
                  {
                    "type": "if",
                    "line_number": 1138
                  },
                  {
                    "type": "if",
                    "line_number": 1142
                  },
                  {
                    "type": "if",
                    "line_number": 1144
                  },
                  {
                    "type": "else",
                    "line_number": 1145
                  },
                  {
                    "type": "if",
                    "line_number": 1147
                  },
                  {
                    "type": "if",
                    "line_number": 1151
                  },
                  {
                    "type": "if",
                    "line_number": 1155
                  },
                  {
                    "type": "if",
                    "line_number": 1160
                  },
                  {
                    "type": "if",
                    "line_number": 1162
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "AM_drawMline",
                  "for"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "lines[i].backsector->floorheight !=",
                    "name": "lines[i].frontsector->floorheight"
                  }
                ],
                "start_line": 1147,
                "end_line": 1150,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "AM_drawMline",
                    "line_number": 1149
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "lines[i].frontsector->floorheight"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "AM_drawMline"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "lines[i].backsector->ceilingheight !=",
                    "name": "lines[i].frontsector->ceilingheight"
                  }
                ],
                "start_line": 1151,
                "end_line": 1154,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "AM_drawMline",
                    "line_number": 1153
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "lines[i].frontsector->ceilingheight"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "AM_drawMline"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "",
                    "name": "cheating"
                  }
                ],
                "start_line": 1155,
                "end_line": 1158,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "AM_drawMline",
                    "line_number": 1157
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "cheating"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "AM_drawMline"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "",
                    "name": "plr->powers[pw_allmap]"
                  }
                ],
                "start_line": 1160,
                "end_line": 1163,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1162
                  },
                  {
                    "name": "AM_drawMline",
                    "line_number": 1162
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1162
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "plr->powers[pw_allmap]"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "AM_drawMline",
                  "if"
                ]
              },
              {
                "name": "AM_rotate",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "fixed_t*",
                    "name": "x"
                  },
                  {
                    "type": "fixed_t*",
                    "name": "y"
                  },
                  {
                    "type": "angle_t",
                    "name": "a"
                  }
                ],
                "start_line": 1172,
                "end_line": 1185,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "tmpx",
                    "array_size": null,
                    "line_number": 1174
                  }
                ],
                "function_calls": [
                  {
                    "name": "FixedMul",
                    "line_number": 1177
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1178
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1181
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1182
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "x",
                  "y",
                  "a"
                ],
                "outputs": [],
                "dependencies": [
                  "FixedMul"
                ]
              },
              {
                "name": "AM_drawLineCharacter",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mline_t*",
                    "name": "lineguy"
                  },
                  {
                    "type": "int",
                    "name": "lineguylines"
                  },
                  {
                    "type": "fixed_t",
                    "name": "scale"
                  },
                  {
                    "type": "angle_t",
                    "name": "angle"
                  },
                  {
                    "type": "int",
                    "name": "color"
                  },
                  {
                    "type": "fixed_t",
                    "name": "x"
                  },
                  {
                    "type": "fixed_t",
                    "name": "y"
                  }
                ],
                "start_line": 1191,
                "end_line": 1230,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1193
                  },
                  {
                    "type": "mline_t",
                    "name": "l",
                    "array_size": null,
                    "line_number": 1194
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1196
                  },
                  {
                    "name": "if",
                    "line_number": 1201
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1203
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1204
                  },
                  {
                    "name": "if",
                    "line_number": 1207
                  },
                  {
                    "name": "AM_rotate",
                    "line_number": 1208
                  },
                  {
                    "name": "if",
                    "line_number": 1216
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1218
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1219
                  },
                  {
                    "name": "if",
                    "line_number": 1222
                  },
                  {
                    "name": "AM_rotate",
                    "line_number": 1223
                  },
                  {
                    "name": "AM_drawMline",
                    "line_number": 1228
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1196
                  },
                  {
                    "type": "if",
                    "line_number": 1201
                  },
                  {
                    "type": "if",
                    "line_number": 1207
                  },
                  {
                    "type": "if",
                    "line_number": 1216
                  },
                  {
                    "type": "if",
                    "line_number": 1222
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "lineguy",
                  "lineguylines",
                  "scale",
                  "angle",
                  "color",
                  "x",
                  "y"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for",
                  "AM_drawMline",
                  "AM_rotate",
                  "FixedMul"
                ]
              },
              {
                "name": "AM_drawPlayers",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1240,
                "end_line": 1282,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1242
                  },
                  {
                    "type": "int",
                    "name": "color",
                    "array_size": null,
                    "line_number": 1246
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1248
                  },
                  {
                    "name": "if",
                    "line_number": 1250
                  },
                  {
                    "name": "for",
                    "line_number": 1261
                  },
                  {
                    "name": "if",
                    "line_number": 1266
                  },
                  {
                    "name": "if",
                    "line_number": 1269
                  },
                  {
                    "name": "if",
                    "line_number": 1272
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1248
                  },
                  {
                    "type": "if",
                    "line_number": 1250
                  },
                  {
                    "type": "else",
                    "line_number": 1254
                  },
                  {
                    "type": "for",
                    "line_number": 1261
                  },
                  {
                    "type": "if",
                    "line_number": 1266
                  },
                  {
                    "type": "if",
                    "line_number": 1269
                  },
                  {
                    "type": "if",
                    "line_number": 1272
                  },
                  {
                    "type": "else",
                    "line_number": 1274
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "if"
                ]
              },
              {
                "name": "AM_drawThings",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "colors"
                  },
                  {
                    "type": "int",
                    "name": "colorrange"
                  }
                ],
                "start_line": 1284,
                "end_line": 1300,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1286
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1289
                  },
                  {
                    "name": "while",
                    "line_number": 1292
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1289
                  },
                  {
                    "type": "while",
                    "line_number": 1292
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "colors",
                  "colorrange"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "for"
                ]
              },
              {
                "name": "AM_drawMarks",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1305,
                "end_line": 1324,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1309
                  },
                  {
                    "name": "if",
                    "line_number": 1311
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1313
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1314
                  },
                  {
                    "name": "CXMTOF",
                    "line_number": 1317
                  },
                  {
                    "name": "CYMTOF",
                    "line_number": 1318
                  },
                  {
                    "name": "if",
                    "line_number": 1319
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1320
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1309
                  },
                  {
                    "type": "if",
                    "line_number": 1311
                  },
                  {
                    "type": "if",
                    "line_number": 1319
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "V_DrawPatch",
                  "if",
                  "CYMTOF",
                  "for",
                  "CXMTOF",
                  "SHORT"
                ]
              },
              {
                "name": "AM_drawCrosshair",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "color"
                  }
                ],
                "start_line": 1326,
                "end_line": 1330,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1328
                  }
                ],
                "complexity": 1,
                "inputs": [
                  "color"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "AM_Drawer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1332,
                "end_line": 1349,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1334
                  },
                  {
                    "name": "AM_clearFB",
                    "line_number": 1336
                  },
                  {
                    "name": "if",
                    "line_number": 1337
                  },
                  {
                    "name": "AM_drawGrid",
                    "line_number": 1338
                  },
                  {
                    "name": "AM_drawWalls",
                    "line_number": 1339
                  },
                  {
                    "name": "AM_drawPlayers",
                    "line_number": 1340
                  },
                  {
                    "name": "if",
                    "line_number": 1341
                  },
                  {
                    "name": "AM_drawThings",
                    "line_number": 1342
                  },
                  {
                    "name": "AM_drawCrosshair",
                    "line_number": 1343
                  },
                  {
                    "name": "AM_drawMarks",
                    "line_number": 1345
                  },
                  {
                    "name": "V_MarkRect",
                    "line_number": 1347
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1334
                  },
                  {
                    "type": "if",
                    "line_number": 1337
                  },
                  {
                    "type": "if",
                    "line_number": 1341
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "AM_drawGrid",
                  "AM_drawThings",
                  "AM_clearFB",
                  "AM_drawCrosshair",
                  "AM_drawWalls",
                  "AM_drawMarks",
                  "V_MarkRect",
                  "AM_drawPlayers"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "f_x",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 226
              },
              {
                "name": "f_y",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 227
              },
              {
                "name": "f_w",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 230
              },
              {
                "name": "f_h",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 231
              },
              {
                "name": "lightlev",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 233
              },
              {
                "name": "amclock",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 235
              },
              {
                "name": "m_paninc",
                "type": "mpoint_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 237
              },
              {
                "name": "mtof_zoommul",
                "type": "fixed_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 238
              },
              {
                "name": "ftom_zoommul",
                "type": "fixed_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 239
              },
              {
                "name": "m_w",
                "type": "fixed_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 247
              },
              {
                "name": "m_h",
                "type": "fixed_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 248
              },
              {
                "name": "min_x",
                "type": "fixed_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 251
              },
              {
                "name": "min_y",
                "type": "fixed_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 252
              },
              {
                "name": "max_x",
                "type": "fixed_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 253
              },
              {
                "name": "max_y",
                "type": "fixed_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 254
              },
              {
                "name": "max_w",
                "type": "fixed_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 256
              },
              {
                "name": "max_h",
                "type": "fixed_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 257
              },
              {
                "name": "min_w",
                "type": "fixed_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 260
              },
              {
                "name": "min_h",
                "type": "fixed_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 261
              },
              {
                "name": "min_scale_mtof",
                "type": "fixed_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 264
              },
              {
                "name": "max_scale_mtof",
                "type": "fixed_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 265
              },
              {
                "name": "f_oldloc",
                "type": "mpoint_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 272
              },
              {
                "name": "scale_ftom",
                "type": "fixed_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 277
              },
              {
                "name": "viewactive",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 292
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 391
              },
              {
                "name": "a",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 392
              },
              {
                "name": "b",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 393
              },
              {
                "name": "pnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 460
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 504
              },
              {
                "name": "namebuf",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 505
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 517
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 526
              },
              {
                "name": "rc",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 618
              },
              {
                "name": "buffer",
                "type": "static char",
                "storage_class": null,
                "array_size": "20",
                "line_number": 621
              },
              {
                "name": "rc",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 733
              },
              {
                "name": "outside",
                "type": "register",
                "storage_class": null,
                "array_size": null,
                "line_number": 861
              },
              {
                "name": "tmp",
                "type": "fpoint_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 863
              },
              {
                "name": "dx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 864
              },
              {
                "name": "dy",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 865
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 888
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 901
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 913
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 966
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 969
              },
              {
                "name": "x",
                "type": "register int",
                "storage_class": null,
                "array_size": null,
                "line_number": 982
              },
              {
                "name": "y",
                "type": "register int",
                "storage_class": null,
                "array_size": null,
                "line_number": 983
              },
              {
                "name": "dx",
                "type": "register int",
                "storage_class": null,
                "array_size": null,
                "line_number": 984
              },
              {
                "name": "dy",
                "type": "register int",
                "storage_class": null,
                "array_size": null,
                "line_number": 985
              },
              {
                "name": "sx",
                "type": "register int",
                "storage_class": null,
                "array_size": null,
                "line_number": 986
              },
              {
                "name": "sy",
                "type": "register int",
                "storage_class": null,
                "array_size": null,
                "line_number": 987
              },
              {
                "name": "ax",
                "type": "register int",
                "storage_class": null,
                "array_size": null,
                "line_number": 988
              },
              {
                "name": "ay",
                "type": "register int",
                "storage_class": null,
                "array_size": null,
                "line_number": 989
              },
              {
                "name": "d",
                "type": "register int",
                "storage_class": null,
                "array_size": null,
                "line_number": 990
              },
              {
                "name": "fl",
                "type": "static fline_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1060
              },
              {
                "name": "ml",
                "type": "mline_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1075
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1119
              },
              {
                "name": "l",
                "type": "static mline_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1120
              },
              {
                "name": "tmpx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1178
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1201
              },
              {
                "name": "l",
                "type": "mline_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1202
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1242
              },
              {
                "name": "color",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1246
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1289
              }
            ],
            "defines": [
              {
                "name": "REDS",
                "value": "(256-5*16)",
                "line_number": 52
              },
              {
                "name": "REDRANGE",
                "value": "16",
                "line_number": 53
              },
              {
                "name": "BLUES",
                "value": "(256-4*16+8)",
                "line_number": 54
              },
              {
                "name": "BLUERANGE",
                "value": "8",
                "line_number": 55
              },
              {
                "name": "GREENS",
                "value": "(7*16)",
                "line_number": 56
              },
              {
                "name": "GREENRANGE",
                "value": "16",
                "line_number": 57
              },
              {
                "name": "GRAYS",
                "value": "(6*16)",
                "line_number": 58
              },
              {
                "name": "GRAYSRANGE",
                "value": "16",
                "line_number": 59
              },
              {
                "name": "BROWNS",
                "value": "(4*16)",
                "line_number": 60
              },
              {
                "name": "BROWNRANGE",
                "value": "16",
                "line_number": 61
              },
              {
                "name": "YELLOWS",
                "value": "(256-32+7)",
                "line_number": 62
              },
              {
                "name": "YELLOWRANGE",
                "value": "1",
                "line_number": 63
              },
              {
                "name": "BLACK",
                "value": "0",
                "line_number": 64
              },
              {
                "name": "WHITE",
                "value": "(256-47)",
                "line_number": 65
              },
              {
                "name": "BACKGROUND",
                "value": "BLACK",
                "line_number": 68
              },
              {
                "name": "YOURCOLORS",
                "value": "WHITE",
                "line_number": 69
              },
              {
                "name": "YOURRANGE",
                "value": "0",
                "line_number": 70
              },
              {
                "name": "WALLCOLORS",
                "value": "REDS",
                "line_number": 71
              },
              {
                "name": "WALLRANGE",
                "value": "REDRANGE",
                "line_number": 72
              },
              {
                "name": "TSWALLCOLORS",
                "value": "GRAYS",
                "line_number": 73
              },
              {
                "name": "TSWALLRANGE",
                "value": "GRAYSRANGE",
                "line_number": 74
              },
              {
                "name": "FDWALLCOLORS",
                "value": "BROWNS",
                "line_number": 75
              },
              {
                "name": "FDWALLRANGE",
                "value": "BROWNRANGE",
                "line_number": 76
              },
              {
                "name": "CDWALLCOLORS",
                "value": "YELLOWS",
                "line_number": 77
              },
              {
                "name": "CDWALLRANGE",
                "value": "YELLOWRANGE",
                "line_number": 78
              },
              {
                "name": "THINGCOLORS",
                "value": "GREENS",
                "line_number": 79
              },
              {
                "name": "THINGRANGE",
                "value": "GREENRANGE",
                "line_number": 80
              },
              {
                "name": "SECRETWALLCOLORS",
                "value": "WALLCOLORS",
                "line_number": 81
              },
              {
                "name": "SECRETWALLRANGE",
                "value": "WALLRANGE",
                "line_number": 82
              },
              {
                "name": "GRIDCOLORS",
                "value": "(GRAYS + GRAYSRANGE/2)",
                "line_number": 83
              },
              {
                "name": "GRIDRANGE",
                "value": "0",
                "line_number": 84
              },
              {
                "name": "XHAIRCOLORS",
                "value": "GRAYS",
                "line_number": 85
              },
              {
                "name": "FB",
                "value": "0",
                "line_number": 88
              },
              {
                "name": "AM_PANDOWNKEY",
                "value": "KEY_DOWNARROW",
                "line_number": 90
              },
              {
                "name": "AM_PANUPKEY",
                "value": "KEY_UPARROW",
                "line_number": 91
              },
              {
                "name": "AM_PANRIGHTKEY",
                "value": "KEY_RIGHTARROW",
                "line_number": 92
              },
              {
                "name": "AM_PANLEFTKEY",
                "value": "KEY_LEFTARROW",
                "line_number": 93
              },
              {
                "name": "AM_ZOOMINKEY",
                "value": "'='",
                "line_number": 94
              },
              {
                "name": "AM_ZOOMOUTKEY",
                "value": "'-'",
                "line_number": 95
              },
              {
                "name": "AM_STARTKEY",
                "value": "KEY_TAB",
                "line_number": 96
              },
              {
                "name": "AM_ENDKEY",
                "value": "KEY_TAB",
                "line_number": 97
              },
              {
                "name": "AM_GOBIGKEY",
                "value": "'0'",
                "line_number": 98
              },
              {
                "name": "AM_FOLLOWKEY",
                "value": "'f'",
                "line_number": 99
              },
              {
                "name": "AM_GRIDKEY",
                "value": "'g'",
                "line_number": 100
              },
              {
                "name": "AM_MARKKEY",
                "value": "'m'",
                "line_number": 101
              },
              {
                "name": "AM_CLEARMARKKEY",
                "value": "'c'",
                "line_number": 102
              },
              {
                "name": "AM_NUMMARKPOINTS",
                "value": "10",
                "line_number": 104
              },
              {
                "name": "INITSCALEMTOF",
                "value": "(.2*FRACUNIT)",
                "line_number": 107
              },
              {
                "name": "F_PANINC",
                "value": "4",
                "line_number": 110
              },
              {
                "name": "M_ZOOMIN",
                "value": "((int) (1.02*FRACUNIT))",
                "line_number": 113
              },
              {
                "name": "M_ZOOMOUT",
                "value": "((int) (FRACUNIT/1.02))",
                "line_number": 116
              },
              {
                "name": "LINE_NEVERSEE",
                "value": "ML_DONTDRAW",
                "line_number": 126
              },
              {
                "name": "R",
                "value": "((8*PLAYERRADIUS)/7)",
                "line_number": 160
              },
              {
                "name": "NUMPLYRLINES",
                "value": "(sizeof(player_arrow)/sizeof(mline_t))",
                "line_number": 171
              },
              {
                "name": "R",
                "value": "((8*PLAYERRADIUS)/7)",
                "line_number": 173
              },
              {
                "name": "NUMCHEATPLYRLINES",
                "value": "(sizeof(cheat_player_arrow)/sizeof(mline_t))",
                "line_number": 193
              },
              {
                "name": "R",
                "value": "(FRACUNIT)",
                "line_number": 195
              },
              {
                "name": "NUMTRIANGLEGUYLINES",
                "value": "(sizeof(triangle_guy)/sizeof(mline_t))",
                "line_number": 202
              },
              {
                "name": "R",
                "value": "(FRACUNIT)",
                "line_number": 204
              },
              {
                "name": "NUMTHINTRIANGLEGUYLINES",
                "value": "(sizeof(thintriangle_guy)/sizeof(mline_t))",
                "line_number": 211
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/am_map.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of functions",
            "High number of global variables"
          ]
        },
        {
          "name": "am_map.h",
          "type": "file",
          "size": 1422,
          "last_modified": "2024-09-05T16:00:02.689589",
          "path": "linuxdoom-1.10/am_map.h",
          "readme": "# am_map.h\n\nThis file contains functionality related to am_map.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": [
              {
                "name": "AM_MSGHEADER",
                "value": "(('a'<<24)+('m'<<16))",
                "line_number": 26
              },
              {
                "name": "AM_MSGENTERED",
                "value": "(AM_MSGHEADER | ('e'<<8))",
                "line_number": 27
              },
              {
                "name": "AM_MSGEXITED",
                "value": "(AM_MSGHEADER | ('x'<<8))",
                "line_number": 28
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/am_map.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "doomdata.h",
          "type": "file",
          "size": 4845,
          "last_modified": "2024-09-05T16:00:03.048276",
          "path": "linuxdoom-1.10/doomdata.h",
          "readme": "# doomdata.h\n\nThis file contains functionality related to doomdata.",
          "dependencies": [
            "doomdef.h",
            "doomtype.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "x",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 62
              },
              {
                "name": "y",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 63
              },
              {
                "name": "textureoffset",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 71
              },
              {
                "name": "rowoffset",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 72
              },
              {
                "name": "toptexture",
                "type": "char",
                "storage_class": null,
                "array_size": "8",
                "line_number": 73
              },
              {
                "name": "bottomtexture",
                "type": "char",
                "storage_class": null,
                "array_size": "8",
                "line_number": 74
              },
              {
                "name": "midtexture",
                "type": "char",
                "storage_class": null,
                "array_size": "8",
                "line_number": 75
              },
              {
                "name": "sector",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 77
              },
              {
                "name": "v1",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 86
              },
              {
                "name": "v2",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 87
              },
              {
                "name": "flags",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 88
              },
              {
                "name": "special",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 89
              },
              {
                "name": "tag",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 90
              },
              {
                "name": "sidenum",
                "type": "short",
                "storage_class": null,
                "array_size": "2",
                "line_number": 92
              },
              {
                "name": "floorheight",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 143
              },
              {
                "name": "ceilingheight",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 144
              },
              {
                "name": "floorpic",
                "type": "char",
                "storage_class": null,
                "array_size": "8",
                "line_number": 145
              },
              {
                "name": "ceilingpic",
                "type": "char",
                "storage_class": null,
                "array_size": "8",
                "line_number": 146
              },
              {
                "name": "lightlevel",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 147
              },
              {
                "name": "special",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 148
              },
              {
                "name": "tag",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 149
              },
              {
                "name": "numsegs",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 155
              },
              {
                "name": "firstseg",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 157
              },
              {
                "name": "v1",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 165
              },
              {
                "name": "v2",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 166
              },
              {
                "name": "angle",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 167
              },
              {
                "name": "linedef",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 168
              },
              {
                "name": "side",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 169
              },
              {
                "name": "offset",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 170
              },
              {
                "name": "x",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 183
              },
              {
                "name": "y",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 184
              },
              {
                "name": "dx",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 185
              },
              {
                "name": "dy",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 186
              },
              {
                "name": "children",
                "type": "unsigned short",
                "storage_class": null,
                "array_size": "2",
                "line_number": 194
              },
              {
                "name": "x",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 205
              },
              {
                "name": "y",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 206
              },
              {
                "name": "angle",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 207
              },
              {
                "name": "type",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 208
              },
              {
                "name": "options",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 209
              }
            ],
            "defines": [
              {
                "name": "ML_BLOCKING",
                "value": "1",
                "line_number": 101
              },
              {
                "name": "ML_BLOCKMONSTERS",
                "value": "2",
                "line_number": 104
              },
              {
                "name": "ML_TWOSIDED",
                "value": "4",
                "line_number": 108
              },
              {
                "name": "ML_DONTPEGTOP",
                "value": "8",
                "line_number": 120
              },
              {
                "name": "ML_DONTPEGBOTTOM",
                "value": "16",
                "line_number": 123
              },
              {
                "name": "ML_SECRET",
                "value": "32",
                "line_number": 126
              },
              {
                "name": "ML_SOUNDBLOCK",
                "value": "64",
                "line_number": 129
              },
              {
                "name": "ML_DONTDRAW",
                "value": "128",
                "line_number": 132
              },
              {
                "name": "ML_MAPPED",
                "value": "256",
                "line_number": 135
              },
              {
                "name": "NF_SUBSECTOR",
                "value": "0x8000",
                "line_number": 178
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/doomdata.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "doomdef.c",
          "type": "file",
          "size": 1031,
          "last_modified": "2024-09-05T16:00:03.076281",
          "path": "linuxdoom-1.10/doomdef.c",
          "readme": "# doomdef.c\n\nThis file contains functionality related to doomdef.",
          "dependencies": [
            "doomdef.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/doomdef.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "doomdef.h",
          "type": "file",
          "size": 6593,
          "last_modified": "2024-09-05T16:00:03.100278",
          "path": "linuxdoom-1.10/doomdef.h",
          "readme": "# doomdef.h\n\nThis file contains functionality related to doomdef.",
          "dependencies": [
            "doomdata.h",
            "string.h",
            "stdio.h",
            "m_swap.h",
            "doomtype.h",
            "sounds.h",
            "p_mobj.h",
            "p_tick.h",
            "g_game.h",
            "d_net.h",
            "d_event.h",
            "tables.h",
            "d_items.h",
            "dstrings.h",
            "d_player.h",
            "m_fixed.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "player_s",
                "type": "struct",
                "storage_class": null,
                "array_size": null,
                "line_number": 312
              }
            ],
            "defines": [
              {
                "name": "SNDSERV",
                "value": "1",
                "line_number": 84
              },
              {
                "name": "BASE_WIDTH",
                "value": "320",
                "line_number": 98
              },
              {
                "name": "SCREEN_MUL",
                "value": "1",
                "line_number": 104
              },
              {
                "name": "INV_ASPECT_RATIO",
                "value": "0.625 // 0.75, ideally",
                "line_number": 105
              },
              {
                "name": "SCREENWIDTH",
                "value": "320",
                "line_number": 110
              },
              {
                "name": "SCREENHEIGHT",
                "value": "200",
                "line_number": 112
              },
              {
                "name": "MAXPLAYERS",
                "value": "4",
                "line_number": 119
              },
              {
                "name": "TICRATE",
                "value": "35",
                "line_number": 122
              },
              {
                "name": "MTF_EASY",
                "value": "1",
                "line_number": 140
              },
              {
                "name": "MTF_NORMAL",
                "value": "2",
                "line_number": 141
              },
              {
                "name": "MTF_HARD",
                "value": "4",
                "line_number": 142
              },
              {
                "name": "MTF_AMBUSH",
                "value": "8",
                "line_number": 145
              },
              {
                "name": "KEY_RIGHTARROW",
                "value": "0xae",
                "line_number": 250
              },
              {
                "name": "KEY_LEFTARROW",
                "value": "0xac",
                "line_number": 251
              },
              {
                "name": "KEY_UPARROW",
                "value": "0xad",
                "line_number": 252
              },
              {
                "name": "KEY_DOWNARROW",
                "value": "0xaf",
                "line_number": 253
              },
              {
                "name": "KEY_ESCAPE",
                "value": "27",
                "line_number": 254
              },
              {
                "name": "KEY_ENTER",
                "value": "13",
                "line_number": 255
              },
              {
                "name": "KEY_TAB",
                "value": "9",
                "line_number": 256
              },
              {
                "name": "KEY_F1",
                "value": "(0x80+0x3b)",
                "line_number": 257
              },
              {
                "name": "KEY_F2",
                "value": "(0x80+0x3c)",
                "line_number": 258
              },
              {
                "name": "KEY_F3",
                "value": "(0x80+0x3d)",
                "line_number": 259
              },
              {
                "name": "KEY_F4",
                "value": "(0x80+0x3e)",
                "line_number": 260
              },
              {
                "name": "KEY_F5",
                "value": "(0x80+0x3f)",
                "line_number": 261
              },
              {
                "name": "KEY_F6",
                "value": "(0x80+0x40)",
                "line_number": 262
              },
              {
                "name": "KEY_F7",
                "value": "(0x80+0x41)",
                "line_number": 263
              },
              {
                "name": "KEY_F8",
                "value": "(0x80+0x42)",
                "line_number": 264
              },
              {
                "name": "KEY_F9",
                "value": "(0x80+0x43)",
                "line_number": 265
              },
              {
                "name": "KEY_F10",
                "value": "(0x80+0x44)",
                "line_number": 266
              },
              {
                "name": "KEY_F11",
                "value": "(0x80+0x57)",
                "line_number": 267
              },
              {
                "name": "KEY_F12",
                "value": "(0x80+0x58)",
                "line_number": 268
              },
              {
                "name": "KEY_BACKSPACE",
                "value": "127",
                "line_number": 270
              },
              {
                "name": "KEY_PAUSE",
                "value": "0xff",
                "line_number": 271
              },
              {
                "name": "KEY_EQUALS",
                "value": "0x3d",
                "line_number": 273
              },
              {
                "name": "KEY_MINUS",
                "value": "0x2d",
                "line_number": 274
              },
              {
                "name": "KEY_RSHIFT",
                "value": "(0x80+0x36)",
                "line_number": 276
              },
              {
                "name": "KEY_RCTRL",
                "value": "(0x80+0x1d)",
                "line_number": 277
              },
              {
                "name": "KEY_RALT",
                "value": "(0x80+0x38)",
                "line_number": 278
              },
              {
                "name": "KEY_LALT",
                "value": "KEY_RALT",
                "line_number": 280
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/doomdef.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "doomstat.c",
          "type": "file",
          "size": 1152,
          "last_modified": "2024-09-05T16:00:03.126279",
          "path": "linuxdoom-1.10/doomstat.c",
          "readme": "# doomstat.c\n\nThis file contains functionality related to doomstat.",
          "dependencies": [
            "doomstat.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "modifiedgame",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 42
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/doomstat.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "doomstat.h",
          "type": "file",
          "size": 6878,
          "last_modified": "2024-09-05T16:00:03.152672",
          "path": "linuxdoom-1.10/doomstat.h",
          "readme": "# doomstat.h\n\nThis file contains functionality related to doomstat.",
          "dependencies": [
            "doomdata.h",
            "d_player.h",
            "d_net.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "nomonsters",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 49
              },
              {
                "name": "respawnparm",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 50
              },
              {
                "name": "fastparm",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 51
              },
              {
                "name": "devparm",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 53
              },
              {
                "name": "gamemode",
                "type": "GameMode_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 60
              },
              {
                "name": "gamemission",
                "type": "GameMission_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 61
              },
              {
                "name": "modifiedgame",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 64
              },
              {
                "name": "language",
                "type": "Language_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 69
              },
              {
                "name": "startskill",
                "type": "skill_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 77
              },
              {
                "name": "startepisode",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 78
              },
              {
                "name": "startmap",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 79
              },
              {
                "name": "autostart",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 81
              },
              {
                "name": "gameskill",
                "type": "skill_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 84
              },
              {
                "name": "gameepisode",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 85
              },
              {
                "name": "gamemap",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 86
              },
              {
                "name": "respawnmonsters",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 89
              },
              {
                "name": "netgame",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 92
              },
              {
                "name": "deathmatch",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 96
              },
              {
                "name": "snd_SfxVolume",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 109
              },
              {
                "name": "snd_MusicVolume",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 110
              },
              {
                "name": "snd_MusicDevice",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 116
              },
              {
                "name": "snd_SfxDevice",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 117
              },
              {
                "name": "snd_DesiredMusicDevice",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 119
              },
              {
                "name": "snd_DesiredSfxDevice",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 120
              },
              {
                "name": "statusbaractive",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 130
              },
              {
                "name": "automapactive",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 132
              },
              {
                "name": "menuactive",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 133
              },
              {
                "name": "paused",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 134
              },
              {
                "name": "viewactive",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 137
              },
              {
                "name": "nodrawers",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 139
              },
              {
                "name": "noblit",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 140
              },
              {
                "name": "viewwindowx",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 142
              },
              {
                "name": "viewwindowy",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 143
              },
              {
                "name": "viewheight",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 144
              },
              {
                "name": "viewwidth",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 145
              },
              {
                "name": "scaledviewwidth",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 146
              },
              {
                "name": "viewangleoffset",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 155
              },
              {
                "name": "consoleplayer",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 158
              },
              {
                "name": "displayplayer",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 159
              },
              {
                "name": "totalkills",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 166
              },
              {
                "name": "totalitems",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 167
              },
              {
                "name": "totalsecret",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 168
              },
              {
                "name": "levelstarttic",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 171
              },
              {
                "name": "leveltime",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 172
              },
              {
                "name": "usergame",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 180
              },
              {
                "name": "demoplayback",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 183
              },
              {
                "name": "demorecording",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 184
              },
              {
                "name": "singledemo",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 187
              },
              {
                "name": "gamestate",
                "type": "gamestate_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 193
              },
              {
                "name": "gametic",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 208
              },
              {
                "name": "wminfo",
                "type": "wbstartstruct_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 228
              },
              {
                "name": "basedefault",
                "type": "char",
                "storage_class": "extern",
                "array_size": "1024",
                "line_number": 244
              },
              {
                "name": "precache",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 248
              },
              {
                "name": "wipegamestate",
                "type": "gamestate_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 253
              },
              {
                "name": "mouseSensitivity",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 255
              },
              {
                "name": "singletics",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 258
              },
              {
                "name": "bodyqueslot",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 260
              },
              {
                "name": "skyflatnum",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 267
              },
              {
                "name": "rndindex",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 281
              },
              {
                "name": "maketic",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 283
              },
              {
                "name": "ticdup",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 287
              }
            ],
            "defines": [
              {
                "name": "MAX_DM_STARTS",
                "value": "10",
                "line_number": 219
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/doomstat.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "doomtype.h",
          "type": "file",
          "size": 1620,
          "last_modified": "2024-09-05T16:00:03.177673",
          "path": "linuxdoom-1.10/doomtype.h",
          "readme": "# doomtype.h\n\nThis file contains functionality related to doomtype.",
          "dependencies": [
            "values.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "boolean",
                "type": "typedef bool",
                "storage_class": null,
                "array_size": null,
                "line_number": 32
              },
              {
                "name": "byte",
                "type": "typedef unsigned char",
                "storage_class": null,
                "array_size": null,
                "line_number": 36
              }
            ],
            "defines": [
              {
                "name": "MAXCHAR",
                "value": "((char)0x7f)",
                "line_number": 44
              },
              {
                "name": "MAXSHORT",
                "value": "((short)0x7fff)",
                "line_number": 45
              },
              {
                "name": "MAXINT",
                "value": "((int)0x7fffffff)",
                "line_number": 48
              },
              {
                "name": "MAXLONG",
                "value": "((long)0x7fffffff)",
                "line_number": 49
              },
              {
                "name": "MINCHAR",
                "value": "((char)0x80)",
                "line_number": 50
              },
              {
                "name": "MINSHORT",
                "value": "((short)0x8000)",
                "line_number": 51
              },
              {
                "name": "MININT",
                "value": "((int)0x80000000)",
                "line_number": 54
              },
              {
                "name": "MINLONG",
                "value": "((long)0x80000000)",
                "line_number": 55
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/doomtype.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "dstrings.c",
          "type": "file",
          "size": 2322,
          "last_modified": "2024-09-05T16:00:03.202674",
          "path": "linuxdoom-1.10/dstrings.c",
          "readme": "# dstrings.c\n\nThis file contains functionality related to dstrings.",
          "dependencies": [
            "dstrings.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/dstrings.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "dstrings.h",
          "type": "file",
          "size": 1436,
          "last_modified": "2024-09-05T16:00:03.227672",
          "path": "linuxdoom-1.10/dstrings.h",
          "readme": "# dstrings.h\n\nThis file contains functionality related to dstrings.",
          "dependencies": [
            "d_french.h",
            "d_englsh.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": [
              {
                "name": "SAVEGAMENAME",
                "value": "\"doomsav\"",
                "line_number": 41
              },
              {
                "name": "DEVMAPS",
                "value": "\"devmaps\"",
                "line_number": 49
              },
              {
                "name": "DEVDATA",
                "value": "\"devdata\"",
                "line_number": 50
              },
              {
                "name": "NUM_QUITMESSAGES",
                "value": "22",
                "line_number": 56
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/dstrings.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "d_englsh.h",
          "type": "file",
          "size": 22000,
          "last_modified": "2024-09-05T16:00:02.718590",
          "path": "linuxdoom-1.10/d_englsh.h",
          "readme": "# d_englsh.h\n\nThis file contains functionality related to d_englsh.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": [
              {
                "name": "D_DEVSTR",
                "value": "\"Development mode ON.\\n\"",
                "line_number": 33
              },
              {
                "name": "D_CDROM",
                "value": "\"CD-ROM Version: default.cfg from c:\\\\doomdata\\n\"",
                "line_number": 34
              },
              {
                "name": "PRESSKEY",
                "value": "\"press a key.\"",
                "line_number": 39
              },
              {
                "name": "PRESSYN",
                "value": "\"press y or n.\"",
                "line_number": 40
              },
              {
                "name": "QUITMSG",
                "value": "\"are you sure you want to\\nquit this great game?\"",
                "line_number": 41
              },
              {
                "name": "LOADNET",
                "value": "\"you can't do load while in a net game!\\n\\n\"PRESSKEY",
                "line_number": 42
              },
              {
                "name": "QLOADNET",
                "value": "\"you can't quickload during a netgame!\\n\\n\"PRESSKEY",
                "line_number": 43
              },
              {
                "name": "QSAVESPOT",
                "value": "\"you haven't picked a quicksave slot yet!\\n\\n\"PRESSKEY",
                "line_number": 44
              },
              {
                "name": "SAVEDEAD",
                "value": "\"you can't save if you aren't playing!\\n\\n\"PRESSKEY",
                "line_number": 45
              },
              {
                "name": "QSPROMPT",
                "value": "\"quicksave over your game named\\n\\n'%s'?\\n\\n\"PRESSYN",
                "line_number": 46
              },
              {
                "name": "QLPROMPT",
                "value": "\"do you want to quickload the game named\\n\\n'%s'?\\n\\n\"PRESSYN",
                "line_number": 47
              },
              {
                "name": "NEWGAME",
                "value": "\\",
                "line_number": 49
              },
              {
                "name": "NIGHTMARE",
                "value": "\\",
                "line_number": 53
              },
              {
                "name": "SWSTRING",
                "value": "\\",
                "line_number": 57
              },
              {
                "name": "MSGOFF",
                "value": "\"Messages OFF\"",
                "line_number": 61
              },
              {
                "name": "MSGON",
                "value": "\"Messages ON\"",
                "line_number": 62
              },
              {
                "name": "NETEND",
                "value": "\"you can't end a netgame!\\n\\n\"PRESSKEY",
                "line_number": 63
              },
              {
                "name": "ENDGAME",
                "value": "\"are you sure you want to end the game?\\n\\n\"PRESSYN",
                "line_number": 64
              },
              {
                "name": "DOSY",
                "value": "\"(press y to quit)\"",
                "line_number": 66
              },
              {
                "name": "DETAILHI",
                "value": "\"High detail\"",
                "line_number": 68
              },
              {
                "name": "DETAILLO",
                "value": "\"Low detail\"",
                "line_number": 69
              },
              {
                "name": "GAMMALVL0",
                "value": "\"Gamma correction OFF\"",
                "line_number": 70
              },
              {
                "name": "GAMMALVL1",
                "value": "\"Gamma correction level 1\"",
                "line_number": 71
              },
              {
                "name": "GAMMALVL2",
                "value": "\"Gamma correction level 2\"",
                "line_number": 72
              },
              {
                "name": "GAMMALVL3",
                "value": "\"Gamma correction level 3\"",
                "line_number": 73
              },
              {
                "name": "GAMMALVL4",
                "value": "\"Gamma correction level 4\"",
                "line_number": 74
              },
              {
                "name": "EMPTYSTRING",
                "value": "\"empty slot\"",
                "line_number": 75
              },
              {
                "name": "GOTARMOR",
                "value": "\"Picked up the armor.\"",
                "line_number": 80
              },
              {
                "name": "GOTMEGA",
                "value": "\"Picked up the MegaArmor!\"",
                "line_number": 81
              },
              {
                "name": "GOTHTHBONUS",
                "value": "\"Picked up a health bonus.\"",
                "line_number": 82
              },
              {
                "name": "GOTARMBONUS",
                "value": "\"Picked up an armor bonus.\"",
                "line_number": 83
              },
              {
                "name": "GOTSTIM",
                "value": "\"Picked up a stimpack.\"",
                "line_number": 84
              },
              {
                "name": "GOTMEDINEED",
                "value": "\"Picked up a medikit that you REALLY need!\"",
                "line_number": 85
              },
              {
                "name": "GOTMEDIKIT",
                "value": "\"Picked up a medikit.\"",
                "line_number": 86
              },
              {
                "name": "GOTSUPER",
                "value": "\"Supercharge!\"",
                "line_number": 87
              },
              {
                "name": "GOTBLUECARD",
                "value": "\"Picked up a blue keycard.\"",
                "line_number": 89
              },
              {
                "name": "GOTYELWCARD",
                "value": "\"Picked up a yellow keycard.\"",
                "line_number": 90
              },
              {
                "name": "GOTREDCARD",
                "value": "\"Picked up a red keycard.\"",
                "line_number": 91
              },
              {
                "name": "GOTBLUESKUL",
                "value": "\"Picked up a blue skull key.\"",
                "line_number": 92
              },
              {
                "name": "GOTYELWSKUL",
                "value": "\"Picked up a yellow skull key.\"",
                "line_number": 93
              },
              {
                "name": "GOTREDSKULL",
                "value": "\"Picked up a red skull key.\"",
                "line_number": 94
              },
              {
                "name": "GOTINVUL",
                "value": "\"Invulnerability!\"",
                "line_number": 96
              },
              {
                "name": "GOTBERSERK",
                "value": "\"Berserk!\"",
                "line_number": 97
              },
              {
                "name": "GOTINVIS",
                "value": "\"Partial Invisibility\"",
                "line_number": 98
              },
              {
                "name": "GOTSUIT",
                "value": "\"Radiation Shielding Suit\"",
                "line_number": 99
              },
              {
                "name": "GOTMAP",
                "value": "\"Computer Area Map\"",
                "line_number": 100
              },
              {
                "name": "GOTVISOR",
                "value": "\"Light Amplification Visor\"",
                "line_number": 101
              },
              {
                "name": "GOTMSPHERE",
                "value": "\"MegaSphere!\"",
                "line_number": 102
              },
              {
                "name": "GOTCLIP",
                "value": "\"Picked up a clip.\"",
                "line_number": 104
              },
              {
                "name": "GOTCLIPBOX",
                "value": "\"Picked up a box of bullets.\"",
                "line_number": 105
              },
              {
                "name": "GOTROCKET",
                "value": "\"Picked up a rocket.\"",
                "line_number": 106
              },
              {
                "name": "GOTROCKBOX",
                "value": "\"Picked up a box of rockets.\"",
                "line_number": 107
              },
              {
                "name": "GOTCELL",
                "value": "\"Picked up an energy cell.\"",
                "line_number": 108
              },
              {
                "name": "GOTCELLBOX",
                "value": "\"Picked up an energy cell pack.\"",
                "line_number": 109
              },
              {
                "name": "GOTSHELLS",
                "value": "\"Picked up 4 shotgun shells.\"",
                "line_number": 110
              },
              {
                "name": "GOTSHELLBOX",
                "value": "\"Picked up a box of shotgun shells.\"",
                "line_number": 111
              },
              {
                "name": "GOTBACKPACK",
                "value": "\"Picked up a backpack full of ammo!\"",
                "line_number": 112
              },
              {
                "name": "GOTBFG9000",
                "value": "\"You got the BFG9000!  Oh, yes.\"",
                "line_number": 114
              },
              {
                "name": "GOTCHAINGUN",
                "value": "\"You got the chaingun!\"",
                "line_number": 115
              },
              {
                "name": "GOTCHAINSAW",
                "value": "\"A chainsaw!  Find some meat!\"",
                "line_number": 116
              },
              {
                "name": "GOTLAUNCHER",
                "value": "\"You got the rocket launcher!\"",
                "line_number": 117
              },
              {
                "name": "GOTPLASMA",
                "value": "\"You got the plasma gun!\"",
                "line_number": 118
              },
              {
                "name": "GOTSHOTGUN",
                "value": "\"You got the shotgun!\"",
                "line_number": 119
              },
              {
                "name": "GOTSHOTGUN2",
                "value": "\"You got the super shotgun!\"",
                "line_number": 120
              },
              {
                "name": "PD_BLUEO",
                "value": "\"You need a blue key to activate this object\"",
                "line_number": 125
              },
              {
                "name": "PD_REDO",
                "value": "\"You need a red key to activate this object\"",
                "line_number": 126
              },
              {
                "name": "PD_YELLOWO",
                "value": "\"You need a yellow key to activate this object\"",
                "line_number": 127
              },
              {
                "name": "PD_BLUEK",
                "value": "\"You need a blue key to open this door\"",
                "line_number": 128
              },
              {
                "name": "PD_REDK",
                "value": "\"You need a red key to open this door\"",
                "line_number": 129
              },
              {
                "name": "PD_YELLOWK",
                "value": "\"You need a yellow key to open this door\"",
                "line_number": 130
              },
              {
                "name": "GGSAVED",
                "value": "\"game saved.\"",
                "line_number": 135
              },
              {
                "name": "HUSTR_MSGU",
                "value": "\"[Message unsent]\"",
                "line_number": 140
              },
              {
                "name": "HUSTR_E1M1",
                "value": "\"E1M1: Hangar\"",
                "line_number": 142
              },
              {
                "name": "HUSTR_E1M2",
                "value": "\"E1M2: Nuclear Plant\"",
                "line_number": 143
              },
              {
                "name": "HUSTR_E1M3",
                "value": "\"E1M3: Toxin Refinery\"",
                "line_number": 144
              },
              {
                "name": "HUSTR_E1M4",
                "value": "\"E1M4: Command Control\"",
                "line_number": 145
              },
              {
                "name": "HUSTR_E1M5",
                "value": "\"E1M5: Phobos Lab\"",
                "line_number": 146
              },
              {
                "name": "HUSTR_E1M6",
                "value": "\"E1M6: Central Processing\"",
                "line_number": 147
              },
              {
                "name": "HUSTR_E1M7",
                "value": "\"E1M7: Computer Station\"",
                "line_number": 148
              },
              {
                "name": "HUSTR_E1M8",
                "value": "\"E1M8: Phobos Anomaly\"",
                "line_number": 149
              },
              {
                "name": "HUSTR_E1M9",
                "value": "\"E1M9: Military Base\"",
                "line_number": 150
              },
              {
                "name": "HUSTR_E2M1",
                "value": "\"E2M1: Deimos Anomaly\"",
                "line_number": 152
              },
              {
                "name": "HUSTR_E2M2",
                "value": "\"E2M2: Containment Area\"",
                "line_number": 153
              },
              {
                "name": "HUSTR_E2M3",
                "value": "\"E2M3: Refinery\"",
                "line_number": 154
              },
              {
                "name": "HUSTR_E2M4",
                "value": "\"E2M4: Deimos Lab\"",
                "line_number": 155
              },
              {
                "name": "HUSTR_E2M5",
                "value": "\"E2M5: Command Center\"",
                "line_number": 156
              },
              {
                "name": "HUSTR_E2M6",
                "value": "\"E2M6: Halls of the Damned\"",
                "line_number": 157
              },
              {
                "name": "HUSTR_E2M7",
                "value": "\"E2M7: Spawning Vats\"",
                "line_number": 158
              },
              {
                "name": "HUSTR_E2M8",
                "value": "\"E2M8: Tower of Babel\"",
                "line_number": 159
              },
              {
                "name": "HUSTR_E2M9",
                "value": "\"E2M9: Fortress of Mystery\"",
                "line_number": 160
              },
              {
                "name": "HUSTR_E3M1",
                "value": "\"E3M1: Hell Keep\"",
                "line_number": 162
              },
              {
                "name": "HUSTR_E3M2",
                "value": "\"E3M2: Slough of Despair\"",
                "line_number": 163
              },
              {
                "name": "HUSTR_E3M3",
                "value": "\"E3M3: Pandemonium\"",
                "line_number": 164
              },
              {
                "name": "HUSTR_E3M4",
                "value": "\"E3M4: House of Pain\"",
                "line_number": 165
              },
              {
                "name": "HUSTR_E3M5",
                "value": "\"E3M5: Unholy Cathedral\"",
                "line_number": 166
              },
              {
                "name": "HUSTR_E3M6",
                "value": "\"E3M6: Mt. Erebus\"",
                "line_number": 167
              },
              {
                "name": "HUSTR_E3M7",
                "value": "\"E3M7: Limbo\"",
                "line_number": 168
              },
              {
                "name": "HUSTR_E3M8",
                "value": "\"E3M8: Dis\"",
                "line_number": 169
              },
              {
                "name": "HUSTR_E3M9",
                "value": "\"E3M9: Warrens\"",
                "line_number": 170
              },
              {
                "name": "HUSTR_E4M1",
                "value": "\"E4M1: Hell Beneath\"",
                "line_number": 172
              },
              {
                "name": "HUSTR_E4M2",
                "value": "\"E4M2: Perfect Hatred\"",
                "line_number": 173
              },
              {
                "name": "HUSTR_E4M3",
                "value": "\"E4M3: Sever The Wicked\"",
                "line_number": 174
              },
              {
                "name": "HUSTR_E4M4",
                "value": "\"E4M4: Unruly Evil\"",
                "line_number": 175
              },
              {
                "name": "HUSTR_E4M5",
                "value": "\"E4M5: They Will Repent\"",
                "line_number": 176
              },
              {
                "name": "HUSTR_E4M6",
                "value": "\"E4M6: Against Thee Wickedly\"",
                "line_number": 177
              },
              {
                "name": "HUSTR_E4M7",
                "value": "\"E4M7: And Hell Followed\"",
                "line_number": 178
              },
              {
                "name": "HUSTR_E4M8",
                "value": "\"E4M8: Unto The Cruel\"",
                "line_number": 179
              },
              {
                "name": "HUSTR_E4M9",
                "value": "\"E4M9: Fear\"",
                "line_number": 180
              },
              {
                "name": "HUSTR_1",
                "value": "\"level 1: entryway\"",
                "line_number": 182
              },
              {
                "name": "HUSTR_2",
                "value": "\"level 2: underhalls\"",
                "line_number": 183
              },
              {
                "name": "HUSTR_3",
                "value": "\"level 3: the gantlet\"",
                "line_number": 184
              },
              {
                "name": "HUSTR_4",
                "value": "\"level 4: the focus\"",
                "line_number": 185
              },
              {
                "name": "HUSTR_5",
                "value": "\"level 5: the waste tunnels\"",
                "line_number": 186
              },
              {
                "name": "HUSTR_6",
                "value": "\"level 6: the crusher\"",
                "line_number": 187
              },
              {
                "name": "HUSTR_7",
                "value": "\"level 7: dead simple\"",
                "line_number": 188
              },
              {
                "name": "HUSTR_8",
                "value": "\"level 8: tricks and traps\"",
                "line_number": 189
              },
              {
                "name": "HUSTR_9",
                "value": "\"level 9: the pit\"",
                "line_number": 190
              },
              {
                "name": "HUSTR_10",
                "value": "\"level 10: refueling base\"",
                "line_number": 191
              },
              {
                "name": "HUSTR_11",
                "value": "\"level 11: 'o' of destruction!\"",
                "line_number": 192
              },
              {
                "name": "HUSTR_12",
                "value": "\"level 12: the factory\"",
                "line_number": 194
              },
              {
                "name": "HUSTR_13",
                "value": "\"level 13: downtown\"",
                "line_number": 195
              },
              {
                "name": "HUSTR_14",
                "value": "\"level 14: the inmost dens\"",
                "line_number": 196
              },
              {
                "name": "HUSTR_15",
                "value": "\"level 15: industrial zone\"",
                "line_number": 197
              },
              {
                "name": "HUSTR_16",
                "value": "\"level 16: suburbs\"",
                "line_number": 198
              },
              {
                "name": "HUSTR_17",
                "value": "\"level 17: tenements\"",
                "line_number": 199
              },
              {
                "name": "HUSTR_18",
                "value": "\"level 18: the courtyard\"",
                "line_number": 200
              },
              {
                "name": "HUSTR_19",
                "value": "\"level 19: the citadel\"",
                "line_number": 201
              },
              {
                "name": "HUSTR_20",
                "value": "\"level 20: gotcha!\"",
                "line_number": 202
              },
              {
                "name": "HUSTR_21",
                "value": "\"level 21: nirvana\"",
                "line_number": 204
              },
              {
                "name": "HUSTR_22",
                "value": "\"level 22: the catacombs\"",
                "line_number": 205
              },
              {
                "name": "HUSTR_23",
                "value": "\"level 23: barrels o' fun\"",
                "line_number": 206
              },
              {
                "name": "HUSTR_24",
                "value": "\"level 24: the chasm\"",
                "line_number": 207
              },
              {
                "name": "HUSTR_25",
                "value": "\"level 25: bloodfalls\"",
                "line_number": 208
              },
              {
                "name": "HUSTR_26",
                "value": "\"level 26: the abandoned mines\"",
                "line_number": 209
              },
              {
                "name": "HUSTR_27",
                "value": "\"level 27: monster condo\"",
                "line_number": 210
              },
              {
                "name": "HUSTR_28",
                "value": "\"level 28: the spirit world\"",
                "line_number": 211
              },
              {
                "name": "HUSTR_29",
                "value": "\"level 29: the living end\"",
                "line_number": 212
              },
              {
                "name": "HUSTR_30",
                "value": "\"level 30: icon of sin\"",
                "line_number": 213
              },
              {
                "name": "HUSTR_31",
                "value": "\"level 31: wolfenstein\"",
                "line_number": 215
              },
              {
                "name": "HUSTR_32",
                "value": "\"level 32: grosse\"",
                "line_number": 216
              },
              {
                "name": "PHUSTR_1",
                "value": "\"level 1: congo\"",
                "line_number": 218
              },
              {
                "name": "PHUSTR_2",
                "value": "\"level 2: well of souls\"",
                "line_number": 219
              },
              {
                "name": "PHUSTR_3",
                "value": "\"level 3: aztec\"",
                "line_number": 220
              },
              {
                "name": "PHUSTR_4",
                "value": "\"level 4: caged\"",
                "line_number": 221
              },
              {
                "name": "PHUSTR_5",
                "value": "\"level 5: ghost town\"",
                "line_number": 222
              },
              {
                "name": "PHUSTR_6",
                "value": "\"level 6: baron's lair\"",
                "line_number": 223
              },
              {
                "name": "PHUSTR_7",
                "value": "\"level 7: caughtyard\"",
                "line_number": 224
              },
              {
                "name": "PHUSTR_8",
                "value": "\"level 8: realm\"",
                "line_number": 225
              },
              {
                "name": "PHUSTR_9",
                "value": "\"level 9: abattoire\"",
                "line_number": 226
              },
              {
                "name": "PHUSTR_10",
                "value": "\"level 10: onslaught\"",
                "line_number": 227
              },
              {
                "name": "PHUSTR_11",
                "value": "\"level 11: hunted\"",
                "line_number": 228
              },
              {
                "name": "PHUSTR_12",
                "value": "\"level 12: speed\"",
                "line_number": 230
              },
              {
                "name": "PHUSTR_13",
                "value": "\"level 13: the crypt\"",
                "line_number": 231
              },
              {
                "name": "PHUSTR_14",
                "value": "\"level 14: genesis\"",
                "line_number": 232
              },
              {
                "name": "PHUSTR_15",
                "value": "\"level 15: the twilight\"",
                "line_number": 233
              },
              {
                "name": "PHUSTR_16",
                "value": "\"level 16: the omen\"",
                "line_number": 234
              },
              {
                "name": "PHUSTR_17",
                "value": "\"level 17: compound\"",
                "line_number": 235
              },
              {
                "name": "PHUSTR_18",
                "value": "\"level 18: neurosphere\"",
                "line_number": 236
              },
              {
                "name": "PHUSTR_19",
                "value": "\"level 19: nme\"",
                "line_number": 237
              },
              {
                "name": "PHUSTR_20",
                "value": "\"level 20: the death domain\"",
                "line_number": 238
              },
              {
                "name": "PHUSTR_21",
                "value": "\"level 21: slayer\"",
                "line_number": 240
              },
              {
                "name": "PHUSTR_22",
                "value": "\"level 22: impossible mission\"",
                "line_number": 241
              },
              {
                "name": "PHUSTR_23",
                "value": "\"level 23: tombstone\"",
                "line_number": 242
              },
              {
                "name": "PHUSTR_24",
                "value": "\"level 24: the final frontier\"",
                "line_number": 243
              },
              {
                "name": "PHUSTR_25",
                "value": "\"level 25: the temple of darkness\"",
                "line_number": 244
              },
              {
                "name": "PHUSTR_26",
                "value": "\"level 26: bunker\"",
                "line_number": 245
              },
              {
                "name": "PHUSTR_27",
                "value": "\"level 27: anti-christ\"",
                "line_number": 246
              },
              {
                "name": "PHUSTR_28",
                "value": "\"level 28: the sewers\"",
                "line_number": 247
              },
              {
                "name": "PHUSTR_29",
                "value": "\"level 29: odyssey of noises\"",
                "line_number": 248
              },
              {
                "name": "PHUSTR_30",
                "value": "\"level 30: the gateway of hell\"",
                "line_number": 249
              },
              {
                "name": "PHUSTR_31",
                "value": "\"level 31: cyberden\"",
                "line_number": 251
              },
              {
                "name": "PHUSTR_32",
                "value": "\"level 32: go 2 it\"",
                "line_number": 252
              },
              {
                "name": "THUSTR_1",
                "value": "\"level 1: system control\"",
                "line_number": 254
              },
              {
                "name": "THUSTR_2",
                "value": "\"level 2: human bbq\"",
                "line_number": 255
              },
              {
                "name": "THUSTR_3",
                "value": "\"level 3: power control\"",
                "line_number": 256
              },
              {
                "name": "THUSTR_4",
                "value": "\"level 4: wormhole\"",
                "line_number": 257
              },
              {
                "name": "THUSTR_5",
                "value": "\"level 5: hanger\"",
                "line_number": 258
              },
              {
                "name": "THUSTR_6",
                "value": "\"level 6: open season\"",
                "line_number": 259
              },
              {
                "name": "THUSTR_7",
                "value": "\"level 7: prison\"",
                "line_number": 260
              },
              {
                "name": "THUSTR_8",
                "value": "\"level 8: metal\"",
                "line_number": 261
              },
              {
                "name": "THUSTR_9",
                "value": "\"level 9: stronghold\"",
                "line_number": 262
              },
              {
                "name": "THUSTR_10",
                "value": "\"level 10: redemption\"",
                "line_number": 263
              },
              {
                "name": "THUSTR_11",
                "value": "\"level 11: storage facility\"",
                "line_number": 264
              },
              {
                "name": "THUSTR_12",
                "value": "\"level 12: crater\"",
                "line_number": 266
              },
              {
                "name": "THUSTR_13",
                "value": "\"level 13: nukage processing\"",
                "line_number": 267
              },
              {
                "name": "THUSTR_14",
                "value": "\"level 14: steel works\"",
                "line_number": 268
              },
              {
                "name": "THUSTR_15",
                "value": "\"level 15: dead zone\"",
                "line_number": 269
              },
              {
                "name": "THUSTR_16",
                "value": "\"level 16: deepest reaches\"",
                "line_number": 270
              },
              {
                "name": "THUSTR_17",
                "value": "\"level 17: processing area\"",
                "line_number": 271
              },
              {
                "name": "THUSTR_18",
                "value": "\"level 18: mill\"",
                "line_number": 272
              },
              {
                "name": "THUSTR_19",
                "value": "\"level 19: shipping/respawning\"",
                "line_number": 273
              },
              {
                "name": "THUSTR_20",
                "value": "\"level 20: central processing\"",
                "line_number": 274
              },
              {
                "name": "THUSTR_21",
                "value": "\"level 21: administration center\"",
                "line_number": 276
              },
              {
                "name": "THUSTR_22",
                "value": "\"level 22: habitat\"",
                "line_number": 277
              },
              {
                "name": "THUSTR_23",
                "value": "\"level 23: lunar mining project\"",
                "line_number": 278
              },
              {
                "name": "THUSTR_24",
                "value": "\"level 24: quarry\"",
                "line_number": 279
              },
              {
                "name": "THUSTR_25",
                "value": "\"level 25: baron's den\"",
                "line_number": 280
              },
              {
                "name": "THUSTR_26",
                "value": "\"level 26: ballistyx\"",
                "line_number": 281
              },
              {
                "name": "THUSTR_27",
                "value": "\"level 27: mount pain\"",
                "line_number": 282
              },
              {
                "name": "THUSTR_28",
                "value": "\"level 28: heck\"",
                "line_number": 283
              },
              {
                "name": "THUSTR_29",
                "value": "\"level 29: river styx\"",
                "line_number": 284
              },
              {
                "name": "THUSTR_30",
                "value": "\"level 30: last call\"",
                "line_number": 285
              },
              {
                "name": "THUSTR_31",
                "value": "\"level 31: pharaoh\"",
                "line_number": 287
              },
              {
                "name": "THUSTR_32",
                "value": "\"level 32: caribbean\"",
                "line_number": 288
              },
              {
                "name": "HUSTR_CHATMACRO1",
                "value": "\"I'm ready to kick butt!\"",
                "line_number": 290
              },
              {
                "name": "HUSTR_CHATMACRO2",
                "value": "\"I'm OK.\"",
                "line_number": 291
              },
              {
                "name": "HUSTR_CHATMACRO3",
                "value": "\"I'm not looking too good!\"",
                "line_number": 292
              },
              {
                "name": "HUSTR_CHATMACRO4",
                "value": "\"Help!\"",
                "line_number": 293
              },
              {
                "name": "HUSTR_CHATMACRO5",
                "value": "\"You suck!\"",
                "line_number": 294
              },
              {
                "name": "HUSTR_CHATMACRO6",
                "value": "\"Next time, scumbag...\"",
                "line_number": 295
              },
              {
                "name": "HUSTR_CHATMACRO7",
                "value": "\"Come here!\"",
                "line_number": 296
              },
              {
                "name": "HUSTR_CHATMACRO8",
                "value": "\"I'll take care of it.\"",
                "line_number": 297
              },
              {
                "name": "HUSTR_CHATMACRO9",
                "value": "\"Yes\"",
                "line_number": 298
              },
              {
                "name": "HUSTR_CHATMACRO0",
                "value": "\"No\"",
                "line_number": 299
              },
              {
                "name": "HUSTR_TALKTOSELF1",
                "value": "\"You mumble to yourself\"",
                "line_number": 301
              },
              {
                "name": "HUSTR_TALKTOSELF2",
                "value": "\"Who's there?\"",
                "line_number": 302
              },
              {
                "name": "HUSTR_TALKTOSELF3",
                "value": "\"You scare yourself\"",
                "line_number": 303
              },
              {
                "name": "HUSTR_TALKTOSELF4",
                "value": "\"You start to rave\"",
                "line_number": 304
              },
              {
                "name": "HUSTR_TALKTOSELF5",
                "value": "\"You've lost it...\"",
                "line_number": 305
              },
              {
                "name": "HUSTR_MESSAGESENT",
                "value": "\"[Message Sent]\"",
                "line_number": 307
              },
              {
                "name": "HUSTR_PLRGREEN",
                "value": "\"Green: \"",
                "line_number": 312
              },
              {
                "name": "HUSTR_PLRINDIGO",
                "value": "\"Indigo: \"",
                "line_number": 313
              },
              {
                "name": "HUSTR_PLRBROWN",
                "value": "\"Brown: \"",
                "line_number": 314
              },
              {
                "name": "HUSTR_PLRRED",
                "value": "\"Red: \"",
                "line_number": 315
              },
              {
                "name": "HUSTR_KEYGREEN",
                "value": "'g'",
                "line_number": 317
              },
              {
                "name": "HUSTR_KEYINDIGO",
                "value": "'i'",
                "line_number": 318
              },
              {
                "name": "HUSTR_KEYBROWN",
                "value": "'b'",
                "line_number": 319
              },
              {
                "name": "HUSTR_KEYRED",
                "value": "'r'",
                "line_number": 320
              },
              {
                "name": "AMSTR_FOLLOWON",
                "value": "\"Follow Mode ON\"",
                "line_number": 326
              },
              {
                "name": "AMSTR_FOLLOWOFF",
                "value": "\"Follow Mode OFF\"",
                "line_number": 327
              },
              {
                "name": "AMSTR_GRIDON",
                "value": "\"Grid ON\"",
                "line_number": 329
              },
              {
                "name": "AMSTR_GRIDOFF",
                "value": "\"Grid OFF\"",
                "line_number": 330
              },
              {
                "name": "AMSTR_MARKEDSPOT",
                "value": "\"Marked Spot\"",
                "line_number": 332
              },
              {
                "name": "AMSTR_MARKSCLEARED",
                "value": "\"All Marks Cleared\"",
                "line_number": 333
              },
              {
                "name": "STSTR_MUS",
                "value": "\"Music Change\"",
                "line_number": 339
              },
              {
                "name": "STSTR_NOMUS",
                "value": "\"IMPOSSIBLE SELECTION\"",
                "line_number": 340
              },
              {
                "name": "STSTR_DQDON",
                "value": "\"Degreelessness Mode On\"",
                "line_number": 341
              },
              {
                "name": "STSTR_DQDOFF",
                "value": "\"Degreelessness Mode Off\"",
                "line_number": 342
              },
              {
                "name": "STSTR_KFAADDED",
                "value": "\"Very Happy Ammo Added\"",
                "line_number": 344
              },
              {
                "name": "STSTR_FAADDED",
                "value": "\"Ammo (no keys) Added\"",
                "line_number": 345
              },
              {
                "name": "STSTR_NCON",
                "value": "\"No Clipping Mode ON\"",
                "line_number": 347
              },
              {
                "name": "STSTR_NCOFF",
                "value": "\"No Clipping Mode OFF\"",
                "line_number": 348
              },
              {
                "name": "STSTR_BEHOLD",
                "value": "\"inVuln, Str, Inviso, Rad, Allmap, or Lite-amp\"",
                "line_number": 350
              },
              {
                "name": "STSTR_BEHOLDX",
                "value": "\"Power-up Toggled\"",
                "line_number": 351
              },
              {
                "name": "STSTR_CHOPPERS",
                "value": "\"... doesn't suck - GM\"",
                "line_number": 353
              },
              {
                "name": "STSTR_CLEV",
                "value": "\"Changing Level...\"",
                "line_number": 354
              },
              {
                "name": "E1TEXT",
                "value": "\\",
                "line_number": 359
              },
              {
                "name": "E2TEXT",
                "value": "\\",
                "line_number": 377
              },
              {
                "name": "E3TEXT",
                "value": "\\",
                "line_number": 397
              },
              {
                "name": "E4TEXT",
                "value": "\\",
                "line_number": 417
              },
              {
                "name": "C1TEXT",
                "value": "\\",
                "line_number": 438
              },
              {
                "name": "C2TEXT",
                "value": "\\",
                "line_number": 454
              },
              {
                "name": "C3TEXT",
                "value": "\\",
                "line_number": 476
              },
              {
                "name": "C4TEXT",
                "value": "\\",
                "line_number": 490
              },
              {
                "name": "C5TEXT",
                "value": "\\",
                "line_number": 511
              },
              {
                "name": "C6TEXT",
                "value": "\\",
                "line_number": 521
              },
              {
                "name": "P1TEXT",
                "value": "\\",
                "line_number": 529
              },
              {
                "name": "P2TEXT",
                "value": "\\",
                "line_number": 546
              },
              {
                "name": "P3TEXT",
                "value": "\\",
                "line_number": 557
              },
              {
                "name": "P4TEXT",
                "value": "\\",
                "line_number": 571
              },
              {
                "name": "P5TEXT",
                "value": "\\",
                "line_number": 587
              },
              {
                "name": "P6TEXT",
                "value": "\\",
                "line_number": 595
              },
              {
                "name": "T1TEXT",
                "value": "\\",
                "line_number": 601
              },
              {
                "name": "T2TEXT",
                "value": "\\",
                "line_number": 616
              },
              {
                "name": "T3TEXT",
                "value": "\\",
                "line_number": 628
              },
              {
                "name": "T4TEXT",
                "value": "\\",
                "line_number": 638
              },
              {
                "name": "T5TEXT",
                "value": "\\",
                "line_number": 652
              },
              {
                "name": "T6TEXT",
                "value": "\\",
                "line_number": 660
              },
              {
                "name": "CC_ZOMBIE",
                "value": "\"ZOMBIEMAN\"",
                "line_number": 677
              },
              {
                "name": "CC_SHOTGUN",
                "value": "\"SHOTGUN GUY\"",
                "line_number": 678
              },
              {
                "name": "CC_HEAVY",
                "value": "\"HEAVY WEAPON DUDE\"",
                "line_number": 679
              },
              {
                "name": "CC_IMP",
                "value": "\"IMP\"",
                "line_number": 680
              },
              {
                "name": "CC_DEMON",
                "value": "\"DEMON\"",
                "line_number": 681
              },
              {
                "name": "CC_LOST",
                "value": "\"LOST SOUL\"",
                "line_number": 682
              },
              {
                "name": "CC_CACO",
                "value": "\"CACODEMON\"",
                "line_number": 683
              },
              {
                "name": "CC_HELL",
                "value": "\"HELL KNIGHT\"",
                "line_number": 684
              },
              {
                "name": "CC_BARON",
                "value": "\"BARON OF HELL\"",
                "line_number": 685
              },
              {
                "name": "CC_ARACH",
                "value": "\"ARACHNOTRON\"",
                "line_number": 686
              },
              {
                "name": "CC_PAIN",
                "value": "\"PAIN ELEMENTAL\"",
                "line_number": 687
              },
              {
                "name": "CC_REVEN",
                "value": "\"REVENANT\"",
                "line_number": 688
              },
              {
                "name": "CC_MANCU",
                "value": "\"MANCUBUS\"",
                "line_number": 689
              },
              {
                "name": "CC_ARCH",
                "value": "\"ARCH-VILE\"",
                "line_number": 690
              },
              {
                "name": "CC_SPIDER",
                "value": "\"THE SPIDER MASTERMIND\"",
                "line_number": 691
              },
              {
                "name": "CC_CYBER",
                "value": "\"THE CYBERDEMON\"",
                "line_number": 692
              },
              {
                "name": "CC_HERO",
                "value": "\"OUR HERO\"",
                "line_number": 693
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/d_englsh.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "d_event.h",
          "type": "file",
          "size": 2409,
          "last_modified": "2024-09-05T16:00:02.742594",
          "path": "linuxdoom-1.10/d_event.h",
          "readme": "# d_event.h\n\nThis file contains functionality related to d_event.",
          "dependencies": [
            "doomtype.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "type",
                "type": "evtype_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 46
              },
              {
                "name": "data1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 47
              },
              {
                "name": "data2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 48
              },
              {
                "name": "data3",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 49
              },
              {
                "name": "eventhead",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 111
              },
              {
                "name": "eventtail",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 112
              },
              {
                "name": "gameaction",
                "type": "gameaction_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 114
              }
            ],
            "defines": [
              {
                "name": "MAXEVENTS",
                "value": "64",
                "line_number": 108
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/d_event.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "d_french.h",
          "type": "file",
          "size": 14409,
          "last_modified": "2024-09-05T16:00:02.766101",
          "path": "linuxdoom-1.10/d_french.h",
          "readme": "# d_french.h\n\nThis file contains functionality related to d_french.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": [
              {
                "name": "D_DEVSTR",
                "value": "\"MODE DEVELOPPEMENT ON.\\n\"",
                "line_number": 29
              },
              {
                "name": "D_CDROM",
                "value": "\"VERSION CD-ROM: DEFAULT.CFG DANS C:\\\\DOOMDATA\\n\"",
                "line_number": 30
              },
              {
                "name": "PRESSKEY",
                "value": "\"APPUYEZ SUR UNE TOUCHE.\"",
                "line_number": 35
              },
              {
                "name": "PRESSYN",
                "value": "\"APPUYEZ SUR Y OU N\"",
                "line_number": 36
              },
              {
                "name": "QUITMSG",
                "value": "\"VOUS VOULEZ VRAIMENT\\nQUITTER CE SUPER JEU?\"",
                "line_number": 37
              },
              {
                "name": "LOADNET",
                "value": "\"VOUS NE POUVEZ PAS CHARGER\\nUN JEU EN RESEAU!\\n\\n\"PRESSKEY",
                "line_number": 38
              },
              {
                "name": "QLOADNET",
                "value": "\"CHARGEMENT RAPIDE INTERDIT EN RESEAU!\\n\\n\"PRESSKEY",
                "line_number": 39
              },
              {
                "name": "QSAVESPOT",
                "value": "\"VOUS N'AVEZ PAS CHOISI UN EMPLACEMENT!\\n\\n\"PRESSKEY",
                "line_number": 40
              },
              {
                "name": "SAVEDEAD",
                "value": "\"VOUS NE POUVEZ PAS SAUVER SI VOUS NE JOUEZ \"\\",
                "line_number": 41
              },
              {
                "name": "QSPROMPT",
                "value": "\"SAUVEGARDE RAPIDE DANS LE FICHIER \\n\\n'%s'?\\n\\n\"PRESSYN",
                "line_number": 43
              },
              {
                "name": "QLPROMPT",
                "value": "\"VOULEZ-VOUS CHARGER LA SAUVEGARDE\"\\",
                "line_number": 44
              },
              {
                "name": "NEWGAME",
                "value": "\"VOUS NE POUVEZ PAS LANCER\\n\"\\",
                "line_number": 46
              },
              {
                "name": "NIGHTMARE",
                "value": "\"VOUS CONFIRMEZ? CE NIVEAU EST\\n\"\\",
                "line_number": 48
              },
              {
                "name": "SWSTRING",
                "value": "\"CECI EST UNE VERSION SHAREWARE DE DOOM.\\n\\n\"\\",
                "line_number": 50
              },
              {
                "name": "MSGOFF",
                "value": "\"MESSAGES OFF\"",
                "line_number": 52
              },
              {
                "name": "MSGON",
                "value": "\"MESSAGES ON\"",
                "line_number": 53
              },
              {
                "name": "NETEND",
                "value": "\"VOUS NE POUVEZ PAS METTRE FIN A UN JEU SUR \"\\",
                "line_number": 54
              },
              {
                "name": "ENDGAME",
                "value": "\"VOUS VOULEZ VRAIMENT METTRE FIN AU JEU?\\n\\n\"PRESSYN",
                "line_number": 56
              },
              {
                "name": "DOSY",
                "value": "\"(APPUYEZ SUR Y POUR REVENIR AU OS.)\"",
                "line_number": 58
              },
              {
                "name": "DETAILHI",
                "value": "\"GRAPHISMES MAXIMUM \"",
                "line_number": 60
              },
              {
                "name": "DETAILLO",
                "value": "\"GRAPHISMES MINIMUM \"",
                "line_number": 61
              },
              {
                "name": "GAMMALVL0",
                "value": "\"CORRECTION GAMMA OFF\"",
                "line_number": 62
              },
              {
                "name": "GAMMALVL1",
                "value": "\"CORRECTION GAMMA NIVEAU 1\"",
                "line_number": 63
              },
              {
                "name": "GAMMALVL2",
                "value": "\"CORRECTION GAMMA NIVEAU 2\"",
                "line_number": 64
              },
              {
                "name": "GAMMALVL3",
                "value": "\"CORRECTION GAMMA NIVEAU 3\"",
                "line_number": 65
              },
              {
                "name": "GAMMALVL4",
                "value": "\"CORRECTION GAMMA NIVEAU 4\"",
                "line_number": 66
              },
              {
                "name": "EMPTYSTRING",
                "value": "\"EMPLACEMENT VIDE\"",
                "line_number": 67
              },
              {
                "name": "GOTARMOR",
                "value": "\"ARMURE RECUPEREE.\"",
                "line_number": 72
              },
              {
                "name": "GOTMEGA",
                "value": "\"MEGA-ARMURE RECUPEREE!\"",
                "line_number": 73
              },
              {
                "name": "GOTHTHBONUS",
                "value": "\"BONUS DE SANTE RECUPERE.\"",
                "line_number": 74
              },
              {
                "name": "GOTARMBONUS",
                "value": "\"BONUS D'ARMURE RECUPERE.\"",
                "line_number": 75
              },
              {
                "name": "GOTSTIM",
                "value": "\"STIMPACK RECUPERE.\"",
                "line_number": 76
              },
              {
                "name": "GOTMEDINEED",
                "value": "\"MEDIKIT RECUPERE. VOUS EN AVEZ VRAIMENT BESOIN!\"",
                "line_number": 77
              },
              {
                "name": "GOTMEDIKIT",
                "value": "\"MEDIKIT RECUPERE.\"",
                "line_number": 78
              },
              {
                "name": "GOTSUPER",
                "value": "\"SUPERCHARGE!\"",
                "line_number": 79
              },
              {
                "name": "GOTBLUECARD",
                "value": "\"CARTE MAGNETIQUE BLEUE RECUPEREE.\"",
                "line_number": 81
              },
              {
                "name": "GOTYELWCARD",
                "value": "\"CARTE MAGNETIQUE JAUNE RECUPEREE.\"",
                "line_number": 82
              },
              {
                "name": "GOTREDCARD",
                "value": "\"CARTE MAGNETIQUE ROUGE RECUPEREE.\"",
                "line_number": 83
              },
              {
                "name": "GOTBLUESKUL",
                "value": "\"CLEF CRANE BLEUE RECUPEREE.\"",
                "line_number": 84
              },
              {
                "name": "GOTYELWSKUL",
                "value": "\"CLEF CRANE JAUNE RECUPEREE.\"",
                "line_number": 85
              },
              {
                "name": "GOTREDSKULL",
                "value": "\"CLEF CRANE ROUGE RECUPEREE.\"",
                "line_number": 86
              },
              {
                "name": "GOTINVUL",
                "value": "\"INVULNERABILITE!\"",
                "line_number": 88
              },
              {
                "name": "GOTBERSERK",
                "value": "\"BERSERK!\"",
                "line_number": 89
              },
              {
                "name": "GOTINVIS",
                "value": "\"INVISIBILITE PARTIELLE \"",
                "line_number": 90
              },
              {
                "name": "GOTSUIT",
                "value": "\"COMBINAISON ANTI-RADIATIONS \"",
                "line_number": 91
              },
              {
                "name": "GOTMAP",
                "value": "\"CARTE INFORMATIQUE \"",
                "line_number": 92
              },
              {
                "name": "GOTVISOR",
                "value": "\"VISEUR A AMPLIFICATION DE LUMIERE \"",
                "line_number": 93
              },
              {
                "name": "GOTMSPHERE",
                "value": "\"MEGASPHERE!\"",
                "line_number": 94
              },
              {
                "name": "GOTCLIP",
                "value": "\"CHARGEUR RECUPERE.\"",
                "line_number": 96
              },
              {
                "name": "GOTCLIPBOX",
                "value": "\"BOITE DE BALLES RECUPEREE.\"",
                "line_number": 97
              },
              {
                "name": "GOTROCKET",
                "value": "\"ROQUETTE RECUPEREE.\"",
                "line_number": 98
              },
              {
                "name": "GOTROCKBOX",
                "value": "\"CAISSE DE ROQUETTES RECUPEREE.\"",
                "line_number": 99
              },
              {
                "name": "GOTCELL",
                "value": "\"CELLULE D'ENERGIE RECUPEREE.\"",
                "line_number": 100
              },
              {
                "name": "GOTCELLBOX",
                "value": "\"PACK DE CELLULES D'ENERGIE RECUPERE.\"",
                "line_number": 101
              },
              {
                "name": "GOTSHELLS",
                "value": "\"4 CARTOUCHES RECUPEREES.\"",
                "line_number": 102
              },
              {
                "name": "GOTSHELLBOX",
                "value": "\"BOITE DE CARTOUCHES RECUPEREE.\"",
                "line_number": 103
              },
              {
                "name": "GOTBACKPACK",
                "value": "\"SAC PLEIN DE MUNITIONS RECUPERE!\"",
                "line_number": 104
              },
              {
                "name": "GOTBFG9000",
                "value": "\"VOUS AVEZ UN BFG9000!  OH, OUI!\"",
                "line_number": 106
              },
              {
                "name": "GOTCHAINGUN",
                "value": "\"VOUS AVEZ LA MITRAILLEUSE!\"",
                "line_number": 107
              },
              {
                "name": "GOTCHAINSAW",
                "value": "\"UNE TRONCONNEUSE!\"",
                "line_number": 108
              },
              {
                "name": "GOTLAUNCHER",
                "value": "\"VOUS AVEZ UN LANCE-ROQUETTES!\"",
                "line_number": 109
              },
              {
                "name": "GOTPLASMA",
                "value": "\"VOUS AVEZ UN FUSIL A PLASMA!\"",
                "line_number": 110
              },
              {
                "name": "GOTSHOTGUN",
                "value": "\"VOUS AVEZ UN FUSIL!\"",
                "line_number": 111
              },
              {
                "name": "GOTSHOTGUN2",
                "value": "\"VOUS AVEZ UN SUPER FUSIL!\"",
                "line_number": 112
              },
              {
                "name": "PD_BLUEO",
                "value": "\"IL VOUS FAUT UNE CLEF BLEUE\"",
                "line_number": 117
              },
              {
                "name": "PD_REDO",
                "value": "\"IL VOUS FAUT UNE CLEF ROUGE\"",
                "line_number": 118
              },
              {
                "name": "PD_YELLOWO",
                "value": "\"IL VOUS FAUT UNE CLEF JAUNE\"",
                "line_number": 119
              },
              {
                "name": "PD_BLUEK",
                "value": "PD_BLUEO",
                "line_number": 120
              },
              {
                "name": "PD_REDK",
                "value": "PD_REDO",
                "line_number": 121
              },
              {
                "name": "PD_YELLOWK",
                "value": "PD_YELLOWO",
                "line_number": 122
              },
              {
                "name": "GGSAVED",
                "value": "\"JEU SAUVEGARDE.\"",
                "line_number": 127
              },
              {
                "name": "HUSTR_MSGU",
                "value": "\"[MESSAGE NON ENVOYE]\"",
                "line_number": 132
              },
              {
                "name": "HUSTR_E1M1",
                "value": "\"E1M1: HANGAR\"",
                "line_number": 134
              },
              {
                "name": "HUSTR_E1M2",
                "value": "\"E1M2: USINE NUCLEAIRE \"",
                "line_number": 135
              },
              {
                "name": "HUSTR_E1M3",
                "value": "\"E1M3: RAFFINERIE DE TOXINES \"",
                "line_number": 136
              },
              {
                "name": "HUSTR_E1M4",
                "value": "\"E1M4: CENTRE DE CONTROLE \"",
                "line_number": 137
              },
              {
                "name": "HUSTR_E1M5",
                "value": "\"E1M5: LABORATOIRE PHOBOS \"",
                "line_number": 138
              },
              {
                "name": "HUSTR_E1M6",
                "value": "\"E1M6: TRAITEMENT CENTRAL \"",
                "line_number": 139
              },
              {
                "name": "HUSTR_E1M7",
                "value": "\"E1M7: CENTRE INFORMATIQUE \"",
                "line_number": 140
              },
              {
                "name": "HUSTR_E1M8",
                "value": "\"E1M8: ANOMALIE PHOBOS \"",
                "line_number": 141
              },
              {
                "name": "HUSTR_E1M9",
                "value": "\"E1M9: BASE MILITAIRE \"",
                "line_number": 142
              },
              {
                "name": "HUSTR_E2M1",
                "value": "\"E2M1: ANOMALIE DEIMOS \"",
                "line_number": 144
              },
              {
                "name": "HUSTR_E2M2",
                "value": "\"E2M2: ZONE DE CONFINEMENT \"",
                "line_number": 145
              },
              {
                "name": "HUSTR_E2M3",
                "value": "\"E2M3: RAFFINERIE\"",
                "line_number": 146
              },
              {
                "name": "HUSTR_E2M4",
                "value": "\"E2M4: LABORATOIRE DEIMOS \"",
                "line_number": 147
              },
              {
                "name": "HUSTR_E2M5",
                "value": "\"E2M5: CENTRE DE CONTROLE \"",
                "line_number": 148
              },
              {
                "name": "HUSTR_E2M6",
                "value": "\"E2M6: HALLS DES DAMNES \"",
                "line_number": 149
              },
              {
                "name": "HUSTR_E2M7",
                "value": "\"E2M7: CUVES DE REPRODUCTION \"",
                "line_number": 150
              },
              {
                "name": "HUSTR_E2M8",
                "value": "\"E2M8: TOUR DE BABEL \"",
                "line_number": 151
              },
              {
                "name": "HUSTR_E2M9",
                "value": "\"E2M9: FORTERESSE DU MYSTERE \"",
                "line_number": 152
              },
              {
                "name": "HUSTR_E3M1",
                "value": "\"E3M1: DONJON DE L'ENFER \"",
                "line_number": 154
              },
              {
                "name": "HUSTR_E3M2",
                "value": "\"E3M2: BOURBIER DU DESESPOIR \"",
                "line_number": 155
              },
              {
                "name": "HUSTR_E3M3",
                "value": "\"E3M3: PANDEMONIUM\"",
                "line_number": 156
              },
              {
                "name": "HUSTR_E3M4",
                "value": "\"E3M4: MAISON DE LA DOULEUR \"",
                "line_number": 157
              },
              {
                "name": "HUSTR_E3M5",
                "value": "\"E3M5: CATHEDRALE PROFANE \"",
                "line_number": 158
              },
              {
                "name": "HUSTR_E3M6",
                "value": "\"E3M6: MONT EREBUS\"",
                "line_number": 159
              },
              {
                "name": "HUSTR_E3M7",
                "value": "\"E3M7: LIMBES\"",
                "line_number": 160
              },
              {
                "name": "HUSTR_E3M8",
                "value": "\"E3M8: DIS\"",
                "line_number": 161
              },
              {
                "name": "HUSTR_E3M9",
                "value": "\"E3M9: CLAPIERS\"",
                "line_number": 162
              },
              {
                "name": "HUSTR_1",
                "value": "\"NIVEAU 1: ENTREE \"",
                "line_number": 164
              },
              {
                "name": "HUSTR_2",
                "value": "\"NIVEAU 2: HALLS SOUTERRAINS \"",
                "line_number": 165
              },
              {
                "name": "HUSTR_3",
                "value": "\"NIVEAU 3: LE FEU NOURRI \"",
                "line_number": 166
              },
              {
                "name": "HUSTR_4",
                "value": "\"NIVEAU 4: LE FOYER \"",
                "line_number": 167
              },
              {
                "name": "HUSTR_5",
                "value": "\"NIVEAU 5: LES EGOUTS \"",
                "line_number": 168
              },
              {
                "name": "HUSTR_6",
                "value": "\"NIVEAU 6: LE BROYEUR \"",
                "line_number": 169
              },
              {
                "name": "HUSTR_7",
                "value": "\"NIVEAU 7: L'HERBE DE LA MORT\"",
                "line_number": 170
              },
              {
                "name": "HUSTR_8",
                "value": "\"NIVEAU 8: RUSES ET PIEGES \"",
                "line_number": 171
              },
              {
                "name": "HUSTR_9",
                "value": "\"NIVEAU 9: LE PUITS \"",
                "line_number": 172
              },
              {
                "name": "HUSTR_10",
                "value": "\"NIVEAU 10: BASE DE RAVITAILLEMENT \"",
                "line_number": 173
              },
              {
                "name": "HUSTR_11",
                "value": "\"NIVEAU 11: LE CERCLE DE LA MORT!\"",
                "line_number": 174
              },
              {
                "name": "HUSTR_12",
                "value": "\"NIVEAU 12: L'USINE \"",
                "line_number": 176
              },
              {
                "name": "HUSTR_13",
                "value": "\"NIVEAU 13: LE CENTRE VILLE\"",
                "line_number": 177
              },
              {
                "name": "HUSTR_14",
                "value": "\"NIVEAU 14: LES ANTRES PROFONDES \"",
                "line_number": 178
              },
              {
                "name": "HUSTR_15",
                "value": "\"NIVEAU 15: LA ZONE INDUSTRIELLE \"",
                "line_number": 179
              },
              {
                "name": "HUSTR_16",
                "value": "\"NIVEAU 16: LA BANLIEUE\"",
                "line_number": 180
              },
              {
                "name": "HUSTR_17",
                "value": "\"NIVEAU 17: LES IMMEUBLES\"",
                "line_number": 181
              },
              {
                "name": "HUSTR_18",
                "value": "\"NIVEAU 18: LA COUR \"",
                "line_number": 182
              },
              {
                "name": "HUSTR_19",
                "value": "\"NIVEAU 19: LA CITADELLE \"",
                "line_number": 183
              },
              {
                "name": "HUSTR_20",
                "value": "\"NIVEAU 20: JE T'AI EU!\"",
                "line_number": 184
              },
              {
                "name": "HUSTR_21",
                "value": "\"NIVEAU 21: LE NIRVANA\"",
                "line_number": 186
              },
              {
                "name": "HUSTR_22",
                "value": "\"NIVEAU 22: LES CATACOMBES \"",
                "line_number": 187
              },
              {
                "name": "HUSTR_23",
                "value": "\"NIVEAU 23: LA GRANDE FETE \"",
                "line_number": 188
              },
              {
                "name": "HUSTR_24",
                "value": "\"NIVEAU 24: LE GOUFFRE \"",
                "line_number": 189
              },
              {
                "name": "HUSTR_25",
                "value": "\"NIVEAU 25: LES CHUTES DE SANG\"",
                "line_number": 190
              },
              {
                "name": "HUSTR_26",
                "value": "\"NIVEAU 26: LES MINES ABANDONNEES \"",
                "line_number": 191
              },
              {
                "name": "HUSTR_27",
                "value": "\"NIVEAU 27: CHEZ LES MONSTRES \"",
                "line_number": 192
              },
              {
                "name": "HUSTR_28",
                "value": "\"NIVEAU 28: LE MONDE DE L'ESPRIT \"",
                "line_number": 193
              },
              {
                "name": "HUSTR_29",
                "value": "\"NIVEAU 29: LA LIMITE \"",
                "line_number": 194
              },
              {
                "name": "HUSTR_30",
                "value": "\"NIVEAU 30: L'ICONE DU PECHE \"",
                "line_number": 195
              },
              {
                "name": "HUSTR_31",
                "value": "\"NIVEAU 31: WOLFENSTEIN\"",
                "line_number": 197
              },
              {
                "name": "HUSTR_32",
                "value": "\"NIVEAU 32: LE MASSACRE\"",
                "line_number": 198
              },
              {
                "name": "HUSTR_CHATMACRO1",
                "value": "\"JE SUIS PRET A LEUR EN FAIRE BAVER!\"",
                "line_number": 201
              },
              {
                "name": "HUSTR_CHATMACRO2",
                "value": "\"JE VAIS BIEN.\"",
                "line_number": 202
              },
              {
                "name": "HUSTR_CHATMACRO3",
                "value": "\"JE N'AI PAS L'AIR EN FORME!\"",
                "line_number": 203
              },
              {
                "name": "HUSTR_CHATMACRO4",
                "value": "\"AU SECOURS!\"",
                "line_number": 204
              },
              {
                "name": "HUSTR_CHATMACRO5",
                "value": "\"TU CRAINS!\"",
                "line_number": 205
              },
              {
                "name": "HUSTR_CHATMACRO6",
                "value": "\"LA PROCHAINE FOIS, MINABLE...\"",
                "line_number": 206
              },
              {
                "name": "HUSTR_CHATMACRO7",
                "value": "\"VIENS ICI!\"",
                "line_number": 207
              },
              {
                "name": "HUSTR_CHATMACRO8",
                "value": "\"JE VAIS M'EN OCCUPER.\"",
                "line_number": 208
              },
              {
                "name": "HUSTR_CHATMACRO9",
                "value": "\"OUI\"",
                "line_number": 209
              },
              {
                "name": "HUSTR_CHATMACRO0",
                "value": "\"NON\"",
                "line_number": 210
              },
              {
                "name": "HUSTR_TALKTOSELF1",
                "value": "\"VOUS PARLEZ TOUT SEUL \"",
                "line_number": 212
              },
              {
                "name": "HUSTR_TALKTOSELF2",
                "value": "\"QUI EST LA?\"",
                "line_number": 213
              },
              {
                "name": "HUSTR_TALKTOSELF3",
                "value": "\"VOUS VOUS FAITES PEUR \"",
                "line_number": 214
              },
              {
                "name": "HUSTR_TALKTOSELF4",
                "value": "\"VOUS COMMENCEZ A DELIRER \"",
                "line_number": 215
              },
              {
                "name": "HUSTR_TALKTOSELF5",
                "value": "\"VOUS ETES LARGUE...\"",
                "line_number": 216
              },
              {
                "name": "HUSTR_MESSAGESENT",
                "value": "\"[MESSAGE ENVOYE]\"",
                "line_number": 218
              },
              {
                "name": "HUSTR_PLRGREEN",
                "value": "\"VERT: \"",
                "line_number": 223
              },
              {
                "name": "HUSTR_PLRINDIGO",
                "value": "\"INDIGO: \"",
                "line_number": 224
              },
              {
                "name": "HUSTR_PLRBROWN",
                "value": "\"BRUN: \"",
                "line_number": 225
              },
              {
                "name": "HUSTR_PLRRED",
                "value": "\"ROUGE: \"",
                "line_number": 226
              },
              {
                "name": "HUSTR_KEYGREEN",
                "value": "'g'\t// french key should be \"V\"",
                "line_number": 228
              },
              {
                "name": "HUSTR_KEYINDIGO",
                "value": "'i'",
                "line_number": 229
              },
              {
                "name": "HUSTR_KEYBROWN",
                "value": "'b'",
                "line_number": 230
              },
              {
                "name": "HUSTR_KEYRED",
                "value": "'r'",
                "line_number": 231
              },
              {
                "name": "AMSTR_FOLLOWON",
                "value": "\"MODE POURSUITE ON\"",
                "line_number": 237
              },
              {
                "name": "AMSTR_FOLLOWOFF",
                "value": "\"MODE POURSUITE OFF\"",
                "line_number": 238
              },
              {
                "name": "AMSTR_GRIDON",
                "value": "\"GRILLE ON\"",
                "line_number": 240
              },
              {
                "name": "AMSTR_GRIDOFF",
                "value": "\"GRILLE OFF\"",
                "line_number": 241
              },
              {
                "name": "AMSTR_MARKEDSPOT",
                "value": "\"REPERE MARQUE \"",
                "line_number": 243
              },
              {
                "name": "AMSTR_MARKSCLEARED",
                "value": "\"REPERES EFFACES \"",
                "line_number": 244
              },
              {
                "name": "STSTR_MUS",
                "value": "\"CHANGEMENT DE MUSIQUE \"",
                "line_number": 250
              },
              {
                "name": "STSTR_NOMUS",
                "value": "\"IMPOSSIBLE SELECTION\"",
                "line_number": 251
              },
              {
                "name": "STSTR_DQDON",
                "value": "\"INVULNERABILITE ON \"",
                "line_number": 252
              },
              {
                "name": "STSTR_DQDOFF",
                "value": "\"INVULNERABILITE OFF\"",
                "line_number": 253
              },
              {
                "name": "STSTR_KFAADDED",
                "value": "\"ARMEMENT MAXIMUM! \"",
                "line_number": 255
              },
              {
                "name": "STSTR_FAADDED",
                "value": "\"ARMES (SAUF CLEFS) AJOUTEES\"",
                "line_number": 256
              },
              {
                "name": "STSTR_NCON",
                "value": "\"BARRIERES ON\"",
                "line_number": 258
              },
              {
                "name": "STSTR_NCOFF",
                "value": "\"BARRIERES OFF\"",
                "line_number": 259
              },
              {
                "name": "STSTR_BEHOLD",
                "value": "\" inVuln, Str, Inviso, Rad, Allmap, or Lite-amp\"",
                "line_number": 261
              },
              {
                "name": "STSTR_BEHOLDX",
                "value": "\"AMELIORATION ACTIVEE\"",
                "line_number": 262
              },
              {
                "name": "STSTR_CHOPPERS",
                "value": "\"... DOESN'T SUCK - GM\"",
                "line_number": 264
              },
              {
                "name": "STSTR_CLEV",
                "value": "\"CHANGEMENT DE NIVEAU...\"",
                "line_number": 265
              },
              {
                "name": "E1TEXT",
                "value": "\"APRES AVOIR VAINCU LES GROS MECHANTS\\n\"\\",
                "line_number": 270
              },
              {
                "name": "E2TEXT",
                "value": "\"VOUS AVEZ REUSSI. L'INFAME DEMON\\n\"\\",
                "line_number": 286
              },
              {
                "name": "E3TEXT",
                "value": "\"LE DEMON ARACHNEEN ET REPUGNANT\\n\"\\",
                "line_number": 304
              },
              {
                "name": "C1TEXT",
                "value": "\"VOUS ETES AU PLUS PROFOND DE L'ASTROPORT\\n\" \\",
                "line_number": 326
              },
              {
                "name": "C2TEXT",
                "value": "\"VOUS AVEZ GAGNE! VOTRE VICTOIRE A PERMIS\\n\" \\",
                "line_number": 341
              },
              {
                "name": "C3TEXT",
                "value": "\"VOUS ETES AU COEUR DE LA CITE CORROMPUE,\\n\"\\",
                "line_number": 361
              },
              {
                "name": "C4TEXT",
                "value": "\"LE VISAGE HORRIBLE D'UN DEMON D'UNE\\n\"\\",
                "line_number": 373
              },
              {
                "name": "C5TEXT",
                "value": "\"FELICITATIONS! VOUS AVEZ TROUVE LE\\n\"\\",
                "line_number": 391
              },
              {
                "name": "C6TEXT",
                "value": "\"FELICITATIONS! VOUS AVEZ DECOUVERT\\n\"\\",
                "line_number": 399
              },
              {
                "name": "CC_ZOMBIE",
                "value": "\"ZOMBIE\"",
                "line_number": 406
              },
              {
                "name": "CC_SHOTGUN",
                "value": "\"TYPE AU FUSIL\"",
                "line_number": 407
              },
              {
                "name": "CC_HEAVY",
                "value": "\"MEC SUPER-ARME\"",
                "line_number": 408
              },
              {
                "name": "CC_IMP",
                "value": "\"DIABLOTIN\"",
                "line_number": 409
              },
              {
                "name": "CC_DEMON",
                "value": "\"DEMON\"",
                "line_number": 410
              },
              {
                "name": "CC_LOST",
                "value": "\"AME PERDUE\"",
                "line_number": 411
              },
              {
                "name": "CC_CACO",
                "value": "\"CACODEMON\"",
                "line_number": 412
              },
              {
                "name": "CC_HELL",
                "value": "\"CHEVALIER DE L'ENFER\"",
                "line_number": 413
              },
              {
                "name": "CC_BARON",
                "value": "\"BARON DE L'ENFER\"",
                "line_number": 414
              },
              {
                "name": "CC_ARACH",
                "value": "\"ARACHNOTRON\"",
                "line_number": 415
              },
              {
                "name": "CC_PAIN",
                "value": "\"ELEMENTAIRE DE LA DOULEUR\"",
                "line_number": 416
              },
              {
                "name": "CC_REVEN",
                "value": "\"REVENANT\"",
                "line_number": 417
              },
              {
                "name": "CC_MANCU",
                "value": "\"MANCUBUS\"",
                "line_number": 418
              },
              {
                "name": "CC_ARCH",
                "value": "\"ARCHI-INFAME\"",
                "line_number": 419
              },
              {
                "name": "CC_SPIDER",
                "value": "\"L'ARAIGNEE CERVEAU\"",
                "line_number": 420
              },
              {
                "name": "CC_CYBER",
                "value": "\"LE CYBERDEMON\"",
                "line_number": 421
              },
              {
                "name": "CC_HERO",
                "value": "\"NOTRE HEROS\"",
                "line_number": 422
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/d_french.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "d_items.c",
          "type": "file",
          "size": 2053,
          "last_modified": "2024-09-05T16:00:02.791102",
          "path": "linuxdoom-1.10/d_items.c",
          "readme": "# d_items.c\n\nThis file contains functionality related to d_items.",
          "dependencies": [
            "info.h",
            "d_items.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/d_items.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "d_items.h",
          "type": "file",
          "size": 1283,
          "last_modified": "2024-09-05T16:00:02.818104",
          "path": "linuxdoom-1.10/d_items.h",
          "readme": "# d_items.h\n\nThis file contains functionality related to d_items.",
          "dependencies": [
            "doomdef.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "ammo",
                "type": "ammotype_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 36
              },
              {
                "name": "upstate",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 37
              },
              {
                "name": "downstate",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 38
              },
              {
                "name": "readystate",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 39
              },
              {
                "name": "atkstate",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 40
              },
              {
                "name": "flashstate",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 41
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/d_items.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "d_main.c",
          "type": "file",
          "size": 25942,
          "last_modified": "2024-09-05T16:00:02.846114",
          "path": "linuxdoom-1.10/d_main.c",
          "readme": "# d_main.c\n\nThis file contains functionality related to d_main.",
          "dependencies": [
            "wi_stuff.h",
            "f_wipe.h",
            "sys/types.h",
            "stdio.h",
            "sys/stat.h",
            "p_setup.h",
            "hu_stuff.h",
            "v_video.h",
            "unistd.h",
            "m_argv.h",
            "r_local.h",
            "d_main.h",
            "i_video.h",
            "g_game.h",
            "doomdef.h",
            "st_stuff.h",
            "fcntl.h",
            "w_wad.h",
            "f_finale.h",
            "z_zone.h",
            "stdlib.h",
            "s_sound.h",
            "am_map.h",
            "i_sound.h",
            "sounds.h",
            "doomstat.h",
            "i_system.h",
            "m_misc.h",
            "m_menu.h",
            "dstrings.h"
          ],
          "inputs": [
            "320",
            "setsizeneeded",
            "GS_LEVEL",
            "singletics",
            "modifiedgame",
            "gamestate",
            "*file",
            "ev",
            "void",
            "wipegamestate",
            "!wipe",
            "paused"
          ],
          "outputs": [
            "save the current screen if about to wipe",
            "change the view size if needed",
            "normal update",
            "print modified banner",
            "do buffered drawing",
            "see if the border needs to be updated to the screen",
            "process one or more tics",
            "file in shareware",
            "draw pause pic",
            "see if the border needs to be initially drawn"
          ],
          "content": {
            "functions": [
              {
                "name": "D_PostEvent",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "event_t*",
                    "name": "ev"
                  }
                ],
                "start_line": 150,
                "end_line": 154,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "ev"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "D_ProcessEvents",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 161,
                "end_line": 177,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 166
                  },
                  {
                    "name": "W_CheckNumForName",
                    "line_number": 167
                  },
                  {
                    "name": "for",
                    "line_number": 170
                  },
                  {
                    "name": "if",
                    "line_number": 173
                  },
                  {
                    "name": "M_Responder",
                    "line_number": 173
                  },
                  {
                    "name": "G_Responder",
                    "line_number": 175
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 166
                  },
                  {
                    "type": "for",
                    "line_number": 170
                  },
                  {
                    "type": "if",
                    "line_number": 173
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "if",
                  "M_Responder",
                  "W_CheckNumForName",
                  "G_Responder"
                ]
              },
              {
                "name": "D_Display",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 193,
                "end_line": 345,
                "local_variables": [
                  {
                    "type": "static  int",
                    "name": "borderdrawcount",
                    "array_size": null,
                    "line_number": 200
                  },
                  {
                    "type": "int",
                    "name": "nowtime",
                    "array_size": null,
                    "line_number": 201
                  },
                  {
                    "type": "int",
                    "name": "tics",
                    "array_size": null,
                    "line_number": 202
                  },
                  {
                    "type": "int",
                    "name": "wipestart",
                    "array_size": null,
                    "line_number": 203
                  },
                  {
                    "type": "int",
                    "name": "y",
                    "array_size": null,
                    "line_number": 204
                  },
                  {
                    "type": "boolean",
                    "name": "done",
                    "array_size": null,
                    "line_number": 205
                  },
                  {
                    "type": "boolean",
                    "name": "wipe",
                    "array_size": null,
                    "line_number": 206
                  },
                  {
                    "type": "boolean",
                    "name": "redrawsbar",
                    "array_size": null,
                    "line_number": 207
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 209
                  },
                  {
                    "name": "if",
                    "line_number": 215
                  },
                  {
                    "name": "R_ExecuteSetViewSize",
                    "line_number": 217
                  },
                  {
                    "name": "if",
                    "line_number": 223
                  },
                  {
                    "name": "wipe_StartScreen",
                    "line_number": 226
                  },
                  {
                    "name": "if",
                    "line_number": 231
                  },
                  {
                    "name": "HU_Erase",
                    "line_number": 232
                  },
                  {
                    "name": "switch",
                    "line_number": 235
                  },
                  {
                    "name": "if",
                    "line_number": 238
                  },
                  {
                    "name": "if",
                    "line_number": 240
                  },
                  {
                    "name": "AM_Drawer",
                    "line_number": 241
                  },
                  {
                    "name": "if",
                    "line_number": 242
                  },
                  {
                    "name": "if",
                    "line_number": 244
                  },
                  {
                    "name": "ST_Drawer",
                    "line_number": 246
                  },
                  {
                    "name": "WI_Drawer",
                    "line_number": 251
                  },
                  {
                    "name": "F_Drawer",
                    "line_number": 255
                  },
                  {
                    "name": "D_PageDrawer",
                    "line_number": 259
                  },
                  {
                    "name": "I_UpdateNoBlit",
                    "line_number": 264
                  },
                  {
                    "name": "if",
                    "line_number": 267
                  },
                  {
                    "name": "R_RenderPlayerView",
                    "line_number": 268
                  },
                  {
                    "name": "if",
                    "line_number": 270
                  },
                  {
                    "name": "HU_Drawer",
                    "line_number": 271
                  },
                  {
                    "name": "if",
                    "line_number": 274
                  },
                  {
                    "name": "I_SetPalette",
                    "line_number": 275
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 275
                  },
                  {
                    "name": "if",
                    "line_number": 278
                  },
                  {
                    "name": "R_FillBackScreen",
                    "line_number": 281
                  },
                  {
                    "name": "if",
                    "line_number": 285
                  },
                  {
                    "name": "if",
                    "line_number": 287
                  },
                  {
                    "name": "if",
                    "line_number": 289
                  },
                  {
                    "name": "R_DrawViewBorder",
                    "line_number": 291
                  },
                  {
                    "name": "if",
                    "line_number": 303
                  },
                  {
                    "name": "if",
                    "line_number": 305
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 309
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 310
                  },
                  {
                    "name": "M_Drawer",
                    "line_number": 315
                  },
                  {
                    "name": "NetUpdate",
                    "line_number": 316
                  },
                  {
                    "name": "if",
                    "line_number": 320
                  },
                  {
                    "name": "I_FinishUpdate",
                    "line_number": 322
                  },
                  {
                    "name": "wipe_EndScreen",
                    "line_number": 327
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 329
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 335
                  },
                  {
                    "name": "while",
                    "line_number": 337
                  },
                  {
                    "name": "wipe_ScreenWipe",
                    "line_number": 339
                  },
                  {
                    "name": "I_UpdateNoBlit",
                    "line_number": 341
                  },
                  {
                    "name": "M_Drawer",
                    "line_number": 342
                  },
                  {
                    "name": "I_FinishUpdate",
                    "line_number": 343
                  },
                  {
                    "name": "while",
                    "line_number": 344
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 209
                  },
                  {
                    "type": "for",
                    "line_number": 210
                  },
                  {
                    "type": "if",
                    "line_number": 214
                  },
                  {
                    "type": "if",
                    "line_number": 215
                  },
                  {
                    "type": "if",
                    "line_number": 222
                  },
                  {
                    "type": "if",
                    "line_number": 223
                  },
                  {
                    "type": "else",
                    "line_number": 228
                  },
                  {
                    "type": "if",
                    "line_number": 231
                  },
                  {
                    "type": "if",
                    "line_number": 238
                  },
                  {
                    "type": "if",
                    "line_number": 240
                  },
                  {
                    "type": "if",
                    "line_number": 242
                  },
                  {
                    "type": "if",
                    "line_number": 244
                  },
                  {
                    "type": "if",
                    "line_number": 267
                  },
                  {
                    "type": "if",
                    "line_number": 270
                  },
                  {
                    "type": "if",
                    "line_number": 274
                  },
                  {
                    "type": "if",
                    "line_number": 277
                  },
                  {
                    "type": "if",
                    "line_number": 278
                  },
                  {
                    "type": "if",
                    "line_number": 284
                  },
                  {
                    "type": "if",
                    "line_number": 285
                  },
                  {
                    "type": "if",
                    "line_number": 287
                  },
                  {
                    "type": "if",
                    "line_number": 289
                  },
                  {
                    "type": "if",
                    "line_number": 303
                  },
                  {
                    "type": "if",
                    "line_number": 305
                  },
                  {
                    "type": "else",
                    "line_number": 307
                  },
                  {
                    "type": "if",
                    "line_number": 320
                  },
                  {
                    "type": "while",
                    "line_number": 337
                  },
                  {
                    "type": "while",
                    "line_number": 344
                  }
                ],
                "complexity": 19,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "I_SetPalette",
                  "wipe_ScreenWipe",
                  "NetUpdate",
                  "HU_Drawer",
                  "R_ExecuteSetViewSize",
                  "W_CacheLumpName",
                  "HU_Erase",
                  "switch",
                  "while",
                  "ST_Drawer",
                  "R_RenderPlayerView",
                  "R_DrawViewBorder",
                  "R_FillBackScreen",
                  "D_PageDrawer",
                  "I_UpdateNoBlit",
                  "wipe_StartScreen",
                  "wipe_EndScreen",
                  "I_FinishUpdate",
                  "if",
                  "I_GetTime",
                  "F_Drawer",
                  "WI_Drawer",
                  "AM_Drawer",
                  "M_Drawer",
                  "V_DrawPatchDirect"
                ]
              },
              {
                "name": "if",
                "return_type": "change the view size if needed",
                "parameters": [
                  {
                    "type": "",
                    "name": "setsizeneeded"
                  }
                ],
                "start_line": 214,
                "end_line": 219,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "R_ExecuteSetViewSize",
                    "line_number": 216
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "setsizeneeded"
                ],
                "outputs": [
                  "change the view size if needed"
                ],
                "dependencies": [
                  "R_ExecuteSetViewSize"
                ]
              },
              {
                "name": "if",
                "return_type": "save the current screen if about to wipe",
                "parameters": [
                  {
                    "type": "gamestate !=",
                    "name": "wipegamestate"
                  }
                ],
                "start_line": 222,
                "end_line": 226,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "wipe_StartScreen",
                    "line_number": 225
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "wipegamestate"
                ],
                "outputs": [
                  "save the current screen if about to wipe"
                ],
                "dependencies": [
                  "wipe_StartScreen"
                ]
              },
              {
                "name": "switch",
                "return_type": "do buffered drawing",
                "parameters": [
                  {
                    "type": "",
                    "name": "gamestate"
                  }
                ],
                "start_line": 234,
                "end_line": 260,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 237
                  },
                  {
                    "name": "if",
                    "line_number": 239
                  },
                  {
                    "name": "AM_Drawer",
                    "line_number": 240
                  },
                  {
                    "name": "if",
                    "line_number": 241
                  },
                  {
                    "name": "if",
                    "line_number": 243
                  },
                  {
                    "name": "ST_Drawer",
                    "line_number": 245
                  },
                  {
                    "name": "WI_Drawer",
                    "line_number": 250
                  },
                  {
                    "name": "F_Drawer",
                    "line_number": 254
                  },
                  {
                    "name": "D_PageDrawer",
                    "line_number": 258
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 237
                  },
                  {
                    "type": "if",
                    "line_number": 239
                  },
                  {
                    "type": "if",
                    "line_number": 241
                  },
                  {
                    "type": "if",
                    "line_number": 243
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "gamestate"
                ],
                "outputs": [
                  "do buffered drawing"
                ],
                "dependencies": [
                  "ST_Drawer",
                  "if",
                  "F_Drawer",
                  "D_PageDrawer",
                  "WI_Drawer",
                  "AM_Drawer"
                ]
              },
              {
                "name": "if",
                "return_type": "see if the border needs to be initially drawn",
                "parameters": [
                  {
                    "type": "gamestate == GS_LEVEL && oldgamestate !=",
                    "name": "GS_LEVEL"
                  }
                ],
                "start_line": 277,
                "end_line": 281,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "R_FillBackScreen",
                    "line_number": 280
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "GS_LEVEL"
                ],
                "outputs": [
                  "see if the border needs to be initially drawn"
                ],
                "dependencies": [
                  "R_FillBackScreen"
                ]
              },
              {
                "name": "if",
                "return_type": "see if the border needs to be updated to the screen",
                "parameters": [
                  {
                    "type": "gamestate == GS_LEVEL && !automapactive && scaledviewwidth !=",
                    "name": "320"
                  }
                ],
                "start_line": 284,
                "end_line": 294,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 286
                  },
                  {
                    "name": "if",
                    "line_number": 288
                  },
                  {
                    "name": "R_DrawViewBorder",
                    "line_number": 290
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 286
                  },
                  {
                    "type": "if",
                    "line_number": 288
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "320"
                ],
                "outputs": [
                  "see if the border needs to be updated to the screen"
                ],
                "dependencies": [
                  "R_DrawViewBorder",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "draw pause pic",
                "parameters": [
                  {
                    "type": "",
                    "name": "paused"
                  }
                ],
                "start_line": 302,
                "end_line": 310,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 304
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 308
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 309
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 304
                  },
                  {
                    "type": "else",
                    "line_number": 306
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "paused"
                ],
                "outputs": [
                  "draw pause pic"
                ],
                "dependencies": [
                  "W_CacheLumpName",
                  "V_DrawPatchDirect",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "normal update",
                "parameters": [
                  {
                    "type": "",
                    "name": "!wipe"
                  }
                ],
                "start_line": 319,
                "end_line": 323,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "I_FinishUpdate",
                    "line_number": 321
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "!wipe"
                ],
                "outputs": [
                  "normal update"
                ],
                "dependencies": [
                  "I_FinishUpdate"
                ]
              },
              {
                "name": "D_DoomLoop",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 354,
                "end_line": 407,
                "local_variables": [
                  {
                    "type": "char",
                    "name": "filename",
                    "array_size": "20",
                    "line_number": 361
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 356
                  },
                  {
                    "name": "G_BeginRecording",
                    "line_number": 357
                  },
                  {
                    "name": "if",
                    "line_number": 359
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 359
                  },
                  {
                    "name": "sprintf",
                    "line_number": 362
                  },
                  {
                    "name": "printf",
                    "line_number": 363
                  },
                  {
                    "name": "fopen",
                    "line_number": 364
                  },
                  {
                    "name": "I_InitGraphics",
                    "line_number": 367
                  },
                  {
                    "name": "while",
                    "line_number": 369
                  },
                  {
                    "name": "I_StartFrame",
                    "line_number": 372
                  },
                  {
                    "name": "if",
                    "line_number": 375
                  },
                  {
                    "name": "I_StartTic",
                    "line_number": 377
                  },
                  {
                    "name": "D_ProcessEvents",
                    "line_number": 378
                  },
                  {
                    "name": "G_BuildTiccmd",
                    "line_number": 379
                  },
                  {
                    "name": "if",
                    "line_number": 380
                  },
                  {
                    "name": "D_DoAdvanceDemo",
                    "line_number": 381
                  },
                  {
                    "name": "M_Ticker",
                    "line_number": 382
                  },
                  {
                    "name": "G_Ticker",
                    "line_number": 383
                  },
                  {
                    "name": "TryRunTics",
                    "line_number": 389
                  },
                  {
                    "name": "S_UpdateSounds",
                    "line_number": 392
                  },
                  {
                    "name": "D_Display",
                    "line_number": 395
                  },
                  {
                    "name": "I_UpdateSound",
                    "line_number": 399
                  },
                  {
                    "name": "I_SubmitSound",
                    "line_number": 404
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 356
                  },
                  {
                    "type": "if",
                    "line_number": 359
                  },
                  {
                    "type": "while",
                    "line_number": 369
                  },
                  {
                    "type": "if",
                    "line_number": 375
                  },
                  {
                    "type": "if",
                    "line_number": 380
                  },
                  {
                    "type": "else",
                    "line_number": 387
                  },
                  {
                    "type": "for",
                    "line_number": 398
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "TryRunTics",
                  "S_UpdateSounds",
                  "M_CheckParm",
                  "fopen",
                  "I_InitGraphics",
                  "G_Ticker",
                  "I_UpdateSound",
                  "I_StartTic",
                  "while",
                  "I_SubmitSound",
                  "D_DoAdvanceDemo",
                  "G_BeginRecording",
                  "printf",
                  "D_ProcessEvents",
                  "if",
                  "G_BuildTiccmd",
                  "M_Ticker",
                  "I_StartFrame",
                  "D_Display",
                  "sprintf"
                ]
              },
              {
                "name": "if",
                "return_type": "process one or more tics",
                "parameters": [
                  {
                    "type": "",
                    "name": "singletics"
                  }
                ],
                "start_line": 374,
                "end_line": 385,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "I_StartTic",
                    "line_number": 376
                  },
                  {
                    "name": "D_ProcessEvents",
                    "line_number": 377
                  },
                  {
                    "name": "G_BuildTiccmd",
                    "line_number": 378
                  },
                  {
                    "name": "if",
                    "line_number": 379
                  },
                  {
                    "name": "D_DoAdvanceDemo",
                    "line_number": 380
                  },
                  {
                    "name": "M_Ticker",
                    "line_number": 381
                  },
                  {
                    "name": "G_Ticker",
                    "line_number": 382
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 379
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "singletics"
                ],
                "outputs": [
                  "process one or more tics"
                ],
                "dependencies": [
                  "if",
                  "G_BuildTiccmd",
                  "M_Ticker",
                  "D_DoAdvanceDemo",
                  "G_Ticker",
                  "I_StartTic",
                  "D_ProcessEvents"
                ]
              },
              {
                "name": "D_PageTicker",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 423,
                "end_line": 427,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 425
                  },
                  {
                    "name": "D_AdvanceDemo",
                    "line_number": 426
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 425
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "D_AdvanceDemo",
                  "if"
                ]
              },
              {
                "name": "D_PageDrawer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 434,
                "end_line": 437,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "V_DrawPatch",
                    "line_number": 436
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 436
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "V_DrawPatch"
                ]
              },
              {
                "name": "D_AdvanceDemo",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 444,
                "end_line": 447,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "D_DoAdvanceDemo",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 454,
                "end_line": 518,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 462
                  },
                  {
                    "name": "switch",
                    "line_number": 467
                  },
                  {
                    "name": "if",
                    "line_number": 470
                  },
                  {
                    "name": "if",
                    "line_number": 476
                  },
                  {
                    "name": "S_StartMusic",
                    "line_number": 477
                  },
                  {
                    "name": "S_StartMusic",
                    "line_number": 479
                  },
                  {
                    "name": "G_DeferedPlayDemo",
                    "line_number": 482
                  },
                  {
                    "name": "G_DeferedPlayDemo",
                    "line_number": 490
                  },
                  {
                    "name": "if",
                    "line_number": 494
                  },
                  {
                    "name": "S_StartMusic",
                    "line_number": 498
                  },
                  {
                    "name": "if",
                    "line_number": 504
                  },
                  {
                    "name": "G_DeferedPlayDemo",
                    "line_number": 511
                  },
                  {
                    "name": "G_DeferedPlayDemo",
                    "line_number": 515
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 462
                  },
                  {
                    "type": "else",
                    "line_number": 464
                  },
                  {
                    "type": "if",
                    "line_number": 470
                  },
                  {
                    "type": "else",
                    "line_number": 472
                  },
                  {
                    "type": "if",
                    "line_number": 476
                  },
                  {
                    "type": "else",
                    "line_number": 478
                  },
                  {
                    "type": "if",
                    "line_number": 494
                  },
                  {
                    "type": "else",
                    "line_number": 500
                  },
                  {
                    "type": "if",
                    "line_number": 504
                  },
                  {
                    "type": "else",
                    "line_number": 506
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "switch",
                  "G_DeferedPlayDemo",
                  "S_StartMusic",
                  "if"
                ]
              },
              {
                "name": "D_StartTitle",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 525,
                "end_line": 530,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "D_AdvanceDemo",
                    "line_number": 529
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "D_AdvanceDemo"
                ]
              },
              {
                "name": "D_AddFile",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char",
                    "name": "*file"
                  }
                ],
                "start_line": 543,
                "end_line": 555,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "numwadfiles",
                    "array_size": null,
                    "line_number": 545
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 548
                  },
                  {
                    "name": "malloc",
                    "line_number": 551
                  },
                  {
                    "name": "strlen",
                    "line_number": 551
                  },
                  {
                    "name": "strcpy",
                    "line_number": 552
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 548
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "*file"
                ],
                "outputs": [],
                "dependencies": [
                  "strlen",
                  "malloc",
                  "strcpy",
                  "for"
                ]
              },
              {
                "name": "IdentifyVersion",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 563,
                "end_line": 717,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "getenv",
                    "line_number": 578
                  },
                  {
                    "name": "if",
                    "line_number": 579
                  },
                  {
                    "name": "malloc",
                    "line_number": 583
                  },
                  {
                    "name": "strlen",
                    "line_number": 583
                  },
                  {
                    "name": "sprintf",
                    "line_number": 584
                  },
                  {
                    "name": "malloc",
                    "line_number": 587
                  },
                  {
                    "name": "strlen",
                    "line_number": 587
                  },
                  {
                    "name": "sprintf",
                    "line_number": 588
                  },
                  {
                    "name": "malloc",
                    "line_number": 591
                  },
                  {
                    "name": "strlen",
                    "line_number": 591
                  },
                  {
                    "name": "sprintf",
                    "line_number": 592
                  },
                  {
                    "name": "malloc",
                    "line_number": 595
                  },
                  {
                    "name": "strlen",
                    "line_number": 595
                  },
                  {
                    "name": "sprintf",
                    "line_number": 596
                  },
                  {
                    "name": "malloc",
                    "line_number": 600
                  },
                  {
                    "name": "strlen",
                    "line_number": 600
                  },
                  {
                    "name": "sprintf",
                    "line_number": 601
                  },
                  {
                    "name": "malloc",
                    "line_number": 603
                  },
                  {
                    "name": "strlen",
                    "line_number": 603
                  },
                  {
                    "name": "sprintf",
                    "line_number": 604
                  },
                  {
                    "name": "malloc",
                    "line_number": 608
                  },
                  {
                    "name": "strlen",
                    "line_number": 608
                  },
                  {
                    "name": "sprintf",
                    "line_number": 609
                  },
                  {
                    "name": "getenv",
                    "line_number": 611
                  },
                  {
                    "name": "if",
                    "line_number": 612
                  },
                  {
                    "name": "I_Error",
                    "line_number": 613
                  },
                  {
                    "name": "sprintf",
                    "line_number": 614
                  },
                  {
                    "name": "if",
                    "line_number": 617
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 617
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 621
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 622
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 623
                  },
                  {
                    "name": "strcpy",
                    "line_number": 624
                  },
                  {
                    "name": "if",
                    "line_number": 628
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 628
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 632
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 633
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 634
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 635
                  },
                  {
                    "name": "strcpy",
                    "line_number": 636
                  },
                  {
                    "name": "if",
                    "line_number": 640
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 640
                  },
                  {
                    "name": "if",
                    "line_number": 645
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 646
                  },
                  {
                    "name": "if",
                    "line_number": 647
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 648
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 650
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 652
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 653
                  },
                  {
                    "name": "strcpy",
                    "line_number": 654
                  },
                  {
                    "name": "if",
                    "line_number": 658
                  },
                  {
                    "name": "access",
                    "line_number": 658
                  },
                  {
                    "name": "printf",
                    "line_number": 664
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 665
                  },
                  {
                    "name": "if",
                    "line_number": 669
                  },
                  {
                    "name": "access",
                    "line_number": 669
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 672
                  },
                  {
                    "name": "if",
                    "line_number": 676
                  },
                  {
                    "name": "access",
                    "line_number": 676
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 679
                  },
                  {
                    "name": "if",
                    "line_number": 683
                  },
                  {
                    "name": "access",
                    "line_number": 683
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 686
                  },
                  {
                    "name": "if",
                    "line_number": 690
                  },
                  {
                    "name": "access",
                    "line_number": 690
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 693
                  },
                  {
                    "name": "if",
                    "line_number": 697
                  },
                  {
                    "name": "access",
                    "line_number": 697
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 700
                  },
                  {
                    "name": "if",
                    "line_number": 704
                  },
                  {
                    "name": "access",
                    "line_number": 704
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 707
                  },
                  {
                    "name": "printf",
                    "line_number": 711
                  },
                  {
                    "name": "exit",
                    "line_number": 715
                  },
                  {
                    "name": "I_Error",
                    "line_number": 716
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 579
                  },
                  {
                    "type": "if",
                    "line_number": 612
                  },
                  {
                    "type": "if",
                    "line_number": 617
                  },
                  {
                    "type": "if",
                    "line_number": 628
                  },
                  {
                    "type": "if",
                    "line_number": 640
                  },
                  {
                    "type": "if",
                    "line_number": 645
                  },
                  {
                    "type": "if",
                    "line_number": 647
                  },
                  {
                    "type": "else",
                    "line_number": 649
                  },
                  {
                    "type": "if",
                    "line_number": 658
                  },
                  {
                    "type": "if",
                    "line_number": 669
                  },
                  {
                    "type": "if",
                    "line_number": 676
                  },
                  {
                    "type": "if",
                    "line_number": 683
                  },
                  {
                    "type": "if",
                    "line_number": 690
                  },
                  {
                    "type": "if",
                    "line_number": 697
                  },
                  {
                    "type": "if",
                    "line_number": 704
                  }
                ],
                "complexity": 14,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "exit",
                  "strlen",
                  "if",
                  "strcpy",
                  "I_Error",
                  "M_CheckParm",
                  "D_AddFile",
                  "getenv",
                  "malloc",
                  "printf",
                  "sprintf",
                  "access"
                ]
              },
              {
                "name": "FindResponseFile",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 722,
                "end_line": 790,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 724
                  },
                  {
                    "type": "int",
                    "name": "size",
                    "array_size": null,
                    "line_number": 731
                  },
                  {
                    "type": "int",
                    "name": "k",
                    "array_size": null,
                    "line_number": 732
                  },
                  {
                    "type": "int",
                    "name": "index",
                    "array_size": null,
                    "line_number": 733
                  },
                  {
                    "type": "int",
                    "name": "indexinfile",
                    "array_size": null,
                    "line_number": 734
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 727
                  },
                  {
                    "name": "if",
                    "line_number": 728
                  },
                  {
                    "name": "fopen",
                    "line_number": 741
                  },
                  {
                    "name": "if",
                    "line_number": 742
                  },
                  {
                    "name": "printf",
                    "line_number": 744
                  },
                  {
                    "name": "exit",
                    "line_number": 745
                  },
                  {
                    "name": "printf",
                    "line_number": 747
                  },
                  {
                    "name": "fseek",
                    "line_number": 748
                  },
                  {
                    "name": "ftell",
                    "line_number": 749
                  },
                  {
                    "name": "fseek",
                    "line_number": 750
                  },
                  {
                    "name": "malloc",
                    "line_number": 751
                  },
                  {
                    "name": "fread",
                    "line_number": 752
                  },
                  {
                    "name": "fclose",
                    "line_number": 753
                  },
                  {
                    "name": "for",
                    "line_number": 756
                  },
                  {
                    "name": "malloc",
                    "line_number": 760
                  },
                  {
                    "name": "sizeof",
                    "line_number": 760
                  },
                  {
                    "name": "memset",
                    "line_number": 761
                  },
                  {
                    "name": "sizeof",
                    "line_number": 761
                  },
                  {
                    "name": "while",
                    "line_number": 770
                  },
                  {
                    "name": "while",
                    "line_number": 774
                  },
                  {
                    "name": "while",
                    "line_number": 777
                  },
                  {
                    "name": "for",
                    "line_number": 779
                  },
                  {
                    "name": "printf",
                    "line_number": 784
                  },
                  {
                    "name": "for",
                    "line_number": 785
                  },
                  {
                    "name": "printf",
                    "line_number": 786
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 727
                  },
                  {
                    "type": "if",
                    "line_number": 728
                  },
                  {
                    "type": "if",
                    "line_number": 742
                  },
                  {
                    "type": "for",
                    "line_number": 756
                  },
                  {
                    "type": "while",
                    "line_number": 770
                  },
                  {
                    "type": "while",
                    "line_number": 774
                  },
                  {
                    "type": "while",
                    "line_number": 777
                  },
                  {
                    "type": "for",
                    "line_number": 779
                  },
                  {
                    "type": "for",
                    "line_number": 785
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "exit",
                  "while",
                  "fseek",
                  "if",
                  "for",
                  "memset",
                  "fopen",
                  "sizeof",
                  "malloc",
                  "fread",
                  "fclose",
                  "printf",
                  "ftell"
                ]
              },
              {
                "name": "D_DoomMain",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 796,
                "end_line": 1171,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "p",
                    "array_size": null,
                    "line_number": 798
                  },
                  {
                    "type": "char",
                    "name": "file",
                    "array_size": "256",
                    "line_number": 799
                  },
                  {
                    "type": "extern int",
                    "name": "forwardmove",
                    "array_size": "2",
                    "line_number": 888
                  },
                  {
                    "type": "extern int",
                    "name": "sidemove",
                    "array_size": "2",
                    "line_number": 889
                  },
                  {
                    "type": "int",
                    "name": "time",
                    "array_size": null,
                    "line_number": 985
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1035
                  }
                ],
                "function_calls": [
                  {
                    "name": "FindResponseFile",
                    "line_number": 801
                  },
                  {
                    "name": "IdentifyVersion",
                    "line_number": 803
                  },
                  {
                    "name": "setbuf",
                    "line_number": 805
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 808
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 809
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 810
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 811
                  },
                  {
                    "name": "if",
                    "line_number": 812
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 812
                  },
                  {
                    "name": "if",
                    "line_number": 814
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 814
                  },
                  {
                    "name": "switch",
                    "line_number": 817
                  },
                  {
                    "name": "sprintf",
                    "line_number": 820
                  },
                  {
                    "name": "sprintf",
                    "line_number": 827
                  },
                  {
                    "name": "sprintf",
                    "line_number": 834
                  },
                  {
                    "name": "sprintf",
                    "line_number": 841
                  },
                  {
                    "name": "sprintf",
                    "line_number": 849
                  },
                  {
                    "name": "sprintf",
                    "line_number": 856
                  },
                  {
                    "name": "sprintf",
                    "line_number": 864
                  },
                  {
                    "name": "printf",
                    "line_number": 872
                  },
                  {
                    "name": "if",
                    "line_number": 874
                  },
                  {
                    "name": "printf",
                    "line_number": 875
                  },
                  {
                    "name": "if",
                    "line_number": 877
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 877
                  },
                  {
                    "name": "printf",
                    "line_number": 879
                  },
                  {
                    "name": "mkdir",
                    "line_number": 880
                  },
                  {
                    "name": "strcpy",
                    "line_number": 881
                  },
                  {
                    "name": "if",
                    "line_number": 885
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 885
                  },
                  {
                    "name": "if",
                    "line_number": 891
                  },
                  {
                    "name": "atoi",
                    "line_number": 892
                  },
                  {
                    "name": "if",
                    "line_number": 893
                  },
                  {
                    "name": "if",
                    "line_number": 895
                  },
                  {
                    "name": "printf",
                    "line_number": 897
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 909
                  },
                  {
                    "name": "if",
                    "line_number": 910
                  },
                  {
                    "name": "switch",
                    "line_number": 915
                  },
                  {
                    "name": "sprintf",
                    "line_number": 920
                  },
                  {
                    "name": "printf",
                    "line_number": 922
                  },
                  {
                    "name": "atoi",
                    "line_number": 928
                  },
                  {
                    "name": "if",
                    "line_number": 929
                  },
                  {
                    "name": "sprintf",
                    "line_number": 930
                  },
                  {
                    "name": "sprintf",
                    "line_number": 932
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 935
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 938
                  },
                  {
                    "name": "if",
                    "line_number": 939
                  },
                  {
                    "name": "while",
                    "line_number": 944
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 945
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 948
                  },
                  {
                    "name": "if",
                    "line_number": 950
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 951
                  },
                  {
                    "name": "if",
                    "line_number": 953
                  },
                  {
                    "name": "sprintf",
                    "line_number": 955
                  },
                  {
                    "name": "D_AddFile",
                    "line_number": 956
                  },
                  {
                    "name": "printf",
                    "line_number": 957
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 967
                  },
                  {
                    "name": "if",
                    "line_number": 968
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 974
                  },
                  {
                    "name": "if",
                    "line_number": 975
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 982
                  },
                  {
                    "name": "if",
                    "line_number": 983
                  },
                  {
                    "name": "atoi",
                    "line_number": 986
                  },
                  {
                    "name": "printf",
                    "line_number": 987
                  },
                  {
                    "name": "if",
                    "line_number": 988
                  },
                  {
                    "name": "printf",
                    "line_number": 989
                  },
                  {
                    "name": "printf",
                    "line_number": 990
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 993
                  },
                  {
                    "name": "if",
                    "line_number": 994
                  },
                  {
                    "name": "printf",
                    "line_number": 995
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 997
                  },
                  {
                    "name": "if",
                    "line_number": 998
                  },
                  {
                    "name": "if",
                    "line_number": 1000
                  },
                  {
                    "name": "atoi",
                    "line_number": 1001
                  },
                  {
                    "name": "printf",
                    "line_number": 1011
                  },
                  {
                    "name": "V_Init",
                    "line_number": 1012
                  },
                  {
                    "name": "printf",
                    "line_number": 1014
                  },
                  {
                    "name": "M_LoadDefaults",
                    "line_number": 1015
                  },
                  {
                    "name": "printf",
                    "line_number": 1017
                  },
                  {
                    "name": "Z_Init",
                    "line_number": 1018
                  },
                  {
                    "name": "printf",
                    "line_number": 1020
                  },
                  {
                    "name": "W_InitMultipleFiles",
                    "line_number": 1021
                  },
                  {
                    "name": "if",
                    "line_number": 1025
                  },
                  {
                    "name": "if",
                    "line_number": 1037
                  },
                  {
                    "name": "I_Error",
                    "line_number": 1038
                  },
                  {
                    "name": "if",
                    "line_number": 1043
                  },
                  {
                    "name": "for",
                    "line_number": 1044
                  },
                  {
                    "name": "if",
                    "line_number": 1045
                  },
                  {
                    "name": "W_CheckNumForName",
                    "line_number": 1045
                  },
                  {
                    "name": "I_Error",
                    "line_number": 1046
                  },
                  {
                    "name": "if",
                    "line_number": 1050
                  },
                  {
                    "name": "printf",
                    "line_number": 1052
                  },
                  {
                    "name": "getchar",
                    "line_number": 1060
                  },
                  {
                    "name": "switch",
                    "line_number": 1065
                  },
                  {
                    "name": "printf",
                    "line_number": 1069
                  },
                  {
                    "name": "printf",
                    "line_number": 1078
                  },
                  {
                    "name": "printf",
                    "line_number": 1091
                  },
                  {
                    "name": "M_Init",
                    "line_number": 1092
                  },
                  {
                    "name": "printf",
                    "line_number": 1094
                  },
                  {
                    "name": "R_Init",
                    "line_number": 1095
                  },
                  {
                    "name": "printf",
                    "line_number": 1097
                  },
                  {
                    "name": "P_Init",
                    "line_number": 1098
                  },
                  {
                    "name": "printf",
                    "line_number": 1100
                  },
                  {
                    "name": "I_Init",
                    "line_number": 1101
                  },
                  {
                    "name": "printf",
                    "line_number": 1103
                  },
                  {
                    "name": "D_CheckNetGame",
                    "line_number": 1104
                  },
                  {
                    "name": "printf",
                    "line_number": 1106
                  },
                  {
                    "name": "S_Init",
                    "line_number": 1107
                  },
                  {
                    "name": "printf",
                    "line_number": 1109
                  },
                  {
                    "name": "HU_Init",
                    "line_number": 1110
                  },
                  {
                    "name": "printf",
                    "line_number": 1112
                  },
                  {
                    "name": "ST_Init",
                    "line_number": 1113
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 1116
                  },
                  {
                    "name": "if",
                    "line_number": 1117
                  },
                  {
                    "name": "atoi",
                    "line_number": 1122
                  },
                  {
                    "name": "printf",
                    "line_number": 1123
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 1127
                  },
                  {
                    "name": "if",
                    "line_number": 1129
                  },
                  {
                    "name": "G_RecordDemo",
                    "line_number": 1131
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 1135
                  },
                  {
                    "name": "if",
                    "line_number": 1136
                  },
                  {
                    "name": "G_DeferedPlayDemo",
                    "line_number": 1139
                  },
                  {
                    "name": "D_DoomLoop",
                    "line_number": 1140
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 1143
                  },
                  {
                    "name": "if",
                    "line_number": 1144
                  },
                  {
                    "name": "G_TimeDemo",
                    "line_number": 1146
                  },
                  {
                    "name": "D_DoomLoop",
                    "line_number": 1147
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 1150
                  },
                  {
                    "name": "if",
                    "line_number": 1151
                  },
                  {
                    "name": "if",
                    "line_number": 1153
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 1153
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1154
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1156
                  },
                  {
                    "name": "G_LoadGame",
                    "line_number": 1157
                  },
                  {
                    "name": "if",
                    "line_number": 1161
                  },
                  {
                    "name": "if",
                    "line_number": 1163
                  },
                  {
                    "name": "G_InitNew",
                    "line_number": 1164
                  },
                  {
                    "name": "D_StartTitle",
                    "line_number": 1166
                  },
                  {
                    "name": "D_DoomLoop",
                    "line_number": 1170
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 812
                  },
                  {
                    "type": "if",
                    "line_number": 814
                  },
                  {
                    "type": "if",
                    "line_number": 874
                  },
                  {
                    "type": "if",
                    "line_number": 877
                  },
                  {
                    "type": "if",
                    "line_number": 885
                  },
                  {
                    "type": "if",
                    "line_number": 891
                  },
                  {
                    "type": "if",
                    "line_number": 893
                  },
                  {
                    "type": "if",
                    "line_number": 895
                  },
                  {
                    "type": "if",
                    "line_number": 910
                  },
                  {
                    "type": "if",
                    "line_number": 929
                  },
                  {
                    "type": "else",
                    "line_number": 931
                  },
                  {
                    "type": "if",
                    "line_number": 939
                  },
                  {
                    "type": "while",
                    "line_number": 944
                  },
                  {
                    "type": "if",
                    "line_number": 950
                  },
                  {
                    "type": "if",
                    "line_number": 953
                  },
                  {
                    "type": "if",
                    "line_number": 968
                  },
                  {
                    "type": "if",
                    "line_number": 975
                  },
                  {
                    "type": "if",
                    "line_number": 983
                  },
                  {
                    "type": "if",
                    "line_number": 988
                  },
                  {
                    "type": "if",
                    "line_number": 994
                  },
                  {
                    "type": "if",
                    "line_number": 998
                  },
                  {
                    "type": "if",
                    "line_number": 1000
                  },
                  {
                    "type": "else",
                    "line_number": 1002
                  },
                  {
                    "type": "for",
                    "line_number": 1024
                  },
                  {
                    "type": "if",
                    "line_number": 1025
                  },
                  {
                    "type": "if",
                    "line_number": 1028
                  },
                  {
                    "type": "if",
                    "line_number": 1037
                  },
                  {
                    "type": "for",
                    "line_number": 1041
                  },
                  {
                    "type": "if",
                    "line_number": 1043
                  },
                  {
                    "type": "for",
                    "line_number": 1044
                  },
                  {
                    "type": "if",
                    "line_number": 1045
                  },
                  {
                    "type": "if",
                    "line_number": 1050
                  },
                  {
                    "type": "for",
                    "line_number": 1056
                  },
                  {
                    "type": "for",
                    "line_number": 1115
                  },
                  {
                    "type": "if",
                    "line_number": 1117
                  },
                  {
                    "type": "for",
                    "line_number": 1119
                  },
                  {
                    "type": "if",
                    "line_number": 1129
                  },
                  {
                    "type": "if",
                    "line_number": 1136
                  },
                  {
                    "type": "if",
                    "line_number": 1144
                  },
                  {
                    "type": "if",
                    "line_number": 1151
                  },
                  {
                    "type": "if",
                    "line_number": 1153
                  },
                  {
                    "type": "else",
                    "line_number": 1155
                  },
                  {
                    "type": "if",
                    "line_number": 1161
                  },
                  {
                    "type": "if",
                    "line_number": 1163
                  },
                  {
                    "type": "else",
                    "line_number": 1165
                  }
                ],
                "complexity": 37,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "I_Init",
                  "strcpy",
                  "M_CheckParm",
                  "I_Error",
                  "G_RecordDemo",
                  "M_Init",
                  "G_InitNew",
                  "D_DoomLoop",
                  "Z_Init",
                  "mkdir",
                  "for",
                  "FindResponseFile",
                  "D_AddFile",
                  "V_Init",
                  "W_CheckNumForName",
                  "ST_Init",
                  "P_Init",
                  "M_LoadDefaults",
                  "D_CheckNetGame",
                  "switch",
                  "W_InitMultipleFiles",
                  "while",
                  "HU_Init",
                  "G_TimeDemo",
                  "getchar",
                  "G_LoadGame",
                  "setbuf",
                  "printf",
                  "S_Init",
                  "IdentifyVersion",
                  "D_StartTitle",
                  "G_DeferedPlayDemo",
                  "if",
                  "R_Init",
                  "atoi",
                  "sprintf"
                ]
              },
              {
                "name": "if",
                "return_type": "file in shareware",
                "parameters": [
                  {
                    "type": "",
                    "name": "modifiedgame"
                  }
                ],
                "start_line": 1024,
                "end_line": 1046,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1034
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1036
                  },
                  {
                    "name": "I_Error",
                    "line_number": 1037
                  },
                  {
                    "name": "if",
                    "line_number": 1042
                  },
                  {
                    "name": "for",
                    "line_number": 1043
                  },
                  {
                    "name": "if",
                    "line_number": 1044
                  },
                  {
                    "name": "W_CheckNumForName",
                    "line_number": 1044
                  },
                  {
                    "name": "I_Error",
                    "line_number": 1045
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1027
                  },
                  {
                    "type": "if",
                    "line_number": 1036
                  },
                  {
                    "type": "for",
                    "line_number": 1040
                  },
                  {
                    "type": "if",
                    "line_number": 1042
                  },
                  {
                    "type": "for",
                    "line_number": 1043
                  },
                  {
                    "type": "if",
                    "line_number": 1044
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "modifiedgame"
                ],
                "outputs": [
                  "file in shareware"
                ],
                "dependencies": [
                  "for",
                  "I_Error",
                  "W_CheckNumForName",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "print modified banner",
                "parameters": [
                  {
                    "type": "",
                    "name": "modifiedgame"
                  }
                ],
                "start_line": 1049,
                "end_line": 1060,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "printf",
                    "line_number": 1051
                  },
                  {
                    "name": "getchar",
                    "line_number": 1059
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1055
                  }
                ],
                "complexity": 1,
                "inputs": [
                  "modifiedgame"
                ],
                "outputs": [
                  "print modified banner"
                ],
                "dependencies": [
                  "getchar",
                  "printf"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "devparm",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 95
              },
              {
                "name": "nomonsters",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 96
              },
              {
                "name": "respawnparm",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 97
              },
              {
                "name": "fastparm",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 98
              },
              {
                "name": "drone",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 100
              },
              {
                "name": "soundVolume",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 106
              },
              {
                "name": "sfxVolume",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 107
              },
              {
                "name": "musicVolume",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 108
              },
              {
                "name": "inhelpscreens",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 110
              },
              {
                "name": "startskill",
                "type": "skill_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 112
              },
              {
                "name": "startepisode",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 113
              },
              {
                "name": "startmap",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 114
              },
              {
                "name": "autostart",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 115
              },
              {
                "name": "advancedemo",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 119
              },
              {
                "name": "wadfile",
                "type": "char",
                "storage_class": null,
                "array_size": "1024",
                "line_number": 124
              },
              {
                "name": "mapdir",
                "type": "char",
                "storage_class": null,
                "array_size": "1024",
                "line_number": 125
              },
              {
                "name": "basedefault",
                "type": "char",
                "storage_class": null,
                "array_size": "1024",
                "line_number": 126
              },
              {
                "name": "eventhead",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 142
              },
              {
                "name": "eventtail",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 143
              },
              {
                "name": "setsizeneeded",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 189
              },
              {
                "name": "showMessages",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 190
              },
              {
                "name": "borderdrawcount",
                "type": "static  int",
                "storage_class": null,
                "array_size": null,
                "line_number": 200
              },
              {
                "name": "nowtime",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 201
              },
              {
                "name": "tics",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 202
              },
              {
                "name": "wipestart",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 203
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 204
              },
              {
                "name": "done",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 205
              },
              {
                "name": "wipe",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 206
              },
              {
                "name": "redrawsbar",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 207
              },
              {
                "name": "demorecording",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 352
              },
              {
                "name": "filename",
                "type": "char",
                "storage_class": null,
                "array_size": "20",
                "line_number": 361
              },
              {
                "name": "demosequence",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 414
              },
              {
                "name": "pagetic",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 415
              },
              {
                "name": "title",
                "type": "char",
                "storage_class": null,
                "array_size": "128",
                "line_number": 536
              },
              {
                "name": "numwadfiles",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 545
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 724
              },
              {
                "name": "size",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 731
              },
              {
                "name": "k",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 732
              },
              {
                "name": "index",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 733
              },
              {
                "name": "indexinfile",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 734
              },
              {
                "name": "p",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 798
              },
              {
                "name": "file",
                "type": "char",
                "storage_class": null,
                "array_size": "256",
                "line_number": 799
              },
              {
                "name": "forwardmove",
                "type": "extern int",
                "storage_class": null,
                "array_size": "2",
                "line_number": 888
              },
              {
                "name": "sidemove",
                "type": "extern int",
                "storage_class": null,
                "array_size": "2",
                "line_number": 889
              },
              {
                "name": "time",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 985
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1035
              }
            ],
            "defines": [
              {
                "name": "BGCOLOR",
                "value": "7",
                "line_number": 30
              },
              {
                "name": "FGCOLOR",
                "value": "8",
                "line_number": 31
              },
              {
                "name": "MAXARGVS",
                "value": "100",
                "line_number": 725
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/d_main.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of functions",
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "d_main.h",
          "type": "file",
          "size": 1400,
          "last_modified": "2024-09-05T16:00:02.870632",
          "path": "linuxdoom-1.10/d_main.h",
          "readme": "# d_main.h\n\nThis file contains functionality related to d_main.",
          "dependencies": [
            "d_event.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": [
              {
                "name": "MAXWADFILES",
                "value": "20",
                "line_number": 36
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/d_main.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "d_net.c",
          "type": "file",
          "size": 16308,
          "last_modified": "2024-09-05T16:00:02.895632",
          "path": "linuxdoom-1.10/d_net.c",
          "readme": "# d_net.c\n\nThis file contains functionality related to d_net.",
          "dependencies": [
            "i_net.h",
            "i_video.h",
            "doomstat.h",
            "i_system.h",
            "g_game.h",
            "m_menu.h",
            "doomdef.h"
          ],
          "inputs": [
            "low",
            "flags",
            "counts--",
            "NCMD_EXIT",
            "counts",
            "ticdup-1",
            "nettics[netnode]",
            "void",
            "node"
          ],
          "outputs": [
            "wait for new tics if needed",
            "check for exiting the game",
            "int",
            "unsigned",
            "ticdup dics",
            "boolean",
            "modify command for duplicated tics",
            "check for a missed packet"
          ],
          "content": {
            "functions": [
              {
                "name": "NetbufferSize",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 90,
                "end_line": 93,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "return",
                    "line_number": 92
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "return"
                ]
              },
              {
                "name": "NetbufferChecksum",
                "return_type": "unsigned",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 98,
                "end_line": 115,
                "local_variables": [
                  {
                    "type": "unsigned",
                    "name": "c",
                    "array_size": null,
                    "line_number": 100
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 107
                  }
                ],
                "function_calls": [
                  {
                    "name": "NetbufferSize",
                    "line_number": 110
                  },
                  {
                    "name": "for",
                    "line_number": 111
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 111
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "unsigned"
                ],
                "dependencies": [
                  "NetbufferSize",
                  "for"
                ]
              },
              {
                "name": "ExpandTics",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "low"
                  }
                ],
                "start_line": 120,
                "end_line": 135,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "delta",
                    "array_size": null,
                    "line_number": 122
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 134
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 126
                  },
                  {
                    "name": "return",
                    "line_number": 127
                  },
                  {
                    "name": "if",
                    "line_number": 128
                  },
                  {
                    "name": "return",
                    "line_number": 129
                  },
                  {
                    "name": "if",
                    "line_number": 130
                  },
                  {
                    "name": "return",
                    "line_number": 131
                  },
                  {
                    "name": "I_Error",
                    "line_number": 133
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 126
                  },
                  {
                    "type": "if",
                    "line_number": 128
                  },
                  {
                    "type": "if",
                    "line_number": 130
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "low"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "return",
                  "I_Error",
                  "if"
                ]
              },
              {
                "name": "HSendPacket",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "node"
                  },
                  {
                    "type": "int",
                    "name": "flags"
                  }
                ],
                "start_line": 142,
                "end_line": 183,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 165
                  },
                  {
                    "type": "int",
                    "name": "realretrans",
                    "array_size": null,
                    "line_number": 166
                  }
                ],
                "function_calls": [
                  {
                    "name": "NetbufferChecksum",
                    "line_number": 144
                  },
                  {
                    "name": "if",
                    "line_number": 146
                  },
                  {
                    "name": "if",
                    "line_number": 153
                  },
                  {
                    "name": "if",
                    "line_number": 156
                  },
                  {
                    "name": "I_Error",
                    "line_number": 157
                  },
                  {
                    "name": "NetbufferSize",
                    "line_number": 161
                  },
                  {
                    "name": "if",
                    "line_number": 163
                  },
                  {
                    "name": "if",
                    "line_number": 167
                  },
                  {
                    "name": "ExpandTics",
                    "line_number": 168
                  },
                  {
                    "name": "fprintf",
                    "line_number": 172
                  },
                  {
                    "name": "send",
                    "line_number": 172
                  },
                  {
                    "name": "ExpandTics",
                    "line_number": 173
                  },
                  {
                    "name": "for",
                    "line_number": 176
                  },
                  {
                    "name": "fprintf",
                    "line_number": 177
                  },
                  {
                    "name": "fprintf",
                    "line_number": 179
                  },
                  {
                    "name": "I_NetCmd",
                    "line_number": 182
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 146
                  },
                  {
                    "type": "if",
                    "line_number": 153
                  },
                  {
                    "type": "if",
                    "line_number": 156
                  },
                  {
                    "type": "if",
                    "line_number": 163
                  },
                  {
                    "type": "if",
                    "line_number": 167
                  },
                  {
                    "type": "else",
                    "line_number": 169
                  },
                  {
                    "type": "for",
                    "line_number": 176
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "node",
                  "flags"
                ],
                "outputs": [],
                "dependencies": [
                  "NetbufferChecksum",
                  "NetbufferSize",
                  "fprintf",
                  "ExpandTics",
                  "if",
                  "for",
                  "I_NetCmd",
                  "I_Error",
                  "send"
                ]
              },
              {
                "name": "HGetPacket",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 192,
                "end_line": 253,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 199
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 203
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 206
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 212
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 218
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 225
                  },
                  {
                    "type": "int",
                    "name": "realretrans",
                    "array_size": null,
                    "line_number": 230
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 231
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 252
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 194
                  },
                  {
                    "name": "if",
                    "line_number": 202
                  },
                  {
                    "name": "if",
                    "line_number": 205
                  },
                  {
                    "name": "I_NetCmd",
                    "line_number": 209
                  },
                  {
                    "name": "if",
                    "line_number": 211
                  },
                  {
                    "name": "if",
                    "line_number": 214
                  },
                  {
                    "name": "NetbufferSize",
                    "line_number": 214
                  },
                  {
                    "name": "if",
                    "line_number": 216
                  },
                  {
                    "name": "fprintf",
                    "line_number": 217
                  },
                  {
                    "name": "if",
                    "line_number": 221
                  },
                  {
                    "name": "NetbufferChecksum",
                    "line_number": 221
                  },
                  {
                    "name": "if",
                    "line_number": 223
                  },
                  {
                    "name": "fprintf",
                    "line_number": 224
                  },
                  {
                    "name": "if",
                    "line_number": 228
                  },
                  {
                    "name": "if",
                    "line_number": 233
                  },
                  {
                    "name": "fprintf",
                    "line_number": 234
                  },
                  {
                    "name": "if",
                    "line_number": 237
                  },
                  {
                    "name": "ExpandTics",
                    "line_number": 238
                  },
                  {
                    "name": "fprintf",
                    "line_number": 242
                  },
                  {
                    "name": "ExpandTics",
                    "line_number": 244
                  },
                  {
                    "name": "for",
                    "line_number": 247
                  },
                  {
                    "name": "fprintf",
                    "line_number": 248
                  },
                  {
                    "name": "fprintf",
                    "line_number": 249
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 194
                  },
                  {
                    "type": "if",
                    "line_number": 202
                  },
                  {
                    "type": "if",
                    "line_number": 205
                  },
                  {
                    "type": "if",
                    "line_number": 211
                  },
                  {
                    "type": "if",
                    "line_number": 214
                  },
                  {
                    "type": "if",
                    "line_number": 216
                  },
                  {
                    "type": "if",
                    "line_number": 221
                  },
                  {
                    "type": "if",
                    "line_number": 223
                  },
                  {
                    "type": "if",
                    "line_number": 228
                  },
                  {
                    "type": "if",
                    "line_number": 233
                  },
                  {
                    "type": "else",
                    "line_number": 235
                  },
                  {
                    "type": "if",
                    "line_number": 237
                  },
                  {
                    "type": "else",
                    "line_number": 239
                  },
                  {
                    "type": "for",
                    "line_number": 247
                  }
                ],
                "complexity": 13,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "NetbufferSize",
                  "fprintf",
                  "NetbufferChecksum",
                  "if",
                  "ExpandTics",
                  "I_NetCmd",
                  "for"
                ]
              },
              {
                "name": "GetPackets",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 261,
                "end_line": 358,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "netconsole",
                    "array_size": null,
                    "line_number": 263
                  },
                  {
                    "type": "int",
                    "name": "netnode",
                    "array_size": null,
                    "line_number": 264
                  },
                  {
                    "type": "int",
                    "name": "realend",
                    "array_size": null,
                    "line_number": 266
                  },
                  {
                    "type": "int",
                    "name": "realstart",
                    "array_size": null,
                    "line_number": 267
                  },
                  {
                    "type": "int",
                    "name": "start",
                    "array_size": null,
                    "line_number": 342
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 269
                  },
                  {
                    "name": "HGetPacket",
                    "line_number": 269
                  },
                  {
                    "name": "if",
                    "line_number": 271
                  },
                  {
                    "name": "ExpandTics",
                    "line_number": 279
                  },
                  {
                    "name": "if",
                    "line_number": 283
                  },
                  {
                    "name": "if",
                    "line_number": 285
                  },
                  {
                    "name": "strcpy",
                    "line_number": 289
                  },
                  {
                    "name": "if",
                    "line_number": 292
                  },
                  {
                    "name": "G_CheckDemoStatus",
                    "line_number": 293
                  },
                  {
                    "name": "if",
                    "line_number": 298
                  },
                  {
                    "name": "I_Error",
                    "line_number": 299
                  },
                  {
                    "name": "if",
                    "line_number": 304
                  },
                  {
                    "name": "ExpandTics",
                    "line_number": 307
                  },
                  {
                    "name": "if",
                    "line_number": 308
                  },
                  {
                    "name": "fprintf",
                    "line_number": 309
                  },
                  {
                    "name": "if",
                    "line_number": 316
                  },
                  {
                    "name": "if",
                    "line_number": 319
                  },
                  {
                    "name": "if",
                    "line_number": 321
                  },
                  {
                    "name": "fprintf",
                    "line_number": 322
                  },
                  {
                    "name": "packet",
                    "line_number": 323
                  },
                  {
                    "name": "if",
                    "line_number": 329
                  },
                  {
                    "name": "if",
                    "line_number": 332
                  },
                  {
                    "name": "fprintf",
                    "line_number": 333
                  },
                  {
                    "name": "i",
                    "line_number": 334
                  },
                  {
                    "name": "while",
                    "line_number": 349
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 269
                  },
                  {
                    "type": "if",
                    "line_number": 271
                  },
                  {
                    "type": "for",
                    "line_number": 282
                  },
                  {
                    "type": "if",
                    "line_number": 283
                  },
                  {
                    "type": "if",
                    "line_number": 285
                  },
                  {
                    "type": "if",
                    "line_number": 292
                  },
                  {
                    "type": "for",
                    "line_number": 297
                  },
                  {
                    "type": "if",
                    "line_number": 298
                  },
                  {
                    "type": "for",
                    "line_number": 303
                  },
                  {
                    "type": "if",
                    "line_number": 304
                  },
                  {
                    "type": "if",
                    "line_number": 308
                  },
                  {
                    "type": "else",
                    "line_number": 312
                  },
                  {
                    "type": "for",
                    "line_number": 315
                  },
                  {
                    "type": "if",
                    "line_number": 316
                  },
                  {
                    "type": "if",
                    "line_number": 319
                  },
                  {
                    "type": "if",
                    "line_number": 321
                  },
                  {
                    "type": "for",
                    "line_number": 328
                  },
                  {
                    "type": "if",
                    "line_number": 329
                  },
                  {
                    "type": "if",
                    "line_number": 332
                  },
                  {
                    "type": "while",
                    "line_number": 349
                  }
                ],
                "complexity": 16,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "HGetPacket",
                  "while",
                  "fprintf",
                  "i",
                  "strcpy",
                  "ExpandTics",
                  "if",
                  "G_CheckDemoStatus",
                  "I_Error",
                  "packet"
                ]
              },
              {
                "name": "if",
                "return_type": "check for exiting the game",
                "parameters": [
                  {
                    "type": "netbuffer->checksum &",
                    "name": "NCMD_EXIT"
                  }
                ],
                "start_line": 282,
                "end_line": 294,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 284
                  },
                  {
                    "name": "strcpy",
                    "line_number": 288
                  },
                  {
                    "name": "if",
                    "line_number": 291
                  },
                  {
                    "name": "G_CheckDemoStatus",
                    "line_number": 292
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 284
                  },
                  {
                    "type": "if",
                    "line_number": 291
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "NCMD_EXIT"
                ],
                "outputs": [
                  "check for exiting the game"
                ],
                "dependencies": [
                  "strcpy",
                  "G_CheckDemoStatus",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "check for a missed packet",
                "parameters": [
                  {
                    "type": "realstart >",
                    "name": "nettics[netnode]"
                  }
                ],
                "start_line": 328,
                "end_line": 337,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 331
                  },
                  {
                    "name": "fprintf",
                    "line_number": 332
                  },
                  {
                    "name": "i",
                    "line_number": 333
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 331
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "nettics[netnode]"
                ],
                "outputs": [
                  "check for a missed packet"
                ],
                "dependencies": [
                  "fprintf",
                  "i",
                  "if"
                ]
              },
              {
                "name": "NetUpdate",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 368,
                "end_line": 446,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "nowtime",
                    "array_size": null,
                    "line_number": 370
                  },
                  {
                    "type": "int",
                    "name": "newtics",
                    "array_size": null,
                    "line_number": 371
                  },
                  {
                    "type": "int",
                    "name": "realstart",
                    "array_size": null,
                    "line_number": 373
                  },
                  {
                    "type": "int",
                    "name": "gameticdiv",
                    "array_size": null,
                    "line_number": 374
                  },
                  {
                    "type": "goto",
                    "name": "listen",
                    "array_size": null,
                    "line_number": 382
                  }
                ],
                "function_calls": [
                  {
                    "name": "I_GetTime",
                    "line_number": 377
                  },
                  {
                    "name": "if",
                    "line_number": 381
                  },
                  {
                    "name": "if",
                    "line_number": 384
                  },
                  {
                    "name": "for",
                    "line_number": 400
                  },
                  {
                    "name": "I_StartTic",
                    "line_number": 402
                  },
                  {
                    "name": "D_ProcessEvents",
                    "line_number": 403
                  },
                  {
                    "name": "if",
                    "line_number": 404
                  },
                  {
                    "name": "printf",
                    "line_number": 407
                  },
                  {
                    "name": "G_BuildTiccmd",
                    "line_number": 408
                  },
                  {
                    "name": "if",
                    "line_number": 413
                  },
                  {
                    "name": "for",
                    "line_number": 417
                  },
                  {
                    "name": "if",
                    "line_number": 418
                  },
                  {
                    "name": "if",
                    "line_number": 422
                  },
                  {
                    "name": "I_Error",
                    "line_number": 423
                  },
                  {
                    "name": "for",
                    "line_number": 427
                  },
                  {
                    "name": "if",
                    "line_number": 431
                  },
                  {
                    "name": "HSendPacket",
                    "line_number": 434
                  },
                  {
                    "name": "HSendPacket",
                    "line_number": 439
                  },
                  {
                    "name": "GetPackets",
                    "line_number": 445
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 381
                  },
                  {
                    "type": "if",
                    "line_number": 384
                  },
                  {
                    "type": "else",
                    "line_number": 389
                  },
                  {
                    "type": "for",
                    "line_number": 398
                  },
                  {
                    "type": "for",
                    "line_number": 400
                  },
                  {
                    "type": "if",
                    "line_number": 404
                  },
                  {
                    "type": "if",
                    "line_number": 413
                  },
                  {
                    "type": "for",
                    "line_number": 417
                  },
                  {
                    "type": "if",
                    "line_number": 418
                  },
                  {
                    "type": "if",
                    "line_number": 422
                  },
                  {
                    "type": "for",
                    "line_number": 427
                  },
                  {
                    "type": "if",
                    "line_number": 431
                  },
                  {
                    "type": "else",
                    "line_number": 436
                  },
                  {
                    "type": "for",
                    "line_number": 443
                  }
                ],
                "complexity": 11,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "GetPackets",
                  "for",
                  "if",
                  "G_BuildTiccmd",
                  "I_Error",
                  "I_GetTime",
                  "HSendPacket",
                  "printf",
                  "I_StartTic",
                  "D_ProcessEvents"
                ]
              },
              {
                "name": "CheckAbort",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 453,
                "end_line": 470,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "stoptic",
                    "array_size": null,
                    "line_number": 456
                  }
                ],
                "function_calls": [
                  {
                    "name": "I_GetTime",
                    "line_number": 458
                  },
                  {
                    "name": "while",
                    "line_number": 459
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 459
                  },
                  {
                    "name": "I_StartTic",
                    "line_number": 460
                  },
                  {
                    "name": "I_StartTic",
                    "line_number": 462
                  },
                  {
                    "name": "for",
                    "line_number": 463
                  },
                  {
                    "name": "if",
                    "line_number": 467
                  },
                  {
                    "name": "I_Error",
                    "line_number": 468
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 459
                  },
                  {
                    "type": "for",
                    "line_number": 463
                  },
                  {
                    "type": "if",
                    "line_number": 467
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "if",
                  "for",
                  "I_Error",
                  "I_GetTime",
                  "I_StartTic"
                ]
              },
              {
                "name": "D_ArbitrateNetStart",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 476,
                "end_line": 547,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 478
                  }
                ],
                "function_calls": [
                  {
                    "name": "memset",
                    "line_number": 482
                  },
                  {
                    "name": "sizeof",
                    "line_number": 482
                  },
                  {
                    "name": "if",
                    "line_number": 484
                  },
                  {
                    "name": "printf",
                    "line_number": 487
                  },
                  {
                    "name": "while",
                    "line_number": 488
                  },
                  {
                    "name": "CheckAbort",
                    "line_number": 490
                  },
                  {
                    "name": "if",
                    "line_number": 491
                  },
                  {
                    "name": "HGetPacket",
                    "line_number": 491
                  },
                  {
                    "name": "if",
                    "line_number": 493
                  },
                  {
                    "name": "if",
                    "line_number": 495
                  },
                  {
                    "name": "I_Error",
                    "line_number": 496
                  },
                  {
                    "name": "printf",
                    "line_number": 510
                  },
                  {
                    "name": "CheckAbort",
                    "line_number": 513
                  },
                  {
                    "name": "for",
                    "line_number": 514
                  },
                  {
                    "name": "if",
                    "line_number": 517
                  },
                  {
                    "name": "if",
                    "line_number": 519
                  },
                  {
                    "name": "if",
                    "line_number": 521
                  },
                  {
                    "name": "HSendPacket",
                    "line_number": 526
                  },
                  {
                    "name": "for",
                    "line_number": 530
                  },
                  {
                    "name": "HGetPacket",
                    "line_number": 530
                  },
                  {
                    "name": "if",
                    "line_number": 532
                  },
                  {
                    "name": "while",
                    "line_number": 536
                  },
                  {
                    "name": "HGetPacket",
                    "line_number": 536
                  },
                  {
                    "name": "for",
                    "line_number": 542
                  },
                  {
                    "name": "if",
                    "line_number": 543
                  },
                  {
                    "name": "while",
                    "line_number": 545
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 484
                  },
                  {
                    "type": "for",
                    "line_number": 486
                  },
                  {
                    "type": "for",
                    "line_number": 487
                  },
                  {
                    "type": "while",
                    "line_number": 488
                  },
                  {
                    "type": "if",
                    "line_number": 491
                  },
                  {
                    "type": "if",
                    "line_number": 493
                  },
                  {
                    "type": "if",
                    "line_number": 495
                  },
                  {
                    "type": "else",
                    "line_number": 507
                  },
                  {
                    "type": "for",
                    "line_number": 514
                  },
                  {
                    "type": "if",
                    "line_number": 517
                  },
                  {
                    "type": "if",
                    "line_number": 519
                  },
                  {
                    "type": "if",
                    "line_number": 521
                  },
                  {
                    "type": "if",
                    "line_number": 529
                  },
                  {
                    "type": "for",
                    "line_number": 530
                  },
                  {
                    "type": "if",
                    "line_number": 532
                  },
                  {
                    "type": "else",
                    "line_number": 535
                  },
                  {
                    "type": "while",
                    "line_number": 536
                  },
                  {
                    "type": "for",
                    "line_number": 542
                  },
                  {
                    "type": "if",
                    "line_number": 543
                  },
                  {
                    "type": "while",
                    "line_number": 545
                  }
                ],
                "complexity": 15,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "HGetPacket",
                  "while",
                  "if",
                  "CheckAbort",
                  "for",
                  "memset",
                  "I_Error",
                  "sizeof",
                  "HSendPacket",
                  "printf"
                ]
              },
              {
                "name": "D_CheckNetGame",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 555,
                "end_line": 594,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 557
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 559
                  },
                  {
                    "name": "I_InitNetwork",
                    "line_number": 568
                  },
                  {
                    "name": "if",
                    "line_number": 569
                  },
                  {
                    "name": "I_Error",
                    "line_number": 570
                  },
                  {
                    "name": "if",
                    "line_number": 574
                  },
                  {
                    "name": "D_ArbitrateNetStart",
                    "line_number": 575
                  },
                  {
                    "name": "printf",
                    "line_number": 577
                  },
                  {
                    "name": "if",
                    "line_number": 583
                  },
                  {
                    "name": "for",
                    "line_number": 586
                  },
                  {
                    "name": "for",
                    "line_number": 588
                  },
                  {
                    "name": "printf",
                    "line_number": 591
                  },
                  {
                    "name": "i",
                    "line_number": 591
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 559
                  },
                  {
                    "type": "if",
                    "line_number": 569
                  },
                  {
                    "type": "if",
                    "line_number": 574
                  },
                  {
                    "type": "if",
                    "line_number": 583
                  },
                  {
                    "type": "for",
                    "line_number": 586
                  },
                  {
                    "type": "for",
                    "line_number": 588
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "i",
                  "if",
                  "for",
                  "I_Error",
                  "D_ArbitrateNetStart",
                  "printf",
                  "I_InitNetwork"
                ]
              },
              {
                "name": "D_QuitNetGame",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 602,
                "end_line": 622,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 606
                  },
                  {
                    "name": "fclose",
                    "line_number": 607
                  },
                  {
                    "name": "if",
                    "line_number": 609
                  },
                  {
                    "name": "for",
                    "line_number": 615
                  },
                  {
                    "name": "for",
                    "line_number": 617
                  },
                  {
                    "name": "if",
                    "line_number": 618
                  },
                  {
                    "name": "HSendPacket",
                    "line_number": 619
                  },
                  {
                    "name": "I_WaitVBL",
                    "line_number": 620
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 606
                  },
                  {
                    "type": "if",
                    "line_number": 609
                  },
                  {
                    "type": "for",
                    "line_number": 612
                  },
                  {
                    "type": "for",
                    "line_number": 615
                  },
                  {
                    "type": "for",
                    "line_number": 617
                  },
                  {
                    "type": "if",
                    "line_number": 618
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "if",
                  "I_WaitVBL",
                  "HSendPacket",
                  "fclose"
                ]
              },
              {
                "name": "TryRunTics",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 636,
                "end_line": 767,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 638
                  },
                  {
                    "type": "int",
                    "name": "lowtic",
                    "array_size": null,
                    "line_number": 639
                  },
                  {
                    "type": "int",
                    "name": "entertic",
                    "array_size": null,
                    "line_number": 640
                  },
                  {
                    "type": "static int",
                    "name": "oldentertics",
                    "array_size": null,
                    "line_number": 641
                  },
                  {
                    "type": "int",
                    "name": "realtics",
                    "array_size": null,
                    "line_number": 642
                  },
                  {
                    "type": "int",
                    "name": "availabletics",
                    "array_size": null,
                    "line_number": 643
                  },
                  {
                    "type": "int",
                    "name": "counts",
                    "array_size": null,
                    "line_number": 644
                  },
                  {
                    "type": "int",
                    "name": "numplaying",
                    "array_size": null,
                    "line_number": 645
                  },
                  {
                    "type": "int",
                    "name": "buf",
                    "array_size": null,
                    "line_number": 752
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 753
                  }
                ],
                "function_calls": [
                  {
                    "name": "I_GetTime",
                    "line_number": 648
                  },
                  {
                    "name": "NetUpdate",
                    "line_number": 653
                  },
                  {
                    "name": "for",
                    "line_number": 657
                  },
                  {
                    "name": "if",
                    "line_number": 659
                  },
                  {
                    "name": "if",
                    "line_number": 662
                  },
                  {
                    "name": "if",
                    "line_number": 669
                  },
                  {
                    "name": "if",
                    "line_number": 671
                  },
                  {
                    "name": "if",
                    "line_number": 676
                  },
                  {
                    "name": "if",
                    "line_number": 681
                  },
                  {
                    "name": "fprintf",
                    "line_number": 682
                  },
                  {
                    "name": "if",
                    "line_number": 686
                  },
                  {
                    "name": "for",
                    "line_number": 690
                  },
                  {
                    "name": "if",
                    "line_number": 691
                  },
                  {
                    "name": "if",
                    "line_number": 693
                  },
                  {
                    "name": "if",
                    "line_number": 699
                  },
                  {
                    "name": "printf",
                    "line_number": 702
                  },
                  {
                    "name": "if",
                    "line_number": 706
                  },
                  {
                    "name": "printf",
                    "line_number": 709
                  },
                  {
                    "name": "while",
                    "line_number": 715
                  },
                  {
                    "name": "NetUpdate",
                    "line_number": 717
                  },
                  {
                    "name": "for",
                    "line_number": 720
                  },
                  {
                    "name": "if",
                    "line_number": 721
                  },
                  {
                    "name": "if",
                    "line_number": 724
                  },
                  {
                    "name": "I_Error",
                    "line_number": 725
                  },
                  {
                    "name": "if",
                    "line_number": 728
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 728
                  },
                  {
                    "name": "M_Ticker",
                    "line_number": 730
                  },
                  {
                    "name": "while",
                    "line_number": 736
                  },
                  {
                    "name": "for",
                    "line_number": 738
                  },
                  {
                    "name": "if",
                    "line_number": 740
                  },
                  {
                    "name": "I_Error",
                    "line_number": 741
                  },
                  {
                    "name": "if",
                    "line_number": 742
                  },
                  {
                    "name": "D_DoAdvanceDemo",
                    "line_number": 743
                  },
                  {
                    "name": "M_Ticker",
                    "line_number": 744
                  },
                  {
                    "name": "G_Ticker",
                    "line_number": 745
                  },
                  {
                    "name": "if",
                    "line_number": 749
                  },
                  {
                    "name": "for",
                    "line_number": 756
                  },
                  {
                    "name": "if",
                    "line_number": 760
                  },
                  {
                    "name": "NetUpdate",
                    "line_number": 765
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 657
                  },
                  {
                    "type": "if",
                    "line_number": 659
                  },
                  {
                    "type": "if",
                    "line_number": 662
                  },
                  {
                    "type": "if",
                    "line_number": 669
                  },
                  {
                    "type": "if",
                    "line_number": 671
                  },
                  {
                    "type": "else",
                    "line_number": 673
                  },
                  {
                    "type": "if",
                    "line_number": 676
                  },
                  {
                    "type": "if",
                    "line_number": 681
                  },
                  {
                    "type": "if",
                    "line_number": 686
                  },
                  {
                    "type": "if",
                    "line_number": 689
                  },
                  {
                    "type": "for",
                    "line_number": 690
                  },
                  {
                    "type": "if",
                    "line_number": 691
                  },
                  {
                    "type": "if",
                    "line_number": 693
                  },
                  {
                    "type": "else",
                    "line_number": 697
                  },
                  {
                    "type": "if",
                    "line_number": 699
                  },
                  {
                    "type": "if",
                    "line_number": 706
                  },
                  {
                    "type": "if",
                    "line_number": 714
                  },
                  {
                    "type": "while",
                    "line_number": 715
                  },
                  {
                    "type": "for",
                    "line_number": 720
                  },
                  {
                    "type": "if",
                    "line_number": 721
                  },
                  {
                    "type": "if",
                    "line_number": 724
                  },
                  {
                    "type": "if",
                    "line_number": 728
                  },
                  {
                    "type": "while",
                    "line_number": 736
                  },
                  {
                    "type": "for",
                    "line_number": 738
                  },
                  {
                    "type": "if",
                    "line_number": 740
                  },
                  {
                    "type": "if",
                    "line_number": 742
                  },
                  {
                    "type": "for",
                    "line_number": 748
                  },
                  {
                    "type": "if",
                    "line_number": 749
                  },
                  {
                    "type": "for",
                    "line_number": 756
                  },
                  {
                    "type": "if",
                    "line_number": 760
                  },
                  {
                    "type": "for",
                    "line_number": 765
                  }
                ],
                "complexity": 25,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "while",
                  "for",
                  "if",
                  "I_Error",
                  "I_GetTime",
                  "M_Ticker",
                  "D_DoAdvanceDemo",
                  "G_Ticker",
                  "NetUpdate",
                  "printf"
                ]
              },
              {
                "name": "while",
                "return_type": "wait for new tics if needed",
                "parameters": [
                  {
                    "type": "lowtic < gametic/ticdup +",
                    "name": "counts"
                  }
                ],
                "start_line": 714,
                "end_line": 732,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "NetUpdate",
                    "line_number": 716
                  },
                  {
                    "name": "for",
                    "line_number": 719
                  },
                  {
                    "name": "if",
                    "line_number": 720
                  },
                  {
                    "name": "if",
                    "line_number": 723
                  },
                  {
                    "name": "I_Error",
                    "line_number": 724
                  },
                  {
                    "name": "if",
                    "line_number": 727
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 727
                  },
                  {
                    "name": "M_Ticker",
                    "line_number": 729
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 719
                  },
                  {
                    "type": "if",
                    "line_number": 720
                  },
                  {
                    "type": "if",
                    "line_number": 723
                  },
                  {
                    "type": "if",
                    "line_number": 727
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "counts"
                ],
                "outputs": [
                  "wait for new tics if needed"
                ],
                "dependencies": [
                  "if",
                  "for",
                  "I_Error",
                  "I_GetTime",
                  "M_Ticker",
                  "NetUpdate"
                ]
              },
              {
                "name": "while",
                "return_type": "ticdup dics",
                "parameters": [
                  {
                    "type": "",
                    "name": "counts--"
                  }
                ],
                "start_line": 735,
                "end_line": 765,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "buf",
                    "array_size": null,
                    "line_number": 751
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 752
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 737
                  },
                  {
                    "name": "if",
                    "line_number": 739
                  },
                  {
                    "name": "I_Error",
                    "line_number": 740
                  },
                  {
                    "name": "if",
                    "line_number": 741
                  },
                  {
                    "name": "D_DoAdvanceDemo",
                    "line_number": 742
                  },
                  {
                    "name": "M_Ticker",
                    "line_number": 743
                  },
                  {
                    "name": "G_Ticker",
                    "line_number": 744
                  },
                  {
                    "name": "if",
                    "line_number": 748
                  },
                  {
                    "name": "for",
                    "line_number": 755
                  },
                  {
                    "name": "if",
                    "line_number": 759
                  },
                  {
                    "name": "NetUpdate",
                    "line_number": 764
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 737
                  },
                  {
                    "type": "if",
                    "line_number": 739
                  },
                  {
                    "type": "if",
                    "line_number": 741
                  },
                  {
                    "type": "for",
                    "line_number": 747
                  },
                  {
                    "type": "if",
                    "line_number": 748
                  },
                  {
                    "type": "for",
                    "line_number": 755
                  },
                  {
                    "type": "if",
                    "line_number": 759
                  },
                  {
                    "type": "for",
                    "line_number": 764
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "counts--"
                ],
                "outputs": [
                  "ticdup dics"
                ],
                "dependencies": [
                  "if",
                  "for",
                  "I_Error",
                  "M_Ticker",
                  "D_DoAdvanceDemo",
                  "G_Ticker",
                  "NetUpdate"
                ]
              },
              {
                "name": "if",
                "return_type": "modify command for duplicated tics",
                "parameters": [
                  {
                    "type": "i !=",
                    "name": "ticdup-1"
                  }
                ],
                "start_line": 748,
                "end_line": 762,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "buf",
                    "array_size": null,
                    "line_number": 751
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 752
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 755
                  },
                  {
                    "name": "if",
                    "line_number": 759
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 755
                  },
                  {
                    "type": "if",
                    "line_number": 759
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "ticdup-1"
                ],
                "outputs": [
                  "modify command for duplicated tics"
                ],
                "dependencies": [
                  "if",
                  "for"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "maketic",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 71
              },
              {
                "name": "lastnettic",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 72
              },
              {
                "name": "skiptics",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 73
              },
              {
                "name": "ticdup",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 74
              },
              {
                "name": "maxsend",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 75
              },
              {
                "name": "reboundpacket",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 82
              },
              {
                "name": "reboundstore",
                "type": "doomdata_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 83
              },
              {
                "name": "c",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 100
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 107
              },
              {
                "name": "delta",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 122
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 134
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 168
              },
              {
                "name": "realretrans",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 169
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 199
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 203
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 206
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 212
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 218
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 225
              },
              {
                "name": "realretrans",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 230
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 231
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 252
              },
              {
                "name": "exitmsg",
                "type": "char",
                "storage_class": null,
                "array_size": "80",
                "line_number": 259
              },
              {
                "name": "netconsole",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 263
              },
              {
                "name": "netnode",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 264
              },
              {
                "name": "realend",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 266
              },
              {
                "name": "realstart",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 267
              },
              {
                "name": "start",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 342
              },
              {
                "name": "gametime",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 366
              },
              {
                "name": "nowtime",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 370
              },
              {
                "name": "newtics",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 371
              },
              {
                "name": "realstart",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 373
              },
              {
                "name": "gameticdiv",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 374
              },
              {
                "name": "listen",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 382
              },
              {
                "name": "stoptic",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 456
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 478
              },
              {
                "name": "viewangleoffset",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 553
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 557
              },
              {
                "name": "frametics",
                "type": "int",
                "storage_class": null,
                "array_size": "4",
                "line_number": 629
              },
              {
                "name": "frameon",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 630
              },
              {
                "name": "frameskip",
                "type": "int",
                "storage_class": null,
                "array_size": "4",
                "line_number": 631
              },
              {
                "name": "oldnettics",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 632
              },
              {
                "name": "advancedemo",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 634
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 638
              },
              {
                "name": "lowtic",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 639
              },
              {
                "name": "entertic",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 640
              },
              {
                "name": "oldentertics",
                "type": "static int",
                "storage_class": null,
                "array_size": null,
                "line_number": 641
              },
              {
                "name": "realtics",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 642
              },
              {
                "name": "availabletics",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 643
              },
              {
                "name": "counts",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 644
              },
              {
                "name": "numplaying",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 645
              },
              {
                "name": "buf",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 752
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 753
              }
            ],
            "defines": [
              {
                "name": "NCMD_EXIT",
                "value": "0x80000000",
                "line_number": 37
              },
              {
                "name": "NCMD_RETRANSMIT",
                "value": "0x40000000",
                "line_number": 38
              },
              {
                "name": "NCMD_SETUP",
                "value": "0x20000000",
                "line_number": 39
              },
              {
                "name": "NCMD_KILL",
                "value": "0x10000000\t// kill game",
                "line_number": 40
              },
              {
                "name": "NCMD_CHECKSUM",
                "value": "0x0fffffff",
                "line_number": 41
              },
              {
                "name": "RESENDCOUNT",
                "value": "10",
                "line_number": 57
              },
              {
                "name": "PL_DRONE",
                "value": "0x80\t// bit flag in doomdata->player",
                "line_number": 58
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/d_net.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "d_net.h",
          "type": "file",
          "size": 3267,
          "last_modified": "2024-09-05T16:00:02.919634",
          "path": "linuxdoom-1.10/d_net.h",
          "readme": "# d_net.h\n\nThis file contains functionality related to d_net.",
          "dependencies": [
            "d_player.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "checksum",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 65
              },
              {
                "name": "retransmitfrom",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 67
              },
              {
                "name": "starttic",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 69
              },
              {
                "name": "player",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 70
              },
              {
                "name": "numtics",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 71
              },
              {
                "name": "id",
                "type": "long",
                "storage_class": null,
                "array_size": null,
                "line_number": 82
              },
              {
                "name": "intnum",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 85
              },
              {
                "name": "command",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 88
              },
              {
                "name": "remotenode",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 90
              },
              {
                "name": "datalength",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 93
              },
              {
                "name": "numnodes",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 97
              },
              {
                "name": "ticdup",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 99
              },
              {
                "name": "extratics",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 101
              },
              {
                "name": "deathmatch",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 103
              },
              {
                "name": "savegame",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 105
              },
              {
                "name": "episode",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 106
              },
              {
                "name": "map",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 107
              },
              {
                "name": "skill",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 108
              },
              {
                "name": "consoleplayer",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 111
              },
              {
                "name": "numplayers",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 112
              },
              {
                "name": "angleoffset",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 120
              },
              {
                "name": "drone",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 122
              },
              {
                "name": "data",
                "type": "doomdata_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 125
              }
            ],
            "defines": [
              {
                "name": "DOOMCOM_ID",
                "value": "0x12345678l",
                "line_number": 42
              },
              {
                "name": "MAXNETNODES",
                "value": "8",
                "line_number": 45
              },
              {
                "name": "BACKUPTICS",
                "value": "12",
                "line_number": 49
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/d_net.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "d_player.h",
          "type": "file",
          "size": 4729,
          "last_modified": "2024-09-05T16:00:02.944643",
          "path": "linuxdoom-1.10/d_player.h",
          "readme": "# d_player.h\n\nThis file contains functionality related to d_player.",
          "dependencies": [
            "d_ticcmd.h",
            "d_items.h",
            "p_pspr.h",
            "p_mobj.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "playerstate",
                "type": "playerstate_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 86
              },
              {
                "name": "cmd",
                "type": "ticcmd_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 87
              },
              {
                "name": "viewz",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 92
              },
              {
                "name": "viewheight",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 94
              },
              {
                "name": "deltaviewheight",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 96
              },
              {
                "name": "bob",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 98
              },
              {
                "name": "health",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 102
              },
              {
                "name": "armorpoints",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 103
              },
              {
                "name": "armortype",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 105
              },
              {
                "name": "backpack",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 110
              },
              {
                "name": "readyweapon",
                "type": "weapontype_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 114
              },
              {
                "name": "pendingweapon",
                "type": "weapontype_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 117
              },
              {
                "name": "attackdown",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 124
              },
              {
                "name": "usedown",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 125
              },
              {
                "name": "cheats",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 129
              },
              {
                "name": "refire",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 132
              },
              {
                "name": "killcount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 135
              },
              {
                "name": "itemcount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 136
              },
              {
                "name": "secretcount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 137
              },
              {
                "name": "damagecount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 143
              },
              {
                "name": "bonuscount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 144
              },
              {
                "name": "extralight",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 150
              },
              {
                "name": "fixedcolormap",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 154
              },
              {
                "name": "colormap",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 158
              },
              {
                "name": "didsecret",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 164
              },
              {
                "name": "in",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 175
              },
              {
                "name": "skills",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 178
              },
              {
                "name": "sitems",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 179
              },
              {
                "name": "ssecret",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 180
              },
              {
                "name": "stime",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 181
              },
              {
                "name": "frags",
                "type": "int",
                "storage_class": null,
                "array_size": "4",
                "line_number": 182
              },
              {
                "name": "score",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 183
              },
              {
                "name": "epsd",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 189
              },
              {
                "name": "didsecret",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 192
              },
              {
                "name": "last",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 195
              },
              {
                "name": "next",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 196
              },
              {
                "name": "maxkills",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 198
              },
              {
                "name": "maxitems",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 199
              },
              {
                "name": "maxsecret",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 200
              },
              {
                "name": "maxfrags",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 201
              },
              {
                "name": "partime",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 204
              },
              {
                "name": "pnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 207
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/d_player.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "d_textur.h",
          "type": "file",
          "size": 1181,
          "last_modified": "2024-09-05T16:00:02.968160",
          "path": "linuxdoom-1.10/d_textur.h",
          "readme": "# d_textur.h\n\nThis file contains functionality related to d_textur.",
          "dependencies": [
            "doomtype.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "width",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 38
              },
              {
                "name": "height",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 39
              },
              {
                "name": "data",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 40
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/d_textur.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "d_think.h",
          "type": "file",
          "size": 1775,
          "last_modified": "2024-09-05T16:00:02.991160",
          "path": "linuxdoom-1.10/d_think.h",
          "readme": "# d_think.h\n\nThis file contains functionality related to d_think.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "acp1",
                "type": "actionf_p1",
                "storage_class": null,
                "array_size": null,
                "line_number": 47
              },
              {
                "name": "acv",
                "type": "actionf_v",
                "storage_class": null,
                "array_size": null,
                "line_number": 48
              },
              {
                "name": "acp2",
                "type": "actionf_p2",
                "storage_class": null,
                "array_size": null,
                "line_number": 49
              },
              {
                "name": "think_t",
                "type": "typedef actionf_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 60
              },
              {
                "name": "function",
                "type": "think_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 68
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/d_think.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "d_ticcmd.h",
          "type": "file",
          "size": 1451,
          "last_modified": "2024-09-05T16:00:03.019162",
          "path": "linuxdoom-1.10/d_ticcmd.h",
          "readme": "# d_ticcmd.h\n\nThis file contains functionality related to d_ticcmd.",
          "dependencies": [
            "doomtype.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "forwardmove",
                "type": "char",
                "storage_class": null,
                "array_size": null,
                "line_number": 38
              },
              {
                "name": "sidemove",
                "type": "char",
                "storage_class": null,
                "array_size": null,
                "line_number": 39
              },
              {
                "name": "angleturn",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 40
              },
              {
                "name": "consistancy",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 41
              },
              {
                "name": "chatchar",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 42
              },
              {
                "name": "buttons",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 43
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/d_ticcmd.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "f_finale.c",
          "type": "file",
          "size": 14210,
          "last_modified": "2024-09-05T16:00:03.254194",
          "path": "linuxdoom-1.10/f_finale.c",
          "readme": "# f_finale.c\n\nThis file contains functionality related to f_finale.",
          "dependencies": [
            "f_finale.h",
            "w_wad.h",
            "m_swap.h",
            "sounds.h",
            "r_local.h",
            "ctype.h",
            "z_zone.h",
            "i_system.h",
            "doomstat.h",
            "r_state.h",
            "s_sound.h",
            "hu_stuff.h",
            "dstrings.h",
            "v_video.h"
          ],
          "inputs": [
            "x",
            "text",
            "0xff",
            "S_NULL",
            "ev",
            "void",
            "patch",
            "col",
            "*event"
          ],
          "outputs": [
            "boolean",
            "step through the posts in a column",
            "not time to change state yet"
          ],
          "content": {
            "functions": [
              {
                "name": "F_StartFinale",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 96,
                "end_line": 191,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 106
                  },
                  {
                    "name": "S_ChangeMusic",
                    "line_number": 114
                  },
                  {
                    "name": "switch",
                    "line_number": 116
                  },
                  {
                    "name": "S_ChangeMusic",
                    "line_number": 144
                  },
                  {
                    "name": "switch",
                    "line_number": 146
                  },
                  {
                    "name": "S_ChangeMusic",
                    "line_number": 182
                  }
                ],
                "control_flow": [
                  {
                    "type": "else",
                    "line_number": 183
                  }
                ],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "S_ChangeMusic",
                  "switch"
                ]
              },
              {
                "name": "F_Responder",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "event_t",
                    "name": "*event"
                  }
                ],
                "start_line": 195,
                "end_line": 201,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 200
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 197
                  },
                  {
                    "name": "F_CastResponder",
                    "line_number": 198
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 197
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "*event"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "F_CastResponder",
                  "if"
                ]
              },
              {
                "name": "F_Ticker",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 207,
                "end_line": 249,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 209
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 212
                  },
                  {
                    "name": "for",
                    "line_number": 216
                  },
                  {
                    "name": "if",
                    "line_number": 217
                  },
                  {
                    "name": "if",
                    "line_number": 220
                  },
                  {
                    "name": "if",
                    "line_number": 222
                  },
                  {
                    "name": "F_StartCast",
                    "line_number": 223
                  },
                  {
                    "name": "if",
                    "line_number": 232
                  },
                  {
                    "name": "F_CastTicker",
                    "line_number": 234
                  },
                  {
                    "name": "if",
                    "line_number": 238
                  },
                  {
                    "name": "if",
                    "line_number": 241
                  },
                  {
                    "name": "strlen",
                    "line_number": 241
                  },
                  {
                    "name": "if",
                    "line_number": 246
                  },
                  {
                    "name": "S_StartMusic",
                    "line_number": 247
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 211
                  },
                  {
                    "type": "if",
                    "line_number": 212
                  },
                  {
                    "type": "for",
                    "line_number": 216
                  },
                  {
                    "type": "if",
                    "line_number": 217
                  },
                  {
                    "type": "if",
                    "line_number": 220
                  },
                  {
                    "type": "if",
                    "line_number": 222
                  },
                  {
                    "type": "else",
                    "line_number": 224
                  },
                  {
                    "type": "if",
                    "line_number": 232
                  },
                  {
                    "type": "if",
                    "line_number": 238
                  },
                  {
                    "type": "if",
                    "line_number": 241
                  },
                  {
                    "type": "if",
                    "line_number": 246
                  }
                ],
                "complexity": 11,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "F_CastTicker",
                  "strlen",
                  "for",
                  "if",
                  "F_StartCast",
                  "S_StartMusic"
                ]
              },
              {
                "name": "F_TextWrite",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 261,
                "end_line": 327,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 267
                  },
                  {
                    "type": "int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 269
                  },
                  {
                    "type": "int",
                    "name": "cx",
                    "array_size": null,
                    "line_number": 270
                  },
                  {
                    "type": "int",
                    "name": "cy",
                    "array_size": null,
                    "line_number": 271
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 274
                  },
                  {
                    "name": "for",
                    "line_number": 277
                  },
                  {
                    "name": "for",
                    "line_number": 279
                  },
                  {
                    "name": "memcpy",
                    "line_number": 281
                  },
                  {
                    "name": "if",
                    "line_number": 284
                  },
                  {
                    "name": "memcpy",
                    "line_number": 286
                  },
                  {
                    "name": "V_MarkRect",
                    "line_number": 291
                  },
                  {
                    "name": "if",
                    "line_number": 299
                  },
                  {
                    "name": "for",
                    "line_number": 301
                  },
                  {
                    "name": "if",
                    "line_number": 304
                  },
                  {
                    "name": "if",
                    "line_number": 306
                  },
                  {
                    "name": "toupper",
                    "line_number": 313
                  },
                  {
                    "name": "if",
                    "line_number": 314
                  },
                  {
                    "name": "SHORT",
                    "line_number": 320
                  },
                  {
                    "name": "if",
                    "line_number": 321
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 323
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 277
                  },
                  {
                    "type": "for",
                    "line_number": 279
                  },
                  {
                    "type": "if",
                    "line_number": 284
                  },
                  {
                    "type": "if",
                    "line_number": 299
                  },
                  {
                    "type": "for",
                    "line_number": 301
                  },
                  {
                    "type": "if",
                    "line_number": 304
                  },
                  {
                    "type": "if",
                    "line_number": 306
                  },
                  {
                    "type": "if",
                    "line_number": 314
                  },
                  {
                    "type": "if",
                    "line_number": 321
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "V_DrawPatch",
                  "if",
                  "for",
                  "memcpy",
                  "SHORT",
                  "V_MarkRect",
                  "toupper"
                ]
              },
              {
                "name": "F_StartCast",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 377,
                "end_line": 389,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_ChangeMusic",
                    "line_number": 388
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "S_ChangeMusic"
                ]
              },
              {
                "name": "F_CastTicker",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 395,
                "end_line": 495,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "st",
                    "array_size": null,
                    "line_number": 397
                  },
                  {
                    "type": "int",
                    "name": "sfx",
                    "array_size": null,
                    "line_number": 398
                  },
                  {
                    "type": "goto",
                    "name": "stopattack",
                    "array_size": null,
                    "line_number": 419
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 400
                  },
                  {
                    "name": "if",
                    "line_number": 403
                  },
                  {
                    "name": "if",
                    "line_number": 408
                  },
                  {
                    "name": "if",
                    "line_number": 410
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 411
                  },
                  {
                    "name": "if",
                    "line_number": 418
                  },
                  {
                    "name": "switch",
                    "line_number": 425
                  },
                  {
                    "name": "if",
                    "line_number": 456
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 457
                  },
                  {
                    "name": "if",
                    "line_number": 460
                  },
                  {
                    "name": "if",
                    "line_number": 464
                  },
                  {
                    "name": "if",
                    "line_number": 469
                  },
                  {
                    "name": "if",
                    "line_number": 471
                  },
                  {
                    "name": "if",
                    "line_number": 480
                  },
                  {
                    "name": "if",
                    "line_number": 482
                  },
                  {
                    "name": "if",
                    "line_number": 493
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 400
                  },
                  {
                    "type": "if",
                    "line_number": 403
                  },
                  {
                    "type": "if",
                    "line_number": 408
                  },
                  {
                    "type": "if",
                    "line_number": 410
                  },
                  {
                    "type": "else",
                    "line_number": 415
                  },
                  {
                    "type": "if",
                    "line_number": 418
                  },
                  {
                    "type": "if",
                    "line_number": 456
                  },
                  {
                    "type": "if",
                    "line_number": 460
                  },
                  {
                    "type": "if",
                    "line_number": 464
                  },
                  {
                    "type": "else",
                    "line_number": 466
                  },
                  {
                    "type": "if",
                    "line_number": 469
                  },
                  {
                    "type": "if",
                    "line_number": 471
                  },
                  {
                    "type": "else",
                    "line_number": 474
                  },
                  {
                    "type": "if",
                    "line_number": 480
                  },
                  {
                    "type": "if",
                    "line_number": 482
                  },
                  {
                    "type": "if",
                    "line_number": 493
                  }
                ],
                "complexity": 15,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "switch",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "not time to change state yet",
                "parameters": [
                  {
                    "type": "caststate->tics == -1 || caststate->nextstate ==",
                    "name": "S_NULL"
                  }
                ],
                "start_line": 401,
                "end_line": 412,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 406
                  },
                  {
                    "name": "if",
                    "line_number": 408
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 409
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 406
                  },
                  {
                    "type": "if",
                    "line_number": 408
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "S_NULL"
                ],
                "outputs": [
                  "not time to change state yet"
                ],
                "dependencies": [
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "F_CastResponder",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "event_t*",
                    "name": "ev"
                  }
                ],
                "start_line": 502,
                "end_line": 520,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 505
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 508
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 519
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 504
                  },
                  {
                    "name": "if",
                    "line_number": 507
                  },
                  {
                    "name": "if",
                    "line_number": 516
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 517
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 504
                  },
                  {
                    "type": "if",
                    "line_number": 507
                  },
                  {
                    "type": "if",
                    "line_number": 516
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "ev"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "F_CastPrint",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "text"
                  }
                ],
                "start_line": 523,
                "end_line": 571,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 526
                  },
                  {
                    "type": "int",
                    "name": "cx",
                    "array_size": null,
                    "line_number": 527
                  },
                  {
                    "type": "int",
                    "name": "w",
                    "array_size": null,
                    "line_number": 528
                  },
                  {
                    "type": "int",
                    "name": "width",
                    "array_size": null,
                    "line_number": 529
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 535
                  },
                  {
                    "name": "if",
                    "line_number": 538
                  },
                  {
                    "name": "toupper",
                    "line_number": 540
                  },
                  {
                    "name": "if",
                    "line_number": 541
                  },
                  {
                    "name": "SHORT",
                    "line_number": 547
                  },
                  {
                    "name": "while",
                    "line_number": 554
                  },
                  {
                    "name": "if",
                    "line_number": 557
                  },
                  {
                    "name": "toupper",
                    "line_number": 559
                  },
                  {
                    "name": "if",
                    "line_number": 560
                  },
                  {
                    "name": "SHORT",
                    "line_number": 566
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 567
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 535
                  },
                  {
                    "type": "if",
                    "line_number": 538
                  },
                  {
                    "type": "if",
                    "line_number": 541
                  },
                  {
                    "type": "while",
                    "line_number": 554
                  },
                  {
                    "type": "if",
                    "line_number": 557
                  },
                  {
                    "type": "if",
                    "line_number": 560
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "text"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "V_DrawPatch",
                  "if",
                  "toupper",
                  "SHORT"
                ]
              },
              {
                "name": "F_CastDrawer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 579,
                "end_line": 603,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "lump",
                    "array_size": null,
                    "line_number": 583
                  },
                  {
                    "type": "boolean",
                    "name": "flip",
                    "array_size": null,
                    "line_number": 584
                  }
                ],
                "function_calls": [
                  {
                    "name": "V_DrawPatch",
                    "line_number": 588
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 588
                  },
                  {
                    "name": "F_CastPrint",
                    "line_number": 590
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 598
                  },
                  {
                    "name": "if",
                    "line_number": 599
                  },
                  {
                    "name": "V_DrawPatchFlipped",
                    "line_number": 600
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 602
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 599
                  },
                  {
                    "type": "else",
                    "line_number": 601
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "V_DrawPatch",
                  "if",
                  "F_CastPrint",
                  "W_CacheLumpNum",
                  "V_DrawPatchFlipped"
                ]
              },
              {
                "name": "F_DrawPatchCol",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "patch_t*",
                    "name": "patch"
                  },
                  {
                    "type": "int",
                    "name": "col"
                  }
                ],
                "start_line": 609,
                "end_line": 634,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 615
                  }
                ],
                "function_calls": [
                  {
                    "name": "LONG",
                    "line_number": 617
                  },
                  {
                    "name": "while",
                    "line_number": 621
                  },
                  {
                    "name": "while",
                    "line_number": 627
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 621
                  },
                  {
                    "type": "while",
                    "line_number": 627
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "x",
                  "patch",
                  "col"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "LONG"
                ]
              },
              {
                "name": "while",
                "return_type": "step through the posts in a column",
                "parameters": [
                  {
                    "type": "column->topdelta !=",
                    "name": "0xff"
                  }
                ],
                "start_line": 624,
                "end_line": 636,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 630
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 630
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "0xff"
                ],
                "outputs": [
                  "step through the posts in a column"
                ],
                "dependencies": [
                  "while"
                ]
              },
              {
                "name": "F_BunnyScroll",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 644,
                "end_line": 694,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "scrolled",
                    "array_size": null,
                    "line_number": 646
                  },
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 647
                  },
                  {
                    "type": "char",
                    "name": "name",
                    "array_size": "10",
                    "line_number": 650
                  },
                  {
                    "type": "int",
                    "name": "stage",
                    "array_size": null,
                    "line_number": 651
                  },
                  {
                    "type": "static int",
                    "name": "laststage",
                    "array_size": null,
                    "line_number": 652
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 654
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 655
                  },
                  {
                    "name": "V_MarkRect",
                    "line_number": 657
                  },
                  {
                    "name": "if",
                    "line_number": 660
                  },
                  {
                    "name": "if",
                    "line_number": 662
                  },
                  {
                    "name": "for",
                    "line_number": 665
                  },
                  {
                    "name": "if",
                    "line_number": 667
                  },
                  {
                    "name": "F_DrawPatchCol",
                    "line_number": 668
                  },
                  {
                    "name": "F_DrawPatchCol",
                    "line_number": 670
                  },
                  {
                    "name": "if",
                    "line_number": 673
                  },
                  {
                    "name": "if",
                    "line_number": 675
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 677
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 678
                  },
                  {
                    "name": "if",
                    "line_number": 684
                  },
                  {
                    "name": "if",
                    "line_number": 686
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 688
                  },
                  {
                    "name": "sprintf",
                    "line_number": 692
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 693
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 693
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 660
                  },
                  {
                    "type": "if",
                    "line_number": 662
                  },
                  {
                    "type": "for",
                    "line_number": 665
                  },
                  {
                    "type": "if",
                    "line_number": 667
                  },
                  {
                    "type": "else",
                    "line_number": 669
                  },
                  {
                    "type": "if",
                    "line_number": 673
                  },
                  {
                    "type": "if",
                    "line_number": 675
                  },
                  {
                    "type": "if",
                    "line_number": 684
                  },
                  {
                    "type": "if",
                    "line_number": 686
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "V_DrawPatch",
                  "for",
                  "if",
                  "F_DrawPatchCol",
                  "S_StartSound",
                  "sprintf",
                  "V_MarkRect"
                ]
              },
              {
                "name": "F_Drawer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 700,
                "end_line": 736,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 702
                  },
                  {
                    "name": "F_CastDrawer",
                    "line_number": 704
                  },
                  {
                    "name": "if",
                    "line_number": 708
                  },
                  {
                    "name": "F_TextWrite",
                    "line_number": 709
                  },
                  {
                    "name": "switch",
                    "line_number": 712
                  },
                  {
                    "name": "if",
                    "line_number": 715
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 716
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 717
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 719
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 720
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 723
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 724
                  },
                  {
                    "name": "F_BunnyScroll",
                    "line_number": 727
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 730
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 731
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 702
                  },
                  {
                    "type": "if",
                    "line_number": 708
                  },
                  {
                    "type": "else",
                    "line_number": 710
                  },
                  {
                    "type": "if",
                    "line_number": 715
                  },
                  {
                    "type": "else",
                    "line_number": 718
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "F_CastDrawer",
                  "W_CacheLumpName",
                  "V_DrawPatch",
                  "if",
                  "F_TextWrite",
                  "F_BunnyScroll",
                  "switch"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "finalestage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 52
              },
              {
                "name": "finalecount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 54
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 200
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 209
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 267
              },
              {
                "name": "c",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 269
              },
              {
                "name": "cx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 270
              },
              {
                "name": "cy",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 271
              },
              {
                "name": "type",
                "type": "mobjtype_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 337
              },
              {
                "name": "castnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 362
              },
              {
                "name": "casttics",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 363
              },
              {
                "name": "castdeath",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 365
              },
              {
                "name": "castframes",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 366
              },
              {
                "name": "castonmelee",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 367
              },
              {
                "name": "castattacking",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 368
              },
              {
                "name": "wipegamestate",
                "type": "gamestate_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 374
              },
              {
                "name": "st",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 397
              },
              {
                "name": "sfx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 398
              },
              {
                "name": "stopattack",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 419
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 505
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 508
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 519
              },
              {
                "name": "c",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 526
              },
              {
                "name": "cx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 527
              },
              {
                "name": "w",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 528
              },
              {
                "name": "width",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 529
              },
              {
                "name": "lump",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 583
              },
              {
                "name": "flip",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 584
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 619
              },
              {
                "name": "scrolled",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 646
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 647
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "10",
                "line_number": 650
              },
              {
                "name": "stage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 651
              },
              {
                "name": "laststage",
                "type": "static int",
                "storage_class": null,
                "array_size": null,
                "line_number": 652
              }
            ],
            "defines": [
              {
                "name": "TEXTSPEED",
                "value": "3",
                "line_number": 56
              },
              {
                "name": "TEXTWAIT",
                "value": "250",
                "line_number": 57
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/f_finale.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "f_finale.h",
          "type": "file",
          "size": 1171,
          "last_modified": "2024-09-05T16:00:03.278194",
          "path": "linuxdoom-1.10/f_finale.h",
          "readme": "# f_finale.h\n\nThis file contains functionality related to f_finale.",
          "dependencies": [
            "d_event.h",
            "doomtype.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/f_finale.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "f_wipe.c",
          "type": "file",
          "size": 5130,
          "last_modified": "2024-09-05T16:00:03.304194",
          "path": "linuxdoom-1.10/f_wipe.c",
          "readme": "# f_wipe.c\n\nThis file contains functionality related to f_wipe.",
          "dependencies": [
            "f_wipe.h",
            "m_random.h",
            "i_video.h",
            "z_zone.h",
            "doomdef.h",
            "v_video.h"
          ],
          "inputs": [
            "array",
            "wipeno",
            "x",
            "*e",
            "width",
            "y",
            "rc",
            "height",
            "!go",
            "ticks"
          ],
          "outputs": [
            "initial stuff",
            "int",
            "final stuff",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "wipe_shittyColMajorXform",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "short*",
                    "name": "array"
                  },
                  {
                    "type": "int",
                    "name": "width"
                  },
                  {
                    "type": "int",
                    "name": "height"
                  }
                ],
                "start_line": 50,
                "end_line": 66,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 52
                  },
                  {
                    "type": "int",
                    "name": "y",
                    "array_size": null,
                    "line_number": 53
                  }
                ],
                "function_calls": [
                  {
                    "name": "Z_Malloc",
                    "line_number": 56
                  },
                  {
                    "name": "for",
                    "line_number": 58
                  },
                  {
                    "name": "for",
                    "line_number": 59
                  },
                  {
                    "name": "memcpy",
                    "line_number": 62
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 64
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 58
                  },
                  {
                    "type": "for",
                    "line_number": 59
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "array",
                  "width",
                  "height"
                ],
                "outputs": [],
                "dependencies": [
                  "memcpy",
                  "Z_Free",
                  "Z_Malloc",
                  "for"
                ]
              },
              {
                "name": "wipe_initColorXForm",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "width"
                  },
                  {
                    "type": "int",
                    "name": "height"
                  },
                  {
                    "type": "int",
                    "name": "ticks"
                  }
                ],
                "start_line": 72,
                "end_line": 76,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 75
                  }
                ],
                "function_calls": [
                  {
                    "name": "memcpy",
                    "line_number": 74
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "width",
                  "height",
                  "ticks"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "memcpy"
                ]
              },
              {
                "name": "wipe_doColorXForm",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "width"
                  },
                  {
                    "type": "int",
                    "name": "height"
                  },
                  {
                    "type": "int",
                    "name": "ticks"
                  }
                ],
                "start_line": 82,
                "end_line": 122,
                "local_variables": [
                  {
                    "type": "boolean",
                    "name": "changed",
                    "array_size": null,
                    "line_number": 84
                  },
                  {
                    "type": "int",
                    "name": "newval",
                    "array_size": null,
                    "line_number": 87
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 93
                  },
                  {
                    "name": "if",
                    "line_number": 95
                  },
                  {
                    "name": "if",
                    "line_number": 97
                  },
                  {
                    "name": "if",
                    "line_number": 100
                  },
                  {
                    "name": "if",
                    "line_number": 106
                  },
                  {
                    "name": "if",
                    "line_number": 109
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 93
                  },
                  {
                    "type": "if",
                    "line_number": 95
                  },
                  {
                    "type": "if",
                    "line_number": 97
                  },
                  {
                    "type": "if",
                    "line_number": 100
                  },
                  {
                    "type": "else",
                    "line_number": 102
                  },
                  {
                    "type": "if",
                    "line_number": 106
                  },
                  {
                    "type": "if",
                    "line_number": 109
                  },
                  {
                    "type": "else",
                    "line_number": 111
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "width",
                  "height",
                  "ticks"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "while",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "*w <",
                    "name": "*e"
                  }
                ],
                "start_line": 110,
                "end_line": 118,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 113
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 113
                  },
                  {
                    "type": "else",
                    "line_number": 115
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "*e"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "wipe_exitColorXForm",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "width"
                  },
                  {
                    "type": "int",
                    "name": "height"
                  },
                  {
                    "type": "int",
                    "name": "ticks"
                  }
                ],
                "start_line": 128,
                "end_line": 131,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 130
                  }
                ],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "width",
                  "height",
                  "ticks"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": []
              },
              {
                "name": "wipe_initMelt",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "width"
                  },
                  {
                    "type": "int",
                    "name": "height"
                  },
                  {
                    "type": "int",
                    "name": "ticks"
                  }
                ],
                "start_line": 140,
                "end_line": 165,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 164
                  }
                ],
                "function_calls": [
                  {
                    "name": "memcpy",
                    "line_number": 145
                  },
                  {
                    "name": "faster",
                    "line_number": 147
                  },
                  {
                    "name": "wipe_shittyColMajorXform",
                    "line_number": 149
                  },
                  {
                    "name": "wipe_shittyColMajorXform",
                    "line_number": 150
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 154
                  },
                  {
                    "name": "sizeof",
                    "line_number": 154
                  },
                  {
                    "name": "M_Random",
                    "line_number": 155
                  },
                  {
                    "name": "for",
                    "line_number": 156
                  },
                  {
                    "name": "M_Random",
                    "line_number": 158
                  },
                  {
                    "name": "if",
                    "line_number": 160
                  },
                  {
                    "name": "if",
                    "line_number": 161
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 156
                  },
                  {
                    "type": "if",
                    "line_number": 160
                  },
                  {
                    "type": "if",
                    "line_number": 161
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "width",
                  "height",
                  "ticks"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "Z_Malloc",
                  "for",
                  "if",
                  "sizeof",
                  "wipe_shittyColMajorXform",
                  "M_Random",
                  "memcpy",
                  "faster"
                ]
              },
              {
                "name": "wipe_doMelt",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "width"
                  },
                  {
                    "type": "int",
                    "name": "height"
                  },
                  {
                    "type": "int",
                    "name": "ticks"
                  }
                ],
                "start_line": 171,
                "end_line": 220,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 173
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 174
                  },
                  {
                    "type": "int",
                    "name": "dy",
                    "array_size": null,
                    "line_number": 175
                  },
                  {
                    "type": "int",
                    "name": "idx",
                    "array_size": null,
                    "line_number": 176
                  },
                  {
                    "type": "return",
                    "name": "done",
                    "array_size": null,
                    "line_number": 218
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 184
                  },
                  {
                    "name": "for",
                    "line_number": 186
                  },
                  {
                    "name": "if",
                    "line_number": 188
                  },
                  {
                    "name": "if",
                    "line_number": 192
                  },
                  {
                    "name": "if",
                    "line_number": 195
                  },
                  {
                    "name": "for",
                    "line_number": 199
                  },
                  {
                    "name": "for",
                    "line_number": 208
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 184
                  },
                  {
                    "type": "for",
                    "line_number": 186
                  },
                  {
                    "type": "if",
                    "line_number": 188
                  },
                  {
                    "type": "if",
                    "line_number": 192
                  },
                  {
                    "type": "if",
                    "line_number": 195
                  },
                  {
                    "type": "for",
                    "line_number": 199
                  },
                  {
                    "type": "for",
                    "line_number": 208
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "width",
                  "height",
                  "ticks"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "while",
                  "if",
                  "for"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "y[i] <",
                    "name": "height"
                  }
                ],
                "start_line": 196,
                "end_line": 218,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 199
                  },
                  {
                    "name": "for",
                    "line_number": 203
                  },
                  {
                    "name": "for",
                    "line_number": 212
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 199
                  },
                  {
                    "type": "for",
                    "line_number": 203
                  },
                  {
                    "type": "for",
                    "line_number": 212
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "height"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "for",
                  "if"
                ]
              },
              {
                "name": "wipe_exitMelt",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "width"
                  },
                  {
                    "type": "int",
                    "name": "height"
                  },
                  {
                    "type": "int",
                    "name": "ticks"
                  }
                ],
                "start_line": 226,
                "end_line": 230,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 229
                  }
                ],
                "function_calls": [
                  {
                    "name": "Z_Free",
                    "line_number": 228
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "width",
                  "height",
                  "ticks"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "Z_Free"
                ]
              },
              {
                "name": "wipe_StartScreen",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "int",
                    "name": "width"
                  },
                  {
                    "type": "int",
                    "name": "height"
                  }
                ],
                "start_line": 236,
                "end_line": 241,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 240
                  }
                ],
                "function_calls": [
                  {
                    "name": "I_ReadScreen",
                    "line_number": 239
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "x",
                  "y",
                  "width",
                  "height"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "I_ReadScreen"
                ]
              },
              {
                "name": "wipe_EndScreen",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "int",
                    "name": "width"
                  },
                  {
                    "type": "int",
                    "name": "height"
                  }
                ],
                "start_line": 248,
                "end_line": 254,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 253
                  }
                ],
                "function_calls": [
                  {
                    "name": "I_ReadScreen",
                    "line_number": 251
                  },
                  {
                    "name": "V_DrawBlock",
                    "line_number": 252
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "x",
                  "y",
                  "width",
                  "height"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "I_ReadScreen",
                  "V_DrawBlock"
                ]
              },
              {
                "name": "wipe_ScreenWipe",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "wipeno"
                  },
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "int",
                    "name": "width"
                  },
                  {
                    "type": "int",
                    "name": "height"
                  },
                  {
                    "type": "int",
                    "name": "ticks"
                  }
                ],
                "start_line": 261,
                "end_line": 295,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "rc",
                    "array_size": null,
                    "line_number": 263
                  }
                ],
                "function_calls": [
                  {
                    "name": "int",
                    "line_number": 264
                  },
                  {
                    "name": "V_MarkRect",
                    "line_number": 270
                  },
                  {
                    "name": "if",
                    "line_number": 273
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 276
                  },
                  {
                    "name": "V_MarkRect",
                    "line_number": 282
                  },
                  {
                    "name": "V_DrawBlock",
                    "line_number": 284
                  },
                  {
                    "name": "if",
                    "line_number": 287
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 273
                  },
                  {
                    "type": "if",
                    "line_number": 287
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "wipeno",
                  "x",
                  "y",
                  "width",
                  "height",
                  "ticks"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "Z_Malloc",
                  "if",
                  "int",
                  "V_MarkRect",
                  "V_DrawBlock"
                ]
              },
              {
                "name": "if",
                "return_type": "initial stuff",
                "parameters": [
                  {
                    "type": "",
                    "name": "!go"
                  }
                ],
                "start_line": 279,
                "end_line": 285,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "Z_Malloc",
                    "line_number": 282
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "!go"
                ],
                "outputs": [
                  "initial stuff"
                ],
                "dependencies": [
                  "Z_Malloc"
                ]
              },
              {
                "name": "if",
                "return_type": "final stuff",
                "parameters": [
                  {
                    "type": "",
                    "name": "rc"
                  }
                ],
                "start_line": 293,
                "end_line": 297,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "rc"
                ],
                "outputs": [
                  "final stuff"
                ],
                "dependencies": []
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 56
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 57
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 79
              },
              {
                "name": "changed",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 88
              },
              {
                "name": "newval",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 91
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 134
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 168
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 177
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 178
              },
              {
                "name": "dy",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 179
              },
              {
                "name": "idx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 180
              },
              {
                "name": "done",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 222
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 233
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 245
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 258
              },
              {
                "name": "rc",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 270
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/f_wipe.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "f_wipe.h",
          "type": "file",
          "size": 1416,
          "last_modified": "2024-09-05T16:00:03.329196",
          "path": "linuxdoom-1.10/f_wipe.h",
          "readme": "# f_wipe.h\n\nThis file contains functionality related to f_wipe.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/f_wipe.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "g_game.c",
          "type": "file",
          "size": 36433,
          "last_modified": "2024-09-05T16:00:03.354728",
          "path": "linuxdoom-1.10/g_game.c",
          "readme": "# g_game.c\n\nThis file contains functionality related to g_game.",
          "dependencies": [
            "wi_stuff.h",
            "p_setup.h",
            "hu_stuff.h",
            "v_video.h",
            "m_argv.h",
            "d_main.h",
            "g_game.h",
            "doomdef.h",
            "st_stuff.h",
            "string.h",
            "f_finale.h",
            "w_wad.h",
            "p_local.h",
            "z_zone.h",
            "stdlib.h",
            "p_tick.h",
            "s_sound.h",
            "am_map.h",
            "p_saveg.h",
            "m_random.h",
            "r_sky.h",
            "sounds.h",
            "doomstat.h",
            "i_system.h",
            "m_misc.h",
            "m_menu.h",
            "dstrings.h",
            "r_data.h"
          ],
          "inputs": [
            "shareware",
            "gamestate",
            "ga_nothing",
            "gamemap",
            "slot",
            "i++",
            "map",
            "sk_nightmare",
            "playernum",
            "name",
            "9",
            "player",
            "';'",
            "1",
            "gameepisode",
            "mthing",
            "deathmatch",
            "episode",
            "sendpause",
            "description",
            "void",
            "skill",
            "strafe",
            "ev",
            "cmd",
            "commercial"
          ],
          "outputs": [
            "try to spawn at one of the other players spots",
            "special buttons",
            "check for special buttons",
            "set the sky map for the episode",
            "let movement keys cancel each other out",
            "spawn at random spot if in death match",
            "returning from secret level",
            "unlike gamemap",
            "go to secret level \n\telse",
            "define VERSIONSIZE\t\t16 \n\n\nvoid",
            "do main actions",
            "boolean",
            "define DEMOMARKER\t\t0x80\n\n\nvoid",
            "forward double click",
            "for statistics driver\n \n \n \nint",
            "do things to change the game state",
            "if 0",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "G_CmdChecksum",
                "return_type": "for statistics driver\n \n \n \nint",
                "parameters": [
                  {
                    "type": "ticcmd_t*",
                    "name": "cmd"
                  }
                ],
                "start_line": 215,
                "end_line": 224,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 217
                  },
                  {
                    "type": "return",
                    "name": "sum",
                    "array_size": null,
                    "line_number": 223
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 220
                  },
                  {
                    "name": "sizeof",
                    "line_number": 220
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 220
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "cmd"
                ],
                "outputs": [
                  "for statistics driver\n \n \n \nint"
                ],
                "dependencies": [
                  "sizeof",
                  "for"
                ]
              },
              {
                "name": "G_BuildTiccmd",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "ticcmd_t*",
                    "name": "cmd"
                  }
                ],
                "start_line": 237,
                "end_line": 437,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 239
                  },
                  {
                    "type": "boolean",
                    "name": "strafe",
                    "array_size": null,
                    "line_number": 240
                  },
                  {
                    "type": "boolean",
                    "name": "bstrafe",
                    "array_size": null,
                    "line_number": 241
                  },
                  {
                    "type": "int",
                    "name": "speed",
                    "array_size": null,
                    "line_number": 242
                  },
                  {
                    "type": "int",
                    "name": "tspeed",
                    "array_size": null,
                    "line_number": 243
                  },
                  {
                    "type": "int",
                    "name": "forward",
                    "array_size": null,
                    "line_number": 244
                  },
                  {
                    "type": "int",
                    "name": "side",
                    "array_size": null,
                    "line_number": 245
                  }
                ],
                "function_calls": [
                  {
                    "name": "I_BaseTiccmd",
                    "line_number": 249
                  },
                  {
                    "name": "memcpy",
                    "line_number": 250
                  },
                  {
                    "name": "sizeof",
                    "line_number": 250
                  },
                  {
                    "name": "if",
                    "line_number": 264
                  },
                  {
                    "name": "if",
                    "line_number": 272
                  },
                  {
                    "name": "if",
                    "line_number": 278
                  },
                  {
                    "name": "if",
                    "line_number": 280
                  },
                  {
                    "name": "fprintf",
                    "line_number": 282
                  },
                  {
                    "name": "if",
                    "line_number": 285
                  },
                  {
                    "name": "fprintf",
                    "line_number": 287
                  },
                  {
                    "name": "if",
                    "line_number": 290
                  },
                  {
                    "name": "if",
                    "line_number": 292
                  },
                  {
                    "name": "if",
                    "line_number": 298
                  },
                  {
                    "name": "if",
                    "line_number": 300
                  },
                  {
                    "name": "if",
                    "line_number": 302
                  },
                  {
                    "name": "if",
                    "line_number": 304
                  },
                  {
                    "name": "if",
                    "line_number": 308
                  },
                  {
                    "name": "fprintf",
                    "line_number": 310
                  },
                  {
                    "name": "if",
                    "line_number": 313
                  },
                  {
                    "name": "fprintf",
                    "line_number": 315
                  },
                  {
                    "name": "if",
                    "line_number": 318
                  },
                  {
                    "name": "if",
                    "line_number": 320
                  },
                  {
                    "name": "if",
                    "line_number": 322
                  },
                  {
                    "name": "if",
                    "line_number": 324
                  },
                  {
                    "name": "HU_dequeueChatChar",
                    "line_number": 328
                  },
                  {
                    "name": "if",
                    "line_number": 330
                  },
                  {
                    "name": "if",
                    "line_number": 334
                  },
                  {
                    "name": "for",
                    "line_number": 342
                  },
                  {
                    "name": "if",
                    "line_number": 343
                  },
                  {
                    "name": "if",
                    "line_number": 351
                  },
                  {
                    "name": "if",
                    "line_number": 355
                  },
                  {
                    "name": "if",
                    "line_number": 358
                  },
                  {
                    "name": "if",
                    "line_number": 360
                  },
                  {
                    "name": "if",
                    "line_number": 371
                  },
                  {
                    "name": "if",
                    "line_number": 382
                  },
                  {
                    "name": "if",
                    "line_number": 385
                  },
                  {
                    "name": "if",
                    "line_number": 387
                  },
                  {
                    "name": "if",
                    "line_number": 398
                  },
                  {
                    "name": "if",
                    "line_number": 406
                  },
                  {
                    "name": "if",
                    "line_number": 413
                  },
                  {
                    "name": "if",
                    "line_number": 415
                  },
                  {
                    "name": "if",
                    "line_number": 417
                  },
                  {
                    "name": "if",
                    "line_number": 419
                  },
                  {
                    "name": "if",
                    "line_number": 426
                  },
                  {
                    "name": "if",
                    "line_number": 432
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 264
                  },
                  {
                    "type": "else",
                    "line_number": 269
                  },
                  {
                    "type": "if",
                    "line_number": 272
                  },
                  {
                    "type": "else",
                    "line_number": 274
                  },
                  {
                    "type": "if",
                    "line_number": 278
                  },
                  {
                    "type": "if",
                    "line_number": 280
                  },
                  {
                    "type": "if",
                    "line_number": 285
                  },
                  {
                    "type": "if",
                    "line_number": 290
                  },
                  {
                    "type": "if",
                    "line_number": 292
                  },
                  {
                    "type": "else",
                    "line_number": 296
                  },
                  {
                    "type": "if",
                    "line_number": 298
                  },
                  {
                    "type": "if",
                    "line_number": 300
                  },
                  {
                    "type": "if",
                    "line_number": 302
                  },
                  {
                    "type": "if",
                    "line_number": 304
                  },
                  {
                    "type": "if",
                    "line_number": 308
                  },
                  {
                    "type": "if",
                    "line_number": 313
                  },
                  {
                    "type": "if",
                    "line_number": 318
                  },
                  {
                    "type": "if",
                    "line_number": 320
                  },
                  {
                    "type": "if",
                    "line_number": 322
                  },
                  {
                    "type": "if",
                    "line_number": 324
                  },
                  {
                    "type": "if",
                    "line_number": 330
                  },
                  {
                    "type": "if",
                    "line_number": 334
                  },
                  {
                    "type": "if",
                    "line_number": 337
                  },
                  {
                    "type": "for",
                    "line_number": 342
                  },
                  {
                    "type": "if",
                    "line_number": 343
                  },
                  {
                    "type": "if",
                    "line_number": 351
                  },
                  {
                    "type": "if",
                    "line_number": 355
                  },
                  {
                    "type": "if",
                    "line_number": 358
                  },
                  {
                    "type": "if",
                    "line_number": 360
                  },
                  {
                    "type": "else",
                    "line_number": 365
                  },
                  {
                    "type": "else",
                    "line_number": 368
                  },
                  {
                    "type": "if",
                    "line_number": 371
                  },
                  {
                    "type": "if",
                    "line_number": 382
                  },
                  {
                    "type": "if",
                    "line_number": 385
                  },
                  {
                    "type": "if",
                    "line_number": 387
                  },
                  {
                    "type": "else",
                    "line_number": 392
                  },
                  {
                    "type": "else",
                    "line_number": 395
                  },
                  {
                    "type": "if",
                    "line_number": 398
                  },
                  {
                    "type": "if",
                    "line_number": 406
                  },
                  {
                    "type": "else",
                    "line_number": 408
                  },
                  {
                    "type": "if",
                    "line_number": 413
                  },
                  {
                    "type": "if",
                    "line_number": 415
                  },
                  {
                    "type": "if",
                    "line_number": 417
                  },
                  {
                    "type": "if",
                    "line_number": 419
                  },
                  {
                    "type": "if",
                    "line_number": 426
                  },
                  {
                    "type": "if",
                    "line_number": 432
                  }
                ],
                "complexity": 51,
                "inputs": [
                  "cmd"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "if",
                  "for",
                  "HU_dequeueChatChar",
                  "sizeof",
                  "I_BaseTiccmd",
                  "memcpy"
                ]
              },
              {
                "name": "if",
                "return_type": "let movement keys cancel each other out",
                "parameters": [
                  {
                    "type": "",
                    "name": "strafe"
                  }
                ],
                "start_line": 277,
                "end_line": 294,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 279
                  },
                  {
                    "name": "fprintf",
                    "line_number": 281
                  },
                  {
                    "name": "if",
                    "line_number": 284
                  },
                  {
                    "name": "fprintf",
                    "line_number": 286
                  },
                  {
                    "name": "if",
                    "line_number": 289
                  },
                  {
                    "name": "if",
                    "line_number": 291
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 279
                  },
                  {
                    "type": "if",
                    "line_number": 284
                  },
                  {
                    "type": "if",
                    "line_number": 289
                  },
                  {
                    "type": "if",
                    "line_number": 291
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "strafe"
                ],
                "outputs": [
                  "let movement keys cancel each other out"
                ],
                "dependencies": [
                  "fprintf",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "forward double click",
                "parameters": [
                  {
                    "type": "mousebuttons[mousebforward] != dclickstate && dclicktime >",
                    "name": "1"
                  }
                ],
                "start_line": 354,
                "end_line": 366,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 357
                  },
                  {
                    "name": "if",
                    "line_number": 359
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 357
                  },
                  {
                    "type": "if",
                    "line_number": 359
                  },
                  {
                    "type": "else",
                    "line_number": 364
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "1"
                ],
                "outputs": [
                  "forward double click"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "special buttons",
                "parameters": [
                  {
                    "type": "",
                    "name": "sendpause"
                  }
                ],
                "start_line": 425,
                "end_line": 429,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "sendpause"
                ],
                "outputs": [
                  "special buttons"
                ],
                "dependencies": []
              },
              {
                "name": "G_DoLoadLevel",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 445,
                "end_line": 497,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 447
                  }
                ],
                "function_calls": [
                  {
                    "name": "R_FlatNumForName",
                    "line_number": 454
                  },
                  {
                    "name": "if",
                    "line_number": 458
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 462
                  },
                  {
                    "name": "if",
                    "line_number": 463
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 464
                  },
                  {
                    "name": "if",
                    "line_number": 466
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 467
                  },
                  {
                    "name": "if",
                    "line_number": 472
                  },
                  {
                    "name": "for",
                    "line_number": 477
                  },
                  {
                    "name": "if",
                    "line_number": 479
                  },
                  {
                    "name": "memset",
                    "line_number": 481
                  },
                  {
                    "name": "sizeof",
                    "line_number": 481
                  },
                  {
                    "name": "P_SetupLevel",
                    "line_number": 484
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 486
                  },
                  {
                    "name": "Z_CheckHeap",
                    "line_number": 488
                  },
                  {
                    "name": "memset",
                    "line_number": 491
                  },
                  {
                    "name": "sizeof",
                    "line_number": 491
                  },
                  {
                    "name": "memset",
                    "line_number": 495
                  },
                  {
                    "name": "sizeof",
                    "line_number": 495
                  },
                  {
                    "name": "memset",
                    "line_number": 496
                  },
                  {
                    "name": "sizeof",
                    "line_number": 496
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 452
                  },
                  {
                    "type": "if",
                    "line_number": 458
                  },
                  {
                    "type": "if",
                    "line_number": 463
                  },
                  {
                    "type": "else",
                    "line_number": 465
                  },
                  {
                    "type": "if",
                    "line_number": 466
                  },
                  {
                    "type": "for",
                    "line_number": 470
                  },
                  {
                    "type": "if",
                    "line_number": 472
                  },
                  {
                    "type": "for",
                    "line_number": 477
                  },
                  {
                    "type": "if",
                    "line_number": 479
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SetupLevel",
                  "for",
                  "if",
                  "memset",
                  "I_GetTime",
                  "sizeof",
                  "R_TextureNumForName",
                  "Z_CheckHeap",
                  "R_FlatNumForName"
                ]
              },
              {
                "name": "G_Responder",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "event_t*",
                    "name": "ev"
                  }
                ],
                "start_line": 504,
                "end_line": 597,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 517
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 530
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 532
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 541
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 545
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 547
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 549
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 555
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 564
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 568
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 573
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 581
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 590
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 596
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 507
                  },
                  {
                    "name": "if",
                    "line_number": 514
                  },
                  {
                    "name": "while",
                    "line_number": 516
                  },
                  {
                    "name": "if",
                    "line_number": 521
                  },
                  {
                    "name": "if",
                    "line_number": 525
                  },
                  {
                    "name": "M_StartControlPanel",
                    "line_number": 529
                  },
                  {
                    "name": "if",
                    "line_number": 535
                  },
                  {
                    "name": "if",
                    "line_number": 538
                  },
                  {
                    "name": "G_DeathMatchSpawnPlayer",
                    "line_number": 540
                  },
                  {
                    "name": "if",
                    "line_number": 544
                  },
                  {
                    "name": "HU_Responder",
                    "line_number": 544
                  },
                  {
                    "name": "if",
                    "line_number": 546
                  },
                  {
                    "name": "ST_Responder",
                    "line_number": 546
                  },
                  {
                    "name": "if",
                    "line_number": 548
                  },
                  {
                    "name": "AM_Responder",
                    "line_number": 548
                  },
                  {
                    "name": "if",
                    "line_number": 552
                  },
                  {
                    "name": "if",
                    "line_number": 554
                  },
                  {
                    "name": "F_Responder",
                    "line_number": 554
                  },
                  {
                    "name": "switch",
                    "line_number": 558
                  },
                  {
                    "name": "if",
                    "line_number": 561
                  },
                  {
                    "name": "if",
                    "line_number": 566
                  },
                  {
                    "name": "if",
                    "line_number": 571
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 507
                  },
                  {
                    "type": "if",
                    "line_number": 514
                  },
                  {
                    "type": "while",
                    "line_number": 516
                  },
                  {
                    "type": "if",
                    "line_number": 520
                  },
                  {
                    "type": "if",
                    "line_number": 521
                  },
                  {
                    "type": "if",
                    "line_number": 525
                  },
                  {
                    "type": "if",
                    "line_number": 535
                  },
                  {
                    "type": "if",
                    "line_number": 537
                  },
                  {
                    "type": "if",
                    "line_number": 538
                  },
                  {
                    "type": "if",
                    "line_number": 544
                  },
                  {
                    "type": "if",
                    "line_number": 546
                  },
                  {
                    "type": "if",
                    "line_number": 548
                  },
                  {
                    "type": "if",
                    "line_number": 552
                  },
                  {
                    "type": "if",
                    "line_number": 554
                  },
                  {
                    "type": "if",
                    "line_number": 561
                  },
                  {
                    "type": "if",
                    "line_number": 566
                  },
                  {
                    "type": "if",
                    "line_number": 571
                  }
                ],
                "complexity": 16,
                "inputs": [
                  "ev"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "while",
                  "G_DeathMatchSpawnPlayer",
                  "ST_Responder",
                  "if",
                  "AM_Responder",
                  "HU_Responder",
                  "M_StartControlPanel",
                  "F_Responder",
                  "switch"
                ]
              },
              {
                "name": "if",
                "return_type": "if 0",
                "parameters": [
                  {
                    "type": "devparm && ev->type == ev_keydown && ev->data1 ==",
                    "name": "';'"
                  }
                ],
                "start_line": 537,
                "end_line": 541,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 540
                  }
                ],
                "function_calls": [
                  {
                    "name": "G_DeathMatchSpawnPlayer",
                    "line_number": 539
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "';'"
                ],
                "outputs": [
                  "if 0"
                ],
                "dependencies": [
                  "G_DeathMatchSpawnPlayer"
                ]
              },
              {
                "name": "G_Ticker",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 605,
                "end_line": 748,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 607
                  },
                  {
                    "type": "int",
                    "name": "buf",
                    "array_size": null,
                    "line_number": 608
                  },
                  {
                    "type": "static char",
                    "name": "turbomessage",
                    "array_size": "80",
                    "line_number": 675
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 612
                  },
                  {
                    "name": "if",
                    "line_number": 613
                  },
                  {
                    "name": "G_DoReborn",
                    "line_number": 614
                  },
                  {
                    "name": "while",
                    "line_number": 617
                  },
                  {
                    "name": "switch",
                    "line_number": 619
                  },
                  {
                    "name": "G_DoLoadLevel",
                    "line_number": 622
                  },
                  {
                    "name": "G_DoNewGame",
                    "line_number": 625
                  },
                  {
                    "name": "G_DoLoadGame",
                    "line_number": 628
                  },
                  {
                    "name": "G_DoSaveGame",
                    "line_number": 631
                  },
                  {
                    "name": "G_DoPlayDemo",
                    "line_number": 634
                  },
                  {
                    "name": "G_DoCompleted",
                    "line_number": 637
                  },
                  {
                    "name": "F_StartFinale",
                    "line_number": 640
                  },
                  {
                    "name": "G_DoWorldDone",
                    "line_number": 643
                  },
                  {
                    "name": "M_ScreenShot",
                    "line_number": 646
                  },
                  {
                    "name": "for",
                    "line_number": 658
                  },
                  {
                    "name": "if",
                    "line_number": 660
                  },
                  {
                    "name": "memcpy",
                    "line_number": 664
                  },
                  {
                    "name": "sizeof",
                    "line_number": 664
                  },
                  {
                    "name": "if",
                    "line_number": 666
                  },
                  {
                    "name": "G_ReadDemoTiccmd",
                    "line_number": 667
                  },
                  {
                    "name": "if",
                    "line_number": 668
                  },
                  {
                    "name": "G_WriteDemoTiccmd",
                    "line_number": 669
                  },
                  {
                    "name": "if",
                    "line_number": 672
                  },
                  {
                    "name": "sprintf",
                    "line_number": 677
                  },
                  {
                    "name": "if",
                    "line_number": 681
                  },
                  {
                    "name": "if",
                    "line_number": 683
                  },
                  {
                    "name": "I_Error",
                    "line_number": 686
                  },
                  {
                    "name": "failure",
                    "line_number": 686
                  },
                  {
                    "name": "if",
                    "line_number": 689
                  },
                  {
                    "name": "for",
                    "line_number": 698
                  },
                  {
                    "name": "if",
                    "line_number": 700
                  },
                  {
                    "name": "if",
                    "line_number": 702
                  },
                  {
                    "name": "switch",
                    "line_number": 704
                  },
                  {
                    "name": "if",
                    "line_number": 708
                  },
                  {
                    "name": "S_PauseSound",
                    "line_number": 709
                  },
                  {
                    "name": "S_ResumeSound",
                    "line_number": 711
                  },
                  {
                    "name": "if",
                    "line_number": 715
                  },
                  {
                    "name": "strcpy",
                    "line_number": 716
                  },
                  {
                    "name": "switch",
                    "line_number": 727
                  },
                  {
                    "name": "P_Ticker",
                    "line_number": 730
                  },
                  {
                    "name": "ST_Ticker",
                    "line_number": 731
                  },
                  {
                    "name": "AM_Ticker",
                    "line_number": 732
                  },
                  {
                    "name": "HU_Ticker",
                    "line_number": 733
                  },
                  {
                    "name": "WI_Ticker",
                    "line_number": 737
                  },
                  {
                    "name": "F_Ticker",
                    "line_number": 741
                  },
                  {
                    "name": "D_PageTicker",
                    "line_number": 745
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 611
                  },
                  {
                    "type": "for",
                    "line_number": 612
                  },
                  {
                    "type": "if",
                    "line_number": 613
                  },
                  {
                    "type": "while",
                    "line_number": 617
                  },
                  {
                    "type": "for",
                    "line_number": 658
                  },
                  {
                    "type": "if",
                    "line_number": 660
                  },
                  {
                    "type": "if",
                    "line_number": 666
                  },
                  {
                    "type": "if",
                    "line_number": 668
                  },
                  {
                    "type": "for",
                    "line_number": 671
                  },
                  {
                    "type": "if",
                    "line_number": 672
                  },
                  {
                    "type": "if",
                    "line_number": 681
                  },
                  {
                    "type": "if",
                    "line_number": 683
                  },
                  {
                    "type": "if",
                    "line_number": 689
                  },
                  {
                    "type": "else",
                    "line_number": 691
                  },
                  {
                    "type": "for",
                    "line_number": 697
                  },
                  {
                    "type": "for",
                    "line_number": 698
                  },
                  {
                    "type": "if",
                    "line_number": 700
                  },
                  {
                    "type": "if",
                    "line_number": 702
                  },
                  {
                    "type": "if",
                    "line_number": 708
                  },
                  {
                    "type": "else",
                    "line_number": 710
                  },
                  {
                    "type": "if",
                    "line_number": 715
                  }
                ],
                "complexity": 19,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "strcpy",
                  "F_StartFinale",
                  "I_Error",
                  "sizeof",
                  "G_ReadDemoTiccmd",
                  "failure",
                  "HU_Ticker",
                  "memcpy",
                  "S_PauseSound",
                  "AM_Ticker",
                  "for",
                  "G_DoLoadLevel",
                  "G_DoLoadGame",
                  "F_Ticker",
                  "G_DoCompleted",
                  "switch",
                  "G_WriteDemoTiccmd",
                  "S_ResumeSound",
                  "D_PageTicker",
                  "while",
                  "P_Ticker",
                  "G_DoWorldDone",
                  "G_DoNewGame",
                  "WI_Ticker",
                  "G_DoSaveGame",
                  "G_DoPlayDemo",
                  "if",
                  "M_ScreenShot",
                  "G_DoReborn",
                  "ST_Ticker",
                  "sprintf"
                ]
              },
              {
                "name": "while",
                "return_type": "do things to change the game state",
                "parameters": [
                  {
                    "type": "gameaction !=",
                    "name": "ga_nothing"
                  }
                ],
                "start_line": 616,
                "end_line": 651,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 618
                  },
                  {
                    "name": "G_DoLoadLevel",
                    "line_number": 621
                  },
                  {
                    "name": "G_DoNewGame",
                    "line_number": 624
                  },
                  {
                    "name": "G_DoLoadGame",
                    "line_number": 627
                  },
                  {
                    "name": "G_DoSaveGame",
                    "line_number": 630
                  },
                  {
                    "name": "G_DoPlayDemo",
                    "line_number": 633
                  },
                  {
                    "name": "G_DoCompleted",
                    "line_number": 636
                  },
                  {
                    "name": "F_StartFinale",
                    "line_number": 639
                  },
                  {
                    "name": "G_DoWorldDone",
                    "line_number": 642
                  },
                  {
                    "name": "M_ScreenShot",
                    "line_number": 645
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "ga_nothing"
                ],
                "outputs": [
                  "do things to change the game state"
                ],
                "dependencies": [
                  "G_DoSaveGame",
                  "G_DoPlayDemo",
                  "G_DoLoadLevel",
                  "M_ScreenShot",
                  "G_DoLoadGame",
                  "F_StartFinale",
                  "switch",
                  "G_DoCompleted",
                  "G_DoWorldDone",
                  "G_DoNewGame"
                ]
              },
              {
                "name": "for",
                "return_type": "check for special buttons",
                "parameters": [
                  {
                    "type": "i=0 ; i<MAXPLAYERS ;",
                    "name": "i++"
                  }
                ],
                "start_line": 697,
                "end_line": 723,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 699
                  },
                  {
                    "name": "if",
                    "line_number": 701
                  },
                  {
                    "name": "switch",
                    "line_number": 703
                  },
                  {
                    "name": "if",
                    "line_number": 707
                  },
                  {
                    "name": "S_PauseSound",
                    "line_number": 708
                  },
                  {
                    "name": "S_ResumeSound",
                    "line_number": 710
                  },
                  {
                    "name": "if",
                    "line_number": 714
                  },
                  {
                    "name": "strcpy",
                    "line_number": 715
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 699
                  },
                  {
                    "type": "if",
                    "line_number": 701
                  },
                  {
                    "type": "if",
                    "line_number": 707
                  },
                  {
                    "type": "else",
                    "line_number": 709
                  },
                  {
                    "type": "if",
                    "line_number": 714
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "i++"
                ],
                "outputs": [
                  "check for special buttons"
                ],
                "dependencies": [
                  "strcpy",
                  "if",
                  "switch",
                  "S_ResumeSound",
                  "S_PauseSound"
                ]
              },
              {
                "name": "switch",
                "return_type": "do main actions",
                "parameters": [
                  {
                    "type": "",
                    "name": "gamestate"
                  }
                ],
                "start_line": 726,
                "end_line": 746,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_Ticker",
                    "line_number": 729
                  },
                  {
                    "name": "ST_Ticker",
                    "line_number": 730
                  },
                  {
                    "name": "AM_Ticker",
                    "line_number": 731
                  },
                  {
                    "name": "HU_Ticker",
                    "line_number": 732
                  },
                  {
                    "name": "WI_Ticker",
                    "line_number": 736
                  },
                  {
                    "name": "F_Ticker",
                    "line_number": 740
                  },
                  {
                    "name": "D_PageTicker",
                    "line_number": 744
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "gamestate"
                ],
                "outputs": [
                  "do main actions"
                ],
                "dependencies": [
                  "WI_Ticker",
                  "AM_Ticker",
                  "P_Ticker",
                  "F_Ticker",
                  "HU_Ticker",
                  "ST_Ticker",
                  "D_PageTicker"
                ]
              },
              {
                "name": "G_InitPlayer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "player"
                  }
                ],
                "start_line": 761,
                "end_line": 771,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "G_PlayerReborn",
                    "line_number": 769
                  }
                ],
                "control_flow": [
                  {
                    "type": "else",
                    "line_number": 768
                  }
                ],
                "complexity": 1,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "G_PlayerReborn"
                ]
              },
              {
                "name": "G_PlayerFinishLevel",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "player"
                  }
                ],
                "start_line": 779,
                "end_line": 792,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "memset",
                    "line_number": 785
                  },
                  {
                    "name": "sizeof",
                    "line_number": 785
                  },
                  {
                    "name": "memset",
                    "line_number": 786
                  },
                  {
                    "name": "sizeof",
                    "line_number": 786
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "memset",
                  "sizeof"
                ]
              },
              {
                "name": "G_PlayerReborn",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "player"
                  }
                ],
                "start_line": 800,
                "end_line": 833,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 803
                  },
                  {
                    "type": "int",
                    "name": "killcount",
                    "array_size": null,
                    "line_number": 805
                  },
                  {
                    "type": "int",
                    "name": "itemcount",
                    "array_size": null,
                    "line_number": 806
                  },
                  {
                    "type": "int",
                    "name": "secretcount",
                    "array_size": null,
                    "line_number": 807
                  }
                ],
                "function_calls": [
                  {
                    "name": "memcpy",
                    "line_number": 809
                  },
                  {
                    "name": "sizeof",
                    "line_number": 809
                  },
                  {
                    "name": "memset",
                    "line_number": 815
                  },
                  {
                    "name": "sizeof",
                    "line_number": 815
                  },
                  {
                    "name": "memcpy",
                    "line_number": 817
                  },
                  {
                    "name": "sizeof",
                    "line_number": 817
                  },
                  {
                    "name": "for",
                    "line_number": 830
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 830
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "memcpy",
                  "for",
                  "memset",
                  "sizeof"
                ]
              },
              {
                "name": "G_CheckSpot",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "int",
                    "name": "playernum"
                  },
                  {
                    "type": "mapthing_t*",
                    "name": "mthing"
                  }
                ],
                "start_line": 843,
                "end_line": 886,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "x",
                    "array_size": null,
                    "line_number": 845
                  },
                  {
                    "type": "fixed_t",
                    "name": "y",
                    "array_size": null,
                    "line_number": 846
                  },
                  {
                    "type": "unsigned",
                    "name": "an",
                    "array_size": null,
                    "line_number": 848
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 850
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 858
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 859
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 866
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 885
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 852
                  },
                  {
                    "name": "for",
                    "line_number": 855
                  },
                  {
                    "name": "if",
                    "line_number": 856
                  },
                  {
                    "name": "if",
                    "line_number": 865
                  },
                  {
                    "name": "P_CheckPosition",
                    "line_number": 865
                  },
                  {
                    "name": "if",
                    "line_number": 869
                  },
                  {
                    "name": "P_RemoveMobj",
                    "line_number": 870
                  },
                  {
                    "name": "R_PointInSubsector",
                    "line_number": 875
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 878
                  },
                  {
                    "name": "if",
                    "line_number": 882
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 883
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 852
                  },
                  {
                    "type": "for",
                    "line_number": 855
                  },
                  {
                    "type": "if",
                    "line_number": 856
                  },
                  {
                    "type": "if",
                    "line_number": 865
                  },
                  {
                    "type": "if",
                    "line_number": 868
                  },
                  {
                    "type": "if",
                    "line_number": 869
                  },
                  {
                    "type": "if",
                    "line_number": 882
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "playernum",
                  "mthing"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "R_PointInSubsector",
                  "for",
                  "if",
                  "P_SpawnMobj",
                  "P_CheckPosition",
                  "S_StartSound",
                  "P_RemoveMobj"
                ]
              },
              {
                "name": "G_DeathMatchSpawnPlayer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "playernum"
                  }
                ],
                "start_line": 897,
                "end_line": 919,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "selections",
                    "array_size": null,
                    "line_number": 900
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 903
                  },
                  {
                    "name": "I_Error",
                    "line_number": 904
                  },
                  {
                    "name": "for",
                    "line_number": 906
                  },
                  {
                    "name": "P_Random",
                    "line_number": 908
                  },
                  {
                    "name": "if",
                    "line_number": 909
                  },
                  {
                    "name": "G_CheckSpot",
                    "line_number": 909
                  },
                  {
                    "name": "P_SpawnPlayer",
                    "line_number": 912
                  },
                  {
                    "name": "P_SpawnPlayer",
                    "line_number": 918
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 903
                  },
                  {
                    "type": "for",
                    "line_number": 906
                  },
                  {
                    "type": "if",
                    "line_number": 909
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "playernum"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SpawnPlayer",
                  "for",
                  "G_CheckSpot",
                  "if",
                  "I_Error",
                  "P_Random"
                ]
              },
              {
                "name": "G_DoReborn",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "playernum"
                  }
                ],
                "start_line": 924,
                "end_line": 967,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 926
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 928
                  },
                  {
                    "name": "if",
                    "line_number": 941
                  },
                  {
                    "name": "G_DeathMatchSpawnPlayer",
                    "line_number": 943
                  },
                  {
                    "name": "if",
                    "line_number": 947
                  },
                  {
                    "name": "G_CheckSpot",
                    "line_number": 947
                  },
                  {
                    "name": "P_SpawnPlayer",
                    "line_number": 949
                  },
                  {
                    "name": "for",
                    "line_number": 954
                  },
                  {
                    "name": "if",
                    "line_number": 956
                  },
                  {
                    "name": "G_CheckSpot",
                    "line_number": 956
                  },
                  {
                    "name": "P_SpawnPlayer",
                    "line_number": 959
                  },
                  {
                    "name": "P_SpawnPlayer",
                    "line_number": 965
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 928
                  },
                  {
                    "type": "else",
                    "line_number": 933
                  },
                  {
                    "type": "if",
                    "line_number": 940
                  },
                  {
                    "type": "if",
                    "line_number": 941
                  },
                  {
                    "type": "if",
                    "line_number": 947
                  },
                  {
                    "type": "for",
                    "line_number": 954
                  },
                  {
                    "type": "if",
                    "line_number": 956
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "playernum"
                ],
                "outputs": [],
                "dependencies": [
                  "G_DeathMatchSpawnPlayer",
                  "P_SpawnPlayer",
                  "for",
                  "G_CheckSpot",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "spawn at random spot if in death match",
                "parameters": [
                  {
                    "type": "",
                    "name": "deathmatch"
                  }
                ],
                "start_line": 940,
                "end_line": 944,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "G_DeathMatchSpawnPlayer",
                    "line_number": 942
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "deathmatch"
                ],
                "outputs": [
                  "spawn at random spot if in death match"
                ],
                "dependencies": [
                  "G_DeathMatchSpawnPlayer"
                ]
              },
              {
                "name": "for",
                "return_type": "try to spawn at one of the other players spots",
                "parameters": [
                  {
                    "type": "i=0 ; i<MAXPLAYERS ;",
                    "name": "i++"
                  }
                ],
                "start_line": 953,
                "end_line": 963,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 955
                  },
                  {
                    "name": "G_CheckSpot",
                    "line_number": 955
                  },
                  {
                    "name": "P_SpawnPlayer",
                    "line_number": 958
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 955
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "i++"
                ],
                "outputs": [
                  "try to spawn at one of the other players spots"
                ],
                "dependencies": [
                  "G_CheckSpot",
                  "P_SpawnPlayer",
                  "if"
                ]
              },
              {
                "name": "G_ScreenShot",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 970,
                "end_line": 973,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "G_ExitLevel",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1002,
                "end_line": 1006,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "G_SecretExitLevel",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1009,
                "end_line": 1018,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1012
                  },
                  {
                    "name": "W_CheckNumForName",
                    "line_number": 1013
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1012
                  },
                  {
                    "type": "else",
                    "line_number": 1015
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CheckNumForName",
                  "if"
                ]
              },
              {
                "name": "G_DoCompleted",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1020,
                "end_line": 1141,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1022
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1026
                  },
                  {
                    "name": "if",
                    "line_number": 1027
                  },
                  {
                    "name": "G_PlayerFinishLevel",
                    "line_number": 1028
                  },
                  {
                    "name": "if",
                    "line_number": 1030
                  },
                  {
                    "name": "AM_Stop",
                    "line_number": 1031
                  },
                  {
                    "name": "if",
                    "line_number": 1033
                  },
                  {
                    "name": "switch",
                    "line_number": 1034
                  },
                  {
                    "name": "for",
                    "line_number": 1040
                  },
                  {
                    "name": "if",
                    "line_number": 1046
                  },
                  {
                    "name": "if",
                    "line_number": 1054
                  },
                  {
                    "name": "for",
                    "line_number": 1058
                  },
                  {
                    "name": "if",
                    "line_number": 1069
                  },
                  {
                    "name": "if",
                    "line_number": 1071
                  },
                  {
                    "name": "switch",
                    "line_number": 1072
                  },
                  {
                    "name": "switch",
                    "line_number": 1078
                  },
                  {
                    "name": "if",
                    "line_number": 1087
                  },
                  {
                    "name": "if",
                    "line_number": 1089
                  },
                  {
                    "name": "switch",
                    "line_number": 1092
                  },
                  {
                    "name": "if",
                    "line_number": 1116
                  },
                  {
                    "name": "for",
                    "line_number": 1122
                  },
                  {
                    "name": "memcpy",
                    "line_number": 1129
                  },
                  {
                    "name": "sizeof",
                    "line_number": 1130
                  },
                  {
                    "name": "if",
                    "line_number": 1137
                  },
                  {
                    "name": "memcpy",
                    "line_number": 1138
                  },
                  {
                    "name": "sizeof",
                    "line_number": 1138
                  },
                  {
                    "name": "WI_Start",
                    "line_number": 1140
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1026
                  },
                  {
                    "type": "if",
                    "line_number": 1027
                  },
                  {
                    "type": "if",
                    "line_number": 1030
                  },
                  {
                    "type": "if",
                    "line_number": 1033
                  },
                  {
                    "type": "for",
                    "line_number": 1040
                  },
                  {
                    "type": "if",
                    "line_number": 1045
                  },
                  {
                    "type": "if",
                    "line_number": 1046
                  },
                  {
                    "type": "if",
                    "line_number": 1054
                  },
                  {
                    "type": "for",
                    "line_number": 1058
                  },
                  {
                    "type": "if",
                    "line_number": 1069
                  },
                  {
                    "type": "if",
                    "line_number": 1071
                  },
                  {
                    "type": "else",
                    "line_number": 1077
                  },
                  {
                    "type": "else",
                    "line_number": 1085
                  },
                  {
                    "type": "if",
                    "line_number": 1087
                  },
                  {
                    "type": "if",
                    "line_number": 1089
                  },
                  {
                    "type": "else",
                    "line_number": 1108
                  },
                  {
                    "type": "if",
                    "line_number": 1116
                  },
                  {
                    "type": "else",
                    "line_number": 1118
                  },
                  {
                    "type": "for",
                    "line_number": 1122
                  },
                  {
                    "type": "if",
                    "line_number": 1137
                  }
                ],
                "complexity": 17,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for",
                  "WI_Start",
                  "G_PlayerFinishLevel",
                  "sizeof",
                  "memcpy",
                  "switch",
                  "AM_Stop"
                ]
              },
              {
                "name": "if",
                "return_type": "unlike gamemap",
                "parameters": [
                  {
                    "type": "gamemode ==",
                    "name": "commercial"
                  }
                ],
                "start_line": 1068,
                "end_line": 1083,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1070
                  },
                  {
                    "name": "switch",
                    "line_number": 1071
                  },
                  {
                    "name": "switch",
                    "line_number": 1077
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1070
                  },
                  {
                    "type": "else",
                    "line_number": 1076
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "commercial"
                ],
                "outputs": [
                  "unlike gamemap"
                ],
                "dependencies": [
                  "switch",
                  "if"
                ]
              },
              {
                "name": "switch",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "",
                    "name": "gamemap"
                  }
                ],
                "start_line": 1077,
                "end_line": 1082,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "gamemap"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "go to secret level \n\telse",
                "parameters": [
                  {
                    "type": "gamemap ==",
                    "name": "9"
                  }
                ],
                "start_line": 1088,
                "end_line": 1106,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 1091
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "9"
                ],
                "outputs": [
                  "go to secret level \n\telse"
                ],
                "dependencies": [
                  "switch"
                ]
              },
              {
                "name": "switch",
                "return_type": "returning from secret level",
                "parameters": [
                  {
                    "type": "",
                    "name": "gameepisode"
                  }
                ],
                "start_line": 1091,
                "end_line": 1105,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "gameepisode"
                ],
                "outputs": [
                  "returning from secret level"
                ],
                "dependencies": []
              },
              {
                "name": "G_WorldDone",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1147,
                "end_line": 1170,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1151
                  },
                  {
                    "name": "if",
                    "line_number": 1154
                  },
                  {
                    "name": "switch",
                    "line_number": 1156
                  },
                  {
                    "name": "if",
                    "line_number": 1160
                  },
                  {
                    "name": "F_StartFinale",
                    "line_number": 1166
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1151
                  },
                  {
                    "type": "if",
                    "line_number": 1154
                  },
                  {
                    "type": "if",
                    "line_number": 1160
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "switch",
                  "F_StartFinale",
                  "if"
                ]
              },
              {
                "name": "G_DoWorldDone",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1172,
                "end_line": 1179,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "G_DoLoadLevel",
                    "line_number": 1176
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "G_DoLoadLevel"
                ]
              },
              {
                "name": "G_LoadGame",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "name"
                  }
                ],
                "start_line": 1192,
                "end_line": 1196,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "strcpy",
                    "line_number": 1194
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "name"
                ],
                "outputs": [],
                "dependencies": [
                  "strcpy"
                ]
              },
              {
                "name": "G_DoLoadGame",
                "return_type": "define VERSIONSIZE\t\t16 \n\n\nvoid",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1198,
                "end_line": 1249,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "length",
                    "array_size": null,
                    "line_number": 1200
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1201
                  }
                ],
                "function_calls": [
                  {
                    "name": "M_ReadFile",
                    "line_number": 1207
                  },
                  {
                    "name": "memset",
                    "line_number": 1211
                  },
                  {
                    "name": "sizeof",
                    "line_number": 1211
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1212
                  },
                  {
                    "name": "if",
                    "line_number": 1213
                  },
                  {
                    "name": "strcmp",
                    "line_number": 1213
                  },
                  {
                    "name": "for",
                    "line_number": 1220
                  },
                  {
                    "name": "G_InitNew",
                    "line_number": 1224
                  },
                  {
                    "name": "P_UnArchivePlayers",
                    "line_number": 1233
                  },
                  {
                    "name": "P_UnArchiveWorld",
                    "line_number": 1234
                  },
                  {
                    "name": "P_UnArchiveThinkers",
                    "line_number": 1235
                  },
                  {
                    "name": "P_UnArchiveSpecials",
                    "line_number": 1236
                  },
                  {
                    "name": "if",
                    "line_number": 1238
                  },
                  {
                    "name": "I_Error",
                    "line_number": 1239
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 1242
                  },
                  {
                    "name": "if",
                    "line_number": 1244
                  },
                  {
                    "name": "R_ExecuteSetViewSize",
                    "line_number": 1245
                  },
                  {
                    "name": "R_FillBackScreen",
                    "line_number": 1248
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1213
                  },
                  {
                    "type": "for",
                    "line_number": 1220
                  },
                  {
                    "type": "if",
                    "line_number": 1238
                  },
                  {
                    "type": "if",
                    "line_number": 1244
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "define VERSIONSIZE\t\t16 \n\n\nvoid"
                ],
                "dependencies": [
                  "P_UnArchiveSpecials",
                  "Z_Free",
                  "if",
                  "strcmp",
                  "for",
                  "memset",
                  "P_UnArchivePlayers",
                  "I_Error",
                  "sizeof",
                  "R_FillBackScreen",
                  "G_InitNew",
                  "P_UnArchiveWorld",
                  "sprintf",
                  "P_UnArchiveThinkers",
                  "R_ExecuteSetViewSize",
                  "M_ReadFile"
                ]
              },
              {
                "name": "G_SaveGame",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "slot"
                  },
                  {
                    "type": "char*",
                    "name": "description"
                  }
                ],
                "start_line": 1260,
                "end_line": 1265,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "strcpy",
                    "line_number": 1263
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "slot",
                  "description"
                ],
                "outputs": [],
                "dependencies": [
                  "strcpy"
                ]
              },
              {
                "name": "G_DoSaveGame",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1270,
                "end_line": 1320,
                "local_variables": [
                  {
                    "type": "char",
                    "name": "name",
                    "array_size": "100",
                    "line_number": 1272
                  },
                  {
                    "type": "int",
                    "name": "length",
                    "array_size": null,
                    "line_number": 1275
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1276
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1278
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 1278
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1279
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1281
                  },
                  {
                    "name": "memcpy",
                    "line_number": 1286
                  },
                  {
                    "name": "memset",
                    "line_number": 1288
                  },
                  {
                    "name": "sizeof",
                    "line_number": 1288
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1289
                  },
                  {
                    "name": "memcpy",
                    "line_number": 1290
                  },
                  {
                    "name": "for",
                    "line_number": 1296
                  },
                  {
                    "name": "P_ArchivePlayers",
                    "line_number": 1302
                  },
                  {
                    "name": "P_ArchiveWorld",
                    "line_number": 1303
                  },
                  {
                    "name": "P_ArchiveThinkers",
                    "line_number": 1304
                  },
                  {
                    "name": "P_ArchiveSpecials",
                    "line_number": 1305
                  },
                  {
                    "name": "if",
                    "line_number": 1310
                  },
                  {
                    "name": "I_Error",
                    "line_number": 1311
                  },
                  {
                    "name": "M_WriteFile",
                    "line_number": 1312
                  },
                  {
                    "name": "R_FillBackScreen",
                    "line_number": 1319
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1278
                  },
                  {
                    "type": "else",
                    "line_number": 1280
                  },
                  {
                    "type": "for",
                    "line_number": 1296
                  },
                  {
                    "type": "if",
                    "line_number": 1310
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for",
                  "P_ArchiveThinkers",
                  "memset",
                  "M_WriteFile",
                  "M_CheckParm",
                  "I_Error",
                  "sizeof",
                  "R_FillBackScreen",
                  "P_ArchiveSpecials",
                  "P_ArchiveWorld",
                  "memcpy",
                  "sprintf",
                  "P_ArchivePlayers"
                ]
              },
              {
                "name": "G_DeferedInitNew",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "skill_t",
                    "name": "skill"
                  },
                  {
                    "type": "int",
                    "name": "episode"
                  },
                  {
                    "type": "int",
                    "name": "map"
                  }
                ],
                "start_line": 1332,
                "end_line": 1338,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "skill",
                  "episode",
                  "map"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "G_DoNewGame",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1345,
                "end_line": 1358,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "G_InitNew",
                    "line_number": 1356
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "G_InitNew"
                ]
              },
              {
                "name": "G_InitNew",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "skill_t",
                    "name": "skill"
                  },
                  {
                    "type": "int",
                    "name": "episode"
                  },
                  {
                    "type": "int",
                    "name": "map"
                  }
                ],
                "start_line": 1364,
                "end_line": 1478,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1366
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1368
                  },
                  {
                    "name": "S_ResumeSound",
                    "line_number": 1371
                  },
                  {
                    "name": "if",
                    "line_number": 1375
                  },
                  {
                    "name": "if",
                    "line_number": 1382
                  },
                  {
                    "name": "if",
                    "line_number": 1385
                  },
                  {
                    "name": "if",
                    "line_number": 1387
                  },
                  {
                    "name": "if",
                    "line_number": 1390
                  },
                  {
                    "name": "if",
                    "line_number": 1392
                  },
                  {
                    "name": "if",
                    "line_number": 1397
                  },
                  {
                    "name": "if",
                    "line_number": 1403
                  },
                  {
                    "name": "if",
                    "line_number": 1406
                  },
                  {
                    "name": "M_ClearRandom",
                    "line_number": 1410
                  },
                  {
                    "name": "if",
                    "line_number": 1412
                  },
                  {
                    "name": "if",
                    "line_number": 1417
                  },
                  {
                    "name": "for",
                    "line_number": 1419
                  },
                  {
                    "name": "if",
                    "line_number": 1425
                  },
                  {
                    "name": "for",
                    "line_number": 1427
                  },
                  {
                    "name": "for",
                    "line_number": 1436
                  },
                  {
                    "name": "if",
                    "line_number": 1451
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 1453
                  },
                  {
                    "name": "if",
                    "line_number": 1454
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 1455
                  },
                  {
                    "name": "if",
                    "line_number": 1457
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 1458
                  },
                  {
                    "name": "switch",
                    "line_number": 1461
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 1464
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 1467
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 1470
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 1473
                  },
                  {
                    "name": "G_DoLoadLevel",
                    "line_number": 1477
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1368
                  },
                  {
                    "type": "if",
                    "line_number": 1375
                  },
                  {
                    "type": "if",
                    "line_number": 1382
                  },
                  {
                    "type": "if",
                    "line_number": 1385
                  },
                  {
                    "type": "if",
                    "line_number": 1387
                  },
                  {
                    "type": "if",
                    "line_number": 1390
                  },
                  {
                    "type": "if",
                    "line_number": 1392
                  },
                  {
                    "type": "else",
                    "line_number": 1395
                  },
                  {
                    "type": "if",
                    "line_number": 1397
                  },
                  {
                    "type": "if",
                    "line_number": 1403
                  },
                  {
                    "type": "if",
                    "line_number": 1406
                  },
                  {
                    "type": "if",
                    "line_number": 1412
                  },
                  {
                    "type": "else",
                    "line_number": 1414
                  },
                  {
                    "type": "if",
                    "line_number": 1417
                  },
                  {
                    "type": "for",
                    "line_number": 1419
                  },
                  {
                    "type": "if",
                    "line_number": 1425
                  },
                  {
                    "type": "for",
                    "line_number": 1427
                  },
                  {
                    "type": "for",
                    "line_number": 1436
                  },
                  {
                    "type": "if",
                    "line_number": 1439
                  },
                  {
                    "type": "for",
                    "line_number": 1450
                  },
                  {
                    "type": "if",
                    "line_number": 1451
                  },
                  {
                    "type": "if",
                    "line_number": 1454
                  },
                  {
                    "type": "else",
                    "line_number": 1456
                  },
                  {
                    "type": "if",
                    "line_number": 1457
                  },
                  {
                    "type": "else",
                    "line_number": 1460
                  }
                ],
                "complexity": 19,
                "inputs": [
                  "skill",
                  "episode",
                  "map"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "if",
                  "G_DoLoadLevel",
                  "M_ClearRandom",
                  "R_TextureNumForName",
                  "switch",
                  "S_ResumeSound"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "gamemode ==",
                    "name": "shareware"
                  }
                ],
                "start_line": 1394,
                "end_line": 1398,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1396
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1396
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "shareware"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "skill != sk_nightmare && gameskill ==",
                    "name": "sk_nightmare"
                  }
                ],
                "start_line": 1429,
                "end_line": 1436,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1431
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1431
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "sk_nightmare"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "for"
                ]
              },
              {
                "name": "if",
                "return_type": "set the sky map for the episode",
                "parameters": [
                  {
                    "type": "gamemode ==",
                    "name": "commercial"
                  }
                ],
                "start_line": 1454,
                "end_line": 1462,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 1456
                  },
                  {
                    "name": "if",
                    "line_number": 1457
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 1458
                  },
                  {
                    "name": "if",
                    "line_number": 1460
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 1461
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1457
                  },
                  {
                    "type": "else",
                    "line_number": 1459
                  },
                  {
                    "type": "if",
                    "line_number": 1460
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "commercial"
                ],
                "outputs": [
                  "set the sky map for the episode"
                ],
                "dependencies": [
                  "R_TextureNumForName",
                  "if"
                ]
              },
              {
                "name": "switch",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "",
                    "name": "episode"
                  }
                ],
                "start_line": 1464,
                "end_line": 1478,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 1467
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 1470
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 1473
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 1476
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "episode"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "R_TextureNumForName"
                ]
              },
              {
                "name": "G_ReadDemoTiccmd",
                "return_type": "define DEMOMARKER\t\t0x80\n\n\nvoid",
                "parameters": [
                  {
                    "type": "ticcmd_t*",
                    "name": "cmd"
                  }
                ],
                "start_line": 1488,
                "end_line": 1500,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1490
                  },
                  {
                    "name": "G_CheckDemoStatus",
                    "line_number": 1493
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1490
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "cmd"
                ],
                "outputs": [
                  "define DEMOMARKER\t\t0x80\n\n\nvoid"
                ],
                "dependencies": [
                  "G_CheckDemoStatus",
                  "if"
                ]
              },
              {
                "name": "G_WriteDemoTiccmd",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "ticcmd_t*",
                    "name": "cmd"
                  }
                ],
                "start_line": 1506,
                "end_line": 1523,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1508
                  },
                  {
                    "name": "G_CheckDemoStatus",
                    "line_number": 1509
                  },
                  {
                    "name": "if",
                    "line_number": 1515
                  },
                  {
                    "name": "G_CheckDemoStatus",
                    "line_number": 1518
                  },
                  {
                    "name": "G_ReadDemoTiccmd",
                    "line_number": 1522
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1508
                  },
                  {
                    "type": "if",
                    "line_number": 1515
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "cmd"
                ],
                "outputs": [],
                "dependencies": [
                  "G_ReadDemoTiccmd",
                  "G_CheckDemoStatus",
                  "if"
                ]
              },
              {
                "name": "G_RecordDemo",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "name"
                  }
                ],
                "start_line": 1530,
                "end_line": 1546,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1532
                  },
                  {
                    "type": "int",
                    "name": "maxsize",
                    "array_size": null,
                    "line_number": 1533
                  }
                ],
                "function_calls": [
                  {
                    "name": "strcpy",
                    "line_number": 1536
                  },
                  {
                    "name": "strcat",
                    "line_number": 1537
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 1539
                  },
                  {
                    "name": "if",
                    "line_number": 1540
                  },
                  {
                    "name": "atoi",
                    "line_number": 1541
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 1542
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1540
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "name"
                ],
                "outputs": [],
                "dependencies": [
                  "Z_Malloc",
                  "if",
                  "strcpy",
                  "atoi",
                  "M_CheckParm",
                  "strcat"
                ]
              },
              {
                "name": "G_BeginRecording",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1549,
                "end_line": 1567,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1551
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1565
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1565
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for"
                ]
              },
              {
                "name": "G_DeferedPlayDemo",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "name"
                  }
                ],
                "start_line": 1576,
                "end_line": 1580,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "name"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "G_DoPlayDemo",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1582,
                "end_line": 1620,
                "local_variables": [
                  {
                    "type": "skill_t",
                    "name": "skill",
                    "array_size": null,
                    "line_number": 1584
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1588
                  },
                  {
                    "name": "if",
                    "line_number": 1589
                  },
                  {
                    "name": "fprintf",
                    "line_number": 1591
                  },
                  {
                    "name": "for",
                    "line_number": 1605
                  },
                  {
                    "name": "if",
                    "line_number": 1607
                  },
                  {
                    "name": "G_InitNew",
                    "line_number": 1615
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1589
                  },
                  {
                    "type": "for",
                    "line_number": 1605
                  },
                  {
                    "type": "if",
                    "line_number": 1607
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "W_CacheLumpName",
                  "for",
                  "if",
                  "G_InitNew"
                ]
              },
              {
                "name": "G_TimeDemo",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "name"
                  }
                ],
                "start_line": 1625,
                "end_line": 1634,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "M_CheckParm",
                    "line_number": 1627
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 1628
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "name"
                ],
                "outputs": [],
                "dependencies": [
                  "M_CheckParm"
                ]
              },
              {
                "name": "G_CheckDemoStatus",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1647,
                "end_line": 1687,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "endtime",
                    "array_size": null,
                    "line_number": 1649
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1674
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 1686
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1651
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 1653
                  },
                  {
                    "name": "I_Error",
                    "line_number": 1654
                  },
                  {
                    "name": "if",
                    "line_number": 1658
                  },
                  {
                    "name": "if",
                    "line_number": 1660
                  },
                  {
                    "name": "I_Quit",
                    "line_number": 1661
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1663
                  },
                  {
                    "name": "D_AdvanceDemo",
                    "line_number": 1673
                  },
                  {
                    "name": "if",
                    "line_number": 1677
                  },
                  {
                    "name": "M_WriteFile",
                    "line_number": 1680
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 1681
                  },
                  {
                    "name": "I_Error",
                    "line_number": 1683
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1651
                  },
                  {
                    "type": "if",
                    "line_number": 1658
                  },
                  {
                    "type": "if",
                    "line_number": 1660
                  },
                  {
                    "type": "if",
                    "line_number": 1677
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "Z_Free",
                  "if",
                  "I_Quit",
                  "M_WriteFile",
                  "I_Error",
                  "I_GetTime",
                  "D_AdvanceDemo",
                  "Z_ChangeTag"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "gameaction",
                "type": "gameaction_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 97
              },
              {
                "name": "gamestate",
                "type": "gamestate_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 98
              },
              {
                "name": "gameskill",
                "type": "skill_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 99
              },
              {
                "name": "respawnmonsters",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 100
              },
              {
                "name": "gameepisode",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 101
              },
              {
                "name": "gamemap",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 102
              },
              {
                "name": "paused",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 104
              },
              {
                "name": "sendpause",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 105
              },
              {
                "name": "sendsave",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 106
              },
              {
                "name": "usergame",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 107
              },
              {
                "name": "timingdemo",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 109
              },
              {
                "name": "nodrawers",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 110
              },
              {
                "name": "noblit",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 111
              },
              {
                "name": "starttime",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 112
              },
              {
                "name": "viewactive",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 114
              },
              {
                "name": "deathmatch",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 116
              },
              {
                "name": "netgame",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 117
              },
              {
                "name": "consoleplayer",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 121
              },
              {
                "name": "displayplayer",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 122
              },
              {
                "name": "gametic",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 123
              },
              {
                "name": "levelstarttic",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 124
              },
              {
                "name": "demoname",
                "type": "char",
                "storage_class": null,
                "array_size": "32",
                "line_number": 127
              },
              {
                "name": "demorecording",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 128
              },
              {
                "name": "demoplayback",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 129
              },
              {
                "name": "netdemo",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 130
              },
              {
                "name": "singledemo",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 134
              },
              {
                "name": "wminfo",
                "type": "wbstartstruct_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 138
              },
              {
                "name": "key_right",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 148
              },
              {
                "name": "key_left",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 149
              },
              {
                "name": "key_up",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 151
              },
              {
                "name": "key_down",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 152
              },
              {
                "name": "key_strafeleft",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 153
              },
              {
                "name": "key_straferight",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 154
              },
              {
                "name": "key_fire",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 155
              },
              {
                "name": "key_use",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 156
              },
              {
                "name": "key_strafe",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 157
              },
              {
                "name": "key_speed",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 158
              },
              {
                "name": "mousebfire",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 160
              },
              {
                "name": "mousebstrafe",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 161
              },
              {
                "name": "mousebforward",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 162
              },
              {
                "name": "joybfire",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 164
              },
              {
                "name": "joybstrafe",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 165
              },
              {
                "name": "joybuse",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 166
              },
              {
                "name": "joybspeed",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 167
              },
              {
                "name": "turnheld",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 184
              },
              {
                "name": "mousearray",
                "type": "boolean",
                "storage_class": null,
                "array_size": "4",
                "line_number": 186
              },
              {
                "name": "mousex",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 190
              },
              {
                "name": "mousey",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 191
              },
              {
                "name": "dclicktime",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 193
              },
              {
                "name": "dclickstate",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 194
              },
              {
                "name": "dclicks",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 195
              },
              {
                "name": "dclicktime2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 196
              },
              {
                "name": "dclickstate2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 197
              },
              {
                "name": "dclicks2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 198
              },
              {
                "name": "joyxmove",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 201
              },
              {
                "name": "joyymove",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 202
              },
              {
                "name": "joyarray",
                "type": "boolean",
                "storage_class": null,
                "array_size": "5",
                "line_number": 203
              },
              {
                "name": "savegameslot",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 206
              },
              {
                "name": "savedescription",
                "type": "char",
                "storage_class": null,
                "array_size": "32",
                "line_number": 207
              },
              {
                "name": "bodyqueslot",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 213
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 221
              },
              {
                "name": "sum",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 227
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 239
              },
              {
                "name": "strafe",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 240
              },
              {
                "name": "bstrafe",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 241
              },
              {
                "name": "speed",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 242
              },
              {
                "name": "tspeed",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 243
              },
              {
                "name": "forward",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 244
              },
              {
                "name": "side",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 245
              },
              {
                "name": "wipegamestate",
                "type": "gamestate_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 443
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 447
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 517
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 530
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 532
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 541
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 545
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 547
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 549
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 555
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 564
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 568
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 573
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 581
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 590
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 596
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 607
              },
              {
                "name": "buf",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 608
              },
              {
                "name": "turbomessage",
                "type": "static char",
                "storage_class": null,
                "array_size": "80",
                "line_number": 675
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 803
              },
              {
                "name": "killcount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 805
              },
              {
                "name": "itemcount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 806
              },
              {
                "name": "secretcount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 807
              },
              {
                "name": "x",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 848
              },
              {
                "name": "y",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 849
              },
              {
                "name": "an",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 851
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 853
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 861
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 862
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 869
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 888
              },
              {
                "name": "selections",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 900
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 926
              },
              {
                "name": "secretexit",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 999
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1022
              },
              {
                "name": "setsizeneeded",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 1187
              },
              {
                "name": "savename",
                "type": "char",
                "storage_class": null,
                "array_size": "256",
                "line_number": 1190
              },
              {
                "name": "length",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1203
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1204
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "100",
                "line_number": 1272
              },
              {
                "name": "length",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1275
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1276
              },
              {
                "name": "d_skill",
                "type": "skill_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1328
              },
              {
                "name": "d_episode",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1329
              },
              {
                "name": "d_map",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1330
              },
              {
                "name": "skytexture",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 1361
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1370
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1532
              },
              {
                "name": "maxsize",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1533
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1551
              },
              {
                "name": "skill",
                "type": "skill_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1584
              },
              {
                "name": "endtime",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1649
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1674
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1686
              }
            ],
            "defines": [
              {
                "name": "SAVEGAMESIZE",
                "value": "0x2c000",
                "line_number": 74
              },
              {
                "name": "SAVESTRINGSIZE",
                "value": "24",
                "line_number": 75
              },
              {
                "name": "MAXPLMOVE",
                "value": "(forwardmove[1])",
                "line_number": 171
              },
              {
                "name": "TURBOTHRESHOLD",
                "value": "0x32",
                "line_number": 173
              },
              {
                "name": "SLOWTURNTICS",
                "value": "6",
                "line_number": 179
              },
              {
                "name": "NUMKEYS",
                "value": "256",
                "line_number": 181
              },
              {
                "name": "BODYQUESIZE",
                "value": "32",
                "line_number": 210
              },
              {
                "name": "VERSIONSIZE",
                "value": "16",
                "line_number": 1198
              },
              {
                "name": "DEMOMARKER",
                "value": "0x80",
                "line_number": 1488
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/g_game.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of functions",
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "g_game.h",
          "type": "file",
          "size": 1895,
          "last_modified": "2024-09-05T16:00:03.378848",
          "path": "linuxdoom-1.10/g_game.h",
          "readme": "# g_game.h\n\nThis file contains functionality related to g_game.",
          "dependencies": [
            "d_event.h",
            "doomdef.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/g_game.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "hu_lib.c",
          "type": "file",
          "size": 6457,
          "last_modified": "2024-09-05T16:00:03.405849",
          "path": "linuxdoom-1.10/hu_lib.c",
          "readme": "# hu_lib.c\n\nThis file contains functionality related to hu_lib.",
          "dependencies": [
            "r_draw.h",
            "m_swap.h",
            "r_local.h",
            "ctype.h",
            "doomdef.h",
            "v_video.h",
            "hu_lib.h"
          ],
          "inputs": [
            "h",
            "on",
            "f",
            "i++",
            "sc",
            "ch",
            "startchar",
            "x",
            "l",
            "y",
            "prefix",
            "str",
            "msg",
            "void",
            "s",
            "t",
            "it",
            "font",
            "drawcursor"
          ],
          "outputs": [
            "The following deletion routines adhere to the left margin restriction\nvoid",
            "returns true if it ate the key\nboolean",
            "Resets left margin as well\nvoid",
            "draw everything",
            "c\n\nvoid",
            "boolean",
            "sorta called by HU_Erase and just better darn get things straight\nvoid"
          ],
          "content": {
            "functions": [
              {
                "name": "HUlib_init",
                "return_type": "c\n\nvoid",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 40,
                "end_line": 42,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "c\n\nvoid"
                ],
                "dependencies": []
              },
              {
                "name": "HUlib_clearTextLine",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "hu_textline_t*",
                    "name": "t"
                  }
                ],
                "start_line": 46,
                "end_line": 51,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "t"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "HUlib_initTextLine",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "hu_textline_t*",
                    "name": "t"
                  },
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "patch_t**",
                    "name": "f"
                  },
                  {
                    "type": "int",
                    "name": "sc"
                  }
                ],
                "start_line": 53,
                "end_line": 60,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "HUlib_clearTextLine",
                    "line_number": 59
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "t",
                  "x",
                  "y",
                  "f",
                  "sc"
                ],
                "outputs": [],
                "dependencies": [
                  "HUlib_clearTextLine"
                ]
              },
              {
                "name": "HUlib_addCharToTextLine",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "hu_textline_t*",
                    "name": "t"
                  },
                  {
                    "type": "char",
                    "name": "ch"
                  }
                ],
                "start_line": 68,
                "end_line": 81,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 72
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 78
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 71
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 71
                  },
                  {
                    "type": "else",
                    "line_number": 73
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "t",
                  "ch"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "HUlib_delCharFromTextLine",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "hu_textline_t*",
                    "name": "t"
                  }
                ],
                "start_line": 86,
                "end_line": 97,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 94
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 89
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 89
                  },
                  {
                    "type": "else",
                    "line_number": 90
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "t"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "HUlib_drawTextLine",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "hu_textline_t*",
                    "name": "l"
                  },
                  {
                    "type": "boolean",
                    "name": "drawcursor"
                  }
                ],
                "start_line": 99,
                "end_line": 136,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 102
                  },
                  {
                    "type": "int",
                    "name": "w",
                    "array_size": null,
                    "line_number": 103
                  },
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 104
                  },
                  {
                    "type": "unsigned char",
                    "name": "c",
                    "array_size": null,
                    "line_number": 105
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 109
                  },
                  {
                    "name": "toupper",
                    "line_number": 111
                  },
                  {
                    "name": "if",
                    "line_number": 112
                  },
                  {
                    "name": "SHORT",
                    "line_number": 116
                  },
                  {
                    "name": "if",
                    "line_number": 117
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 119
                  },
                  {
                    "name": "if",
                    "line_number": 125
                  },
                  {
                    "name": "if",
                    "line_number": 131
                  },
                  {
                    "name": "SHORT",
                    "line_number": 132
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 134
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 109
                  },
                  {
                    "type": "if",
                    "line_number": 112
                  },
                  {
                    "type": "if",
                    "line_number": 117
                  },
                  {
                    "type": "else",
                    "line_number": 122
                  },
                  {
                    "type": "if",
                    "line_number": 125
                  },
                  {
                    "type": "if",
                    "line_number": 130
                  },
                  {
                    "type": "if",
                    "line_number": 131
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "l",
                  "drawcursor"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for",
                  "toupper",
                  "SHORT",
                  "V_DrawPatchDirect"
                ]
              },
              {
                "name": "HUlib_eraseTextLine",
                "return_type": "sorta called by HU_Erase and just better darn get things straight\nvoid",
                "parameters": [
                  {
                    "type": "hu_textline_t*",
                    "name": "l"
                  }
                ],
                "start_line": 142,
                "end_line": 173,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "lh",
                    "array_size": null,
                    "line_number": 144
                  },
                  {
                    "type": "int",
                    "name": "y",
                    "array_size": null,
                    "line_number": 145
                  },
                  {
                    "type": "int",
                    "name": "yoffset",
                    "array_size": null,
                    "line_number": 146
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 153
                  },
                  {
                    "name": "SHORT",
                    "line_number": 156
                  },
                  {
                    "name": "for",
                    "line_number": 157
                  },
                  {
                    "name": "if",
                    "line_number": 159
                  },
                  {
                    "name": "R_VideoErase",
                    "line_number": 160
                  },
                  {
                    "name": "R_VideoErase",
                    "line_number": 163
                  },
                  {
                    "name": "R_VideoErase",
                    "line_number": 164
                  },
                  {
                    "name": "if",
                    "line_number": 171
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 153
                  },
                  {
                    "type": "for",
                    "line_number": 157
                  },
                  {
                    "type": "if",
                    "line_number": 159
                  },
                  {
                    "type": "else",
                    "line_number": 161
                  },
                  {
                    "type": "if",
                    "line_number": 171
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "l"
                ],
                "outputs": [
                  "sorta called by HU_Erase and just better darn get things straight\nvoid"
                ],
                "dependencies": [
                  "SHORT",
                  "for",
                  "R_VideoErase",
                  "if"
                ]
              },
              {
                "name": "HUlib_initSText",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "hu_stext_t*",
                    "name": "s"
                  },
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "int",
                    "name": "h"
                  },
                  {
                    "type": "patch_t**",
                    "name": "font"
                  },
                  {
                    "type": "int",
                    "name": "startchar"
                  },
                  {
                    "type": "boolean*",
                    "name": "on"
                  }
                ],
                "start_line": 176,
                "end_line": 190,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 179
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 185
                  },
                  {
                    "name": "HUlib_initTextLine",
                    "line_number": 186
                  },
                  {
                    "name": "SHORT",
                    "line_number": 187
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 185
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "s",
                  "x",
                  "y",
                  "h",
                  "font",
                  "startchar",
                  "on"
                ],
                "outputs": [],
                "dependencies": [
                  "HUlib_initTextLine",
                  "SHORT",
                  "for"
                ]
              },
              {
                "name": "HUlib_addLineToSText",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "hu_stext_t*",
                    "name": "s"
                  }
                ],
                "start_line": 200,
                "end_line": 214,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 203
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 206
                  },
                  {
                    "name": "HUlib_clearTextLine",
                    "line_number": 208
                  },
                  {
                    "name": "for",
                    "line_number": 211
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 206
                  },
                  {
                    "type": "for",
                    "line_number": 211
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "s"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "HUlib_clearTextLine",
                  "if"
                ]
              },
              {
                "name": "HUlib_addMessageToSText",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "hu_stext_t*",
                    "name": "s"
                  },
                  {
                    "type": "char*",
                    "name": "prefix"
                  },
                  {
                    "type": "char*",
                    "name": "msg"
                  }
                ],
                "start_line": 216,
                "end_line": 225,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "HUlib_addLineToSText",
                    "line_number": 218
                  },
                  {
                    "name": "if",
                    "line_number": 219
                  },
                  {
                    "name": "while",
                    "line_number": 220
                  },
                  {
                    "name": "HUlib_addCharToTextLine",
                    "line_number": 221
                  },
                  {
                    "name": "while",
                    "line_number": 223
                  },
                  {
                    "name": "HUlib_addCharToTextLine",
                    "line_number": 224
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 219
                  },
                  {
                    "type": "while",
                    "line_number": 220
                  },
                  {
                    "type": "while",
                    "line_number": 223
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "s",
                  "prefix",
                  "msg"
                ],
                "outputs": [],
                "dependencies": [
                  "HUlib_addCharToTextLine",
                  "while",
                  "HUlib_addLineToSText",
                  "if"
                ]
              },
              {
                "name": "HUlib_drawSText",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "hu_stext_t*",
                    "name": "s"
                  }
                ],
                "start_line": 231,
                "end_line": 252,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 236
                  },
                  {
                    "name": "for",
                    "line_number": 240
                  },
                  {
                    "name": "if",
                    "line_number": 243
                  },
                  {
                    "name": "HUlib_drawTextLine",
                    "line_number": 249
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 236
                  },
                  {
                    "type": "if",
                    "line_number": 237
                  },
                  {
                    "type": "for",
                    "line_number": 240
                  },
                  {
                    "type": "if",
                    "line_number": 243
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "s"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "HUlib_drawTextLine",
                  "if"
                ]
              },
              {
                "name": "for",
                "return_type": "draw everything",
                "parameters": [
                  {
                    "type": "i=0 ; i<s->h ;",
                    "name": "i++"
                  }
                ],
                "start_line": 239,
                "end_line": 249,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 242
                  },
                  {
                    "name": "HUlib_drawTextLine",
                    "line_number": 248
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 242
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "i++"
                ],
                "outputs": [
                  "draw everything"
                ],
                "dependencies": [
                  "HUlib_drawTextLine",
                  "if"
                ]
              },
              {
                "name": "HUlib_eraseSText",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "hu_stext_t*",
                    "name": "s"
                  }
                ],
                "start_line": 254,
                "end_line": 267,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 257
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 259
                  },
                  {
                    "name": "if",
                    "line_number": 261
                  },
                  {
                    "name": "HUlib_eraseTextLine",
                    "line_number": 263
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 259
                  },
                  {
                    "type": "if",
                    "line_number": 261
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "s"
                ],
                "outputs": [],
                "dependencies": [
                  "HUlib_eraseTextLine",
                  "if",
                  "for"
                ]
              },
              {
                "name": "HUlib_initIText",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "hu_itext_t*",
                    "name": "it"
                  },
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "patch_t**",
                    "name": "font"
                  },
                  {
                    "type": "int",
                    "name": "startchar"
                  },
                  {
                    "type": "boolean*",
                    "name": "on"
                  }
                ],
                "start_line": 269,
                "end_line": 275,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "HUlib_initTextLine",
                    "line_number": 274
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "it",
                  "x",
                  "y",
                  "font",
                  "startchar",
                  "on"
                ],
                "outputs": [],
                "dependencies": [
                  "HUlib_initTextLine"
                ]
              },
              {
                "name": "HUlib_delCharFromIText",
                "return_type": "The following deletion routines adhere to the left margin restriction\nvoid",
                "parameters": [
                  {
                    "type": "hu_itext_t*",
                    "name": "it"
                  }
                ],
                "start_line": 285,
                "end_line": 289,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 287
                  },
                  {
                    "name": "HUlib_delCharFromTextLine",
                    "line_number": 288
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 287
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "it"
                ],
                "outputs": [
                  "The following deletion routines adhere to the left margin restriction\nvoid"
                ],
                "dependencies": [
                  "HUlib_delCharFromTextLine",
                  "if"
                ]
              },
              {
                "name": "HUlib_eraseLineFromIText",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "hu_itext_t*",
                    "name": "it"
                  }
                ],
                "start_line": 292,
                "end_line": 296,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 294
                  },
                  {
                    "name": "HUlib_delCharFromTextLine",
                    "line_number": 295
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 294
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "it"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "HUlib_delCharFromTextLine"
                ]
              },
              {
                "name": "HUlib_resetIText",
                "return_type": "Resets left margin as well\nvoid",
                "parameters": [
                  {
                    "type": "hu_itext_t*",
                    "name": "it"
                  }
                ],
                "start_line": 298,
                "end_line": 302,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "HUlib_clearTextLine",
                    "line_number": 301
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "it"
                ],
                "outputs": [
                  "Resets left margin as well\nvoid"
                ],
                "dependencies": [
                  "HUlib_clearTextLine"
                ]
              },
              {
                "name": "HUlib_addPrefixToIText",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "hu_itext_t*",
                    "name": "it"
                  },
                  {
                    "type": "char*",
                    "name": "str"
                  }
                ],
                "start_line": 305,
                "end_line": 310,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 307
                  },
                  {
                    "name": "HUlib_addCharToTextLine",
                    "line_number": 308
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 307
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "it",
                  "str"
                ],
                "outputs": [],
                "dependencies": [
                  "HUlib_addCharToTextLine",
                  "while"
                ]
              },
              {
                "name": "HUlib_keyInIText",
                "return_type": "returns true if it ate the key\nboolean",
                "parameters": [
                  {
                    "type": "hu_itext_t*",
                    "name": "it"
                  },
                  {
                    "type": "unsigned char",
                    "name": "ch"
                  }
                ],
                "start_line": 316,
                "end_line": 330,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 326
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 328
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 319
                  },
                  {
                    "name": "HUlib_addCharToTextLine",
                    "line_number": 320
                  },
                  {
                    "name": "if",
                    "line_number": 322
                  },
                  {
                    "name": "HUlib_delCharFromIText",
                    "line_number": 323
                  },
                  {
                    "name": "if",
                    "line_number": 325
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 319
                  },
                  {
                    "type": "else",
                    "line_number": 321
                  },
                  {
                    "type": "if",
                    "line_number": 322
                  },
                  {
                    "type": "else",
                    "line_number": 324
                  },
                  {
                    "type": "if",
                    "line_number": 325
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "it",
                  "ch"
                ],
                "outputs": [
                  "returns true if it ate the key\nboolean"
                ],
                "dependencies": [
                  "HUlib_addCharToTextLine",
                  "HUlib_delCharFromIText",
                  "if"
                ]
              },
              {
                "name": "HUlib_drawIText",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "hu_itext_t*",
                    "name": "it"
                  }
                ],
                "start_line": 336,
                "end_line": 345,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 341
                  },
                  {
                    "name": "HUlib_drawTextLine",
                    "line_number": 343
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 341
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "it"
                ],
                "outputs": [],
                "dependencies": [
                  "HUlib_drawTextLine",
                  "if"
                ]
              },
              {
                "name": "HUlib_eraseIText",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "hu_itext_t*",
                    "name": "it"
                  }
                ],
                "start_line": 347,
                "end_line": 353,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 349
                  },
                  {
                    "name": "HUlib_eraseTextLine",
                    "line_number": 351
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 349
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "it"
                ],
                "outputs": [],
                "dependencies": [
                  "HUlib_eraseTextLine",
                  "if"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "automapactive",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 40
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 75
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 81
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 89
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 94
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 105
              },
              {
                "name": "w",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 106
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 107
              },
              {
                "name": "c",
                "type": "unsigned char",
                "storage_class": null,
                "array_size": null,
                "line_number": 108
              },
              {
                "name": "lh",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 145
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 146
              },
              {
                "name": "yoffset",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 147
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 187
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 203
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 257
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 330
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 332
              }
            ],
            "defines": [
              {
                "name": "noterased",
                "value": "viewwindowx",
                "line_number": 38
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/hu_lib.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of functions",
            "High number of global variables"
          ]
        },
        {
          "name": "hu_lib.h",
          "type": "file",
          "size": 3992,
          "last_modified": "2024-09-05T16:00:03.431850",
          "path": "linuxdoom-1.10/hu_lib.h",
          "readme": "# hu_lib.h\n\nThis file contains functionality related to hu_lib.",
          "dependencies": [
            "r_defs.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 48
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 49
              },
              {
                "name": "sc",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 52
              },
              {
                "name": "len",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 54
              },
              {
                "name": "needsupdate",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 57
              },
              {
                "name": "h",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 68
              },
              {
                "name": "cl",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 69
              },
              {
                "name": "laston",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 73
              },
              {
                "name": "l",
                "type": "hu_textline_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 83
              },
              {
                "name": "lm",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 86
              },
              {
                "name": "laston",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 90
              }
            ],
            "defines": [
              {
                "name": "BG",
                "value": "1",
                "line_number": 30
              },
              {
                "name": "FG",
                "value": "0",
                "line_number": 31
              },
              {
                "name": "HU_CHARERASE",
                "value": "KEY_BACKSPACE",
                "line_number": 34
              },
              {
                "name": "HU_MAXLINES",
                "value": "4",
                "line_number": 36
              },
              {
                "name": "HU_MAXLINELENGTH",
                "value": "80",
                "line_number": 37
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/hu_lib.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "hu_stuff.c",
          "type": "file",
          "size": 14705,
          "last_modified": "2024-09-05T16:00:03.457370",
          "path": "linuxdoom-1.10/hu_stuff.c",
          "readme": "# hu_stuff.c\n\nThis file contains functionality related to hu_stuff.",
          "dependencies": [
            "w_wad.h",
            "m_swap.h",
            "sounds.h",
            "ctype.h",
            "z_zone.h",
            "doomstat.h",
            "s_sound.h",
            "hu_stuff.h",
            "doomdef.h",
            "dstrings.h",
            "hu_lib.h"
          ],
          "inputs": [
            "netgame",
            "HU_INPUTTOGGLE",
            "2",
            "ch",
            "!--message_counter",
            "altdown",
            "KEY_LALT",
            "c",
            "void",
            "consoleplayer",
            "*ev"
          ],
          "outputs": [
            "char",
            "check for incoming chat characters",
            "send a macro",
            "tick down message counter if message is up",
            "boolean",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "ForeignTranslation",
                "return_type": "char",
                "parameters": [
                  {
                    "type": "unsigned char",
                    "name": "ch"
                  }
                ],
                "start_line": 387,
                "end_line": 390,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "ch"
                ],
                "outputs": [
                  "char"
                ],
                "dependencies": []
              },
              {
                "name": "HU_Init",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 392,
                "end_line": 412,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 395
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 396
                  },
                  {
                    "type": "char",
                    "name": "buffer",
                    "array_size": "9",
                    "line_number": 397
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 399
                  },
                  {
                    "name": "for",
                    "line_number": 406
                  },
                  {
                    "name": "sprintf",
                    "line_number": 408
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 409
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 399
                  },
                  {
                    "type": "else",
                    "line_number": 401
                  },
                  {
                    "type": "for",
                    "line_number": 406
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "sprintf",
                  "for",
                  "W_CacheLumpName",
                  "if"
                ]
              },
              {
                "name": "HU_Stop",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 414,
                "end_line": 417,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "HU_Start",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 419,
                "end_line": 484,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 422
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 425
                  },
                  {
                    "name": "HU_Stop",
                    "line_number": 426
                  },
                  {
                    "name": "HUlib_initSText",
                    "line_number": 435
                  },
                  {
                    "name": "HUlib_initTextLine",
                    "line_number": 441
                  },
                  {
                    "name": "switch",
                    "line_number": 446
                  },
                  {
                    "name": "while",
                    "line_number": 469
                  },
                  {
                    "name": "HUlib_addCharToTextLine",
                    "line_number": 470
                  },
                  {
                    "name": "HUlib_initIText",
                    "line_number": 473
                  },
                  {
                    "name": "for",
                    "line_number": 479
                  },
                  {
                    "name": "HUlib_initIText",
                    "line_number": 480
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 425
                  },
                  {
                    "type": "while",
                    "line_number": 469
                  },
                  {
                    "type": "for",
                    "line_number": 479
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "HUlib_addCharToTextLine",
                  "while",
                  "if",
                  "HUlib_initSText",
                  "HUlib_initIText",
                  "for",
                  "HUlib_initTextLine",
                  "HU_Stop",
                  "switch"
                ]
              },
              {
                "name": "HU_Drawer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 486,
                "end_line": 494,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "HUlib_drawSText",
                    "line_number": 489
                  },
                  {
                    "name": "HUlib_drawIText",
                    "line_number": 490
                  },
                  {
                    "name": "if",
                    "line_number": 491
                  },
                  {
                    "name": "HUlib_drawTextLine",
                    "line_number": 492
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 491
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "HUlib_drawIText",
                  "HUlib_drawSText",
                  "HUlib_drawTextLine",
                  "if"
                ]
              },
              {
                "name": "HU_Erase",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 496,
                "end_line": 503,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "HUlib_eraseSText",
                    "line_number": 499
                  },
                  {
                    "name": "HUlib_eraseIText",
                    "line_number": 500
                  },
                  {
                    "name": "HUlib_eraseTextLine",
                    "line_number": 501
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "HUlib_eraseTextLine",
                  "HUlib_eraseSText",
                  "HUlib_eraseIText"
                ]
              },
              {
                "name": "HU_Ticker",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 505,
                "end_line": 578,
                "local_variables": [
                  {
                    "type": "char",
                    "name": "c",
                    "array_size": null,
                    "line_number": 509
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 512
                  },
                  {
                    "name": "if",
                    "line_number": 518
                  },
                  {
                    "name": "if",
                    "line_number": 522
                  },
                  {
                    "name": "HUlib_addMessageToSText",
                    "line_number": 525
                  },
                  {
                    "name": "if",
                    "line_number": 536
                  },
                  {
                    "name": "for",
                    "line_number": 538
                  },
                  {
                    "name": "if",
                    "line_number": 540
                  },
                  {
                    "name": "if",
                    "line_number": 542
                  },
                  {
                    "name": "if",
                    "line_number": 545
                  },
                  {
                    "name": "if",
                    "line_number": 549
                  },
                  {
                    "name": "HUlib_keyInIText",
                    "line_number": 551
                  },
                  {
                    "name": "if",
                    "line_number": 552
                  },
                  {
                    "name": "if",
                    "line_number": 554
                  },
                  {
                    "name": "HUlib_addMessageToSText",
                    "line_number": 558
                  },
                  {
                    "name": "if",
                    "line_number": 565
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 566
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 568
                  },
                  {
                    "name": "HUlib_resetIText",
                    "line_number": 570
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 511
                  },
                  {
                    "type": "if",
                    "line_number": 512
                  },
                  {
                    "type": "if",
                    "line_number": 518
                  },
                  {
                    "type": "if",
                    "line_number": 521
                  },
                  {
                    "type": "if",
                    "line_number": 522
                  },
                  {
                    "type": "else",
                    "line_number": 533
                  },
                  {
                    "type": "for",
                    "line_number": 535
                  },
                  {
                    "type": "if",
                    "line_number": 536
                  },
                  {
                    "type": "for",
                    "line_number": 538
                  },
                  {
                    "type": "if",
                    "line_number": 540
                  },
                  {
                    "type": "if",
                    "line_number": 542
                  },
                  {
                    "type": "if",
                    "line_number": 545
                  },
                  {
                    "type": "else",
                    "line_number": 547
                  },
                  {
                    "type": "if",
                    "line_number": 549
                  },
                  {
                    "type": "if",
                    "line_number": 552
                  },
                  {
                    "type": "if",
                    "line_number": 554
                  },
                  {
                    "type": "if",
                    "line_number": 565
                  },
                  {
                    "type": "else",
                    "line_number": 567
                  }
                ],
                "complexity": 17,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "HUlib_addMessageToSText",
                  "HUlib_resetIText",
                  "for",
                  "if",
                  "HUlib_keyInIText",
                  "S_StartSound"
                ]
              },
              {
                "name": "if",
                "return_type": "tick down message counter if message is up",
                "parameters": [
                  {
                    "type": "message_counter &&",
                    "name": "!--message_counter"
                  }
                ],
                "start_line": 511,
                "end_line": 515,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "!--message_counter"
                ],
                "outputs": [
                  "tick down message counter if message is up"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "check for incoming chat characters",
                "parameters": [
                  {
                    "type": "",
                    "name": "netgame"
                  }
                ],
                "start_line": 535,
                "end_line": 575,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 537
                  },
                  {
                    "name": "if",
                    "line_number": 539
                  },
                  {
                    "name": "if",
                    "line_number": 541
                  },
                  {
                    "name": "if",
                    "line_number": 544
                  },
                  {
                    "name": "if",
                    "line_number": 548
                  },
                  {
                    "name": "HUlib_keyInIText",
                    "line_number": 550
                  },
                  {
                    "name": "if",
                    "line_number": 551
                  },
                  {
                    "name": "if",
                    "line_number": 553
                  },
                  {
                    "name": "HUlib_addMessageToSText",
                    "line_number": 557
                  },
                  {
                    "name": "if",
                    "line_number": 564
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 565
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 567
                  },
                  {
                    "name": "HUlib_resetIText",
                    "line_number": 569
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 537
                  },
                  {
                    "type": "if",
                    "line_number": 539
                  },
                  {
                    "type": "if",
                    "line_number": 541
                  },
                  {
                    "type": "if",
                    "line_number": 544
                  },
                  {
                    "type": "else",
                    "line_number": 546
                  },
                  {
                    "type": "if",
                    "line_number": 548
                  },
                  {
                    "type": "if",
                    "line_number": 551
                  },
                  {
                    "type": "if",
                    "line_number": 553
                  },
                  {
                    "type": "if",
                    "line_number": 564
                  },
                  {
                    "type": "else",
                    "line_number": 566
                  }
                ],
                "complexity": 12,
                "inputs": [
                  "netgame"
                ],
                "outputs": [
                  "check for incoming chat characters"
                ],
                "dependencies": [
                  "HUlib_addMessageToSText",
                  "HUlib_resetIText",
                  "if",
                  "for",
                  "HUlib_keyInIText",
                  "S_StartSound"
                ]
              },
              {
                "name": "HU_queueChatChar",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char",
                    "name": "c"
                  }
                ],
                "start_line": 587,
                "end_line": 598,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 589
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 589
                  },
                  {
                    "type": "else",
                    "line_number": 593
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "c"
                ],
                "outputs": [],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "HU_dequeueChatChar",
                "return_type": "char",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 600,
                "end_line": 615,
                "local_variables": [
                  {
                    "type": "char",
                    "name": "c",
                    "array_size": null,
                    "line_number": 602
                  },
                  {
                    "type": "return",
                    "name": "c",
                    "array_size": null,
                    "line_number": 614
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 604
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 604
                  },
                  {
                    "type": "else",
                    "line_number": 609
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "char"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "HU_Responder",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "event_t",
                    "name": "*ev"
                  }
                ],
                "start_line": 617,
                "end_line": 759,
                "local_variables": [
                  {
                    "type": "unsigned char",
                    "name": "c",
                    "array_size": null,
                    "line_number": 625
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 626
                  },
                  {
                    "type": "int",
                    "name": "numplayers",
                    "array_size": null,
                    "line_number": 627
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 646
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 651
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 655
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 710
                  },
                  {
                    "type": "return",
                    "name": "eatkey",
                    "array_size": null,
                    "line_number": 757
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 640
                  },
                  {
                    "name": "if",
                    "line_number": 643
                  },
                  {
                    "name": "if",
                    "line_number": 648
                  },
                  {
                    "name": "if",
                    "line_number": 654
                  },
                  {
                    "name": "if",
                    "line_number": 657
                  },
                  {
                    "name": "if",
                    "line_number": 659
                  },
                  {
                    "name": "if",
                    "line_number": 665
                  },
                  {
                    "name": "HUlib_resetIText",
                    "line_number": 668
                  },
                  {
                    "name": "HU_queueChatChar",
                    "line_number": 669
                  },
                  {
                    "name": "if",
                    "line_number": 671
                  },
                  {
                    "name": "for",
                    "line_number": 673
                  },
                  {
                    "name": "if",
                    "line_number": 675
                  },
                  {
                    "name": "if",
                    "line_number": 677
                  },
                  {
                    "name": "HUlib_resetIText",
                    "line_number": 680
                  },
                  {
                    "name": "HU_queueChatChar",
                    "line_number": 681
                  },
                  {
                    "name": "if",
                    "line_number": 684
                  },
                  {
                    "name": "if",
                    "line_number": 687
                  },
                  {
                    "name": "if",
                    "line_number": 689
                  },
                  {
                    "name": "if",
                    "line_number": 691
                  },
                  {
                    "name": "if",
                    "line_number": 693
                  },
                  {
                    "name": "if",
                    "line_number": 706
                  },
                  {
                    "name": "if",
                    "line_number": 709
                  },
                  {
                    "name": "fprintf",
                    "line_number": 711
                  },
                  {
                    "name": "HU_queueChatChar",
                    "line_number": 715
                  },
                  {
                    "name": "while",
                    "line_number": 718
                  },
                  {
                    "name": "HU_queueChatChar",
                    "line_number": 719
                  },
                  {
                    "name": "HU_queueChatChar",
                    "line_number": 720
                  },
                  {
                    "name": "strcpy",
                    "line_number": 724
                  },
                  {
                    "name": "if",
                    "line_number": 730
                  },
                  {
                    "name": "ForeignTranslation",
                    "line_number": 731
                  },
                  {
                    "name": "if",
                    "line_number": 732
                  },
                  {
                    "name": "HUlib_keyInIText",
                    "line_number": 734
                  },
                  {
                    "name": "if",
                    "line_number": 735
                  },
                  {
                    "name": "HU_queueChatChar",
                    "line_number": 738
                  },
                  {
                    "name": "sprintf",
                    "line_number": 740
                  },
                  {
                    "name": "if",
                    "line_number": 743
                  },
                  {
                    "name": "if",
                    "line_number": 746
                  },
                  {
                    "name": "strcpy",
                    "line_number": 748
                  },
                  {
                    "name": "if",
                    "line_number": 752
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 640
                  },
                  {
                    "type": "if",
                    "line_number": 643
                  },
                  {
                    "type": "if",
                    "line_number": 648
                  },
                  {
                    "type": "if",
                    "line_number": 654
                  },
                  {
                    "type": "if",
                    "line_number": 657
                  },
                  {
                    "type": "if",
                    "line_number": 659
                  },
                  {
                    "type": "if",
                    "line_number": 665
                  },
                  {
                    "type": "if",
                    "line_number": 671
                  },
                  {
                    "type": "for",
                    "line_number": 673
                  },
                  {
                    "type": "if",
                    "line_number": 675
                  },
                  {
                    "type": "if",
                    "line_number": 677
                  },
                  {
                    "type": "if",
                    "line_number": 684
                  },
                  {
                    "type": "if",
                    "line_number": 687
                  },
                  {
                    "type": "if",
                    "line_number": 689
                  },
                  {
                    "type": "if",
                    "line_number": 691
                  },
                  {
                    "type": "if",
                    "line_number": 693
                  },
                  {
                    "type": "else",
                    "line_number": 695
                  },
                  {
                    "type": "else",
                    "line_number": 702
                  },
                  {
                    "type": "if",
                    "line_number": 706
                  },
                  {
                    "type": "if",
                    "line_number": 709
                  },
                  {
                    "type": "while",
                    "line_number": 718
                  },
                  {
                    "type": "else",
                    "line_number": 728
                  },
                  {
                    "type": "if",
                    "line_number": 730
                  },
                  {
                    "type": "if",
                    "line_number": 732
                  },
                  {
                    "type": "if",
                    "line_number": 735
                  },
                  {
                    "type": "if",
                    "line_number": 743
                  },
                  {
                    "type": "if",
                    "line_number": 746
                  },
                  {
                    "type": "if",
                    "line_number": 752
                  }
                ],
                "complexity": 18,
                "inputs": [
                  "*ev"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "fprintf",
                  "while",
                  "HUlib_resetIText",
                  "ForeignTranslation",
                  "if",
                  "for",
                  "strcpy",
                  "HU_queueChatChar",
                  "HUlib_keyInIText",
                  "sprintf"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "ev->data1 == KEY_RALT || ev->data1 ==",
                    "name": "KEY_LALT"
                  }
                ],
                "start_line": 648,
                "end_line": 652,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 651
                  }
                ],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "KEY_LALT"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "netgame && ev->data1 ==",
                    "name": "HU_INPUTTOGGLE"
                  }
                ],
                "start_line": 665,
                "end_line": 670,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "HUlib_resetIText",
                    "line_number": 668
                  },
                  {
                    "name": "HU_queueChatChar",
                    "line_number": 669
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "HU_INPUTTOGGLE"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "HUlib_resetIText",
                  "HU_queueChatChar"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "netgame && numplayers >",
                    "name": "2"
                  }
                ],
                "start_line": 671,
                "end_line": 700,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 673
                  },
                  {
                    "name": "if",
                    "line_number": 675
                  },
                  {
                    "name": "if",
                    "line_number": 677
                  },
                  {
                    "name": "HUlib_resetIText",
                    "line_number": 680
                  },
                  {
                    "name": "HU_queueChatChar",
                    "line_number": 681
                  },
                  {
                    "name": "if",
                    "line_number": 684
                  },
                  {
                    "name": "if",
                    "line_number": 687
                  },
                  {
                    "name": "if",
                    "line_number": 689
                  },
                  {
                    "name": "if",
                    "line_number": 691
                  },
                  {
                    "name": "if",
                    "line_number": 693
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 673
                  },
                  {
                    "type": "if",
                    "line_number": 675
                  },
                  {
                    "type": "if",
                    "line_number": 677
                  },
                  {
                    "type": "if",
                    "line_number": 684
                  },
                  {
                    "type": "if",
                    "line_number": 687
                  },
                  {
                    "type": "if",
                    "line_number": 689
                  },
                  {
                    "type": "if",
                    "line_number": 691
                  },
                  {
                    "type": "if",
                    "line_number": 693
                  },
                  {
                    "type": "else",
                    "line_number": 695
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "2"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "if",
                  "HUlib_resetIText",
                  "HU_queueChatChar",
                  "for"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "i ==",
                    "name": "consoleplayer"
                  }
                ],
                "start_line": 684,
                "end_line": 697,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 687
                  },
                  {
                    "name": "if",
                    "line_number": 689
                  },
                  {
                    "name": "if",
                    "line_number": 691
                  },
                  {
                    "name": "if",
                    "line_number": 693
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 687
                  },
                  {
                    "type": "if",
                    "line_number": 689
                  },
                  {
                    "type": "if",
                    "line_number": 691
                  },
                  {
                    "type": "if",
                    "line_number": 693
                  },
                  {
                    "type": "else",
                    "line_number": 695
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "consoleplayer"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "send a macro",
                "parameters": [
                  {
                    "type": "",
                    "name": "altdown"
                  }
                ],
                "start_line": 705,
                "end_line": 726,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 709
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 708
                  },
                  {
                    "name": "fprintf",
                    "line_number": 710
                  },
                  {
                    "name": "HU_queueChatChar",
                    "line_number": 714
                  },
                  {
                    "name": "while",
                    "line_number": 717
                  },
                  {
                    "name": "HU_queueChatChar",
                    "line_number": 718
                  },
                  {
                    "name": "HU_queueChatChar",
                    "line_number": 719
                  },
                  {
                    "name": "strcpy",
                    "line_number": 723
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 708
                  },
                  {
                    "type": "while",
                    "line_number": 717
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "altdown"
                ],
                "outputs": [
                  "send a macro"
                ],
                "dependencies": [
                  "fprintf",
                  "while",
                  "strcpy",
                  "if",
                  "HU_queueChatChar"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "chat_char",
                "type": "char",
                "storage_class": null,
                "array_size": null,
                "line_number": 88
              },
              {
                "name": "w_title",
                "type": "hu_textline_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 91
              },
              {
                "name": "chat_on",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 92
              },
              {
                "name": "w_chat",
                "type": "hu_itext_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 93
              },
              {
                "name": "message_on",
                "type": "boolean",
                "storage_class": "static",
                "array_size": null,
                "line_number": 98
              },
              {
                "name": "message_dontfuckwithme",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 99
              },
              {
                "name": "message_nottobefuckedwith",
                "type": "boolean",
                "storage_class": "static",
                "array_size": null,
                "line_number": 100
              },
              {
                "name": "w_message",
                "type": "hu_stext_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 102
              },
              {
                "name": "message_counter",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 103
              },
              {
                "name": "showMessages",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 105
              },
              {
                "name": "automapactive",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 106
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 395
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 396
              },
              {
                "name": "buffer",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 397
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 422
              },
              {
                "name": "c",
                "type": "char",
                "storage_class": null,
                "array_size": null,
                "line_number": 509
              },
              {
                "name": "c",
                "type": "char",
                "storage_class": null,
                "array_size": null,
                "line_number": 602
              },
              {
                "name": "c",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 614
              },
              {
                "name": "c",
                "type": "unsigned char",
                "storage_class": null,
                "array_size": null,
                "line_number": 625
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 626
              },
              {
                "name": "numplayers",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 627
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 646
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 651
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 655
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 710
              },
              {
                "name": "buf",
                "type": "static unsigned char",
                "storage_class": null,
                "array_size": "20",
                "line_number": 737
              },
              {
                "name": "eatkey",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 757
              }
            ],
            "defines": [
              {
                "name": "HU_TITLE",
                "value": "(mapnames[(gameepisode-1)*9+gamemap-1])",
                "line_number": 49
              },
              {
                "name": "HU_TITLE2",
                "value": "(mapnames2[gamemap-1])",
                "line_number": 50
              },
              {
                "name": "HU_TITLEP",
                "value": "(mapnamesp[gamemap-1])",
                "line_number": 51
              },
              {
                "name": "HU_TITLET",
                "value": "(mapnamest[gamemap-1])",
                "line_number": 52
              },
              {
                "name": "HU_TITLEHEIGHT",
                "value": "1",
                "line_number": 53
              },
              {
                "name": "HU_TITLEX",
                "value": "0",
                "line_number": 54
              },
              {
                "name": "HU_TITLEY",
                "value": "(167 - SHORT(hu_font[0]->height))",
                "line_number": 55
              },
              {
                "name": "HU_INPUTTOGGLE",
                "value": "'t'",
                "line_number": 57
              },
              {
                "name": "HU_INPUTX",
                "value": "HU_MSGX",
                "line_number": 58
              },
              {
                "name": "HU_INPUTY",
                "value": "(HU_MSGY + HU_MSGHEIGHT*(SHORT(hu_font[0]->height) +1))",
                "line_number": 59
              },
              {
                "name": "HU_INPUTWIDTH",
                "value": "64",
                "line_number": 60
              },
              {
                "name": "HU_INPUTHEIGHT",
                "value": "1",
                "line_number": 61
              },
              {
                "name": "QUEUESIZE",
                "value": "128",
                "line_number": 580
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/hu_stuff.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "hu_stuff.h",
          "type": "file",
          "size": 1596,
          "last_modified": "2024-09-05T16:00:03.482368",
          "path": "linuxdoom-1.10/hu_stuff.h",
          "readme": "# hu_stuff.h\n\nThis file contains functionality related to hu_stuff.",
          "dependencies": [
            "d_event.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": [
              {
                "name": "HU_FONTSTART",
                "value": "'!'\t// the first font characters",
                "line_number": 30
              },
              {
                "name": "HU_FONTEND",
                "value": "'_'\t// the last font characters",
                "line_number": 31
              },
              {
                "name": "HU_FONTSIZE",
                "value": "(HU_FONTEND - HU_FONTSTART + 1)",
                "line_number": 34
              },
              {
                "name": "HU_BROADCAST",
                "value": "5",
                "line_number": 36
              },
              {
                "name": "HU_MSGREFRESH",
                "value": "KEY_ENTER",
                "line_number": 38
              },
              {
                "name": "HU_MSGX",
                "value": "0",
                "line_number": 39
              },
              {
                "name": "HU_MSGY",
                "value": "0",
                "line_number": 40
              },
              {
                "name": "HU_MSGWIDTH",
                "value": "64\t// in characters",
                "line_number": 41
              },
              {
                "name": "HU_MSGHEIGHT",
                "value": "1\t// in lines",
                "line_number": 42
              },
              {
                "name": "HU_MSGTIMEOUT",
                "value": "(4*TICRATE)",
                "line_number": 44
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/hu_stuff.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "info.c",
          "type": "file",
          "size": 139736,
          "last_modified": "2024-09-05T16:00:03.734414",
          "path": "linuxdoom-1.10/info.c",
          "readme": "# info.c\n\nThis file contains functionality related to info.",
          "dependencies": [
            "sounds.h",
            "info.h",
            "p_mobj.h",
            "m_fixed.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/info.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "info.h",
          "type": "file",
          "size": 21985,
          "last_modified": "2024-09-05T16:00:03.758926",
          "path": "linuxdoom-1.10/info.h",
          "readme": "# info.h\n\nThis file contains functionality related to info.",
          "dependencies": [
            "d_think.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "sprite",
                "type": "spritenum_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1149
              },
              {
                "name": "frame",
                "type": "long",
                "storage_class": null,
                "array_size": null,
                "line_number": 1150
              },
              {
                "name": "tics",
                "type": "long",
                "storage_class": null,
                "array_size": null,
                "line_number": 1151
              },
              {
                "name": "action",
                "type": "actionf_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1153
              },
              {
                "name": "nextstate",
                "type": "statenum_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1154
              },
              {
                "name": "doomednum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1307
              },
              {
                "name": "spawnstate",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1308
              },
              {
                "name": "spawnhealth",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1309
              },
              {
                "name": "seestate",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1310
              },
              {
                "name": "seesound",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1311
              },
              {
                "name": "reactiontime",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1312
              },
              {
                "name": "attacksound",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1313
              },
              {
                "name": "painstate",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1314
              },
              {
                "name": "painchance",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1315
              },
              {
                "name": "painsound",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1316
              },
              {
                "name": "meleestate",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1317
              },
              {
                "name": "missilestate",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1318
              },
              {
                "name": "deathstate",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1319
              },
              {
                "name": "xdeathstate",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1320
              },
              {
                "name": "deathsound",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1321
              },
              {
                "name": "speed",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1322
              },
              {
                "name": "radius",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1323
              },
              {
                "name": "height",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1324
              },
              {
                "name": "mass",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1325
              },
              {
                "name": "damage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1326
              },
              {
                "name": "activesound",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1327
              },
              {
                "name": "flags",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1328
              },
              {
                "name": "raisestate",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1329
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/info.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "i_main.c",
          "type": "file",
          "size": 1029,
          "last_modified": "2024-09-05T16:00:03.507367",
          "path": "linuxdoom-1.10/i_main.c",
          "readme": "# i_main.c\n\nThis file contains functionality related to i_main.",
          "dependencies": [
            "d_main.h",
            "doomdef.h",
            "m_argv.h"
          ],
          "inputs": [
            "argc",
            "argv"
          ],
          "outputs": [
            "int"
          ],
          "content": {
            "functions": [
              {
                "name": "main",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "argc"
                  },
                  {
                    "type": "char**",
                    "name": "argv"
                  }
                ],
                "start_line": 34,
                "end_line": 42,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 41
                  }
                ],
                "function_calls": [
                  {
                    "name": "D_DoomMain",
                    "line_number": 39
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "argc",
                  "argv"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "D_DoomMain"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 44
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/i_main.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "i_net.c",
          "type": "file",
          "size": 8017,
          "last_modified": "2024-09-05T16:00:03.533376",
          "path": "linuxdoom-1.10/i_net.c",
          "readme": "# i_net.c\n\nThis file contains functionality related to i_net.",
          "dependencies": [
            "errno.h",
            "unistd.h",
            "netdb.h",
            "sys/socket.h",
            "string.h",
            "netinet/in.h",
            "stdio.h",
            "m_argv.h",
            "sys/ioctl.h",
            "arpa/inet.h",
            "i_net.h",
            "stdlib.h",
            "i_system.h",
            "doomstat.h",
            "d_net.h",
            "d_event.h"
          ],
          "inputs": [
            "void",
            "CMD_GET",
            "port",
            "s"
          ],
          "outputs": [
            "int",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "UDPsocket",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 90,
                "end_line": 100,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "s",
                    "array_size": null,
                    "line_number": 92
                  },
                  {
                    "type": "return",
                    "name": "s",
                    "array_size": null,
                    "line_number": 99
                  }
                ],
                "function_calls": [
                  {
                    "name": "socket",
                    "line_number": 95
                  },
                  {
                    "name": "if",
                    "line_number": 96
                  },
                  {
                    "name": "I_Error",
                    "line_number": 97
                  },
                  {
                    "name": "strerror",
                    "line_number": 97
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 96
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "socket",
                  "strerror",
                  "I_Error",
                  "if"
                ]
              },
              {
                "name": "BindToLocalPort",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "s"
                  },
                  {
                    "type": "int",
                    "name": "port"
                  }
                ],
                "start_line": 105,
                "end_line": 118,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "v",
                    "array_size": null,
                    "line_number": 107
                  },
                  {
                    "type": "struct sockaddr_in",
                    "name": "address",
                    "array_size": null,
                    "line_number": 108
                  }
                ],
                "function_calls": [
                  {
                    "name": "memset",
                    "line_number": 110
                  },
                  {
                    "name": "sizeof",
                    "line_number": 110
                  },
                  {
                    "name": "bind",
                    "line_number": 115
                  },
                  {
                    "name": "sizeof",
                    "line_number": 115
                  },
                  {
                    "name": "if",
                    "line_number": 116
                  },
                  {
                    "name": "I_Error",
                    "line_number": 117
                  },
                  {
                    "name": "strerror",
                    "line_number": 117
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 116
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "s",
                  "port"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "strerror",
                  "memset",
                  "bind",
                  "I_Error",
                  "sizeof"
                ]
              },
              {
                "name": "PacketSend",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 127,
                "end_line": 155,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 129
                  },
                  {
                    "type": "doomdata_t",
                    "name": "sw",
                    "array_size": null,
                    "line_number": 130
                  }
                ],
                "function_calls": [
                  {
                    "name": "htonl",
                    "line_number": 133
                  },
                  {
                    "name": "for",
                    "line_number": 138
                  },
                  {
                    "name": "htons",
                    "line_number": 142
                  },
                  {
                    "name": "htons",
                    "line_number": 143
                  },
                  {
                    "name": "printf",
                    "line_number": 148
                  },
                  {
                    "name": "sendto",
                    "line_number": 149
                  },
                  {
                    "name": "sizeof",
                    "line_number": 151
                  },
                  {
                    "name": "if",
                    "line_number": 153
                  },
                  {
                    "name": "I_Error",
                    "line_number": 154
                  },
                  {
                    "name": "strerror",
                    "line_number": 154
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 138
                  },
                  {
                    "type": "if",
                    "line_number": 153
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "sendto",
                  "for",
                  "if",
                  "strerror",
                  "htons",
                  "I_Error",
                  "sizeof",
                  "htonl",
                  "printf"
                ]
              },
              {
                "name": "PacketGet",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 161,
                "end_line": 218,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 163
                  },
                  {
                    "type": "int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 164
                  },
                  {
                    "type": "struct sockaddr_in",
                    "name": "fromaddress",
                    "array_size": null,
                    "line_number": 165
                  },
                  {
                    "type": "int",
                    "name": "fromlen",
                    "array_size": null,
                    "line_number": 166
                  },
                  {
                    "type": "doomdata_t",
                    "name": "sw",
                    "array_size": null,
                    "line_number": 167
                  }
                ],
                "function_calls": [
                  {
                    "name": "sizeof",
                    "line_number": 169
                  },
                  {
                    "name": "recvfrom",
                    "line_number": 170
                  },
                  {
                    "name": "sizeof",
                    "line_number": 170
                  },
                  {
                    "name": "if",
                    "line_number": 172
                  },
                  {
                    "name": "if",
                    "line_number": 174
                  },
                  {
                    "name": "I_Error",
                    "line_number": 175
                  },
                  {
                    "name": "strerror",
                    "line_number": 175
                  },
                  {
                    "name": "if",
                    "line_number": 182
                  },
                  {
                    "name": "printf",
                    "line_number": 183
                  },
                  {
                    "name": "for",
                    "line_number": 188
                  },
                  {
                    "name": "if",
                    "line_number": 189
                  },
                  {
                    "name": "if",
                    "line_number": 192
                  },
                  {
                    "name": "players",
                    "line_number": 194
                  },
                  {
                    "name": "ntohl",
                    "line_number": 203
                  },
                  {
                    "name": "for",
                    "line_number": 209
                  },
                  {
                    "name": "ntohs",
                    "line_number": 213
                  },
                  {
                    "name": "ntohs",
                    "line_number": 214
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 172
                  },
                  {
                    "type": "if",
                    "line_number": 174
                  },
                  {
                    "type": "if",
                    "line_number": 182
                  },
                  {
                    "type": "for",
                    "line_number": 188
                  },
                  {
                    "type": "if",
                    "line_number": 189
                  },
                  {
                    "type": "if",
                    "line_number": 192
                  },
                  {
                    "type": "for",
                    "line_number": 209
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "players",
                  "ntohs",
                  "if",
                  "strerror",
                  "for",
                  "ntohl",
                  "I_Error",
                  "recvfrom",
                  "sizeof",
                  "printf"
                ]
              },
              {
                "name": "GetLocalAddress",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 222,
                "end_line": 238,
                "local_variables": [
                  {
                    "type": "char",
                    "name": "hostname",
                    "array_size": "1024",
                    "line_number": 224
                  },
                  {
                    "type": "int",
                    "name": "v",
                    "array_size": null,
                    "line_number": 226
                  }
                ],
                "function_calls": [
                  {
                    "name": "gethostname",
                    "line_number": 229
                  },
                  {
                    "name": "sizeof",
                    "line_number": 229
                  },
                  {
                    "name": "if",
                    "line_number": 230
                  },
                  {
                    "name": "I_Error",
                    "line_number": 231
                  },
                  {
                    "name": "gethostbyname",
                    "line_number": 233
                  },
                  {
                    "name": "if",
                    "line_number": 234
                  },
                  {
                    "name": "I_Error",
                    "line_number": 235
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 230
                  },
                  {
                    "type": "if",
                    "line_number": 234
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "gethostname",
                  "if",
                  "I_Error",
                  "gethostbyname",
                  "sizeof"
                ]
              },
              {
                "name": "I_InitNetwork",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 244,
                "end_line": 332,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 247
                  },
                  {
                    "type": "int",
                    "name": "p",
                    "array_size": null,
                    "line_number": 248
                  }
                ],
                "function_calls": [
                  {
                    "name": "malloc",
                    "line_number": 251
                  },
                  {
                    "name": "sizeof",
                    "line_number": 251
                  },
                  {
                    "name": "memset",
                    "line_number": 252
                  },
                  {
                    "name": "sizeof",
                    "line_number": 252
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 255
                  },
                  {
                    "name": "if",
                    "line_number": 256
                  },
                  {
                    "name": "if",
                    "line_number": 259
                  },
                  {
                    "name": "if",
                    "line_number": 261
                  },
                  {
                    "name": "if",
                    "line_number": 267
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 267
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 272
                  },
                  {
                    "name": "if",
                    "line_number": 273
                  },
                  {
                    "name": "atoi",
                    "line_number": 275
                  },
                  {
                    "name": "printf",
                    "line_number": 276
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 281
                  },
                  {
                    "name": "if",
                    "line_number": 282
                  },
                  {
                    "name": "while",
                    "line_number": 303
                  },
                  {
                    "name": "htons",
                    "line_number": 306
                  },
                  {
                    "name": "if",
                    "line_number": 307
                  },
                  {
                    "name": "inet_addr",
                    "line_number": 310
                  },
                  {
                    "name": "gethostbyname",
                    "line_number": 314
                  },
                  {
                    "name": "if",
                    "line_number": 315
                  },
                  {
                    "name": "I_Error",
                    "line_number": 316
                  },
                  {
                    "name": "UDPsocket",
                    "line_number": 327
                  },
                  {
                    "name": "BindToLocalPort",
                    "line_number": 328
                  },
                  {
                    "name": "htons",
                    "line_number": 328
                  },
                  {
                    "name": "ioctl",
                    "line_number": 329
                  },
                  {
                    "name": "UDPsocket",
                    "line_number": 331
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 254
                  },
                  {
                    "type": "if",
                    "line_number": 256
                  },
                  {
                    "type": "if",
                    "line_number": 259
                  },
                  {
                    "type": "if",
                    "line_number": 261
                  },
                  {
                    "type": "else",
                    "line_number": 264
                  },
                  {
                    "type": "if",
                    "line_number": 267
                  },
                  {
                    "type": "else",
                    "line_number": 269
                  },
                  {
                    "type": "if",
                    "line_number": 273
                  },
                  {
                    "type": "if",
                    "line_number": 282
                  },
                  {
                    "type": "for",
                    "line_number": 300
                  },
                  {
                    "type": "while",
                    "line_number": 303
                  },
                  {
                    "type": "if",
                    "line_number": 307
                  },
                  {
                    "type": "else",
                    "line_number": 312
                  },
                  {
                    "type": "if",
                    "line_number": 315
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "ioctl",
                  "if",
                  "UDPsocket",
                  "memset",
                  "M_CheckParm",
                  "atoi",
                  "sizeof",
                  "htons",
                  "inet_addr",
                  "gethostbyname",
                  "malloc",
                  "I_Error",
                  "BindToLocalPort",
                  "printf"
                ]
              },
              {
                "name": "I_NetCmd",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 335,
                "end_line": 347,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 337
                  },
                  {
                    "name": "netsend",
                    "line_number": 339
                  },
                  {
                    "name": "if",
                    "line_number": 341
                  },
                  {
                    "name": "netget",
                    "line_number": 343
                  },
                  {
                    "name": "I_Error",
                    "line_number": 346
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 337
                  },
                  {
                    "type": "if",
                    "line_number": 341
                  },
                  {
                    "type": "else",
                    "line_number": 345
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "netget",
                  "netsend",
                  "I_Error",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "doomcom->command ==",
                    "name": "CMD_GET"
                  }
                ],
                "start_line": 341,
                "end_line": 344,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "netget",
                    "line_number": 343
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CMD_GET"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "netget"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "sendsocket",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 78
              },
              {
                "name": "insocket",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 79
              },
              {
                "name": "s",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 92
              },
              {
                "name": "s",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 99
              },
              {
                "name": "v",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 110
              },
              {
                "name": "address",
                "type": "struct sockaddr_in",
                "storage_class": null,
                "array_size": null,
                "line_number": 111
              },
              {
                "name": "c",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 129
              },
              {
                "name": "sw",
                "type": "doomdata_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 130
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 163
              },
              {
                "name": "c",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 164
              },
              {
                "name": "fromaddress",
                "type": "struct sockaddr_in",
                "storage_class": null,
                "array_size": null,
                "line_number": 165
              },
              {
                "name": "fromlen",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 166
              },
              {
                "name": "sw",
                "type": "doomdata_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 167
              },
              {
                "name": "hostname",
                "type": "char",
                "storage_class": null,
                "array_size": "1024",
                "line_number": 224
              },
              {
                "name": "v",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 226
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 247
              },
              {
                "name": "p",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 248
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/i_net.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "i_net.h",
          "type": "file",
          "size": 1078,
          "last_modified": "2024-09-05T16:00:03.556890",
          "path": "linuxdoom-1.10/i_net.h",
          "readme": "# i_net.h\n\nThis file contains functionality related to i_net.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/i_net.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "i_sound.c",
          "type": "file",
          "size": 21764,
          "last_modified": "2024-09-05T16:00:03.582891",
          "path": "linuxdoom-1.10/i_sound.c",
          "readme": "# i_sound.c\n\nThis file contains functionality related to i_sound.",
          "dependencies": [
            "sys/types.h",
            "stdio.h",
            "sys/ioctl.h",
            "sys/filio.h",
            "signal.h",
            "linux/soundcard.h",
            "unistd.h",
            "m_argv.h",
            "doomdef.h",
            "fcntl.h",
            "math.h",
            "w_wad.h",
            "z_zone.h",
            "stdlib.h",
            "time.h",
            "i_sound.h",
            "sys/time.h",
            "stdarg.h",
            "i_system.h",
            "m_misc.h"
          ],
          "inputs": [
            "looping",
            "fd",
            "seperation",
            "data",
            "arg",
            "duration_of_tick",
            "step",
            "vol",
            "ignore",
            "priority",
            "id",
            "pitch",
            "handle",
            "sep",
            "void",
            "sfxid",
            "sndserver",
            "sfx",
            "command",
            "volume"
          ],
          "outputs": [
            "ifdef SNDSERV",
            "int"
          ],
          "content": {
            "functions": [
              {
                "name": "myioctl",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "fd"
                  },
                  {
                    "type": "int",
                    "name": "command"
                  },
                  {
                    "type": "int*",
                    "name": "arg"
                  }
                ],
                "start_line": 159,
                "end_line": 171,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "rc",
                    "array_size": null,
                    "line_number": 161
                  },
                  {
                    "type": "extern int",
                    "name": "errno",
                    "array_size": null,
                    "line_number": 162
                  }
                ],
                "function_calls": [
                  {
                    "name": "ioctl",
                    "line_number": 164
                  },
                  {
                    "name": "if",
                    "line_number": 165
                  },
                  {
                    "name": "fprintf",
                    "line_number": 167
                  },
                  {
                    "name": "ioctl",
                    "line_number": 167
                  },
                  {
                    "name": "fprintf",
                    "line_number": 168
                  },
                  {
                    "name": "exit",
                    "line_number": 169
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 165
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "fd",
                  "command",
                  "arg"
                ],
                "outputs": [],
                "dependencies": [
                  "exit",
                  "fprintf",
                  "ioctl",
                  "if"
                ]
              },
              {
                "name": "addsfx",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "sfxid"
                  },
                  {
                    "type": "int",
                    "name": "volume"
                  },
                  {
                    "type": "int",
                    "name": "step"
                  },
                  {
                    "type": "int",
                    "name": "seperation"
                  }
                ],
                "start_line": 264,
                "end_line": 376,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 268
                  },
                  {
                    "type": "int",
                    "name": "slot",
                    "array_size": null,
                    "line_number": 273
                  },
                  {
                    "type": "int",
                    "name": "rightvol",
                    "array_size": null,
                    "line_number": 275
                  },
                  {
                    "type": "int",
                    "name": "leftvol",
                    "array_size": null,
                    "line_number": 276
                  },
                  {
                    "type": "return",
                    "name": "rc",
                    "array_size": null,
                    "line_number": 375
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 280
                  },
                  {
                    "name": "for",
                    "line_number": 288
                  },
                  {
                    "name": "if",
                    "line_number": 291
                  },
                  {
                    "name": "for",
                    "line_number": 304
                  },
                  {
                    "name": "if",
                    "line_number": 306
                  },
                  {
                    "name": "if",
                    "line_number": 317
                  },
                  {
                    "name": "if",
                    "line_number": 330
                  },
                  {
                    "name": "stopped",
                    "line_number": 334
                  },
                  {
                    "name": "if",
                    "line_number": 359
                  },
                  {
                    "name": "I_Error",
                    "line_number": 360
                  },
                  {
                    "name": "if",
                    "line_number": 362
                  },
                  {
                    "name": "I_Error",
                    "line_number": 363
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 280
                  },
                  {
                    "type": "for",
                    "line_number": 288
                  },
                  {
                    "type": "if",
                    "line_number": 291
                  },
                  {
                    "type": "for",
                    "line_number": 304
                  },
                  {
                    "type": "if",
                    "line_number": 306
                  },
                  {
                    "type": "if",
                    "line_number": 317
                  },
                  {
                    "type": "else",
                    "line_number": 319
                  },
                  {
                    "type": "if",
                    "line_number": 330
                  },
                  {
                    "type": "if",
                    "line_number": 359
                  },
                  {
                    "type": "if",
                    "line_number": 362
                  },
                  {
                    "type": "for",
                    "line_number": 366
                  },
                  {
                    "type": "for",
                    "line_number": 371
                  }
                ],
                "complexity": 16,
                "inputs": [
                  "sfxid",
                  "volume",
                  "step",
                  "seperation"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "for",
                  "stopped",
                  "I_Error",
                  "if"
                ]
              },
              {
                "name": "I_SetChannels",
                "return_type": "void",
                "parameters": [],
                "start_line": 396,
                "end_line": 424,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 401
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 402
                  }
                ],
                "function_calls": [
                  {
                    "name": "lookups",
                    "line_number": 398
                  },
                  {
                    "name": "for",
                    "line_number": 407
                  },
                  {
                    "name": "for",
                    "line_number": 414
                  },
                  {
                    "name": "pow",
                    "line_number": 415
                  },
                  {
                    "name": "for",
                    "line_number": 421
                  },
                  {
                    "name": "for",
                    "line_number": 422
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 407
                  },
                  {
                    "type": "for",
                    "line_number": 412
                  },
                  {
                    "type": "for",
                    "line_number": 414
                  },
                  {
                    "type": "for",
                    "line_number": 421
                  },
                  {
                    "type": "for",
                    "line_number": 422
                  }
                ],
                "complexity": 4,
                "inputs": [],
                "outputs": [],
                "dependencies": [
                  "for",
                  "pow",
                  "lookups"
                ]
              },
              {
                "name": "I_SetSfxVolume",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "volume"
                  }
                ],
                "start_line": 427,
                "end_line": 435,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "volume"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "I_SetMusicVolume",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "volume"
                  }
                ],
                "start_line": 438,
                "end_line": 444,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "Whatever",
                    "line_number": 443
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "volume"
                ],
                "outputs": [],
                "dependencies": [
                  "Whatever"
                ]
              },
              {
                "name": "I_GetSfxLumpNum",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "sfxinfo_t*",
                    "name": "sfx"
                  }
                ],
                "start_line": 451,
                "end_line": 456,
                "local_variables": [
                  {
                    "type": "char",
                    "name": "namebuf",
                    "array_size": "9",
                    "line_number": 453
                  }
                ],
                "function_calls": [
                  {
                    "name": "sprintf",
                    "line_number": 454
                  },
                  {
                    "name": "W_GetNumForName",
                    "line_number": 455
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "sfx"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "sprintf",
                  "W_GetNumForName"
                ]
              },
              {
                "name": "I_StartSound",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "id"
                  },
                  {
                    "type": "int",
                    "name": "vol"
                  },
                  {
                    "type": "int",
                    "name": "sep"
                  },
                  {
                    "type": "int",
                    "name": "pitch"
                  },
                  {
                    "type": "int",
                    "name": "priority"
                  }
                ],
                "start_line": 470,
                "end_line": 495,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "id",
                    "array_size": null,
                    "line_number": 483
                  },
                  {
                    "type": "return",
                    "name": "id",
                    "array_size": null,
                    "line_number": 493
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 477
                  },
                  {
                    "name": "fprintf",
                    "line_number": 479
                  },
                  {
                    "name": "fflush",
                    "line_number": 480
                  },
                  {
                    "name": "fprintf",
                    "line_number": 486
                  },
                  {
                    "name": "handle",
                    "line_number": 488
                  },
                  {
                    "name": "addsfx",
                    "line_number": 489
                  },
                  {
                    "name": "fprintf",
                    "line_number": 491
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 477
                  },
                  {
                    "type": "else",
                    "line_number": 484
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "id",
                  "vol",
                  "sep",
                  "pitch",
                  "priority"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "fprintf",
                  "if",
                  "handle",
                  "addsfx",
                  "fflush"
                ]
              },
              {
                "name": "if",
                "return_type": "ifdef SNDSERV",
                "parameters": [
                  {
                    "type": "",
                    "name": "sndserver"
                  }
                ],
                "start_line": 482,
                "end_line": 486,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "fprintf",
                    "line_number": 484
                  },
                  {
                    "name": "fflush",
                    "line_number": 485
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "sndserver"
                ],
                "outputs": [
                  "ifdef SNDSERV"
                ],
                "dependencies": [
                  "fprintf",
                  "fflush"
                ]
              },
              {
                "name": "I_StopSound",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "handle"
                  }
                ],
                "start_line": 505,
                "end_line": 514,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "handle"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "I_SoundIsPlaying",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "handle"
                  }
                ],
                "start_line": 517,
                "end_line": 521,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "handle"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": []
              },
              {
                "name": "I_UpdateSound",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 539,
                "end_line": 654,
                "local_variables": [
                  {
                    "type": "register unsigned int",
                    "name": "sample",
                    "array_size": null,
                    "line_number": 549
                  },
                  {
                    "type": "register int",
                    "name": "dl",
                    "array_size": null,
                    "line_number": 550
                  },
                  {
                    "type": "register int",
                    "name": "dr",
                    "array_size": null,
                    "line_number": 551
                  },
                  {
                    "type": "int",
                    "name": "step",
                    "array_size": null,
                    "line_number": 558
                  },
                  {
                    "type": "int",
                    "name": "chan",
                    "array_size": null,
                    "line_number": 561
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 576
                  },
                  {
                    "name": "for",
                    "line_number": 585
                  },
                  {
                    "name": "if",
                    "line_number": 588
                  },
                  {
                    "name": "channel",
                    "line_number": 593
                  },
                  {
                    "name": "if",
                    "line_number": 606
                  },
                  {
                    "name": "if",
                    "line_number": 613
                  },
                  {
                    "name": "if",
                    "line_number": 614
                  },
                  {
                    "name": "if",
                    "line_number": 617
                  },
                  {
                    "name": "if",
                    "line_number": 619
                  },
                  {
                    "name": "if",
                    "line_number": 625
                  },
                  {
                    "name": "if",
                    "line_number": 627
                  },
                  {
                    "name": "if",
                    "line_number": 639
                  },
                  {
                    "name": "if",
                    "line_number": 645
                  },
                  {
                    "name": "fprintf",
                    "line_number": 647
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 548
                  },
                  {
                    "type": "for",
                    "line_number": 569
                  },
                  {
                    "type": "for",
                    "line_number": 575
                  },
                  {
                    "type": "while",
                    "line_number": 576
                  },
                  {
                    "type": "for",
                    "line_number": 585
                  },
                  {
                    "type": "if",
                    "line_number": 587
                  },
                  {
                    "type": "if",
                    "line_number": 588
                  },
                  {
                    "type": "for",
                    "line_number": 593
                  },
                  {
                    "type": "if",
                    "line_number": 606
                  },
                  {
                    "type": "if",
                    "line_number": 613
                  },
                  {
                    "type": "if",
                    "line_number": 614
                  },
                  {
                    "type": "else",
                    "line_number": 615
                  },
                  {
                    "type": "if",
                    "line_number": 617
                  },
                  {
                    "type": "if",
                    "line_number": 619
                  },
                  {
                    "type": "else",
                    "line_number": 621
                  },
                  {
                    "type": "for",
                    "line_number": 624
                  },
                  {
                    "type": "if",
                    "line_number": 625
                  },
                  {
                    "type": "if",
                    "line_number": 627
                  },
                  {
                    "type": "else",
                    "line_number": 629
                  },
                  {
                    "type": "if",
                    "line_number": 639
                  },
                  {
                    "type": "if",
                    "line_number": 645
                  },
                  {
                    "type": "for",
                    "line_number": 651
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "while",
                  "if",
                  "for",
                  "channel"
                ]
              },
              {
                "name": "I_SubmitSound",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 665,
                "end_line": 669,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "write",
                    "line_number": 668
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "write"
                ]
              },
              {
                "name": "I_UpdateSoundParams",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "handle"
                  },
                  {
                    "type": "int",
                    "name": "vol"
                  },
                  {
                    "type": "int",
                    "name": "sep"
                  },
                  {
                    "type": "int",
                    "name": "pitch"
                  }
                ],
                "start_line": 674,
                "end_line": 683,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "handle",
                  "vol",
                  "sep",
                  "pitch"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "I_ShutdownSound",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 693,
                "end_line": 730,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 705
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 696
                  },
                  {
                    "name": "fprintf",
                    "line_number": 699
                  },
                  {
                    "name": "fflush",
                    "line_number": 700
                  },
                  {
                    "name": "FIXME",
                    "line_number": 708
                  },
                  {
                    "name": "fprintf",
                    "line_number": 709
                  },
                  {
                    "name": "fflush",
                    "line_number": 710
                  },
                  {
                    "name": "while",
                    "line_number": 712
                  },
                  {
                    "name": "for",
                    "line_number": 714
                  },
                  {
                    "name": "if",
                    "line_number": 717
                  },
                  {
                    "name": "I_SoundDelTimer",
                    "line_number": 721
                  },
                  {
                    "name": "close",
                    "line_number": 725
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 696
                  },
                  {
                    "type": "else",
                    "line_number": 702
                  },
                  {
                    "type": "while",
                    "line_number": 712
                  },
                  {
                    "type": "for",
                    "line_number": 714
                  },
                  {
                    "type": "if",
                    "line_number": 717
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "while",
                  "if",
                  "for",
                  "I_SoundDelTimer",
                  "close",
                  "fflush",
                  "FIXME"
                ]
              },
              {
                "name": "if",
                "return_type": "ifdef SNDSERV",
                "parameters": [
                  {
                    "type": "",
                    "name": "sndserver"
                  }
                ],
                "start_line": 695,
                "end_line": 700,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "fprintf",
                    "line_number": 698
                  },
                  {
                    "name": "fflush",
                    "line_number": 699
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "sndserver"
                ],
                "outputs": [
                  "ifdef SNDSERV"
                ],
                "dependencies": [
                  "fprintf",
                  "fflush"
                ]
              },
              {
                "name": "I_InitSound",
                "return_type": "void",
                "parameters": [],
                "start_line": 737,
                "end_line": 824,
                "local_variables": [
                  {
                    "type": "char",
                    "name": "buffer",
                    "array_size": "256",
                    "line_number": 740
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 759
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 742
                  },
                  {
                    "name": "getenv",
                    "line_number": 742
                  },
                  {
                    "name": "sprintf",
                    "line_number": 743
                  },
                  {
                    "name": "getenv",
                    "line_number": 744
                  },
                  {
                    "name": "sprintf",
                    "line_number": 747
                  },
                  {
                    "name": "if",
                    "line_number": 750
                  },
                  {
                    "name": "access",
                    "line_number": 750
                  },
                  {
                    "name": "strcat",
                    "line_number": 752
                  },
                  {
                    "name": "popen",
                    "line_number": 753
                  },
                  {
                    "name": "fprintf",
                    "line_number": 756
                  },
                  {
                    "name": "fprintf",
                    "line_number": 762
                  },
                  {
                    "name": "I_SoundSetTimer",
                    "line_number": 763
                  },
                  {
                    "name": "fprintf",
                    "line_number": 767
                  },
                  {
                    "name": "open",
                    "line_number": 769
                  },
                  {
                    "name": "if",
                    "line_number": 770
                  },
                  {
                    "name": "fprintf",
                    "line_number": 771
                  },
                  {
                    "name": "myioctl",
                    "line_number": 775
                  },
                  {
                    "name": "myioctl",
                    "line_number": 776
                  },
                  {
                    "name": "myioctl",
                    "line_number": 780
                  },
                  {
                    "name": "myioctl",
                    "line_number": 783
                  },
                  {
                    "name": "myioctl",
                    "line_number": 785
                  },
                  {
                    "name": "if",
                    "line_number": 787
                  },
                  {
                    "name": "myioctl",
                    "line_number": 788
                  },
                  {
                    "name": "fprintf",
                    "line_number": 790
                  },
                  {
                    "name": "fprintf",
                    "line_number": 792
                  },
                  {
                    "name": "data",
                    "line_number": 795
                  },
                  {
                    "name": "fprintf",
                    "line_number": 796
                  },
                  {
                    "name": "for",
                    "line_number": 798
                  },
                  {
                    "name": "if",
                    "line_number": 801
                  },
                  {
                    "name": "getsfx",
                    "line_number": 804
                  },
                  {
                    "name": "sizeof",
                    "line_number": 810
                  },
                  {
                    "name": "fprintf",
                    "line_number": 814
                  },
                  {
                    "name": "for",
                    "line_number": 817
                  },
                  {
                    "name": "fprintf",
                    "line_number": 821
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 742
                  },
                  {
                    "type": "else",
                    "line_number": 746
                  },
                  {
                    "type": "if",
                    "line_number": 750
                  },
                  {
                    "type": "else",
                    "line_number": 755
                  },
                  {
                    "type": "else",
                    "line_number": 757
                  },
                  {
                    "type": "if",
                    "line_number": 770
                  },
                  {
                    "type": "if",
                    "line_number": 787
                  },
                  {
                    "type": "else",
                    "line_number": 789
                  },
                  {
                    "type": "for",
                    "line_number": 798
                  },
                  {
                    "type": "if",
                    "line_number": 801
                  },
                  {
                    "type": "else",
                    "line_number": 806
                  },
                  {
                    "type": "for",
                    "line_number": 817
                  }
                ],
                "complexity": 8,
                "inputs": [],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "popen",
                  "open",
                  "if",
                  "I_SoundSetTimer",
                  "for",
                  "myioctl",
                  "sizeof",
                  "getenv",
                  "data",
                  "strcat",
                  "sprintf",
                  "getsfx",
                  "access"
                ]
              },
              {
                "name": "I_InitMusic",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 835,
                "end_line": 836,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "I_ShutdownMusic",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 836,
                "end_line": 837,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "I_PlaySong",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "handle"
                  },
                  {
                    "type": "int",
                    "name": "looping"
                  }
                ],
                "start_line": 841,
                "end_line": 846,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "handle",
                  "looping"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "I_PauseSong",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "handle"
                  }
                ],
                "start_line": 848,
                "end_line": 852,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "handle"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "I_ResumeSong",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "handle"
                  }
                ],
                "start_line": 854,
                "end_line": 858,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "handle"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "I_StopSong",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "handle"
                  }
                ],
                "start_line": 860,
                "end_line": 867,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "handle"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "I_UnRegisterSong",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "handle"
                  }
                ],
                "start_line": 869,
                "end_line": 873,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "handle"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "I_RegisterSong",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "void*",
                    "name": "data"
                  }
                ],
                "start_line": 875,
                "end_line": 881,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "1",
                    "array_size": null,
                    "line_number": 880
                  }
                ],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "data"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": []
              },
              {
                "name": "I_QrySongPlaying",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "handle"
                  }
                ],
                "start_line": 884,
                "end_line": 889,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "handle"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": []
              },
              {
                "name": "I_HandleSoundTimer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "ignore"
                  }
                ],
                "start_line": 917,
                "end_line": 938,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "fprintf",
                    "line_number": 920
                  },
                  {
                    "name": "fflush",
                    "line_number": 920
                  },
                  {
                    "name": "if",
                    "line_number": 923
                  },
                  {
                    "name": "I_SubmitSound",
                    "line_number": 925
                  },
                  {
                    "name": "write",
                    "line_number": 927
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 922
                  },
                  {
                    "type": "if",
                    "line_number": 923
                  },
                  {
                    "type": "else",
                    "line_number": 932
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "ignore"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "if",
                  "I_SubmitSound",
                  "fflush",
                  "write"
                ]
              },
              {
                "name": "I_SoundSetTimer",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "duration_of_tick"
                  }
                ],
                "start_line": 941,
                "end_line": 976,
                "local_variables": [
                  {
                    "type": "struct itimerval",
                    "name": "value",
                    "array_size": null,
                    "line_number": 944
                  },
                  {
                    "type": "struct itimerval",
                    "name": "ovalue",
                    "array_size": null,
                    "line_number": 945
                  },
                  {
                    "type": "struct sigaction",
                    "name": "act",
                    "array_size": null,
                    "line_number": 946
                  },
                  {
                    "type": "struct sigaction",
                    "name": "oact",
                    "array_size": null,
                    "line_number": 947
                  },
                  {
                    "type": "int",
                    "name": "res",
                    "array_size": null,
                    "line_number": 949
                  },
                  {
                    "type": "return",
                    "name": "res",
                    "array_size": null,
                    "line_number": 975
                  }
                ],
                "function_calls": [
                  {
                    "name": "signal",
                    "line_number": 952
                  },
                  {
                    "name": "sigaction",
                    "line_number": 961
                  },
                  {
                    "name": "setitimer",
                    "line_number": 969
                  },
                  {
                    "name": "if",
                    "line_number": 972
                  },
                  {
                    "name": "fprintf",
                    "line_number": 973
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 943
                  },
                  {
                    "type": "for",
                    "line_number": 954
                  },
                  {
                    "type": "if",
                    "line_number": 972
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "duration_of_tick"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "fprintf",
                  "signal",
                  "if",
                  "setitimer",
                  "sigaction"
                ]
              },
              {
                "name": "I_SoundDelTimer",
                "return_type": "void",
                "parameters": [],
                "start_line": 980,
                "end_line": 985,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 983
                  },
                  {
                    "name": "I_SoundSetTimer",
                    "line_number": 983
                  },
                  {
                    "name": "fprintf",
                    "line_number": 984
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 983
                  }
                ],
                "complexity": 2,
                "inputs": [],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "I_SoundSetTimer",
                  "if"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "audio_fd",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 106
              },
              {
                "name": "steptable",
                "type": "int",
                "storage_class": null,
                "array_size": "256",
                "line_number": 144
              },
              {
                "name": "rc",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 165
              },
              {
                "name": "errno",
                "type": "extern int",
                "storage_class": null,
                "array_size": null,
                "line_number": 166
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 192
              },
              {
                "name": "size",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 193
              },
              {
                "name": "paddedsize",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 194
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "20",
                "line_number": 195
              },
              {
                "name": "sfxlump",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 196
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 273
              },
              {
                "name": "slot",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 278
              },
              {
                "name": "rightvol",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 280
              },
              {
                "name": "leftvol",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 281
              },
              {
                "name": "rc",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 380
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 401
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 402
              },
              {
                "name": "namebuf",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 453
              },
              {
                "name": "id",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 489
              },
              {
                "name": "id",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 499
              },
              {
                "name": "sample",
                "type": "register unsigned int",
                "storage_class": null,
                "array_size": null,
                "line_number": 549
              },
              {
                "name": "dl",
                "type": "register int",
                "storage_class": null,
                "array_size": null,
                "line_number": 550
              },
              {
                "name": "dr",
                "type": "register int",
                "storage_class": null,
                "array_size": null,
                "line_number": 551
              },
              {
                "name": "step",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 558
              },
              {
                "name": "chan",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 561
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 705
              },
              {
                "name": "buffer",
                "type": "char",
                "storage_class": null,
                "array_size": "256",
                "line_number": 741
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 760
              },
              {
                "name": "1",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 880
              },
              {
                "name": "tSigSet",
                "type": "typedef     sigset_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 902
              },
              {
                "name": "tSigSet",
                "type": "typedef     int",
                "storage_class": null,
                "array_size": null,
                "line_number": 904
              },
              {
                "name": "value",
                "type": "struct itimerval",
                "storage_class": null,
                "array_size": null,
                "line_number": 944
              },
              {
                "name": "ovalue",
                "type": "struct itimerval",
                "storage_class": null,
                "array_size": null,
                "line_number": 945
              },
              {
                "name": "act",
                "type": "struct sigaction",
                "storage_class": null,
                "array_size": null,
                "line_number": 946
              },
              {
                "name": "oact",
                "type": "struct sigaction",
                "storage_class": null,
                "array_size": null,
                "line_number": 947
              },
              {
                "name": "res",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 949
              },
              {
                "name": "res",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 975
              }
            ],
            "defines": [
              {
                "name": "SOUND_INTERVAL",
                "value": "500",
                "line_number": 71
              },
              {
                "name": "SAMPLECOUNT",
                "value": "512",
                "line_number": 93
              },
              {
                "name": "NUM_CHANNELS",
                "value": "8",
                "line_number": 94
              },
              {
                "name": "BUFMUL",
                "value": "4",
                "line_number": 96
              },
              {
                "name": "MIXBUFFERSIZE",
                "value": "(SAMPLECOUNT*BUFMUL)",
                "line_number": 97
              },
              {
                "name": "SAMPLERATE",
                "value": "11025\t// Hz",
                "line_number": 99
              },
              {
                "name": "SAMPLESIZE",
                "value": "2   \t// 16bit",
                "line_number": 100
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/i_sound.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of functions",
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "i_sound.h",
          "type": "file",
          "size": 2692,
          "last_modified": "2024-09-05T16:00:03.606889",
          "path": "linuxdoom-1.10/i_sound.h",
          "readme": "# i_sound.h\n\nThis file contains functionality related to i_sound.",
          "dependencies": [
            "sounds.h",
            "doomdef.h",
            "stdio.h",
            "doomstat.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/i_sound.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "i_system.c",
          "type": "file",
          "size": 2937,
          "last_modified": "2024-09-05T16:00:03.632897",
          "path": "linuxdoom-1.10/i_system.c",
          "readme": "# i_system.c\n\nThis file contains functionality related to i_system.",
          "dependencies": [
            "unistd.h",
            "string.h",
            "sys/time.h",
            "stdio.h",
            "stdarg.h",
            "i_video.h",
            "stdlib.h",
            "i_system.h",
            "m_misc.h",
            "d_net.h",
            "g_game.h",
            "doomdef.h",
            "i_sound.h"
          ],
          "inputs": [
            "count",
            "...",
            "on",
            "*error",
            "void",
            "off",
            "total"
          ],
          "outputs": [
            "int"
          ],
          "content": {
            "functions": [
              {
                "name": "I_Tactile",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "on"
                  },
                  {
                    "type": "int",
                    "name": "off"
                  },
                  {
                    "type": "int",
                    "name": "total"
                  }
                ],
                "start_line": 54,
                "end_line": 58,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "on",
                  "off",
                  "total"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "I_GetHeapSize",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 71,
                "end_line": 74,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": []
              },
              {
                "name": "I_GetTime",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 88,
                "end_line": 100,
                "local_variables": [
                  {
                    "type": "struct timeval",
                    "name": "tp",
                    "array_size": null,
                    "line_number": 90
                  },
                  {
                    "type": "struct timezone",
                    "name": "tzp",
                    "array_size": null,
                    "line_number": 91
                  },
                  {
                    "type": "int",
                    "name": "newtics",
                    "array_size": null,
                    "line_number": 92
                  },
                  {
                    "type": "return",
                    "name": "newtics",
                    "array_size": null,
                    "line_number": 99
                  }
                ],
                "function_calls": [
                  {
                    "name": "gettimeofday",
                    "line_number": 95
                  },
                  {
                    "name": "if",
                    "line_number": 96
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 96
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "gettimeofday",
                  "if"
                ]
              },
              {
                "name": "I_Init",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 107,
                "end_line": 111,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "I_InitSound",
                    "line_number": 109
                  },
                  {
                    "name": "I_InitGraphics",
                    "line_number": 110
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "I_InitSound",
                  "I_InitGraphics"
                ]
              },
              {
                "name": "I_Quit",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 116,
                "end_line": 124,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "D_QuitNetGame",
                    "line_number": 118
                  },
                  {
                    "name": "I_ShutdownSound",
                    "line_number": 119
                  },
                  {
                    "name": "I_ShutdownMusic",
                    "line_number": 120
                  },
                  {
                    "name": "M_SaveDefaults",
                    "line_number": 121
                  },
                  {
                    "name": "I_ShutdownGraphics",
                    "line_number": 122
                  },
                  {
                    "name": "exit",
                    "line_number": 123
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "exit",
                  "M_SaveDefaults",
                  "I_ShutdownGraphics",
                  "D_QuitNetGame",
                  "I_ShutdownMusic",
                  "I_ShutdownSound"
                ]
              },
              {
                "name": "I_WaitVBL",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "count"
                  }
                ],
                "start_line": 126,
                "end_line": 137,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "sginap",
                    "line_number": 129
                  },
                  {
                    "name": "sleep",
                    "line_number": 132
                  },
                  {
                    "name": "usleep",
                    "line_number": 134
                  }
                ],
                "control_flow": [
                  {
                    "type": "else",
                    "line_number": 130
                  },
                  {
                    "type": "else",
                    "line_number": 133
                  }
                ],
                "complexity": 1,
                "inputs": [
                  "count"
                ],
                "outputs": [],
                "dependencies": [
                  "sginap",
                  "usleep",
                  "sleep"
                ]
              },
              {
                "name": "I_BeginRead",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 139,
                "end_line": 141,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "I_EndRead",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 143,
                "end_line": 145,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "I_Error",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char",
                    "name": "*error"
                  },
                  {
                    "type": "",
                    "name": "..."
                  }
                ],
                "start_line": 162,
                "end_line": 183,
                "local_variables": [
                  {
                    "type": "va_list",
                    "name": "argptr",
                    "array_size": null,
                    "line_number": 164
                  }
                ],
                "function_calls": [
                  {
                    "name": "va_start",
                    "line_number": 167
                  },
                  {
                    "name": "fprintf",
                    "line_number": 168
                  },
                  {
                    "name": "vfprintf",
                    "line_number": 169
                  },
                  {
                    "name": "fprintf",
                    "line_number": 170
                  },
                  {
                    "name": "va_end",
                    "line_number": 171
                  },
                  {
                    "name": "fflush",
                    "line_number": 173
                  },
                  {
                    "name": "if",
                    "line_number": 176
                  },
                  {
                    "name": "G_CheckDemoStatus",
                    "line_number": 177
                  },
                  {
                    "name": "D_QuitNetGame",
                    "line_number": 179
                  },
                  {
                    "name": "I_ShutdownGraphics",
                    "line_number": 180
                  },
                  {
                    "name": "exit",
                    "line_number": 182
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 176
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "*error",
                  "..."
                ],
                "outputs": [],
                "dependencies": [
                  "exit",
                  "fprintf",
                  "if",
                  "vfprintf",
                  "G_CheckDemoStatus",
                  "I_ShutdownGraphics",
                  "fflush",
                  "va_start",
                  "D_QuitNetGame",
                  "va_end"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "emptycmd",
                "type": "ticcmd_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 64
              },
              {
                "name": "tp",
                "type": "struct timeval",
                "storage_class": null,
                "array_size": null,
                "line_number": 90
              },
              {
                "name": "tzp",
                "type": "struct timezone",
                "storage_class": null,
                "array_size": null,
                "line_number": 91
              },
              {
                "name": "newtics",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 92
              },
              {
                "name": "newtics",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 99
              },
              {
                "name": "mem",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 153
              },
              {
                "name": "demorecording",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 160
              },
              {
                "name": "argptr",
                "type": "va_list",
                "storage_class": null,
                "array_size": null,
                "line_number": 164
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/i_system.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "i_system.h",
          "type": "file",
          "size": 2338,
          "last_modified": "2024-09-05T16:00:03.657409",
          "path": "linuxdoom-1.10/i_system.h",
          "readme": "# i_system.h\n\nThis file contains functionality related to i_system.",
          "dependencies": [
            "d_ticcmd.h",
            "d_event.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/i_system.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "i_video.c",
          "type": "file",
          "size": 22756,
          "last_modified": "2024-09-05T16:00:03.683411",
          "path": "linuxdoom-1.10/i_video.c",
          "readme": "# i_video.c\n\nThis file contains functionality related to i_video.",
          "dependencies": [
            "sys/types.h",
            "signal.h",
            "X11/Xutil.h",
            "v_video.h",
            "unistd.h",
            "sys/shm.h",
            "m_argv.h",
            "d_main.h",
            "doomdef.h",
            "errnos.h",
            "X11/Xlib.h",
            "stdlib.h",
            "X11/keysym.h",
            "sys/socket.h",
            "sys/time.h",
            "X11/extensions/XShm.h",
            "netinet/in.h",
            "sys/ipc.h",
            "stdarg.h",
            "doomstat.h",
            "i_system.h"
          ],
          "inputs": [
            "root",
            "i++",
            "firstcall",
            "palette",
            "-1",
            "*palette",
            "size",
            "2",
            "cmap",
            "scr",
            "devparm",
            "void",
            "4",
            "!rc",
            "display",
            "xline",
            "doShm",
            "lineptr",
            "3",
            "n==6"
          ],
          "outputs": [
            "initialize the colormap",
            "get stats on it",
            "Cursor",
            "just get the id",
            "int",
            "scales the screen size before blitting it",
            "draws little dots on the bottom of the screen",
            "s a local connection",
            "set the X colormap entries",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "xlatekey",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 97,
                "end_line": 162,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "rc",
                    "array_size": null,
                    "line_number": 100
                  },
                  {
                    "type": "return",
                    "name": "rc",
                    "array_size": null,
                    "line_number": 160
                  }
                ],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 102
                  },
                  {
                    "name": "XKeycodeToKeysym",
                    "line_number": 102
                  },
                  {
                    "name": "if",
                    "line_number": 153
                  },
                  {
                    "name": "if",
                    "line_number": 155
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 153
                  },
                  {
                    "type": "if",
                    "line_number": 155
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "switch",
                  "if",
                  "XKeycodeToKeysym"
                ]
              },
              {
                "name": "I_ShutdownGraphics",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 164,
                "end_line": 176,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 167
                  },
                  {
                    "name": "XShmDetach",
                    "line_number": 167
                  },
                  {
                    "name": "I_Error",
                    "line_number": 168
                  },
                  {
                    "name": "XShmDetach",
                    "line_number": 168
                  },
                  {
                    "name": "I_ShutdownGraphics",
                    "line_number": 168
                  },
                  {
                    "name": "shmdt",
                    "line_number": 171
                  },
                  {
                    "name": "shmctl",
                    "line_number": 172
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 167
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "shmctl",
                  "shmdt",
                  "I_Error",
                  "I_ShutdownGraphics",
                  "XShmDetach"
                ]
              },
              {
                "name": "I_StartFrame",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 183,
                "end_line": 187,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "I_GetEvent",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 194,
                "end_line": 279,
                "local_variables": [
                  {
                    "type": "event_t",
                    "name": "event",
                    "array_size": null,
                    "line_number": 197
                  }
                ],
                "function_calls": [
                  {
                    "name": "XNextEvent",
                    "line_number": 200
                  },
                  {
                    "name": "switch",
                    "line_number": 201
                  },
                  {
                    "name": "xlatekey",
                    "line_number": 205
                  },
                  {
                    "name": "D_PostEvent",
                    "line_number": 206
                  },
                  {
                    "name": "fprintf",
                    "line_number": 207
                  },
                  {
                    "name": "xlatekey",
                    "line_number": 211
                  },
                  {
                    "name": "D_PostEvent",
                    "line_number": 212
                  },
                  {
                    "name": "fprintf",
                    "line_number": 213
                  },
                  {
                    "name": "D_PostEvent",
                    "line_number": 225
                  },
                  {
                    "name": "fprintf",
                    "line_number": 226
                  },
                  {
                    "name": "D_PostEvent",
                    "line_number": 241
                  },
                  {
                    "name": "fprintf",
                    "line_number": 242
                  },
                  {
                    "name": "if",
                    "line_number": 253
                  },
                  {
                    "name": "if",
                    "line_number": 257
                  },
                  {
                    "name": "D_PostEvent",
                    "line_number": 260
                  },
                  {
                    "name": "fprintf",
                    "line_number": 261
                  },
                  {
                    "name": "if",
                    "line_number": 275
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 253
                  },
                  {
                    "type": "if",
                    "line_number": 257
                  },
                  {
                    "type": "else",
                    "line_number": 263
                  },
                  {
                    "type": "if",
                    "line_number": 275
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "xlatekey",
                  "if",
                  "XNextEvent",
                  "switch",
                  "D_PostEvent"
                ]
              },
              {
                "name": "createnullcursor",
                "return_type": "Cursor",
                "parameters": [
                  {
                    "type": "Display*",
                    "name": "display"
                  },
                  {
                    "type": "Window",
                    "name": "root"
                  }
                ],
                "start_line": 281,
                "end_line": 301,
                "local_variables": [
                  {
                    "type": "Pixmap",
                    "name": "cursormask",
                    "array_size": null,
                    "line_number": 283
                  },
                  {
                    "type": "XGCValues",
                    "name": "xgc",
                    "array_size": null,
                    "line_number": 284
                  },
                  {
                    "type": "GC",
                    "name": "gc",
                    "array_size": null,
                    "line_number": 285
                  },
                  {
                    "type": "XColor",
                    "name": "dummycolour",
                    "array_size": null,
                    "line_number": 286
                  },
                  {
                    "type": "Cursor",
                    "name": "cursor",
                    "array_size": null,
                    "line_number": 287
                  },
                  {
                    "type": "return",
                    "name": "cursor",
                    "array_size": null,
                    "line_number": 300
                  }
                ],
                "function_calls": [
                  {
                    "name": "XCreatePixmap",
                    "line_number": 289
                  },
                  {
                    "name": "XCreateGC",
                    "line_number": 291
                  },
                  {
                    "name": "XFillRectangle",
                    "line_number": 292
                  },
                  {
                    "name": "XCreatePixmapCursor",
                    "line_number": 296
                  },
                  {
                    "name": "XFreePixmap",
                    "line_number": 298
                  },
                  {
                    "name": "XFreeGC",
                    "line_number": 299
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "display",
                  "root"
                ],
                "outputs": [
                  "Cursor"
                ],
                "dependencies": [
                  "XFreeGC",
                  "XCreatePixmapCursor",
                  "XCreateGC",
                  "XCreatePixmap",
                  "XFillRectangle",
                  "XFreePixmap"
                ]
              },
              {
                "name": "I_StartTic",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 309,
                "end_line": 338,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 312
                  },
                  {
                    "name": "while",
                    "line_number": 315
                  },
                  {
                    "name": "XPending",
                    "line_number": 315
                  },
                  {
                    "name": "I_GetEvent",
                    "line_number": 316
                  },
                  {
                    "name": "if",
                    "line_number": 321
                  },
                  {
                    "name": "if",
                    "line_number": 323
                  },
                  {
                    "name": "XWarpPointer",
                    "line_number": 325
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 312
                  },
                  {
                    "type": "while",
                    "line_number": 315
                  },
                  {
                    "type": "if",
                    "line_number": 321
                  },
                  {
                    "type": "if",
                    "line_number": 323
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "if",
                  "I_GetEvent",
                  "XWarpPointer",
                  "XPending"
                ]
              },
              {
                "name": "I_UpdateNoBlit",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 344,
                "end_line": 347,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "I_FinishUpdate",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 352,
                "end_line": 521,
                "local_variables": [
                  {
                    "type": "static int",
                    "name": "lasttic",
                    "array_size": null,
                    "line_number": 355
                  },
                  {
                    "type": "int",
                    "name": "tics",
                    "array_size": null,
                    "line_number": 356
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 357
                  },
                  {
                    "type": "unsigned int",
                    "name": "twoopixels",
                    "array_size": null,
                    "line_number": 382
                  },
                  {
                    "type": "unsigned int",
                    "name": "twomoreopixels",
                    "array_size": null,
                    "line_number": 383
                  },
                  {
                    "type": "unsigned int",
                    "name": "fouripixels",
                    "array_size": null,
                    "line_number": 384
                  },
                  {
                    "type": "unsigned int",
                    "name": "fouropixels",
                    "array_size": "3",
                    "line_number": 425
                  },
                  {
                    "type": "unsigned int",
                    "name": "fouripixels",
                    "array_size": null,
                    "line_number": 426
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 361
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 364
                  },
                  {
                    "name": "if",
                    "line_number": 367
                  },
                  {
                    "name": "for",
                    "line_number": 369
                  },
                  {
                    "name": "for",
                    "line_number": 371
                  },
                  {
                    "name": "if",
                    "line_number": 377
                  },
                  {
                    "name": "for",
                    "line_number": 387
                  },
                  {
                    "name": "while",
                    "line_number": 391
                  },
                  {
                    "name": "while",
                    "line_number": 414
                  },
                  {
                    "name": "if",
                    "line_number": 420
                  },
                  {
                    "name": "for",
                    "line_number": 429
                  },
                  {
                    "name": "while",
                    "line_number": 433
                  },
                  {
                    "name": "while",
                    "line_number": 469
                  },
                  {
                    "name": "if",
                    "line_number": 476
                  },
                  {
                    "name": "Expand4",
                    "line_number": 479
                  },
                  {
                    "name": "Expand4",
                    "line_number": 480
                  },
                  {
                    "name": "if",
                    "line_number": 483
                  },
                  {
                    "name": "if",
                    "line_number": 486
                  },
                  {
                    "name": "XShmPutImage",
                    "line_number": 486
                  },
                  {
                    "name": "I_Error",
                    "line_number": 494
                  },
                  {
                    "name": "XShmPutImage",
                    "line_number": 494
                  },
                  {
                    "name": "I_GetEvent",
                    "line_number": 500
                  },
                  {
                    "name": "while",
                    "line_number": 501
                  },
                  {
                    "name": "XPutImage",
                    "line_number": 508
                  },
                  {
                    "name": "XSync",
                    "line_number": 517
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 361
                  },
                  {
                    "type": "if",
                    "line_number": 367
                  },
                  {
                    "type": "for",
                    "line_number": 369
                  },
                  {
                    "type": "for",
                    "line_number": 371
                  },
                  {
                    "type": "if",
                    "line_number": 377
                  },
                  {
                    "type": "for",
                    "line_number": 387
                  },
                  {
                    "type": "while",
                    "line_number": 391
                  },
                  {
                    "type": "else",
                    "line_number": 408
                  },
                  {
                    "type": "while",
                    "line_number": 414
                  },
                  {
                    "type": "if",
                    "line_number": 420
                  },
                  {
                    "type": "for",
                    "line_number": 429
                  },
                  {
                    "type": "while",
                    "line_number": 433
                  },
                  {
                    "type": "else",
                    "line_number": 458
                  },
                  {
                    "type": "while",
                    "line_number": 469
                  },
                  {
                    "type": "if",
                    "line_number": 476
                  },
                  {
                    "type": "if",
                    "line_number": 483
                  },
                  {
                    "type": "if",
                    "line_number": 486
                  },
                  {
                    "type": "for",
                    "line_number": 496
                  },
                  {
                    "type": "while",
                    "line_number": 501
                  },
                  {
                    "type": "else",
                    "line_number": 504
                  }
                ],
                "complexity": 12,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "Expand4",
                  "while",
                  "for",
                  "if",
                  "I_GetEvent",
                  "I_Error",
                  "I_GetTime",
                  "XShmPutImage",
                  "XSync",
                  "XPutImage"
                ]
              },
              {
                "name": "if",
                "return_type": "draws little dots on the bottom of the screen",
                "parameters": [
                  {
                    "type": "",
                    "name": "devparm"
                  }
                ],
                "start_line": 360,
                "end_line": 373,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "I_GetTime",
                    "line_number": 363
                  },
                  {
                    "name": "if",
                    "line_number": 366
                  },
                  {
                    "name": "for",
                    "line_number": 368
                  },
                  {
                    "name": "for",
                    "line_number": 370
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 366
                  },
                  {
                    "type": "for",
                    "line_number": 368
                  },
                  {
                    "type": "for",
                    "line_number": 370
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "devparm"
                ],
                "outputs": [
                  "draws little dots on the bottom of the screen"
                ],
                "dependencies": [
                  "for",
                  "I_GetTime",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "scales the screen size before blitting it",
                "parameters": [
                  {
                    "type": "multiply ==",
                    "name": "2"
                  }
                ],
                "start_line": 376,
                "end_line": 418,
                "local_variables": [
                  {
                    "type": "unsigned int",
                    "name": "twoopixels",
                    "array_size": null,
                    "line_number": 381
                  },
                  {
                    "type": "unsigned int",
                    "name": "twomoreopixels",
                    "array_size": null,
                    "line_number": 382
                  },
                  {
                    "type": "unsigned int",
                    "name": "fouripixels",
                    "array_size": null,
                    "line_number": 383
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 386
                  },
                  {
                    "name": "while",
                    "line_number": 390
                  },
                  {
                    "name": "while",
                    "line_number": 413
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 386
                  },
                  {
                    "type": "while",
                    "line_number": 390
                  },
                  {
                    "type": "else",
                    "line_number": 407
                  },
                  {
                    "type": "while",
                    "line_number": 413
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "2"
                ],
                "outputs": [
                  "scales the screen size before blitting it"
                ],
                "dependencies": [
                  "while",
                  "for"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "multiply ==",
                    "name": "3"
                  }
                ],
                "start_line": 420,
                "end_line": 475,
                "local_variables": [
                  {
                    "type": "unsigned int",
                    "name": "fouropixels",
                    "array_size": "3",
                    "line_number": 425
                  },
                  {
                    "type": "unsigned int",
                    "name": "fouripixels",
                    "array_size": null,
                    "line_number": 426
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 429
                  },
                  {
                    "name": "while",
                    "line_number": 433
                  },
                  {
                    "name": "while",
                    "line_number": 469
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 429
                  },
                  {
                    "type": "while",
                    "line_number": 433
                  },
                  {
                    "type": "else",
                    "line_number": 458
                  },
                  {
                    "type": "while",
                    "line_number": 469
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "3"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "while",
                  "for"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "multiply ==",
                    "name": "4"
                  }
                ],
                "start_line": 476,
                "end_line": 481,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "Expand4",
                    "line_number": 479
                  },
                  {
                    "name": "Expand4",
                    "line_number": 480
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "4"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "Expand4"
                ]
              },
              {
                "name": "I_ReadScreen",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "byte*",
                    "name": "scr"
                  }
                ],
                "start_line": 527,
                "end_line": 530,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "memcpy",
                    "line_number": 529
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "scr"
                ],
                "outputs": [],
                "dependencies": [
                  "memcpy"
                ]
              },
              {
                "name": "UploadNewPalette",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "Colormap",
                    "name": "cmap"
                  },
                  {
                    "type": "byte",
                    "name": "*palette"
                  }
                ],
                "start_line": 538,
                "end_line": 577,
                "local_variables": [
                  {
                    "type": "register int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 541
                  },
                  {
                    "type": "register int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 542
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 546
                  },
                  {
                    "name": "if",
                    "line_number": 548
                  },
                  {
                    "name": "if",
                    "line_number": 552
                  },
                  {
                    "name": "for",
                    "line_number": 555
                  },
                  {
                    "name": "for",
                    "line_number": 563
                  },
                  {
                    "name": "XStoreColors",
                    "line_number": 574
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 546
                  },
                  {
                    "type": "else",
                    "line_number": 547
                  },
                  {
                    "type": "if",
                    "line_number": 548
                  },
                  {
                    "type": "if",
                    "line_number": 552
                  },
                  {
                    "type": "for",
                    "line_number": 555
                  },
                  {
                    "type": "for",
                    "line_number": 563
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "cmap",
                  "*palette"
                ],
                "outputs": [],
                "dependencies": [
                  "XStoreColors",
                  "for",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "initialize the colormap",
                "parameters": [
                  {
                    "type": "",
                    "name": "firstcall"
                  }
                ],
                "start_line": 551,
                "end_line": 559,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 554
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 554
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "firstcall"
                ],
                "outputs": [
                  "initialize the colormap"
                ],
                "dependencies": [
                  "for"
                ]
              },
              {
                "name": "for",
                "return_type": "set the X colormap entries",
                "parameters": [
                  {
                    "type": "i=0 ; i<256 ;",
                    "name": "i++"
                  }
                ],
                "start_line": 562,
                "end_line": 570,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i++"
                ],
                "outputs": [
                  "set the X colormap entries"
                ],
                "dependencies": []
              },
              {
                "name": "I_SetPalette",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "byte*",
                    "name": "palette"
                  }
                ],
                "start_line": 582,
                "end_line": 585,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "UploadNewPalette",
                    "line_number": 584
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "palette"
                ],
                "outputs": [],
                "dependencies": [
                  "UploadNewPalette"
                ]
              },
              {
                "name": "grabsharedmemory",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "size"
                  }
                ],
                "start_line": 595,
                "end_line": 690,
                "local_variables": [
                  {
                    "type": "struct shmid_ds",
                    "name": "shminfo",
                    "array_size": null,
                    "line_number": 599
                  },
                  {
                    "type": "int",
                    "name": "id",
                    "array_size": null,
                    "line_number": 601
                  },
                  {
                    "type": "int",
                    "name": "rc",
                    "array_size": null,
                    "line_number": 602
                  },
                  {
                    "type": "extern int",
                    "name": "errno",
                    "array_size": null,
                    "line_number": 669
                  }
                ],
                "function_calls": [
                  {
                    "name": "shmget",
                    "line_number": 609
                  },
                  {
                    "name": "if",
                    "line_number": 610
                  },
                  {
                    "name": "shmctl",
                    "line_number": 612
                  },
                  {
                    "name": "if",
                    "line_number": 613
                  },
                  {
                    "name": "if",
                    "line_number": 615
                  },
                  {
                    "name": "fprintf",
                    "line_number": 617
                  },
                  {
                    "name": "if",
                    "line_number": 623
                  },
                  {
                    "name": "getuid",
                    "line_number": 623
                  },
                  {
                    "name": "shmctl",
                    "line_number": 625
                  },
                  {
                    "name": "if",
                    "line_number": 626
                  },
                  {
                    "name": "fprintf",
                    "line_number": 627
                  },
                  {
                    "name": "I_Error",
                    "line_number": 630
                  },
                  {
                    "name": "shmget",
                    "line_number": 632
                  },
                  {
                    "name": "if",
                    "line_number": 633
                  },
                  {
                    "name": "I_Error",
                    "line_number": 634
                  },
                  {
                    "name": "shmctl",
                    "line_number": 636
                  },
                  {
                    "name": "if",
                    "line_number": 641
                  },
                  {
                    "name": "fprintf",
                    "line_number": 643
                  },
                  {
                    "name": "fprintf",
                    "line_number": 650
                  },
                  {
                    "name": "I_Error",
                    "line_number": 661
                  },
                  {
                    "name": "shmget",
                    "line_number": 666
                  },
                  {
                    "name": "if",
                    "line_number": 667
                  },
                  {
                    "name": "fprintf",
                    "line_number": 670
                  },
                  {
                    "name": "I_Error",
                    "line_number": 671
                  },
                  {
                    "name": "while",
                    "line_number": 675
                  },
                  {
                    "name": "if",
                    "line_number": 677
                  },
                  {
                    "name": "I_Error",
                    "line_number": 679
                  },
                  {
                    "name": "shmat",
                    "line_number": 686
                  },
                  {
                    "name": "fprintf",
                    "line_number": 688
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 610
                  },
                  {
                    "type": "if",
                    "line_number": 613
                  },
                  {
                    "type": "if",
                    "line_number": 615
                  },
                  {
                    "type": "else",
                    "line_number": 621
                  },
                  {
                    "type": "if",
                    "line_number": 623
                  },
                  {
                    "type": "if",
                    "line_number": 626
                  },
                  {
                    "type": "else",
                    "line_number": 629
                  },
                  {
                    "type": "if",
                    "line_number": 633
                  },
                  {
                    "type": "if",
                    "line_number": 641
                  },
                  {
                    "type": "else",
                    "line_number": 648
                  },
                  {
                    "type": "else",
                    "line_number": 659
                  },
                  {
                    "type": "else",
                    "line_number": 664
                  },
                  {
                    "type": "if",
                    "line_number": 667
                  },
                  {
                    "type": "while",
                    "line_number": 675
                  },
                  {
                    "type": "if",
                    "line_number": 677
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "size"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "while",
                  "shmget",
                  "getuid",
                  "if",
                  "shmctl",
                  "I_Error",
                  "shmat"
                ]
              },
              {
                "name": "if",
                "return_type": "just get the id",
                "parameters": [
                  {
                    "type": "id !=",
                    "name": "-1"
                  }
                ],
                "start_line": 609,
                "end_line": 662,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "shmctl",
                    "line_number": 611
                  },
                  {
                    "name": "if",
                    "line_number": 612
                  },
                  {
                    "name": "if",
                    "line_number": 614
                  },
                  {
                    "name": "fprintf",
                    "line_number": 616
                  },
                  {
                    "name": "if",
                    "line_number": 622
                  },
                  {
                    "name": "getuid",
                    "line_number": 622
                  },
                  {
                    "name": "shmctl",
                    "line_number": 624
                  },
                  {
                    "name": "if",
                    "line_number": 625
                  },
                  {
                    "name": "fprintf",
                    "line_number": 626
                  },
                  {
                    "name": "I_Error",
                    "line_number": 629
                  },
                  {
                    "name": "shmget",
                    "line_number": 631
                  },
                  {
                    "name": "if",
                    "line_number": 632
                  },
                  {
                    "name": "I_Error",
                    "line_number": 633
                  },
                  {
                    "name": "shmctl",
                    "line_number": 635
                  },
                  {
                    "name": "if",
                    "line_number": 640
                  },
                  {
                    "name": "fprintf",
                    "line_number": 642
                  },
                  {
                    "name": "fprintf",
                    "line_number": 649
                  },
                  {
                    "name": "I_Error",
                    "line_number": 660
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 612
                  },
                  {
                    "type": "if",
                    "line_number": 614
                  },
                  {
                    "type": "else",
                    "line_number": 620
                  },
                  {
                    "type": "if",
                    "line_number": 622
                  },
                  {
                    "type": "if",
                    "line_number": 625
                  },
                  {
                    "type": "else",
                    "line_number": 628
                  },
                  {
                    "type": "if",
                    "line_number": 632
                  },
                  {
                    "type": "if",
                    "line_number": 640
                  },
                  {
                    "type": "else",
                    "line_number": 647
                  },
                  {
                    "type": "else",
                    "line_number": 658
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "-1"
                ],
                "outputs": [
                  "just get the id"
                ],
                "dependencies": [
                  "fprintf",
                  "shmget",
                  "getuid",
                  "if",
                  "shmctl",
                  "I_Error"
                ]
              },
              {
                "name": "if",
                "return_type": "get stats on it",
                "parameters": [
                  {
                    "type": "",
                    "name": "!rc"
                  }
                ],
                "start_line": 612,
                "end_line": 657,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 614
                  },
                  {
                    "name": "fprintf",
                    "line_number": 616
                  },
                  {
                    "name": "if",
                    "line_number": 622
                  },
                  {
                    "name": "getuid",
                    "line_number": 622
                  },
                  {
                    "name": "shmctl",
                    "line_number": 624
                  },
                  {
                    "name": "if",
                    "line_number": 625
                  },
                  {
                    "name": "fprintf",
                    "line_number": 626
                  },
                  {
                    "name": "I_Error",
                    "line_number": 629
                  },
                  {
                    "name": "shmget",
                    "line_number": 631
                  },
                  {
                    "name": "if",
                    "line_number": 632
                  },
                  {
                    "name": "I_Error",
                    "line_number": 633
                  },
                  {
                    "name": "shmctl",
                    "line_number": 635
                  },
                  {
                    "name": "if",
                    "line_number": 640
                  },
                  {
                    "name": "fprintf",
                    "line_number": 642
                  },
                  {
                    "name": "fprintf",
                    "line_number": 649
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 614
                  },
                  {
                    "type": "else",
                    "line_number": 620
                  },
                  {
                    "type": "if",
                    "line_number": 622
                  },
                  {
                    "type": "if",
                    "line_number": 625
                  },
                  {
                    "type": "else",
                    "line_number": 628
                  },
                  {
                    "type": "if",
                    "line_number": 632
                  },
                  {
                    "type": "if",
                    "line_number": 640
                  },
                  {
                    "type": "else",
                    "line_number": 647
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "!rc"
                ],
                "outputs": [
                  "get stats on it"
                ],
                "dependencies": [
                  "fprintf",
                  "shmget",
                  "getuid",
                  "if",
                  "shmctl",
                  "I_Error"
                ]
              },
              {
                "name": "I_InitGraphics",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 692,
                "end_line": 915,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "n",
                    "array_size": null,
                    "line_number": 697
                  },
                  {
                    "type": "int",
                    "name": "pnum",
                    "array_size": null,
                    "line_number": 698
                  },
                  {
                    "type": "int",
                    "name": "oktodraw",
                    "array_size": null,
                    "line_number": 706
                  },
                  {
                    "type": "unsigned long",
                    "name": "attribmask",
                    "array_size": null,
                    "line_number": 707
                  },
                  {
                    "type": "XSetWindowAttributes",
                    "name": "attribs",
                    "array_size": null,
                    "line_number": 708
                  },
                  {
                    "type": "XGCValues",
                    "name": "xgcvalues",
                    "array_size": null,
                    "line_number": 709
                  },
                  {
                    "type": "int",
                    "name": "valuemask",
                    "array_size": null,
                    "line_number": 710
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 713
                  },
                  {
                    "name": "signal",
                    "line_number": 717
                  },
                  {
                    "name": "void",
                    "line_number": 717
                  },
                  {
                    "name": "if",
                    "line_number": 719
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 719
                  },
                  {
                    "name": "if",
                    "line_number": 722
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 722
                  },
                  {
                    "name": "if",
                    "line_number": 725
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 725
                  },
                  {
                    "name": "if",
                    "line_number": 732
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 732
                  },
                  {
                    "name": "mouse",
                    "line_number": 737
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 738
                  },
                  {
                    "name": "if",
                    "line_number": 741
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 741
                  },
                  {
                    "name": "sscanf",
                    "line_number": 744
                  },
                  {
                    "name": "if",
                    "line_number": 746
                  },
                  {
                    "name": "if",
                    "line_number": 748
                  },
                  {
                    "name": "if",
                    "line_number": 750
                  },
                  {
                    "name": "if",
                    "line_number": 752
                  },
                  {
                    "name": "I_Error",
                    "line_number": 756
                  },
                  {
                    "name": "XOpenDisplay",
                    "line_number": 760
                  },
                  {
                    "name": "if",
                    "line_number": 761
                  },
                  {
                    "name": "if",
                    "line_number": 763
                  },
                  {
                    "name": "I_Error",
                    "line_number": 764
                  },
                  {
                    "name": "I_Error",
                    "line_number": 766
                  },
                  {
                    "name": "display",
                    "line_number": 766
                  },
                  {
                    "name": "getenv",
                    "line_number": 766
                  },
                  {
                    "name": "DefaultScreen",
                    "line_number": 770
                  },
                  {
                    "name": "if",
                    "line_number": 771
                  },
                  {
                    "name": "XMatchVisualInfo",
                    "line_number": 771
                  },
                  {
                    "name": "I_Error",
                    "line_number": 772
                  },
                  {
                    "name": "XShmQueryExtension",
                    "line_number": 776
                  },
                  {
                    "name": "if",
                    "line_number": 779
                  },
                  {
                    "name": "if",
                    "line_number": 781
                  },
                  {
                    "name": "getenv",
                    "line_number": 781
                  },
                  {
                    "name": "if",
                    "line_number": 782
                  },
                  {
                    "name": "while",
                    "line_number": 785
                  },
                  {
                    "name": "if",
                    "line_number": 786
                  },
                  {
                    "name": "if",
                    "line_number": 787
                  },
                  {
                    "name": "strcasecmp",
                    "line_number": 787
                  },
                  {
                    "name": "fprintf",
                    "line_number": 791
                  },
                  {
                    "name": "XCreateColormap",
                    "line_number": 794
                  },
                  {
                    "name": "RootWindow",
                    "line_number": 794
                  },
                  {
                    "name": "XCreateWindow",
                    "line_number": 809
                  },
                  {
                    "name": "RootWindow",
                    "line_number": 810
                  },
                  {
                    "name": "XDefineCursor",
                    "line_number": 820
                  },
                  {
                    "name": "createnullcursor",
                    "line_number": 821
                  },
                  {
                    "name": "XCreateGC",
                    "line_number": 826
                  },
                  {
                    "name": "XMapWindow",
                    "line_number": 832
                  },
                  {
                    "name": "while",
                    "line_number": 836
                  },
                  {
                    "name": "XNextEvent",
                    "line_number": 838
                  },
                  {
                    "name": "if",
                    "line_number": 839
                  },
                  {
                    "name": "if",
                    "line_number": 847
                  },
                  {
                    "name": "XGrabPointer",
                    "line_number": 848
                  },
                  {
                    "name": "if",
                    "line_number": 853
                  },
                  {
                    "name": "XShmGetEventBase",
                    "line_number": 856
                  },
                  {
                    "name": "XShmCreateImage",
                    "line_number": 859
                  },
                  {
                    "name": "grabsharedmemory",
                    "line_number": 868
                  },
                  {
                    "name": "shmget",
                    "line_number": 873
                  },
                  {
                    "name": "if",
                    "line_number": 875
                  },
                  {
                    "name": "perror",
                    "line_number": 877
                  },
                  {
                    "name": "I_Error",
                    "line_number": 878
                  },
                  {
                    "name": "shmget",
                    "line_number": 878
                  },
                  {
                    "name": "InitGraphics",
                    "line_number": 878
                  },
                  {
                    "name": "fprintf",
                    "line_number": 880
                  },
                  {
                    "name": "shmat",
                    "line_number": 882
                  },
                  {
                    "name": "if",
                    "line_number": 885
                  },
                  {
                    "name": "perror",
                    "line_number": 887
                  },
                  {
                    "name": "I_Error",
                    "line_number": 888
                  },
                  {
                    "name": "shmat",
                    "line_number": 888
                  },
                  {
                    "name": "InitGraphics",
                    "line_number": 888
                  },
                  {
                    "name": "if",
                    "line_number": 892
                  },
                  {
                    "name": "XShmAttach",
                    "line_number": 892
                  },
                  {
                    "name": "I_Error",
                    "line_number": 893
                  },
                  {
                    "name": "XShmAttach",
                    "line_number": 893
                  },
                  {
                    "name": "InitGraphics",
                    "line_number": 893
                  },
                  {
                    "name": "XCreateImage",
                    "line_number": 898
                  },
                  {
                    "name": "malloc",
                    "line_number": 903
                  },
                  {
                    "name": "if",
                    "line_number": 910
                  },
                  {
                    "name": "malloc",
                    "line_number": 913
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 713
                  },
                  {
                    "type": "if",
                    "line_number": 719
                  },
                  {
                    "type": "if",
                    "line_number": 722
                  },
                  {
                    "type": "if",
                    "line_number": 725
                  },
                  {
                    "type": "for",
                    "line_number": 731
                  },
                  {
                    "type": "if",
                    "line_number": 732
                  },
                  {
                    "type": "else",
                    "line_number": 734
                  },
                  {
                    "type": "if",
                    "line_number": 737
                  },
                  {
                    "type": "for",
                    "line_number": 740
                  },
                  {
                    "type": "if",
                    "line_number": 741
                  },
                  {
                    "type": "if",
                    "line_number": 746
                  },
                  {
                    "type": "if",
                    "line_number": 748
                  },
                  {
                    "type": "if",
                    "line_number": 750
                  },
                  {
                    "type": "if",
                    "line_number": 752
                  },
                  {
                    "type": "else",
                    "line_number": 755
                  },
                  {
                    "type": "if",
                    "line_number": 761
                  },
                  {
                    "type": "if",
                    "line_number": 763
                  },
                  {
                    "type": "else",
                    "line_number": 765
                  },
                  {
                    "type": "if",
                    "line_number": 771
                  },
                  {
                    "type": "for",
                    "line_number": 775
                  },
                  {
                    "type": "if",
                    "line_number": 778
                  },
                  {
                    "type": "if",
                    "line_number": 779
                  },
                  {
                    "type": "if",
                    "line_number": 781
                  },
                  {
                    "type": "if",
                    "line_number": 782
                  },
                  {
                    "type": "while",
                    "line_number": 785
                  },
                  {
                    "type": "if",
                    "line_number": 786
                  },
                  {
                    "type": "if",
                    "line_number": 787
                  },
                  {
                    "type": "for",
                    "line_number": 797
                  },
                  {
                    "type": "while",
                    "line_number": 836
                  },
                  {
                    "type": "if",
                    "line_number": 839
                  },
                  {
                    "type": "if",
                    "line_number": 847
                  },
                  {
                    "type": "if",
                    "line_number": 853
                  },
                  {
                    "type": "if",
                    "line_number": 875
                  },
                  {
                    "type": "if",
                    "line_number": 885
                  },
                  {
                    "type": "if",
                    "line_number": 892
                  },
                  {
                    "type": "else",
                    "line_number": 896
                  },
                  {
                    "type": "if",
                    "line_number": 910
                  },
                  {
                    "type": "else",
                    "line_number": 912
                  }
                ],
                "complexity": 27,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "signal",
                  "XNextEvent",
                  "M_CheckParm",
                  "I_Error",
                  "XMatchVisualInfo",
                  "InitGraphics",
                  "XOpenDisplay",
                  "XGrabPointer",
                  "shmat",
                  "XCreateImage",
                  "fprintf",
                  "XCreateColormap",
                  "XDefineCursor",
                  "XCreateWindow",
                  "XMapWindow",
                  "XCreateGC",
                  "perror",
                  "while",
                  "shmget",
                  "void",
                  "mouse",
                  "RootWindow",
                  "createnullcursor",
                  "display",
                  "grabsharedmemory",
                  "if",
                  "DefaultScreen",
                  "XShmQueryExtension",
                  "sscanf",
                  "getenv",
                  "malloc",
                  "XShmCreateImage",
                  "XShmAttach",
                  "strcasecmp",
                  "XShmGetEventBase"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "",
                    "name": "n==6"
                  }
                ],
                "start_line": 748,
                "end_line": 754,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 750
                  },
                  {
                    "name": "if",
                    "line_number": 752
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 750
                  },
                  {
                    "type": "if",
                    "line_number": 752
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "n==6"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "s a local connection",
                "parameters": [
                  {
                    "type": "",
                    "name": "doShm"
                  }
                ],
                "start_line": 778,
                "end_line": 788,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 780
                  },
                  {
                    "name": "getenv",
                    "line_number": 780
                  },
                  {
                    "name": "if",
                    "line_number": 781
                  },
                  {
                    "name": "while",
                    "line_number": 784
                  },
                  {
                    "name": "if",
                    "line_number": 785
                  },
                  {
                    "name": "if",
                    "line_number": 786
                  },
                  {
                    "name": "strcasecmp",
                    "line_number": 786
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 780
                  },
                  {
                    "type": "if",
                    "line_number": 781
                  },
                  {
                    "type": "while",
                    "line_number": 784
                  },
                  {
                    "type": "if",
                    "line_number": 785
                  },
                  {
                    "type": "if",
                    "line_number": 786
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "doShm"
                ],
                "outputs": [
                  "s a local connection"
                ],
                "dependencies": [
                  "getenv",
                  "while",
                  "strcasecmp",
                  "if"
                ]
              },
              {
                "name": "InitExpand",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 920,
                "end_line": 926,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 922
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 924
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 924
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for"
                ]
              },
              {
                "name": "InitExpand2",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 930,
                "end_line": 954,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 932
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 933
                  },
                  {
                    "type": "double",
                    "name": "d",
                    "array_size": null,
                    "line_number": 938
                  },
                  {
                    "type": "unsigned",
                    "name": "u",
                    "array_size": "2",
                    "line_number": 939
                  }
                ],
                "function_calls": [
                  {
                    "name": "printf",
                    "line_number": 942
                  },
                  {
                    "name": "for",
                    "line_number": 944
                  },
                  {
                    "name": "for",
                    "line_number": 947
                  },
                  {
                    "name": "printf",
                    "line_number": 953
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 944
                  },
                  {
                    "type": "for",
                    "line_number": 947
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "printf",
                  "for"
                ]
              },
              {
                "name": "Expand4",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "unsigned*",
                    "name": "lineptr"
                  },
                  {
                    "type": "double*",
                    "name": "xline"
                  }
                ],
                "start_line": 958,
                "end_line": 1045,
                "local_variables": [
                  {
                    "type": "double",
                    "name": "dpixel",
                    "array_size": null,
                    "line_number": 960
                  },
                  {
                    "type": "unsigned",
                    "name": "x",
                    "array_size": null,
                    "line_number": 961
                  },
                  {
                    "type": "unsigned",
                    "name": "y",
                    "array_size": null,
                    "line_number": 962
                  },
                  {
                    "type": "unsigned",
                    "name": "fourpixels",
                    "array_size": null,
                    "line_number": 963
                  },
                  {
                    "type": "unsigned",
                    "name": "step",
                    "array_size": null,
                    "line_number": 964
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 968
                  },
                  {
                    "name": "InitExpand2",
                    "line_number": 971
                  },
                  {
                    "name": "while",
                    "line_number": 1042
                  },
                  {
                    "name": "while",
                    "line_number": 1044
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 968
                  },
                  {
                    "type": "while",
                    "line_number": 1042
                  },
                  {
                    "type": "while",
                    "line_number": 1044
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "lineptr",
                  "xline"
                ],
                "outputs": [],
                "dependencies": [
                  "InitExpand2",
                  "while",
                  "if"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "X_mainWindow",
                "type": "Window",
                "storage_class": null,
                "array_size": null,
                "line_number": 63
              },
              {
                "name": "X_cmap",
                "type": "Colormap",
                "storage_class": null,
                "array_size": null,
                "line_number": 64
              },
              {
                "name": "X_gc",
                "type": "GC",
                "storage_class": null,
                "array_size": null,
                "line_number": 66
              },
              {
                "name": "X_event",
                "type": "XEvent",
                "storage_class": null,
                "array_size": null,
                "line_number": 67
              },
              {
                "name": "X_screen",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 68
              },
              {
                "name": "X_visualinfo",
                "type": "XVisualInfo",
                "storage_class": null,
                "array_size": null,
                "line_number": 69
              },
              {
                "name": "X_width",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 71
              },
              {
                "name": "X_height",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 72
              },
              {
                "name": "doShm",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 75
              },
              {
                "name": "X_shminfo",
                "type": "XShmSegmentInfo",
                "storage_class": null,
                "array_size": null,
                "line_number": 77
              },
              {
                "name": "X_shmeventtype",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 78
              },
              {
                "name": "grabMouse",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 83
              },
              {
                "name": "rc",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 100
              },
              {
                "name": "rc",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 160
              },
              {
                "name": "shmFinished",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 192
              },
              {
                "name": "event",
                "type": "event_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 197
              },
              {
                "name": "cursormask",
                "type": "Pixmap",
                "storage_class": null,
                "array_size": null,
                "line_number": 286
              },
              {
                "name": "xgc",
                "type": "XGCValues",
                "storage_class": null,
                "array_size": null,
                "line_number": 287
              },
              {
                "name": "gc",
                "type": "GC",
                "storage_class": null,
                "array_size": null,
                "line_number": 288
              },
              {
                "name": "dummycolour",
                "type": "XColor",
                "storage_class": null,
                "array_size": null,
                "line_number": 289
              },
              {
                "name": "cursor",
                "type": "Cursor",
                "storage_class": null,
                "array_size": null,
                "line_number": 290
              },
              {
                "name": "cursor",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 303
              },
              {
                "name": "lasttic",
                "type": "static int",
                "storage_class": null,
                "array_size": null,
                "line_number": 355
              },
              {
                "name": "tics",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 356
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 357
              },
              {
                "name": "twoopixels",
                "type": "unsigned int",
                "storage_class": null,
                "array_size": null,
                "line_number": 382
              },
              {
                "name": "twomoreopixels",
                "type": "unsigned int",
                "storage_class": null,
                "array_size": null,
                "line_number": 383
              },
              {
                "name": "fouripixels",
                "type": "unsigned int",
                "storage_class": null,
                "array_size": null,
                "line_number": 384
              },
              {
                "name": "fouropixels",
                "type": "unsigned int",
                "storage_class": null,
                "array_size": "3",
                "line_number": 425
              },
              {
                "name": "fouripixels",
                "type": "unsigned int",
                "storage_class": null,
                "array_size": null,
                "line_number": 426
              },
              {
                "name": "colors",
                "type": "XColor",
                "storage_class": "static",
                "array_size": "256",
                "line_number": 536
              },
              {
                "name": "i",
                "type": "register int",
                "storage_class": null,
                "array_size": null,
                "line_number": 541
              },
              {
                "name": "c",
                "type": "register int",
                "storage_class": null,
                "array_size": null,
                "line_number": 542
              },
              {
                "name": "shminfo",
                "type": "struct shmid_ds",
                "storage_class": null,
                "array_size": null,
                "line_number": 599
              },
              {
                "name": "id",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 601
              },
              {
                "name": "rc",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 602
              },
              {
                "name": "errno",
                "type": "extern int",
                "storage_class": null,
                "array_size": null,
                "line_number": 669
              },
              {
                "name": "n",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 697
              },
              {
                "name": "pnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 698
              },
              {
                "name": "oktodraw",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 706
              },
              {
                "name": "attribmask",
                "type": "unsigned long",
                "storage_class": null,
                "array_size": null,
                "line_number": 707
              },
              {
                "name": "attribs",
                "type": "XSetWindowAttributes",
                "storage_class": null,
                "array_size": null,
                "line_number": 708
              },
              {
                "name": "xgcvalues",
                "type": "XGCValues",
                "storage_class": null,
                "array_size": null,
                "line_number": 709
              },
              {
                "name": "valuemask",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 710
              },
              {
                "name": "exptable",
                "type": "unsigned",
                "storage_class": null,
                "array_size": "256",
                "line_number": 918
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 922
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 932
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 933
              },
              {
                "name": "d",
                "type": "double",
                "storage_class": null,
                "array_size": null,
                "line_number": 938
              },
              {
                "name": "u",
                "type": "unsigned",
                "storage_class": null,
                "array_size": "2",
                "line_number": 939
              },
              {
                "name": "inited",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 956
              },
              {
                "name": "dpixel",
                "type": "double",
                "storage_class": null,
                "array_size": null,
                "line_number": 963
              },
              {
                "name": "x",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 964
              },
              {
                "name": "y",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 965
              },
              {
                "name": "fourpixels",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 966
              },
              {
                "name": "step",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 967
              }
            ],
            "defines": [
              {
                "name": "POINTER_WARP_COUNTDOWN",
                "value": "1",
                "line_number": 60
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/i_video.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of functions",
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "i_video.h",
          "type": "file",
          "size": 1453,
          "last_modified": "2024-09-05T16:00:03.708411",
          "path": "linuxdoom-1.10/i_video.h",
          "readme": "# i_video.h\n\nThis file contains functionality related to i_video.",
          "dependencies": [
            "doomtype.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/i_video.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "Makefile",
          "type": "file",
          "size": 1877,
          "last_modified": "2024-09-05T16:00:02.446018",
          "path": "linuxdoom-1.10/Makefile",
          "readme": "# Makefile\n\nThis file contains functionality related to Makefile.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/Makefile",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "m_argv.c",
          "type": "file",
          "size": 1163,
          "last_modified": "2024-09-05T16:00:03.783926",
          "path": "linuxdoom-1.10/m_argv.c",
          "readme": "# m_argv.c\n\nThis file contains functionality related to m_argv.",
          "dependencies": [
            "string.h"
          ],
          "inputs": [
            "*check"
          ],
          "outputs": [
            "or 0 if not present\nint"
          ],
          "content": {
            "functions": [
              {
                "name": "M_CheckParm",
                "return_type": "or 0 if not present\nint",
                "parameters": [
                  {
                    "type": "char",
                    "name": "*check"
                  }
                ],
                "start_line": 40,
                "end_line": 51,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 42
                  },
                  {
                    "type": "return",
                    "name": "i",
                    "array_size": null,
                    "line_number": 47
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 50
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 44
                  },
                  {
                    "name": "if",
                    "line_number": 46
                  },
                  {
                    "name": "strcasecmp",
                    "line_number": 46
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 44
                  },
                  {
                    "type": "if",
                    "line_number": 46
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "*check"
                ],
                "outputs": [
                  "or 0 if not present\nint"
                ],
                "dependencies": [
                  "strcasecmp",
                  "if",
                  "for"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "myargc",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 29
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 43
              },
              {
                "name": "i",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 48
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 51
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/m_argv.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "m_argv.h",
          "type": "file",
          "size": 1101,
          "last_modified": "2024-09-05T16:00:03.808927",
          "path": "linuxdoom-1.10/m_argv.h",
          "readme": "# m_argv.h\n\nThis file contains functionality related to m_argv.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "myargc",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 29
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/m_argv.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "m_bbox.c",
          "type": "file",
          "size": 1333,
          "last_modified": "2024-09-05T16:00:03.832933",
          "path": "linuxdoom-1.10/m_bbox.c",
          "readme": "# m_bbox.c\n\nThis file contains functionality related to m_bbox.",
          "dependencies": [
            "m_bbox.h"
          ],
          "inputs": [
            "y",
            "*box",
            "x",
            "box"
          ],
          "outputs": [],
          "content": {
            "functions": [
              {
                "name": "M_ClearBox",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "fixed_t",
                    "name": "*box"
                  }
                ],
                "start_line": 39,
                "end_line": 43,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "*box"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "M_AddToBox",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "fixed_t*",
                    "name": "box"
                  },
                  {
                    "type": "fixed_t",
                    "name": "x"
                  },
                  {
                    "type": "fixed_t",
                    "name": "y"
                  }
                ],
                "start_line": 45,
                "end_line": 55,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 47
                  },
                  {
                    "name": "if",
                    "line_number": 49
                  },
                  {
                    "name": "if",
                    "line_number": 51
                  },
                  {
                    "name": "if",
                    "line_number": 53
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 47
                  },
                  {
                    "type": "if",
                    "line_number": 49
                  },
                  {
                    "type": "if",
                    "line_number": 51
                  },
                  {
                    "type": "if",
                    "line_number": 53
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "box",
                  "x",
                  "y"
                ],
                "outputs": [],
                "dependencies": [
                  "if"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/m_bbox.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "m_bbox.h",
          "type": "file",
          "size": 1214,
          "last_modified": "2024-09-05T16:00:03.857447",
          "path": "linuxdoom-1.10/m_bbox.h",
          "readme": "# m_bbox.h\n\nThis file contains functionality related to m_bbox.",
          "dependencies": [
            "values.h",
            "m_fixed.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/m_bbox.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "m_cheat.c",
          "type": "file",
          "size": 1889,
          "last_modified": "2024-09-05T16:00:03.884448",
          "path": "linuxdoom-1.10/m_cheat.c",
          "readme": "# m_cheat.c\n\nThis file contains functionality related to m_cheat.",
          "dependencies": [
            "m_cheat.h"
          ],
          "inputs": [
            "buffer",
            "cht",
            "key"
          ],
          "outputs": [
            "int"
          ],
          "content": {
            "functions": [
              {
                "name": "cht_CheckCheat",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "cheatseq_t*",
                    "name": "cht"
                  },
                  {
                    "type": "char",
                    "name": "key"
                  }
                ],
                "start_line": 42,
                "end_line": 72,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 44
                  },
                  {
                    "type": "return",
                    "name": "rc",
                    "array_size": null,
                    "line_number": 71
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 47
                  },
                  {
                    "name": "for",
                    "line_number": 50
                  },
                  {
                    "name": "SCRAMBLE",
                    "line_number": 50
                  },
                  {
                    "name": "if",
                    "line_number": 53
                  },
                  {
                    "name": "if",
                    "line_number": 56
                  },
                  {
                    "name": "if",
                    "line_number": 63
                  },
                  {
                    "name": "if",
                    "line_number": 65
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 47
                  },
                  {
                    "type": "for",
                    "line_number": 50
                  },
                  {
                    "type": "if",
                    "line_number": 53
                  },
                  {
                    "type": "if",
                    "line_number": 54
                  },
                  {
                    "type": "if",
                    "line_number": 56
                  },
                  {
                    "type": "if",
                    "line_number": 58
                  },
                  {
                    "type": "else",
                    "line_number": 60
                  },
                  {
                    "type": "if",
                    "line_number": 63
                  },
                  {
                    "type": "if",
                    "line_number": 65
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "cht",
                  "key"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "for",
                  "SCRAMBLE",
                  "if"
                ]
              },
              {
                "name": "cht_GetParam",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "cheatseq_t*",
                    "name": "cht"
                  },
                  {
                    "type": "char*",
                    "name": "buffer"
                  }
                ],
                "start_line": 77,
                "end_line": 96,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 83
                  },
                  {
                    "name": "while",
                    "line_number": 91
                  },
                  {
                    "name": "if",
                    "line_number": 93
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 83
                  },
                  {
                    "type": "while",
                    "line_number": 91
                  },
                  {
                    "type": "if",
                    "line_number": 93
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "cht",
                  "buffer"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "if"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "cheat_xlate_table",
                "type": "unsigned char",
                "storage_class": "static",
                "array_size": "256",
                "line_number": 35
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 47
              },
              {
                "name": "rc",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 74
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/m_cheat.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "m_cheat.h",
          "type": "file",
          "size": 1318,
          "last_modified": "2024-09-05T16:00:03.907671",
          "path": "linuxdoom-1.10/m_cheat.h",
          "readme": "# m_cheat.h\n\nThis file contains functionality related to m_cheat.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/m_cheat.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "m_fixed.c",
          "type": "file",
          "size": 1612,
          "last_modified": "2024-09-05T16:00:03.934678",
          "path": "linuxdoom-1.10/m_fixed.c",
          "readme": "# m_fixed.c\n\nThis file contains functionality related to m_fixed.",
          "dependencies": [
            "doomtype.h",
            "stdlib.h",
            "i_system.h",
            "m_fixed.h"
          ],
          "inputs": [
            "b",
            "a"
          ],
          "outputs": [
            "fixed_t"
          ],
          "content": {
            "functions": [
              {
                "name": "FixedMul",
                "return_type": "fixed_t",
                "parameters": [
                  {
                    "type": "fixed_t",
                    "name": "a"
                  },
                  {
                    "type": "fixed_t",
                    "name": "b"
                  }
                ],
                "start_line": 43,
                "end_line": 46,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "return",
                    "line_number": 45
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "a",
                  "b"
                ],
                "outputs": [
                  "fixed_t"
                ],
                "dependencies": [
                  "return"
                ]
              },
              {
                "name": "FixedDiv",
                "return_type": "fixed_t",
                "parameters": [
                  {
                    "type": "fixed_t",
                    "name": "a"
                  },
                  {
                    "type": "fixed_t",
                    "name": "b"
                  }
                ],
                "start_line": 57,
                "end_line": 62,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 59
                  },
                  {
                    "name": "abs",
                    "line_number": 59
                  },
                  {
                    "name": "abs",
                    "line_number": 59
                  },
                  {
                    "name": "return",
                    "line_number": 60
                  },
                  {
                    "name": "FixedDiv2",
                    "line_number": 61
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 59
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "a",
                  "b"
                ],
                "outputs": [
                  "fixed_t"
                ],
                "dependencies": [
                  "abs",
                  "return",
                  "FixedDiv2",
                  "if"
                ]
              },
              {
                "name": "FixedDiv2",
                "return_type": "fixed_t",
                "parameters": [
                  {
                    "type": "fixed_t",
                    "name": "a"
                  },
                  {
                    "type": "fixed_t",
                    "name": "b"
                  }
                ],
                "start_line": 69,
                "end_line": 84,
                "local_variables": [
                  {
                    "type": "long long",
                    "name": "c",
                    "array_size": null,
                    "line_number": 72
                  },
                  {
                    "type": "double",
                    "name": "c",
                    "array_size": null,
                    "line_number": 77
                  }
                ],
                "function_calls": [
                  {
                    "name": "return",
                    "line_number": 74
                  },
                  {
                    "name": "if",
                    "line_number": 81
                  },
                  {
                    "name": "I_Error",
                    "line_number": 82
                  },
                  {
                    "name": "return",
                    "line_number": 83
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 71
                  },
                  {
                    "type": "if",
                    "line_number": 81
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "a",
                  "b"
                ],
                "outputs": [
                  "fixed_t"
                ],
                "dependencies": [
                  "return",
                  "I_Error",
                  "if"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "c",
                "type": "long long",
                "storage_class": null,
                "array_size": null,
                "line_number": 75
              },
              {
                "name": "c",
                "type": "double",
                "storage_class": null,
                "array_size": null,
                "line_number": 80
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/m_fixed.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "m_fixed.h",
          "type": "file",
          "size": 1244,
          "last_modified": "2024-09-05T16:00:03.959217",
          "path": "linuxdoom-1.10/m_fixed.h",
          "readme": "# m_fixed.h\n\nThis file contains functionality related to m_fixed.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "fixed_t",
                "type": "typedef int",
                "storage_class": null,
                "array_size": null,
                "line_number": 38
              }
            ],
            "defines": [
              {
                "name": "FRACBITS",
                "value": "16",
                "line_number": 35
              },
              {
                "name": "FRACUNIT",
                "value": "(1<<FRACBITS)",
                "line_number": 36
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/m_fixed.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "m_menu.c",
          "type": "file",
          "size": 33252,
          "last_modified": "2024-09-05T16:00:03.984219",
          "path": "linuxdoom-1.10/m_menu.c",
          "readme": "# m_menu.c\n\nThis file contains functionality related to m_menu.",
          "dependencies": [
            "sys/types.h",
            "m_swap.h",
            "sys/stat.h",
            "hu_stuff.h",
            "v_video.h",
            "unistd.h",
            "m_argv.h",
            "r_local.h",
            "d_main.h",
            "ctype.h",
            "i_video.h",
            "g_game.h",
            "doomdef.h",
            "fcntl.h",
            "w_wad.h",
            "z_zone.h",
            "stdlib.h",
            "s_sound.h",
            "sounds.h",
            "i_system.h",
            "doomstat.h",
            "m_menu.h",
            "dstrings.h"
          ],
          "inputs": [
            "saveStringEnter",
            "lasty+30",
            "slot",
            "ch",
            "string",
            "item",
            "1",
            "x",
            "input",
            "choice",
            "y",
            "ev_keydown",
            "menu",
            "void",
            "messageToPrint",
            "*menudef",
            "routine",
            "thermWidth",
            "thermDot",
            "ev",
            "lastx+30"
          ],
          "outputs": [
            "Save Game string input",
            "Take care of any messages that need input",
            "int",
            "Keys usable within menu",
            "boolean",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "M_ReadSaveStrings",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 511,
                "end_line": 536,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "handle",
                    "array_size": null,
                    "line_number": 513
                  },
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 514
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 515
                  },
                  {
                    "type": "char",
                    "name": "name",
                    "array_size": "256",
                    "line_number": 516
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 518
                  },
                  {
                    "name": "if",
                    "line_number": 520
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 520
                  },
                  {
                    "name": "sprintf",
                    "line_number": 521
                  },
                  {
                    "name": "sprintf",
                    "line_number": 523
                  },
                  {
                    "name": "open",
                    "line_number": 525
                  },
                  {
                    "name": "if",
                    "line_number": 526
                  },
                  {
                    "name": "strcpy",
                    "line_number": 528
                  },
                  {
                    "name": "read",
                    "line_number": 532
                  },
                  {
                    "name": "close",
                    "line_number": 533
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 518
                  },
                  {
                    "type": "if",
                    "line_number": 520
                  },
                  {
                    "type": "else",
                    "line_number": 522
                  },
                  {
                    "type": "if",
                    "line_number": 526
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "open",
                  "if",
                  "for",
                  "strcpy",
                  "M_CheckParm",
                  "close",
                  "read",
                  "sprintf"
                ]
              },
              {
                "name": "M_DrawLoad",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 542,
                "end_line": 552,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 544
                  }
                ],
                "function_calls": [
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 546
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 546
                  },
                  {
                    "name": "for",
                    "line_number": 547
                  },
                  {
                    "name": "M_DrawSaveLoadBorder",
                    "line_number": 549
                  },
                  {
                    "name": "M_WriteText",
                    "line_number": 550
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 547
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "for",
                  "M_DrawSaveLoadBorder",
                  "V_DrawPatchDirect",
                  "M_WriteText"
                ]
              },
              {
                "name": "M_DrawSaveLoadBorder",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  }
                ],
                "start_line": 559,
                "end_line": 572,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 561
                  }
                ],
                "function_calls": [
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 563
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 563
                  },
                  {
                    "name": "for",
                    "line_number": 565
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 567
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 567
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 571
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 571
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 565
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "x",
                  "y"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "V_DrawPatchDirect",
                  "for"
                ]
              },
              {
                "name": "M_LoadSelect",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 579,
                "end_line": 589,
                "local_variables": [
                  {
                    "type": "char",
                    "name": "name",
                    "array_size": "256",
                    "line_number": 581
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 583
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 583
                  },
                  {
                    "name": "sprintf",
                    "line_number": 584
                  },
                  {
                    "name": "sprintf",
                    "line_number": 586
                  },
                  {
                    "name": "G_LoadGame",
                    "line_number": 587
                  },
                  {
                    "name": "M_ClearMenus",
                    "line_number": 588
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 583
                  },
                  {
                    "type": "else",
                    "line_number": 585
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "M_ClearMenus",
                  "M_CheckParm",
                  "G_LoadGame",
                  "sprintf"
                ]
              },
              {
                "name": "M_LoadGame",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 594,
                "end_line": 604,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 596
                  },
                  {
                    "name": "M_StartMessage",
                    "line_number": 598
                  },
                  {
                    "name": "M_SetupNextMenu",
                    "line_number": 602
                  },
                  {
                    "name": "M_ReadSaveStrings",
                    "line_number": 603
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 596
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "M_ReadSaveStrings",
                  "M_StartMessage",
                  "M_SetupNextMenu",
                  "if"
                ]
              },
              {
                "name": "M_DrawSave",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 610,
                "end_line": 626,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 612
                  }
                ],
                "function_calls": [
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 614
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 614
                  },
                  {
                    "name": "for",
                    "line_number": 615
                  },
                  {
                    "name": "M_DrawSaveLoadBorder",
                    "line_number": 617
                  },
                  {
                    "name": "M_WriteText",
                    "line_number": 618
                  },
                  {
                    "name": "if",
                    "line_number": 621
                  },
                  {
                    "name": "M_StringWidth",
                    "line_number": 623
                  },
                  {
                    "name": "M_WriteText",
                    "line_number": 624
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 615
                  },
                  {
                    "type": "if",
                    "line_number": 621
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "for",
                  "if",
                  "M_DrawSaveLoadBorder",
                  "M_StringWidth",
                  "V_DrawPatchDirect",
                  "M_WriteText"
                ]
              },
              {
                "name": "M_DoSave",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "slot"
                  }
                ],
                "start_line": 631,
                "end_line": 639,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "G_SaveGame",
                    "line_number": 633
                  },
                  {
                    "name": "M_ClearMenus",
                    "line_number": 634
                  },
                  {
                    "name": "if",
                    "line_number": 637
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 637
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "slot"
                ],
                "outputs": [],
                "dependencies": [
                  "G_SaveGame",
                  "M_ClearMenus",
                  "if"
                ]
              },
              {
                "name": "M_SaveSelect",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 644,
                "end_line": 654,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "strcpy",
                    "line_number": 650
                  },
                  {
                    "name": "if",
                    "line_number": 651
                  },
                  {
                    "name": "strcmp",
                    "line_number": 651
                  },
                  {
                    "name": "strlen",
                    "line_number": 653
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 651
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "strcmp",
                  "strlen",
                  "if",
                  "strcpy"
                ]
              },
              {
                "name": "M_SaveGame",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 659,
                "end_line": 672,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 661
                  },
                  {
                    "name": "M_StartMessage",
                    "line_number": 663
                  },
                  {
                    "name": "if",
                    "line_number": 667
                  },
                  {
                    "name": "M_SetupNextMenu",
                    "line_number": 670
                  },
                  {
                    "name": "M_ReadSaveStrings",
                    "line_number": 671
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 661
                  },
                  {
                    "type": "if",
                    "line_number": 667
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "M_ReadSaveStrings",
                  "M_StartMessage",
                  "M_SetupNextMenu",
                  "if"
                ]
              },
              {
                "name": "M_QuickSaveResponse",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "ch"
                  }
                ],
                "start_line": 681,
                "end_line": 688,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 683
                  },
                  {
                    "name": "M_DoSave",
                    "line_number": 685
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 686
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 683
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "ch"
                ],
                "outputs": [],
                "dependencies": [
                  "M_DoSave",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "M_QuickSave",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 690,
                "end_line": 711,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 692
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 694
                  },
                  {
                    "name": "if",
                    "line_number": 698
                  },
                  {
                    "name": "if",
                    "line_number": 701
                  },
                  {
                    "name": "M_StartControlPanel",
                    "line_number": 703
                  },
                  {
                    "name": "M_ReadSaveStrings",
                    "line_number": 704
                  },
                  {
                    "name": "M_SetupNextMenu",
                    "line_number": 705
                  },
                  {
                    "name": "sprintf",
                    "line_number": 709
                  },
                  {
                    "name": "M_StartMessage",
                    "line_number": 710
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 692
                  },
                  {
                    "type": "if",
                    "line_number": 698
                  },
                  {
                    "type": "if",
                    "line_number": 701
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "M_StartMessage",
                  "M_ReadSaveStrings",
                  "if",
                  "M_StartControlPanel",
                  "S_StartSound",
                  "sprintf",
                  "M_SetupNextMenu"
                ]
              },
              {
                "name": "M_QuickLoadResponse",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "ch"
                  }
                ],
                "start_line": 718,
                "end_line": 725,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 720
                  },
                  {
                    "name": "M_LoadSelect",
                    "line_number": 722
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 723
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 720
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "ch"
                ],
                "outputs": [],
                "dependencies": [
                  "M_LoadSelect",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "M_QuickLoad",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 728,
                "end_line": 743,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 730
                  },
                  {
                    "name": "M_StartMessage",
                    "line_number": 732
                  },
                  {
                    "name": "if",
                    "line_number": 736
                  },
                  {
                    "name": "M_StartMessage",
                    "line_number": 738
                  },
                  {
                    "name": "sprintf",
                    "line_number": 741
                  },
                  {
                    "name": "M_StartMessage",
                    "line_number": 742
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 730
                  },
                  {
                    "type": "if",
                    "line_number": 736
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "sprintf",
                  "M_StartMessage",
                  "if"
                ]
              },
              {
                "name": "M_DrawReadThis1",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 752,
                "end_line": 769,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 755
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 758
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 758
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 763
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 763
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "switch",
                  "V_DrawPatchDirect"
                ]
              },
              {
                "name": "M_DrawReadThis2",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 776,
                "end_line": 794,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 779
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 784
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 784
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 788
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 788
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "switch",
                  "V_DrawPatchDirect"
                ]
              },
              {
                "name": "M_DrawSound",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 800,
                "end_line": 809,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 802
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 802
                  },
                  {
                    "name": "M_DrawThermo",
                    "line_number": 804
                  },
                  {
                    "name": "M_DrawThermo",
                    "line_number": 807
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "V_DrawPatchDirect",
                  "M_DrawThermo"
                ]
              },
              {
                "name": "M_Sound",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 811,
                "end_line": 814,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "M_SetupNextMenu",
                    "line_number": 813
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "M_SetupNextMenu"
                ]
              },
              {
                "name": "M_SfxVol",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 816,
                "end_line": 831,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 818
                  },
                  {
                    "name": "if",
                    "line_number": 821
                  },
                  {
                    "name": "if",
                    "line_number": 825
                  },
                  {
                    "name": "S_SetSfxVolume",
                    "line_number": 830
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 821
                  },
                  {
                    "type": "if",
                    "line_number": 825
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "switch",
                  "S_SetSfxVolume",
                  "if"
                ]
              },
              {
                "name": "M_MusicVol",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 833,
                "end_line": 848,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 835
                  },
                  {
                    "name": "if",
                    "line_number": 838
                  },
                  {
                    "name": "if",
                    "line_number": 842
                  },
                  {
                    "name": "S_SetMusicVolume",
                    "line_number": 847
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 838
                  },
                  {
                    "type": "if",
                    "line_number": 842
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "switch",
                  "S_SetMusicVolume",
                  "if"
                ]
              },
              {
                "name": "M_DrawMainMenu",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 856,
                "end_line": 859,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 858
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 858
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "V_DrawPatchDirect"
                ]
              },
              {
                "name": "M_DrawNewGame",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 867,
                "end_line": 871,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 869
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 869
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 870
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 870
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "V_DrawPatchDirect"
                ]
              },
              {
                "name": "M_NewGame",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 873,
                "end_line": 885,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 875
                  },
                  {
                    "name": "M_StartMessage",
                    "line_number": 877
                  },
                  {
                    "name": "if",
                    "line_number": 881
                  },
                  {
                    "name": "M_SetupNextMenu",
                    "line_number": 882
                  },
                  {
                    "name": "M_SetupNextMenu",
                    "line_number": 884
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 875
                  },
                  {
                    "type": "if",
                    "line_number": 881
                  },
                  {
                    "type": "else",
                    "line_number": 883
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "M_StartMessage",
                  "M_SetupNextMenu",
                  "if"
                ]
              },
              {
                "name": "M_DrawEpisode",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 893,
                "end_line": 896,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 895
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 895
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "V_DrawPatchDirect"
                ]
              },
              {
                "name": "M_VerifyNightmare",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "ch"
                  }
                ],
                "start_line": 898,
                "end_line": 905,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 900
                  },
                  {
                    "name": "G_DeferedInitNew",
                    "line_number": 903
                  },
                  {
                    "name": "M_ClearMenus",
                    "line_number": 904
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 900
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "ch"
                ],
                "outputs": [],
                "dependencies": [
                  "G_DeferedInitNew",
                  "M_ClearMenus",
                  "if"
                ]
              },
              {
                "name": "M_ChooseSkill",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 907,
                "end_line": 917,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 909
                  },
                  {
                    "name": "M_StartMessage",
                    "line_number": 911
                  },
                  {
                    "name": "G_DeferedInitNew",
                    "line_number": 915
                  },
                  {
                    "name": "M_ClearMenus",
                    "line_number": 916
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 909
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "M_StartMessage",
                  "G_DeferedInitNew",
                  "M_ClearMenus",
                  "if"
                ]
              },
              {
                "name": "M_Episode",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 919,
                "end_line": 940,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 921
                  },
                  {
                    "name": "M_StartMessage",
                    "line_number": 924
                  },
                  {
                    "name": "M_SetupNextMenu",
                    "line_number": 925
                  },
                  {
                    "name": "if",
                    "line_number": 930
                  },
                  {
                    "name": "fprintf",
                    "line_number": 933
                  },
                  {
                    "name": "M_SetupNextMenu",
                    "line_number": 939
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 921
                  },
                  {
                    "type": "if",
                    "line_number": 930
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "M_StartMessage",
                  "M_SetupNextMenu",
                  "if"
                ]
              },
              {
                "name": "M_DrawOptions",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 951,
                "end_line": 966,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 953
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 953
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 955
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 956
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 958
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 959
                  },
                  {
                    "name": "M_DrawThermo",
                    "line_number": 961
                  },
                  {
                    "name": "M_DrawThermo",
                    "line_number": 964
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "V_DrawPatchDirect",
                  "M_DrawThermo"
                ]
              },
              {
                "name": "M_Options",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 968,
                "end_line": 971,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "M_SetupNextMenu",
                    "line_number": 970
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "M_SetupNextMenu"
                ]
              },
              {
                "name": "M_ChangeMessages",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 978,
                "end_line": 990,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 984
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 984
                  },
                  {
                    "type": "else",
                    "line_number": 986
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "M_EndGameResponse",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "ch"
                  }
                ],
                "start_line": 996,
                "end_line": 1004,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 998
                  },
                  {
                    "name": "M_ClearMenus",
                    "line_number": 1002
                  },
                  {
                    "name": "D_StartTitle",
                    "line_number": 1003
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 998
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "ch"
                ],
                "outputs": [],
                "dependencies": [
                  "M_ClearMenus",
                  "D_StartTitle",
                  "if"
                ]
              },
              {
                "name": "M_EndGame",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 1006,
                "end_line": 1022,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1009
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1011
                  },
                  {
                    "name": "if",
                    "line_number": 1015
                  },
                  {
                    "name": "M_StartMessage",
                    "line_number": 1017
                  },
                  {
                    "name": "M_StartMessage",
                    "line_number": 1021
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1009
                  },
                  {
                    "type": "if",
                    "line_number": 1015
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "M_StartMessage",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "M_ReadThis",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 1030,
                "end_line": 1034,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "M_SetupNextMenu",
                    "line_number": 1033
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "M_SetupNextMenu"
                ]
              },
              {
                "name": "M_ReadThis2",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 1036,
                "end_line": 1040,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "M_SetupNextMenu",
                    "line_number": 1039
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "M_SetupNextMenu"
                ]
              },
              {
                "name": "M_FinishReadThis",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 1042,
                "end_line": 1046,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "M_SetupNextMenu",
                    "line_number": 1045
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "M_SetupNextMenu"
                ]
              },
              {
                "name": "M_QuitResponse",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "ch"
                  }
                ],
                "start_line": 1080,
                "end_line": 1093,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1082
                  },
                  {
                    "name": "if",
                    "line_number": 1084
                  },
                  {
                    "name": "if",
                    "line_number": 1086
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1087
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1089
                  },
                  {
                    "name": "I_WaitVBL",
                    "line_number": 1090
                  },
                  {
                    "name": "I_Quit",
                    "line_number": 1092
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1082
                  },
                  {
                    "type": "if",
                    "line_number": 1084
                  },
                  {
                    "type": "if",
                    "line_number": 1086
                  },
                  {
                    "type": "else",
                    "line_number": 1088
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "ch"
                ],
                "outputs": [],
                "dependencies": [
                  "I_Quit",
                  "I_WaitVBL",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "M_QuitDOOM",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 1098,
                "end_line": 1108,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1102
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1103
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1105
                  },
                  {
                    "name": "M_StartMessage",
                    "line_number": 1107
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1102
                  },
                  {
                    "type": "else",
                    "line_number": 1104
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "sprintf",
                  "M_StartMessage",
                  "if"
                ]
              },
              {
                "name": "M_ChangeSensitivity",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 1113,
                "end_line": 1126,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 1115
                  },
                  {
                    "name": "if",
                    "line_number": 1118
                  },
                  {
                    "name": "if",
                    "line_number": 1122
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1118
                  },
                  {
                    "type": "if",
                    "line_number": 1122
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "switch",
                  "if"
                ]
              },
              {
                "name": "M_ChangeDetail",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 1131,
                "end_line": 1147,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "fprintf",
                    "line_number": 1137
                  },
                  {
                    "name": "R_SetViewSize",
                    "line_number": 1141
                  },
                  {
                    "name": "if",
                    "line_number": 1143
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1143
                  },
                  {
                    "type": "else",
                    "line_number": 1145
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "R_SetViewSize",
                  "if"
                ]
              },
              {
                "name": "M_SizeDisplay",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "choice"
                  }
                ],
                "start_line": 1152,
                "end_line": 1174,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 1154
                  },
                  {
                    "name": "if",
                    "line_number": 1157
                  },
                  {
                    "name": "if",
                    "line_number": 1164
                  },
                  {
                    "name": "R_SetViewSize",
                    "line_number": 1173
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1157
                  },
                  {
                    "type": "if",
                    "line_number": 1164
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "choice"
                ],
                "outputs": [],
                "dependencies": [
                  "switch",
                  "R_SetViewSize",
                  "if"
                ]
              },
              {
                "name": "M_DrawThermo",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "int",
                    "name": "thermWidth"
                  },
                  {
                    "type": "int",
                    "name": "thermDot"
                  }
                ],
                "start_line": 1182,
                "end_line": 1199,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "xx",
                    "array_size": null,
                    "line_number": 1184
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1185
                  }
                ],
                "function_calls": [
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 1188
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1188
                  },
                  {
                    "name": "for",
                    "line_number": 1190
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 1192
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1192
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 1195
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1195
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 1197
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1198
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1190
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "x",
                  "y",
                  "thermWidth",
                  "thermDot"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "V_DrawPatchDirect",
                  "for"
                ]
              },
              {
                "name": "M_DrawEmptyCell",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "menu_t*",
                    "name": "menu"
                  },
                  {
                    "type": "int",
                    "name": "item"
                  }
                ],
                "start_line": 1208,
                "end_line": 1212,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 1210
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1211
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "menu",
                  "item"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "V_DrawPatchDirect"
                ]
              },
              {
                "name": "M_DrawSelCell",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "menu_t*",
                    "name": "menu"
                  },
                  {
                    "type": "int",
                    "name": "item"
                  }
                ],
                "start_line": 1217,
                "end_line": 1221,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 1219
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1220
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "menu",
                  "item"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "V_DrawPatchDirect"
                ]
              },
              {
                "name": "M_StartMessage",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "string"
                  },
                  {
                    "type": "void*",
                    "name": "routine"
                  },
                  {
                    "type": "boolean",
                    "name": "input"
                  }
                ],
                "start_line": 1227,
                "end_line": 1236,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "string",
                  "routine",
                  "input"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "M_StopMessage",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1244,
                "end_line": 1248,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "M_StringWidth",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "string"
                  }
                ],
                "start_line": 1255,
                "end_line": 1271,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1257
                  },
                  {
                    "type": "int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 1259
                  },
                  {
                    "type": "return",
                    "name": "w",
                    "array_size": null,
                    "line_number": 1270
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1261
                  },
                  {
                    "name": "strlen",
                    "line_number": 1261
                  },
                  {
                    "name": "toupper",
                    "line_number": 1263
                  },
                  {
                    "name": "if",
                    "line_number": 1264
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1267
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1261
                  },
                  {
                    "type": "if",
                    "line_number": 1264
                  },
                  {
                    "type": "else",
                    "line_number": 1266
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "string"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "strlen",
                  "if",
                  "for",
                  "toupper",
                  "SHORT"
                ]
              },
              {
                "name": "M_StringHeight",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "string"
                  }
                ],
                "start_line": 1278,
                "end_line": 1290,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1280
                  },
                  {
                    "type": "int",
                    "name": "h",
                    "array_size": null,
                    "line_number": 1281
                  },
                  {
                    "type": "return",
                    "name": "h",
                    "array_size": null,
                    "line_number": 1289
                  }
                ],
                "function_calls": [
                  {
                    "name": "SHORT",
                    "line_number": 1282
                  },
                  {
                    "name": "for",
                    "line_number": 1285
                  },
                  {
                    "name": "strlen",
                    "line_number": 1285
                  },
                  {
                    "name": "if",
                    "line_number": 1286
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1285
                  },
                  {
                    "type": "if",
                    "line_number": 1286
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "string"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "SHORT",
                  "strlen",
                  "if",
                  "for"
                ]
              },
              {
                "name": "M_WriteText",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "char*",
                    "name": "string"
                  }
                ],
                "start_line": 1296,
                "end_line": 1334,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "w",
                    "array_size": null,
                    "line_number": 1298
                  },
                  {
                    "type": "int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 1300
                  },
                  {
                    "type": "int",
                    "name": "cx",
                    "array_size": null,
                    "line_number": 1301
                  },
                  {
                    "type": "int",
                    "name": "cy",
                    "array_size": null,
                    "line_number": 1302
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 1309
                  },
                  {
                    "name": "if",
                    "line_number": 1312
                  },
                  {
                    "name": "if",
                    "line_number": 1314
                  },
                  {
                    "name": "toupper",
                    "line_number": 1321
                  },
                  {
                    "name": "if",
                    "line_number": 1322
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1328
                  },
                  {
                    "name": "if",
                    "line_number": 1329
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 1331
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 1309
                  },
                  {
                    "type": "if",
                    "line_number": 1312
                  },
                  {
                    "type": "if",
                    "line_number": 1314
                  },
                  {
                    "type": "if",
                    "line_number": 1322
                  },
                  {
                    "type": "if",
                    "line_number": 1329
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "x",
                  "y",
                  "string"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "if",
                  "toupper",
                  "SHORT",
                  "V_DrawPatchDirect"
                ]
              },
              {
                "name": "M_Responder",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "event_t*",
                    "name": "ev"
                  }
                ],
                "start_line": 1349,
                "end_line": 1716,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "ch",
                    "array_size": null,
                    "line_number": 1351
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1352
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 1449
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1491
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 1499
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1508
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1514
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 1524
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1527
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 1531
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1534
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1546
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1552
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1558
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1565
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1570
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1575
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1580
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1585
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1590
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1595
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1603
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1615
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 1617
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1632
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1642
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1651
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1660
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1678
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1684
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1694
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1702
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1709
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 1715
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1362
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 1362
                  },
                  {
                    "name": "if",
                    "line_number": 1364
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 1367
                  },
                  {
                    "name": "if",
                    "line_number": 1369
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 1372
                  },
                  {
                    "name": "if",
                    "line_number": 1375
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 1378
                  },
                  {
                    "name": "if",
                    "line_number": 1380
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 1383
                  },
                  {
                    "name": "if",
                    "line_number": 1386
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 1389
                  },
                  {
                    "name": "if",
                    "line_number": 1391
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 1394
                  },
                  {
                    "name": "if",
                    "line_number": 1399
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 1399
                  },
                  {
                    "name": "if",
                    "line_number": 1402
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 1405
                  },
                  {
                    "name": "if",
                    "line_number": 1408
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 1411
                  },
                  {
                    "name": "if",
                    "line_number": 1416
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 1419
                  },
                  {
                    "name": "if",
                    "line_number": 1422
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 1425
                  },
                  {
                    "name": "if",
                    "line_number": 1429
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 1432
                  },
                  {
                    "name": "if",
                    "line_number": 1435
                  },
                  {
                    "name": "I_GetTime",
                    "line_number": 1438
                  },
                  {
                    "name": "if",
                    "line_number": 1442
                  },
                  {
                    "name": "if",
                    "line_number": 1448
                  },
                  {
                    "name": "if",
                    "line_number": 1453
                  },
                  {
                    "name": "switch",
                    "line_number": 1455
                  },
                  {
                    "name": "if",
                    "line_number": 1458
                  },
                  {
                    "name": "strcpy",
                    "line_number": 1467
                  },
                  {
                    "name": "if",
                    "line_number": 1472
                  },
                  {
                    "name": "M_DoSave",
                    "line_number": 1473
                  },
                  {
                    "name": "toupper",
                    "line_number": 1477
                  },
                  {
                    "name": "if",
                    "line_number": 1478
                  },
                  {
                    "name": "if",
                    "line_number": 1479
                  },
                  {
                    "name": "if",
                    "line_number": 1481
                  },
                  {
                    "name": "M_StringWidth",
                    "line_number": 1483
                  },
                  {
                    "name": "if",
                    "line_number": 1495
                  },
                  {
                    "name": "if",
                    "line_number": 1497
                  },
                  {
                    "name": "if",
                    "line_number": 1503
                  },
                  {
                    "name": "messageRoutine",
                    "line_number": 1504
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1507
                  },
                  {
                    "name": "if",
                    "line_number": 1511
                  },
                  {
                    "name": "G_ScreenShot",
                    "line_number": 1513
                  },
                  {
                    "name": "if",
                    "line_number": 1519
                  },
                  {
                    "name": "switch",
                    "line_number": 1520
                  },
                  {
                    "name": "if",
                    "line_number": 1523
                  },
                  {
                    "name": "M_SizeDisplay",
                    "line_number": 1525
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1526
                  },
                  {
                    "name": "if",
                    "line_number": 1530
                  },
                  {
                    "name": "M_SizeDisplay",
                    "line_number": 1532
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1533
                  },
                  {
                    "name": "M_StartControlPanel",
                    "line_number": 1537
                  },
                  {
                    "name": "if",
                    "line_number": 1539
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1545
                  },
                  {
                    "name": "M_StartControlPanel",
                    "line_number": 1549
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1550
                  },
                  {
                    "name": "M_SaveGame",
                    "line_number": 1551
                  },
                  {
                    "name": "M_StartControlPanel",
                    "line_number": 1555
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1556
                  },
                  {
                    "name": "M_LoadGame",
                    "line_number": 1557
                  },
                  {
                    "name": "M_StartControlPanel",
                    "line_number": 1561
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1564
                  },
                  {
                    "name": "M_ChangeDetail",
                    "line_number": 1568
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1569
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1573
                  },
                  {
                    "name": "M_QuickSave",
                    "line_number": 1574
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1578
                  },
                  {
                    "name": "M_EndGame",
                    "line_number": 1579
                  },
                  {
                    "name": "M_ChangeMessages",
                    "line_number": 1583
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1584
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1588
                  },
                  {
                    "name": "M_QuickLoad",
                    "line_number": 1589
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1593
                  },
                  {
                    "name": "M_QuitDOOM",
                    "line_number": 1594
                  },
                  {
                    "name": "if",
                    "line_number": 1599
                  },
                  {
                    "name": "I_SetPalette",
                    "line_number": 1602
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1602
                  },
                  {
                    "name": "if",
                    "line_number": 1609
                  },
                  {
                    "name": "if",
                    "line_number": 1611
                  },
                  {
                    "name": "M_StartControlPanel",
                    "line_number": 1613
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1614
                  },
                  {
                    "name": "switch",
                    "line_number": 1622
                  },
                  {
                    "name": "if",
                    "line_number": 1627
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1630
                  },
                  {
                    "name": "while",
                    "line_number": 1631
                  },
                  {
                    "name": "if",
                    "line_number": 1637
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1640
                  },
                  {
                    "name": "while",
                    "line_number": 1641
                  },
                  {
                    "name": "if",
                    "line_number": 1645
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1648
                  },
                  {
                    "name": "routine",
                    "line_number": 1649
                  },
                  {
                    "name": "if",
                    "line_number": 1654
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1657
                  },
                  {
                    "name": "routine",
                    "line_number": 1658
                  },
                  {
                    "name": "if",
                    "line_number": 1663
                  },
                  {
                    "name": "if",
                    "line_number": 1667
                  },
                  {
                    "name": "routine",
                    "line_number": 1669
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1670
                  },
                  {
                    "name": "routine",
                    "line_number": 1674
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1675
                  },
                  {
                    "name": "M_ClearMenus",
                    "line_number": 1682
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1683
                  },
                  {
                    "name": "if",
                    "line_number": 1688
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1692
                  },
                  {
                    "name": "for",
                    "line_number": 1697
                  },
                  {
                    "name": "if",
                    "line_number": 1698
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1701
                  },
                  {
                    "name": "for",
                    "line_number": 1704
                  },
                  {
                    "name": "if",
                    "line_number": 1705
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1708
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1362
                  },
                  {
                    "type": "if",
                    "line_number": 1364
                  },
                  {
                    "type": "if",
                    "line_number": 1369
                  },
                  {
                    "type": "if",
                    "line_number": 1375
                  },
                  {
                    "type": "if",
                    "line_number": 1380
                  },
                  {
                    "type": "if",
                    "line_number": 1386
                  },
                  {
                    "type": "if",
                    "line_number": 1391
                  },
                  {
                    "type": "else",
                    "line_number": 1397
                  },
                  {
                    "type": "if",
                    "line_number": 1399
                  },
                  {
                    "type": "if",
                    "line_number": 1402
                  },
                  {
                    "type": "if",
                    "line_number": 1408
                  },
                  {
                    "type": "if",
                    "line_number": 1416
                  },
                  {
                    "type": "if",
                    "line_number": 1422
                  },
                  {
                    "type": "if",
                    "line_number": 1429
                  },
                  {
                    "type": "if",
                    "line_number": 1435
                  },
                  {
                    "type": "else",
                    "line_number": 1441
                  },
                  {
                    "type": "if",
                    "line_number": 1442
                  },
                  {
                    "type": "if",
                    "line_number": 1448
                  },
                  {
                    "type": "if",
                    "line_number": 1453
                  },
                  {
                    "type": "if",
                    "line_number": 1458
                  },
                  {
                    "type": "if",
                    "line_number": 1472
                  },
                  {
                    "type": "if",
                    "line_number": 1478
                  },
                  {
                    "type": "if",
                    "line_number": 1479
                  },
                  {
                    "type": "if",
                    "line_number": 1481
                  },
                  {
                    "type": "if",
                    "line_number": 1495
                  },
                  {
                    "type": "if",
                    "line_number": 1497
                  },
                  {
                    "type": "if",
                    "line_number": 1503
                  },
                  {
                    "type": "if",
                    "line_number": 1511
                  },
                  {
                    "type": "if",
                    "line_number": 1519
                  },
                  {
                    "type": "if",
                    "line_number": 1523
                  },
                  {
                    "type": "if",
                    "line_number": 1530
                  },
                  {
                    "type": "if",
                    "line_number": 1539
                  },
                  {
                    "type": "else",
                    "line_number": 1541
                  },
                  {
                    "type": "if",
                    "line_number": 1599
                  },
                  {
                    "type": "if",
                    "line_number": 1609
                  },
                  {
                    "type": "if",
                    "line_number": 1611
                  },
                  {
                    "type": "if",
                    "line_number": 1627
                  },
                  {
                    "type": "else",
                    "line_number": 1629
                  },
                  {
                    "type": "while",
                    "line_number": 1631
                  },
                  {
                    "type": "if",
                    "line_number": 1637
                  },
                  {
                    "type": "else",
                    "line_number": 1639
                  },
                  {
                    "type": "while",
                    "line_number": 1641
                  },
                  {
                    "type": "if",
                    "line_number": 1645
                  },
                  {
                    "type": "if",
                    "line_number": 1654
                  },
                  {
                    "type": "if",
                    "line_number": 1663
                  },
                  {
                    "type": "if",
                    "line_number": 1667
                  },
                  {
                    "type": "else",
                    "line_number": 1672
                  },
                  {
                    "type": "if",
                    "line_number": 1688
                  },
                  {
                    "type": "for",
                    "line_number": 1697
                  },
                  {
                    "type": "if",
                    "line_number": 1698
                  },
                  {
                    "type": "for",
                    "line_number": 1704
                  },
                  {
                    "type": "if",
                    "line_number": 1705
                  }
                ],
                "complexity": 41,
                "inputs": [
                  "ev"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "M_QuickSave",
                  "messageRoutine",
                  "I_SetPalette",
                  "M_SaveGame",
                  "strcpy",
                  "M_ClearMenus",
                  "G_ScreenShot",
                  "M_StartControlPanel",
                  "M_QuitDOOM",
                  "S_StartSound",
                  "toupper",
                  "M_ChangeMessages",
                  "W_CacheLumpName",
                  "M_LoadGame",
                  "for",
                  "M_SizeDisplay",
                  "switch",
                  "while",
                  "M_ChangeDetail",
                  "M_EndGame",
                  "M_DoSave",
                  "if",
                  "I_GetTime",
                  "M_QuickLoad",
                  "routine",
                  "M_StringWidth"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "ev->data3 ==",
                    "name": "1"
                  }
                ],
                "start_line": 1369,
                "end_line": 1373,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "I_GetTime",
                    "line_number": 1372
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "1"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "I_GetTime"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "ev->data2 ==",
                    "name": "1"
                  }
                ],
                "start_line": 1380,
                "end_line": 1384,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "I_GetTime",
                    "line_number": 1383
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "1"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "I_GetTime"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "mousey >",
                    "name": "lasty+30"
                  }
                ],
                "start_line": 1408,
                "end_line": 1413,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "I_GetTime",
                    "line_number": 1411
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "lasty+30"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "I_GetTime"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "mousex >",
                    "name": "lastx+30"
                  }
                ],
                "start_line": 1422,
                "end_line": 1427,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "I_GetTime",
                    "line_number": 1425
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "lastx+30"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "I_GetTime"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "ev->type ==",
                    "name": "ev_keydown"
                  }
                ],
                "start_line": 1441,
                "end_line": 1444,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "ev_keydown"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "Save Game string input",
                "parameters": [
                  {
                    "type": "",
                    "name": "saveStringEnter"
                  }
                ],
                "start_line": 1452,
                "end_line": 1491,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1490
                  }
                ],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 1454
                  },
                  {
                    "name": "if",
                    "line_number": 1457
                  },
                  {
                    "name": "strcpy",
                    "line_number": 1466
                  },
                  {
                    "name": "if",
                    "line_number": 1471
                  },
                  {
                    "name": "M_DoSave",
                    "line_number": 1472
                  },
                  {
                    "name": "toupper",
                    "line_number": 1476
                  },
                  {
                    "name": "if",
                    "line_number": 1477
                  },
                  {
                    "name": "if",
                    "line_number": 1478
                  },
                  {
                    "name": "if",
                    "line_number": 1480
                  },
                  {
                    "name": "M_StringWidth",
                    "line_number": 1482
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1457
                  },
                  {
                    "type": "if",
                    "line_number": 1471
                  },
                  {
                    "type": "if",
                    "line_number": 1477
                  },
                  {
                    "type": "if",
                    "line_number": 1478
                  },
                  {
                    "type": "if",
                    "line_number": 1480
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "saveStringEnter"
                ],
                "outputs": [
                  "Save Game string input"
                ],
                "dependencies": [
                  "M_DoSave",
                  "strcpy",
                  "if",
                  "M_StringWidth",
                  "toupper",
                  "switch"
                ]
              },
              {
                "name": "if",
                "return_type": "Take care of any messages that need input",
                "parameters": [
                  {
                    "type": "",
                    "name": "messageToPrint"
                  }
                ],
                "start_line": 1494,
                "end_line": 1508,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 1498
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1507
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1496
                  },
                  {
                    "name": "if",
                    "line_number": 1502
                  },
                  {
                    "name": "messageRoutine",
                    "line_number": 1503
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1506
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1496
                  },
                  {
                    "type": "if",
                    "line_number": 1502
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "messageToPrint"
                ],
                "outputs": [
                  "Take care of any messages that need input"
                ],
                "dependencies": [
                  "messageRoutine",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "switch",
                "return_type": "Keys usable within menu",
                "parameters": [
                  {
                    "type": "",
                    "name": "ch"
                  }
                ],
                "start_line": 1621,
                "end_line": 1712,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1631
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1641
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1650
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1659
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1677
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1683
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1693
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1701
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1708
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1626
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1629
                  },
                  {
                    "name": "while",
                    "line_number": 1630
                  },
                  {
                    "name": "if",
                    "line_number": 1636
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1639
                  },
                  {
                    "name": "while",
                    "line_number": 1640
                  },
                  {
                    "name": "if",
                    "line_number": 1644
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1647
                  },
                  {
                    "name": "routine",
                    "line_number": 1648
                  },
                  {
                    "name": "if",
                    "line_number": 1653
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1656
                  },
                  {
                    "name": "routine",
                    "line_number": 1657
                  },
                  {
                    "name": "if",
                    "line_number": 1662
                  },
                  {
                    "name": "if",
                    "line_number": 1666
                  },
                  {
                    "name": "routine",
                    "line_number": 1668
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1669
                  },
                  {
                    "name": "routine",
                    "line_number": 1673
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1674
                  },
                  {
                    "name": "M_ClearMenus",
                    "line_number": 1681
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1682
                  },
                  {
                    "name": "if",
                    "line_number": 1687
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1691
                  },
                  {
                    "name": "for",
                    "line_number": 1696
                  },
                  {
                    "name": "if",
                    "line_number": 1697
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1700
                  },
                  {
                    "name": "for",
                    "line_number": 1703
                  },
                  {
                    "name": "if",
                    "line_number": 1704
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1707
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1626
                  },
                  {
                    "type": "else",
                    "line_number": 1628
                  },
                  {
                    "type": "while",
                    "line_number": 1630
                  },
                  {
                    "type": "if",
                    "line_number": 1636
                  },
                  {
                    "type": "else",
                    "line_number": 1638
                  },
                  {
                    "type": "while",
                    "line_number": 1640
                  },
                  {
                    "type": "if",
                    "line_number": 1644
                  },
                  {
                    "type": "if",
                    "line_number": 1653
                  },
                  {
                    "type": "if",
                    "line_number": 1662
                  },
                  {
                    "type": "if",
                    "line_number": 1666
                  },
                  {
                    "type": "else",
                    "line_number": 1671
                  },
                  {
                    "type": "if",
                    "line_number": 1687
                  },
                  {
                    "type": "for",
                    "line_number": 1696
                  },
                  {
                    "type": "if",
                    "line_number": 1697
                  },
                  {
                    "type": "for",
                    "line_number": 1703
                  },
                  {
                    "type": "if",
                    "line_number": 1704
                  }
                ],
                "complexity": 12,
                "inputs": [
                  "ch"
                ],
                "outputs": [
                  "Keys usable within menu"
                ],
                "dependencies": [
                  "while",
                  "if",
                  "for",
                  "M_ClearMenus",
                  "routine",
                  "S_StartSound"
                ]
              },
              {
                "name": "M_StartControlPanel",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1723,
                "end_line": 1732,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1726
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1726
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "M_Drawer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1740,
                "end_line": 1805,
                "local_variables": [
                  {
                    "type": "static short",
                    "name": "x",
                    "array_size": null,
                    "line_number": 1742
                  },
                  {
                    "type": "static short",
                    "name": "y",
                    "array_size": null,
                    "line_number": 1743
                  },
                  {
                    "type": "short",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1744
                  },
                  {
                    "type": "short",
                    "name": "max",
                    "array_size": null,
                    "line_number": 1745
                  },
                  {
                    "type": "char",
                    "name": "string",
                    "array_size": "40",
                    "line_number": 1746
                  },
                  {
                    "type": "int",
                    "name": "start",
                    "array_size": null,
                    "line_number": 1747
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1753
                  },
                  {
                    "name": "M_StringHeight",
                    "line_number": 1756
                  },
                  {
                    "name": "while",
                    "line_number": 1757
                  },
                  {
                    "name": "for",
                    "line_number": 1759
                  },
                  {
                    "name": "strlen",
                    "line_number": 1759
                  },
                  {
                    "name": "if",
                    "line_number": 1760
                  },
                  {
                    "name": "memset",
                    "line_number": 1762
                  },
                  {
                    "name": "strncpy",
                    "line_number": 1763
                  },
                  {
                    "name": "if",
                    "line_number": 1768
                  },
                  {
                    "name": "strlen",
                    "line_number": 1768
                  },
                  {
                    "name": "strcpy",
                    "line_number": 1770
                  },
                  {
                    "name": "M_StringWidth",
                    "line_number": 1774
                  },
                  {
                    "name": "M_WriteText",
                    "line_number": 1775
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1776
                  },
                  {
                    "name": "if",
                    "line_number": 1781
                  },
                  {
                    "name": "if",
                    "line_number": 1784
                  },
                  {
                    "name": "routine",
                    "line_number": 1785
                  },
                  {
                    "name": "for",
                    "line_number": 1792
                  },
                  {
                    "name": "if",
                    "line_number": 1794
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 1795
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1796
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 1802
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1803
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1753
                  },
                  {
                    "type": "while",
                    "line_number": 1757
                  },
                  {
                    "type": "for",
                    "line_number": 1759
                  },
                  {
                    "type": "if",
                    "line_number": 1760
                  },
                  {
                    "type": "if",
                    "line_number": 1768
                  },
                  {
                    "type": "if",
                    "line_number": 1781
                  },
                  {
                    "type": "if",
                    "line_number": 1784
                  },
                  {
                    "type": "for",
                    "line_number": 1792
                  },
                  {
                    "type": "if",
                    "line_number": 1794
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "strlen",
                  "strncpy",
                  "W_CacheLumpName",
                  "for",
                  "if",
                  "strcpy",
                  "memset",
                  "routine",
                  "SHORT",
                  "M_StringWidth",
                  "V_DrawPatchDirect",
                  "M_WriteText",
                  "M_StringHeight"
                ]
              },
              {
                "name": "M_ClearMenus",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1811,
                "end_line": 1816,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1814
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1814
                  }
                ],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "M_SetupNextMenu",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "menu_t",
                    "name": "*menudef"
                  }
                ],
                "start_line": 1824,
                "end_line": 1828,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "*menudef"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "M_Ticker",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1834,
                "end_line": 1841,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1836
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1836
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "M_Init",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1847,
                "end_line": 1892,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 1864
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1869
                  }
                ],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "switch"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "message_dontfuckwithme",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 69
              },
              {
                "name": "chat_on",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 71
              },
              {
                "name": "mouseSensitivity",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 76
              },
              {
                "name": "showMessages",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 79
              },
              {
                "name": "detailLevel",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 83
              },
              {
                "name": "screenblocks",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 84
              },
              {
                "name": "screenSize",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 87
              },
              {
                "name": "quickSaveSlot",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 90
              },
              {
                "name": "messageToPrint",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 93
              },
              {
                "name": "messx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 98
              },
              {
                "name": "messy",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 99
              },
              {
                "name": "messageLastMenuActive",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 100
              },
              {
                "name": "messageNeedsInput",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 103
              },
              {
                "name": "saveStringEnter",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 119
              },
              {
                "name": "saveSlot",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 120
              },
              {
                "name": "saveCharIndex",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 121
              },
              {
                "name": "inhelpscreens",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 125
              },
              {
                "name": "menuactive",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 126
              },
              {
                "name": "sendpause",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 131
              },
              {
                "name": "endstring",
                "type": "char",
                "storage_class": null,
                "array_size": "160",
                "line_number": 134
              },
              {
                "name": "status",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 143
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "10",
                "line_number": 145
              },
              {
                "name": "alphaKey",
                "type": "char",
                "storage_class": null,
                "array_size": null,
                "line_number": 153
              },
              {
                "name": "numitems",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 160
              },
              {
                "name": "x",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 164
              },
              {
                "name": "y",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 165
              },
              {
                "name": "lastOn",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 166
              },
              {
                "name": "itemOn",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 169
              },
              {
                "name": "skullAnimCounter",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 170
              },
              {
                "name": "whichSkull",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 171
              },
              {
                "name": "handle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 513
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 514
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 515
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "256",
                "line_number": 516
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 544
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 561
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "256",
                "line_number": 581
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 612
              },
              {
                "name": "tempstring",
                "type": "char",
                "storage_class": null,
                "array_size": "80",
                "line_number": 679
              },
              {
                "name": "epi",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 891
              },
              {
                "name": "xx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1189
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1190
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1257
              },
              {
                "name": "c",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1259
              },
              {
                "name": "w",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1270
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1280
              },
              {
                "name": "h",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1281
              },
              {
                "name": "h",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1289
              },
              {
                "name": "w",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1302
              },
              {
                "name": "c",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1304
              },
              {
                "name": "cx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1305
              },
              {
                "name": "cy",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1306
              },
              {
                "name": "ch",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1351
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1352
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1449
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1491
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1499
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1508
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1514
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1524
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1527
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1531
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1534
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1546
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1552
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1558
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1565
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1570
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1575
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1580
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1585
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1590
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1595
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1603
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1615
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1617
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1632
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1642
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1651
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1660
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1678
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1684
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1694
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1702
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1709
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1715
              },
              {
                "name": "x",
                "type": "static short",
                "storage_class": null,
                "array_size": null,
                "line_number": 1742
              },
              {
                "name": "y",
                "type": "static short",
                "storage_class": null,
                "array_size": null,
                "line_number": 1743
              },
              {
                "name": "i",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 1744
              },
              {
                "name": "max",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 1745
              },
              {
                "name": "string",
                "type": "char",
                "storage_class": null,
                "array_size": "40",
                "line_number": 1746
              },
              {
                "name": "start",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1747
              }
            ],
            "defines": [
              {
                "name": "SAVESTRINGSIZE",
                "value": "24",
                "line_number": 107
              },
              {
                "name": "SKULLXOFF",
                "value": "-32",
                "line_number": 128
              },
              {
                "name": "LINEHEIGHT",
                "value": "16",
                "line_number": 129
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/m_menu.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of functions",
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "m_menu.h",
          "type": "file",
          "size": 1677,
          "last_modified": "2024-09-05T16:00:04.009218",
          "path": "linuxdoom-1.10/m_menu.h",
          "readme": "# m_menu.h\n\nThis file contains functionality related to m_menu.",
          "dependencies": [
            "d_event.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/m_menu.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "m_misc.c",
          "type": "file",
          "size": 10500,
          "last_modified": "2024-09-05T16:00:04.035224",
          "path": "linuxdoom-1.10/m_misc.c",
          "readme": "# m_misc.c\n\nThis file contains functionality related to m_misc.",
          "dependencies": [
            "unistd.h",
            "fcntl.h",
            "w_wad.h",
            "sys/types.h",
            "m_swap.h",
            "sys/stat.h",
            "m_argv.h",
            "ctype.h",
            "z_zone.h",
            "stdlib.h",
            "i_system.h",
            "i_video.h",
            "doomstat.h",
            "hu_stuff.h",
            "m_misc.h",
            "doomdef.h",
            "dstrings.h",
            "v_video.h"
          ],
          "inputs": [
            "direct",
            "i++",
            "x",
            "length",
            "y",
            "width",
            "name",
            "palette",
            "string",
            "buffer",
            "height",
            "data",
            "void",
            "filename",
            "source"
          ],
          "outputs": [
            "endif\n\nboolean",
            "int",
            "t complain"
          ],
          "content": {
            "functions": [
              {
                "name": "M_DrawText",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "boolean",
                    "name": "direct"
                  },
                  {
                    "type": "char*",
                    "name": "string"
                  }
                ],
                "start_line": 69,
                "end_line": 95,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 71
                  },
                  {
                    "type": "int",
                    "name": "w",
                    "array_size": null,
                    "line_number": 72
                  },
                  {
                    "type": "return",
                    "name": "x",
                    "array_size": null,
                    "line_number": 94
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 74
                  },
                  {
                    "name": "toupper",
                    "line_number": 76
                  },
                  {
                    "name": "if",
                    "line_number": 78
                  },
                  {
                    "name": "SHORT",
                    "line_number": 84
                  },
                  {
                    "name": "if",
                    "line_number": 85
                  },
                  {
                    "name": "if",
                    "line_number": 87
                  },
                  {
                    "name": "V_DrawPatchDirect",
                    "line_number": 88
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 90
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 74
                  },
                  {
                    "type": "if",
                    "line_number": 78
                  },
                  {
                    "type": "if",
                    "line_number": 85
                  },
                  {
                    "type": "if",
                    "line_number": 87
                  },
                  {
                    "type": "else",
                    "line_number": 89
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "x",
                  "y",
                  "direct",
                  "string"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "while",
                  "V_DrawPatch",
                  "if",
                  "toupper",
                  "SHORT",
                  "V_DrawPatchDirect"
                ]
              },
              {
                "name": "M_WriteFile",
                "return_type": "endif\n\nboolean",
                "parameters": [
                  {
                    "type": "char const*",
                    "name": "name"
                  },
                  {
                    "type": "void*",
                    "name": "source"
                  },
                  {
                    "type": "int",
                    "name": "length"
                  }
                ],
                "start_line": 110,
                "end_line": 127,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "handle",
                    "array_size": null,
                    "line_number": 112
                  },
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 113
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 118
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 124
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 126
                  }
                ],
                "function_calls": [
                  {
                    "name": "open",
                    "line_number": 115
                  },
                  {
                    "name": "if",
                    "line_number": 117
                  },
                  {
                    "name": "write",
                    "line_number": 120
                  },
                  {
                    "name": "close",
                    "line_number": 121
                  },
                  {
                    "name": "if",
                    "line_number": 123
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 117
                  },
                  {
                    "type": "if",
                    "line_number": 123
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "name",
                  "source",
                  "length"
                ],
                "outputs": [
                  "endif\n\nboolean"
                ],
                "dependencies": [
                  "close",
                  "write",
                  "open",
                  "if"
                ]
              },
              {
                "name": "M_ReadFile",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "char const*",
                    "name": "name"
                  },
                  {
                    "type": "byte**",
                    "name": "buffer"
                  }
                ],
                "start_line": 139,
                "end_line": 160,
                "local_variables": [
                  {
                    "type": "struct stat",
                    "name": "fileinfo",
                    "array_size": null,
                    "line_number": 142
                  },
                  {
                    "type": "return",
                    "name": "length",
                    "array_size": null,
                    "line_number": 159
                  }
                ],
                "function_calls": [
                  {
                    "name": "open",
                    "line_number": 145
                  },
                  {
                    "name": "if",
                    "line_number": 146
                  },
                  {
                    "name": "I_Error",
                    "line_number": 147
                  },
                  {
                    "name": "if",
                    "line_number": 148
                  },
                  {
                    "name": "fstat",
                    "line_number": 148
                  },
                  {
                    "name": "I_Error",
                    "line_number": 149
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 151
                  },
                  {
                    "name": "read",
                    "line_number": 152
                  },
                  {
                    "name": "close",
                    "line_number": 153
                  },
                  {
                    "name": "if",
                    "line_number": 155
                  },
                  {
                    "name": "I_Error",
                    "line_number": 156
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 146
                  },
                  {
                    "type": "if",
                    "line_number": 148
                  },
                  {
                    "type": "if",
                    "line_number": 155
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "name",
                  "buffer"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "Z_Malloc",
                  "open",
                  "if",
                  "I_Error",
                  "close",
                  "fstat",
                  "read"
                ]
              },
              {
                "name": "M_SaveDefaults",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 308,
                "end_line": 332,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 310
                  },
                  {
                    "type": "int",
                    "name": "v",
                    "array_size": null,
                    "line_number": 311
                  }
                ],
                "function_calls": [
                  {
                    "name": "fopen",
                    "line_number": 314
                  },
                  {
                    "name": "if",
                    "line_number": 315
                  },
                  {
                    "name": "for",
                    "line_number": 318
                  },
                  {
                    "name": "if",
                    "line_number": 320
                  },
                  {
                    "name": "fprintf",
                    "line_number": 324
                  },
                  {
                    "name": "fprintf",
                    "line_number": 326
                  },
                  {
                    "name": "fclose",
                    "line_number": 331
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 315
                  },
                  {
                    "type": "for",
                    "line_number": 318
                  },
                  {
                    "type": "if",
                    "line_number": 320
                  },
                  {
                    "type": "else",
                    "line_number": 325
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "for",
                  "if",
                  "fopen",
                  "fclose"
                ]
              },
              {
                "name": "for",
                "return_type": "t complain",
                "parameters": [
                  {
                    "type": "i=0 ; i<numdefaults ;",
                    "name": "i++"
                  }
                ],
                "start_line": 316,
                "end_line": 327,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 318
                  },
                  {
                    "name": "fprintf",
                    "line_number": 322
                  },
                  {
                    "name": "fprintf",
                    "line_number": 324
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 318
                  },
                  {
                    "type": "else",
                    "line_number": 323
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "i++"
                ],
                "outputs": [
                  "t complain"
                ],
                "dependencies": [
                  "fprintf",
                  "if"
                ]
              },
              {
                "name": "M_LoadDefaults",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 340,
                "end_line": 403,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 342
                  },
                  {
                    "type": "int",
                    "name": "len",
                    "array_size": null,
                    "line_number": 343
                  },
                  {
                    "type": "char",
                    "name": "def",
                    "array_size": "80",
                    "line_number": 345
                  },
                  {
                    "type": "char",
                    "name": "strparm",
                    "array_size": "100",
                    "line_number": 346
                  },
                  {
                    "type": "int",
                    "name": "parm",
                    "array_size": null,
                    "line_number": 348
                  },
                  {
                    "type": "boolean",
                    "name": "isstring",
                    "array_size": null,
                    "line_number": 349
                  }
                ],
                "function_calls": [
                  {
                    "name": "sizeof",
                    "line_number": 352
                  },
                  {
                    "name": "sizeof",
                    "line_number": 352
                  },
                  {
                    "name": "for",
                    "line_number": 353
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 357
                  },
                  {
                    "name": "if",
                    "line_number": 358
                  },
                  {
                    "name": "printf",
                    "line_number": 361
                  },
                  {
                    "name": "fopen",
                    "line_number": 367
                  },
                  {
                    "name": "if",
                    "line_number": 368
                  },
                  {
                    "name": "while",
                    "line_number": 370
                  },
                  {
                    "name": "feof",
                    "line_number": 370
                  },
                  {
                    "name": "if",
                    "line_number": 373
                  },
                  {
                    "name": "fscanf",
                    "line_number": 373
                  },
                  {
                    "name": "if",
                    "line_number": 375
                  },
                  {
                    "name": "strlen",
                    "line_number": 379
                  },
                  {
                    "name": "malloc",
                    "line_number": 380
                  },
                  {
                    "name": "strcpy",
                    "line_number": 382
                  },
                  {
                    "name": "if",
                    "line_number": 384
                  },
                  {
                    "name": "sscanf",
                    "line_number": 385
                  },
                  {
                    "name": "sscanf",
                    "line_number": 387
                  },
                  {
                    "name": "for",
                    "line_number": 388
                  },
                  {
                    "name": "if",
                    "line_number": 389
                  },
                  {
                    "name": "strcmp",
                    "line_number": 389
                  },
                  {
                    "name": "if",
                    "line_number": 391
                  },
                  {
                    "name": "fclose",
                    "line_number": 401
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 353
                  },
                  {
                    "type": "for",
                    "line_number": 356
                  },
                  {
                    "type": "if",
                    "line_number": 358
                  },
                  {
                    "type": "else",
                    "line_number": 363
                  },
                  {
                    "type": "if",
                    "line_number": 368
                  },
                  {
                    "type": "while",
                    "line_number": 370
                  },
                  {
                    "type": "if",
                    "line_number": 373
                  },
                  {
                    "type": "if",
                    "line_number": 375
                  },
                  {
                    "type": "if",
                    "line_number": 384
                  },
                  {
                    "type": "else",
                    "line_number": 386
                  },
                  {
                    "type": "for",
                    "line_number": 388
                  },
                  {
                    "type": "if",
                    "line_number": 389
                  },
                  {
                    "type": "if",
                    "line_number": 391
                  },
                  {
                    "type": "else",
                    "line_number": 393
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "strlen",
                  "for",
                  "if",
                  "feof",
                  "strcpy",
                  "strcmp",
                  "M_CheckParm",
                  "fopen",
                  "sizeof",
                  "sscanf",
                  "malloc",
                  "fclose",
                  "printf",
                  "fscanf"
                ]
              },
              {
                "name": "WritePCXfile",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "filename"
                  },
                  {
                    "type": "byte*",
                    "name": "data"
                  },
                  {
                    "type": "int",
                    "name": "width"
                  },
                  {
                    "type": "int",
                    "name": "height"
                  },
                  {
                    "type": "byte*",
                    "name": "palette"
                  }
                ],
                "start_line": 441,
                "end_line": 491,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 443
                  },
                  {
                    "type": "int",
                    "name": "length",
                    "array_size": null,
                    "line_number": 444
                  }
                ],
                "function_calls": [
                  {
                    "name": "Z_Malloc",
                    "line_number": 448
                  },
                  {
                    "name": "SHORT",
                    "line_number": 456
                  },
                  {
                    "name": "SHORT",
                    "line_number": 457
                  },
                  {
                    "name": "SHORT",
                    "line_number": 458
                  },
                  {
                    "name": "SHORT",
                    "line_number": 459
                  },
                  {
                    "name": "memset",
                    "line_number": 460
                  },
                  {
                    "name": "sizeof",
                    "line_number": 460
                  },
                  {
                    "name": "SHORT",
                    "line_number": 462
                  },
                  {
                    "name": "SHORT",
                    "line_number": 463
                  },
                  {
                    "name": "memset",
                    "line_number": 464
                  },
                  {
                    "name": "sizeof",
                    "line_number": 464
                  },
                  {
                    "name": "for",
                    "line_number": 470
                  },
                  {
                    "name": "if",
                    "line_number": 472
                  },
                  {
                    "name": "for",
                    "line_number": 483
                  },
                  {
                    "name": "M_WriteFile",
                    "line_number": 488
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 490
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 470
                  },
                  {
                    "type": "if",
                    "line_number": 472
                  },
                  {
                    "type": "else",
                    "line_number": 474
                  },
                  {
                    "type": "for",
                    "line_number": 483
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "filename",
                  "data",
                  "width",
                  "height",
                  "palette"
                ],
                "outputs": [],
                "dependencies": [
                  "Z_Free",
                  "Z_Malloc",
                  "for",
                  "if",
                  "memset",
                  "M_WriteFile",
                  "sizeof",
                  "SHORT"
                ]
              },
              {
                "name": "M_ScreenShot",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 503,
                "end_line": 532,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 505
                  },
                  {
                    "type": "char",
                    "name": "lbmname",
                    "array_size": "12",
                    "line_number": 507
                  }
                ],
                "function_calls": [
                  {
                    "name": "I_ReadScreen",
                    "line_number": 511
                  },
                  {
                    "name": "strcpy",
                    "line_number": 514
                  },
                  {
                    "name": "for",
                    "line_number": 516
                  },
                  {
                    "name": "if",
                    "line_number": 520
                  },
                  {
                    "name": "access",
                    "line_number": 520
                  },
                  {
                    "name": "if",
                    "line_number": 523
                  },
                  {
                    "name": "I_Error",
                    "line_number": 524
                  },
                  {
                    "name": "WritePCXfile",
                    "line_number": 527
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 529
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 516
                  },
                  {
                    "type": "if",
                    "line_number": 520
                  },
                  {
                    "type": "if",
                    "line_number": 523
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "for",
                  "if",
                  "strcpy",
                  "I_Error",
                  "WritePCXfile",
                  "I_ReadScreen",
                  "access"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "c",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 76
              },
              {
                "name": "w",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 77
              },
              {
                "name": "x",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 99
              },
              {
                "name": "handle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 118
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 119
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 124
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 130
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 132
              },
              {
                "name": "fileinfo",
                "type": "struct stat",
                "storage_class": null,
                "array_size": null,
                "line_number": 145
              },
              {
                "name": "length",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 162
              },
              {
                "name": "usemouse",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 169
              },
              {
                "name": "usejoystick",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 170
              },
              {
                "name": "key_right",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 172
              },
              {
                "name": "key_left",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 173
              },
              {
                "name": "key_up",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 174
              },
              {
                "name": "key_down",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 175
              },
              {
                "name": "key_strafeleft",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 177
              },
              {
                "name": "key_straferight",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 178
              },
              {
                "name": "key_fire",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 180
              },
              {
                "name": "key_use",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 181
              },
              {
                "name": "key_strafe",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 182
              },
              {
                "name": "key_speed",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 183
              },
              {
                "name": "mousebfire",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 185
              },
              {
                "name": "mousebstrafe",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 186
              },
              {
                "name": "mousebforward",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 187
              },
              {
                "name": "joybfire",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 189
              },
              {
                "name": "joybstrafe",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 190
              },
              {
                "name": "joybuse",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 191
              },
              {
                "name": "joybspeed",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 192
              },
              {
                "name": "viewwidth",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 194
              },
              {
                "name": "viewheight",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 195
              },
              {
                "name": "mouseSensitivity",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 197
              },
              {
                "name": "showMessages",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 198
              },
              {
                "name": "detailLevel",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 200
              },
              {
                "name": "screenblocks",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 202
              },
              {
                "name": "showMessages",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 204
              },
              {
                "name": "numChannels",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 207
              },
              {
                "name": "mb_used",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 213
              },
              {
                "name": "defaultvalue",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 229
              },
              {
                "name": "scantranslate",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 230
              },
              {
                "name": "untranslated",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 231
              },
              {
                "name": "numdefaults",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 301
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 310
              },
              {
                "name": "v",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 311
              },
              {
                "name": "scantokey",
                "type": "byte",
                "storage_class": "extern",
                "array_size": "128",
                "line_number": 338
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 342
              },
              {
                "name": "len",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 343
              },
              {
                "name": "def",
                "type": "char",
                "storage_class": null,
                "array_size": "80",
                "line_number": 345
              },
              {
                "name": "strparm",
                "type": "char",
                "storage_class": null,
                "array_size": "100",
                "line_number": 346
              },
              {
                "name": "parm",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 348
              },
              {
                "name": "isstring",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 349
              },
              {
                "name": "manufacturer",
                "type": "char",
                "storage_class": null,
                "array_size": null,
                "line_number": 413
              },
              {
                "name": "version",
                "type": "char",
                "storage_class": null,
                "array_size": null,
                "line_number": 414
              },
              {
                "name": "encoding",
                "type": "char",
                "storage_class": null,
                "array_size": null,
                "line_number": 415
              },
              {
                "name": "bits_per_pixel",
                "type": "char",
                "storage_class": null,
                "array_size": null,
                "line_number": 416
              },
              {
                "name": "xmin",
                "type": "unsigned short",
                "storage_class": null,
                "array_size": null,
                "line_number": 418
              },
              {
                "name": "ymin",
                "type": "unsigned short",
                "storage_class": null,
                "array_size": null,
                "line_number": 419
              },
              {
                "name": "xmax",
                "type": "unsigned short",
                "storage_class": null,
                "array_size": null,
                "line_number": 420
              },
              {
                "name": "ymax",
                "type": "unsigned short",
                "storage_class": null,
                "array_size": null,
                "line_number": 421
              },
              {
                "name": "hres",
                "type": "unsigned short",
                "storage_class": null,
                "array_size": null,
                "line_number": 423
              },
              {
                "name": "vres",
                "type": "unsigned short",
                "storage_class": null,
                "array_size": null,
                "line_number": 424
              },
              {
                "name": "palette",
                "type": "unsigned char",
                "storage_class": null,
                "array_size": "48",
                "line_number": 426
              },
              {
                "name": "reserved",
                "type": "char",
                "storage_class": null,
                "array_size": null,
                "line_number": 428
              },
              {
                "name": "color_planes",
                "type": "char",
                "storage_class": null,
                "array_size": null,
                "line_number": 429
              },
              {
                "name": "bytes_per_line",
                "type": "unsigned short",
                "storage_class": null,
                "array_size": null,
                "line_number": 430
              },
              {
                "name": "palette_type",
                "type": "unsigned short",
                "storage_class": null,
                "array_size": null,
                "line_number": 431
              },
              {
                "name": "filler",
                "type": "char",
                "storage_class": null,
                "array_size": "58",
                "line_number": 433
              },
              {
                "name": "data",
                "type": "unsigned char",
                "storage_class": null,
                "array_size": null,
                "line_number": 434
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 449
              },
              {
                "name": "length",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 450
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 505
              },
              {
                "name": "lbmname",
                "type": "char",
                "storage_class": null,
                "array_size": "12",
                "line_number": 507
              }
            ],
            "defines": [
              {
                "name": "O_BINARY",
                "value": "0",
                "line_number": 109
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/m_misc.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "m_misc.h",
          "type": "file",
          "size": 1250,
          "last_modified": "2024-09-05T16:00:04.058737",
          "path": "linuxdoom-1.10/m_misc.h",
          "readme": "# m_misc.h\n\nThis file contains functionality related to m_misc.",
          "dependencies": [
            "doomtype.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/m_misc.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "m_random.c",
          "type": "file",
          "size": 2566,
          "last_modified": "2024-09-05T16:00:04.085735",
          "path": "linuxdoom-1.10/m_random.c",
          "readme": "# m_random.c\n\nThis file contains functionality related to m_random.",
          "dependencies": [],
          "inputs": [
            "void"
          ],
          "outputs": [
            "int"
          ],
          "content": {
            "functions": [
              {
                "name": "P_Random",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 57,
                "end_line": 61,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": []
              },
              {
                "name": "M_Random",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 63,
                "end_line": 67,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": []
              },
              {
                "name": "M_ClearRandom",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 69,
                "end_line": 72,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/m_random.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "m_random.h",
          "type": "file",
          "size": 1162,
          "last_modified": "2024-09-05T16:00:04.109736",
          "path": "linuxdoom-1.10/m_random.h",
          "readme": "# m_random.h\n\nThis file contains functionality related to m_random.",
          "dependencies": [
            "doomtype.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/m_random.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "m_swap.c",
          "type": "file",
          "size": 1287,
          "last_modified": "2024-09-05T16:00:04.134743",
          "path": "linuxdoom-1.10/m_swap.c",
          "readme": "# m_swap.c\n\nThis file contains functionality related to m_swap.",
          "dependencies": [
            "m_swap.h"
          ],
          "inputs": [
            "x"
          ],
          "outputs": [
            "unsigned long",
            "unsigned short"
          ],
          "content": {
            "functions": [
              {
                "name": "SwapSHORT",
                "return_type": "unsigned short",
                "parameters": [
                  {
                    "type": "unsigned short",
                    "name": "x"
                  }
                ],
                "start_line": 38,
                "end_line": 42,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "return",
                    "line_number": 41
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "x"
                ],
                "outputs": [
                  "unsigned short"
                ],
                "dependencies": [
                  "return"
                ]
              },
              {
                "name": "SwapLONG",
                "return_type": "unsigned long",
                "parameters": [
                  {
                    "type": "unsigned long",
                    "name": "x"
                  }
                ],
                "start_line": 45,
                "end_line": 52,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "x"
                ],
                "outputs": [
                  "unsigned long"
                ],
                "dependencies": []
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/m_swap.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "m_swap.h",
          "type": "file",
          "size": 1321,
          "last_modified": "2024-09-05T16:00:04.158261",
          "path": "linuxdoom-1.10/m_swap.h",
          "readme": "# m_swap.h\n\nThis file contains functionality related to m_swap.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/m_swap.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "p_ceilng.c",
          "type": "file",
          "size": 6297,
          "last_modified": "2024-09-05T16:00:04.184262",
          "path": "linuxdoom-1.10/p_ceilng.c",
          "readme": "# p_ceilng.c\n\nThis file contains functionality related to p_ceilng.",
          "dependencies": [
            "p_local.h",
            "sounds.h",
            "z_zone.h",
            "doomstat.h",
            "r_state.h",
            "s_sound.h",
            "doomdef.h"
          ],
          "inputs": [
            "*line",
            "type",
            "c",
            "ceiling",
            "line"
          ],
          "outputs": [
            "int"
          ],
          "content": {
            "functions": [
              {
                "name": "T_MoveCeiling",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "ceiling_t*",
                    "name": "ceiling"
                  }
                ],
                "start_line": 52,
                "end_line": 164,
                "local_variables": [
                  {
                    "type": "result_e",
                    "name": "res",
                    "array_size": null,
                    "line_number": 54
                  }
                ],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 56
                  },
                  {
                    "name": "T_MovePlane",
                    "line_number": 63
                  },
                  {
                    "name": "if",
                    "line_number": 68
                  },
                  {
                    "name": "switch",
                    "line_number": 70
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 75
                  },
                  {
                    "name": "if",
                    "line_number": 82
                  },
                  {
                    "name": "switch",
                    "line_number": 84
                  },
                  {
                    "name": "P_RemoveActiveCeiling",
                    "line_number": 87
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 91
                  },
                  {
                    "name": "T_MovePlane",
                    "line_number": 107
                  },
                  {
                    "name": "if",
                    "line_number": 112
                  },
                  {
                    "name": "switch",
                    "line_number": 114
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 118
                  },
                  {
                    "name": "if",
                    "line_number": 123
                  },
                  {
                    "name": "switch",
                    "line_number": 125
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 128
                  },
                  {
                    "name": "P_RemoveActiveCeiling",
                    "line_number": 138
                  },
                  {
                    "name": "if",
                    "line_number": 147
                  },
                  {
                    "name": "switch",
                    "line_number": 149
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 68
                  },
                  {
                    "type": "if",
                    "line_number": 82
                  },
                  {
                    "type": "if",
                    "line_number": 112
                  },
                  {
                    "type": "if",
                    "line_number": 123
                  },
                  {
                    "type": "else",
                    "line_number": 145
                  },
                  {
                    "type": "if",
                    "line_number": 147
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "ceiling"
                ],
                "outputs": [],
                "dependencies": [
                  "T_MovePlane",
                  "if",
                  "P_RemoveActiveCeiling",
                  "S_StartSound",
                  "switch"
                ]
              },
              {
                "name": "EV_DoCeiling",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  },
                  {
                    "type": "ceiling_e",
                    "name": "type"
                  }
                ],
                "start_line": 171,
                "end_line": 242,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "secnum",
                    "array_size": null,
                    "line_number": 173
                  },
                  {
                    "type": "int",
                    "name": "rtn",
                    "array_size": null,
                    "line_number": 174
                  },
                  {
                    "type": "return",
                    "name": "rtn",
                    "array_size": null,
                    "line_number": 241
                  }
                ],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 182
                  },
                  {
                    "name": "P_ActivateInStasisCeiling",
                    "line_number": 187
                  },
                  {
                    "name": "while",
                    "line_number": 192
                  },
                  {
                    "name": "P_FindSectorFromLineTag",
                    "line_number": 192
                  },
                  {
                    "name": "if",
                    "line_number": 195
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 200
                  },
                  {
                    "name": "sizeof",
                    "line_number": 200
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 201
                  },
                  {
                    "name": "switch",
                    "line_number": 207
                  },
                  {
                    "name": "if",
                    "line_number": 224
                  },
                  {
                    "name": "P_FindHighestCeilingSurrounding",
                    "line_number": 231
                  },
                  {
                    "name": "P_AddActiveCeiling",
                    "line_number": 239
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 181
                  },
                  {
                    "type": "while",
                    "line_number": 192
                  },
                  {
                    "type": "if",
                    "line_number": 195
                  },
                  {
                    "type": "if",
                    "line_number": 224
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "line",
                  "type"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "P_AddThinker",
                  "while",
                  "Z_Malloc",
                  "if",
                  "P_FindSectorFromLineTag",
                  "sizeof",
                  "P_AddActiveCeiling",
                  "P_ActivateInStasisCeiling",
                  "switch",
                  "P_FindHighestCeilingSurrounding"
                ]
              },
              {
                "name": "P_AddActiveCeiling",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "ceiling_t*",
                    "name": "c"
                  }
                ],
                "start_line": 251,
                "end_line": 263,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 253
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 255
                  },
                  {
                    "name": "if",
                    "line_number": 257
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 255
                  },
                  {
                    "type": "if",
                    "line_number": 257
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "c"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "P_RemoveActiveCeiling",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "ceiling_t*",
                    "name": "c"
                  }
                ],
                "start_line": 270,
                "end_line": 284,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 272
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 274
                  },
                  {
                    "name": "if",
                    "line_number": 276
                  },
                  {
                    "name": "P_RemoveThinker",
                    "line_number": 279
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 274
                  },
                  {
                    "type": "if",
                    "line_number": 276
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "c"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_RemoveThinker",
                  "for"
                ]
              },
              {
                "name": "P_ActivateInStasisCeiling",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  }
                ],
                "start_line": 291,
                "end_line": 306,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 293
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 295
                  },
                  {
                    "name": "if",
                    "line_number": 297
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 295
                  },
                  {
                    "type": "if",
                    "line_number": 297
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "line"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "EV_CeilingCrushStop",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "line_t",
                    "name": "*line"
                  }
                ],
                "start_line": 314,
                "end_line": 335,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 316
                  },
                  {
                    "type": "int",
                    "name": "rtn",
                    "array_size": null,
                    "line_number": 317
                  },
                  {
                    "type": "return",
                    "name": "rtn",
                    "array_size": null,
                    "line_number": 334
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 320
                  },
                  {
                    "name": "if",
                    "line_number": 322
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 320
                  },
                  {
                    "type": "if",
                    "line_number": 322
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "*line"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "if",
                  "for"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "res",
                "type": "result_e",
                "storage_class": null,
                "array_size": null,
                "line_number": 54
              },
              {
                "name": "secnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 176
              },
              {
                "name": "rtn",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 177
              },
              {
                "name": "rtn",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 244
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 253
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 272
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 293
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 316
              },
              {
                "name": "rtn",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 317
              },
              {
                "name": "rtn",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 334
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/p_ceilng.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "p_doors.c",
          "type": "file",
          "size": 15237,
          "last_modified": "2024-09-05T16:00:04.210264",
          "path": "linuxdoom-1.10/p_doors.c",
          "readme": "# p_doors.c\n\nThis file contains functionality related to p_doors.",
          "dependencies": [
            "p_local.h",
            "sounds.h",
            "z_zone.h",
            "doomstat.h",
            "r_state.h",
            "s_sound.h",
            "doomdef.h",
            "dstrings.h"
          ],
          "inputs": [
            "secnum",
            "type",
            "!door",
            "!--door->topcountdown",
            "line->special",
            "line",
            "void",
            "door",
            "sec",
            "crushed",
            "thing"
          ],
          "outputs": [
            "for proper sound",
            "WAITING",
            "INITIAL WAIT",
            "int",
            "Init sliding door vars",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "T_VerticalDoor",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "vldoor_t*",
                    "name": "door"
                  }
                ],
                "start_line": 63,
                "end_line": 198,
                "local_variables": [
                  {
                    "type": "result_e",
                    "name": "res",
                    "array_size": null,
                    "line_number": 65
                  }
                ],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 67
                  },
                  {
                    "name": "if",
                    "line_number": 71
                  },
                  {
                    "name": "switch",
                    "line_number": 73
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 77
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 83
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 89
                  },
                  {
                    "name": "if",
                    "line_number": 101
                  },
                  {
                    "name": "switch",
                    "line_number": 103
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 108
                  },
                  {
                    "name": "T_MovePlane",
                    "line_number": 120
                  },
                  {
                    "name": "if",
                    "line_number": 124
                  },
                  {
                    "name": "switch",
                    "line_number": 126
                  },
                  {
                    "name": "P_RemoveThinker",
                    "line_number": 131
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 132
                  },
                  {
                    "name": "P_RemoveThinker",
                    "line_number": 139
                  },
                  {
                    "name": "if",
                    "line_number": 151
                  },
                  {
                    "name": "switch",
                    "line_number": 153
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 161
                  },
                  {
                    "name": "T_MovePlane",
                    "line_number": 170
                  },
                  {
                    "name": "if",
                    "line_number": 175
                  },
                  {
                    "name": "switch",
                    "line_number": 177
                  },
                  {
                    "name": "P_RemoveThinker",
                    "line_number": 189
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 71
                  },
                  {
                    "type": "if",
                    "line_number": 101
                  },
                  {
                    "type": "if",
                    "line_number": 124
                  },
                  {
                    "type": "if",
                    "line_number": 151
                  },
                  {
                    "type": "if",
                    "line_number": 175
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "door"
                ],
                "outputs": [],
                "dependencies": [
                  "P_RemoveThinker",
                  "T_MovePlane",
                  "if",
                  "S_StartSound",
                  "switch"
                ]
              },
              {
                "name": "if",
                "return_type": "WAITING",
                "parameters": [
                  {
                    "type": "",
                    "name": "!--door->topcountdown"
                  }
                ],
                "start_line": 70,
                "end_line": 95,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 72
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 76
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 82
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 88
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "!--door->topcountdown"
                ],
                "outputs": [
                  "WAITING"
                ],
                "dependencies": [
                  "switch",
                  "S_StartSound"
                ]
              },
              {
                "name": "if",
                "return_type": "INITIAL WAIT",
                "parameters": [
                  {
                    "type": "",
                    "name": "!--door->topcountdown"
                  }
                ],
                "start_line": 100,
                "end_line": 114,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 102
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 107
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "!--door->topcountdown"
                ],
                "outputs": [
                  "INITIAL WAIT"
                ],
                "dependencies": [
                  "switch",
                  "S_StartSound"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "res ==",
                    "name": "crushed"
                  }
                ],
                "start_line": 151,
                "end_line": 165,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 153
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 161
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "crushed"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "switch",
                  "S_StartSound"
                ]
              },
              {
                "name": "EV_DoLockedDoor",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  },
                  {
                    "type": "vldoor_e",
                    "name": "type"
                  },
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  }
                ],
                "start_line": 206,
                "end_line": 256,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 213
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 220
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 225
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 232
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 237
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 244
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 250
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 212
                  },
                  {
                    "name": "switch",
                    "line_number": 215
                  },
                  {
                    "name": "if",
                    "line_number": 219
                  },
                  {
                    "name": "if",
                    "line_number": 221
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 224
                  },
                  {
                    "name": "if",
                    "line_number": 231
                  },
                  {
                    "name": "if",
                    "line_number": 233
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 236
                  },
                  {
                    "name": "if",
                    "line_number": 243
                  },
                  {
                    "name": "if",
                    "line_number": 245
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 249
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 255
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 212
                  },
                  {
                    "type": "if",
                    "line_number": 219
                  },
                  {
                    "type": "if",
                    "line_number": 221
                  },
                  {
                    "type": "if",
                    "line_number": 231
                  },
                  {
                    "type": "if",
                    "line_number": 233
                  },
                  {
                    "type": "if",
                    "line_number": 243
                  },
                  {
                    "type": "if",
                    "line_number": 245
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "line",
                  "type",
                  "thing"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "switch",
                  "EV_DoDoor",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "EV_DoDoor",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  },
                  {
                    "type": "vldoor_e",
                    "name": "type"
                  }
                ],
                "start_line": 263,
                "end_line": 344,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "rtn",
                    "array_size": null,
                    "line_number": 343
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 272
                  },
                  {
                    "name": "P_FindSectorFromLineTag",
                    "line_number": 272
                  },
                  {
                    "name": "if",
                    "line_number": 275
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 281
                  },
                  {
                    "name": "sizeof",
                    "line_number": 281
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 282
                  },
                  {
                    "name": "switch",
                    "line_number": 291
                  },
                  {
                    "name": "P_FindLowestCeilingSurrounding",
                    "line_number": 294
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 298
                  },
                  {
                    "name": "P_FindLowestCeilingSurrounding",
                    "line_number": 303
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 306
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 313
                  },
                  {
                    "name": "P_FindLowestCeilingSurrounding",
                    "line_number": 320
                  },
                  {
                    "name": "if",
                    "line_number": 323
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 324
                  },
                  {
                    "name": "P_FindLowestCeilingSurrounding",
                    "line_number": 331
                  },
                  {
                    "name": "if",
                    "line_number": 333
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 334
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 272
                  },
                  {
                    "type": "if",
                    "line_number": 275
                  },
                  {
                    "type": "if",
                    "line_number": 323
                  },
                  {
                    "type": "if",
                    "line_number": 333
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "line",
                  "type"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "P_AddThinker",
                  "while",
                  "P_FindLowestCeilingSurrounding",
                  "Z_Malloc",
                  "if",
                  "P_FindSectorFromLineTag",
                  "sizeof",
                  "S_StartSound",
                  "switch"
                ]
              },
              {
                "name": "EV_VerticalDoor",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  },
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  }
                ],
                "start_line": 353,
                "end_line": 496,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "secnum",
                    "array_size": null,
                    "line_number": 356
                  },
                  {
                    "type": "int",
                    "name": "side",
                    "array_size": null,
                    "line_number": 359
                  }
                ],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 366
                  },
                  {
                    "name": "if",
                    "line_number": 370
                  },
                  {
                    "name": "if",
                    "line_number": 373
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 376
                  },
                  {
                    "name": "if",
                    "line_number": 383
                  },
                  {
                    "name": "if",
                    "line_number": 386
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 390
                  },
                  {
                    "name": "if",
                    "line_number": 397
                  },
                  {
                    "name": "if",
                    "line_number": 400
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 403
                  },
                  {
                    "name": "if",
                    "line_number": 413
                  },
                  {
                    "name": "switch",
                    "line_number": 416
                  },
                  {
                    "name": "if",
                    "line_number": 423
                  },
                  {
                    "name": "if",
                    "line_number": 427
                  },
                  {
                    "name": "switch",
                    "line_number": 437
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 441
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 446
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 450
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 456
                  },
                  {
                    "name": "sizeof",
                    "line_number": 456
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 457
                  },
                  {
                    "name": "switch",
                    "line_number": 465
                  },
                  {
                    "name": "P_FindLowestCeilingSurrounding",
                    "line_number": 494
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 363
                  },
                  {
                    "type": "if",
                    "line_number": 370
                  },
                  {
                    "type": "if",
                    "line_number": 373
                  },
                  {
                    "type": "if",
                    "line_number": 383
                  },
                  {
                    "type": "if",
                    "line_number": 386
                  },
                  {
                    "type": "if",
                    "line_number": 397
                  },
                  {
                    "type": "if",
                    "line_number": 400
                  },
                  {
                    "type": "if",
                    "line_number": 409
                  },
                  {
                    "type": "if",
                    "line_number": 413
                  },
                  {
                    "type": "if",
                    "line_number": 423
                  },
                  {
                    "type": "else",
                    "line_number": 425
                  },
                  {
                    "type": "if",
                    "line_number": 427
                  },
                  {
                    "type": "for",
                    "line_number": 436
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "line",
                  "thing"
                ],
                "outputs": [],
                "dependencies": [
                  "P_AddThinker",
                  "P_FindLowestCeilingSurrounding",
                  "Z_Malloc",
                  "if",
                  "sizeof",
                  "S_StartSound",
                  "switch"
                ]
              },
              {
                "name": "switch",
                "return_type": "for proper sound",
                "parameters": [
                  {
                    "type": "",
                    "name": "line->special"
                  }
                ],
                "start_line": 439,
                "end_line": 454,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 443
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 448
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 452
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "line->special"
                ],
                "outputs": [
                  "for proper sound"
                ],
                "dependencies": [
                  "S_StartSound"
                ]
              },
              {
                "name": "P_SpawnDoorCloseIn30",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "sector_t*",
                    "name": "sec"
                  }
                ],
                "start_line": 505,
                "end_line": 522,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "Z_Malloc",
                    "line_number": 509
                  },
                  {
                    "name": "sizeof",
                    "line_number": 509
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 511
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "sec"
                ],
                "outputs": [],
                "dependencies": [
                  "P_AddThinker",
                  "Z_Malloc",
                  "sizeof"
                ]
              },
              {
                "name": "P_SpawnDoorRaiseIn5Mins",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "sector_t*",
                    "name": "sec"
                  },
                  {
                    "type": "int",
                    "name": "secnum"
                  }
                ],
                "start_line": 527,
                "end_line": 547,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "Z_Malloc",
                    "line_number": 531
                  },
                  {
                    "name": "sizeof",
                    "line_number": 531
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 533
                  },
                  {
                    "name": "P_FindLowestCeilingSurrounding",
                    "line_number": 543
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "sec",
                  "secnum"
                ],
                "outputs": [],
                "dependencies": [
                  "P_AddThinker",
                  "P_FindLowestCeilingSurrounding",
                  "Z_Malloc",
                  "sizeof"
                ]
              },
              {
                "name": "P_InitSlidingDoorFrames",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 566,
                "end_line": 603,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 568
                  },
                  {
                    "type": "int",
                    "name": "f1",
                    "array_size": null,
                    "line_number": 569
                  },
                  {
                    "type": "int",
                    "name": "f2",
                    "array_size": null,
                    "line_number": 570
                  },
                  {
                    "type": "int",
                    "name": "f3",
                    "array_size": null,
                    "line_number": 571
                  },
                  {
                    "type": "int",
                    "name": "f4",
                    "array_size": null,
                    "line_number": 572
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 575
                  },
                  {
                    "name": "for",
                    "line_number": 578
                  },
                  {
                    "name": "if",
                    "line_number": 580
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 583
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 584
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 585
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 586
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 593
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 594
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 595
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 596
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 575
                  },
                  {
                    "type": "for",
                    "line_number": 578
                  },
                  {
                    "type": "if",
                    "line_number": 580
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "R_TextureNumForName",
                  "if"
                ]
              },
              {
                "name": "P_FindSlidingDoorType",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  }
                ],
                "start_line": 610,
                "end_line": 623,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 612
                  },
                  {
                    "type": "int",
                    "name": "val",
                    "array_size": null,
                    "line_number": 613
                  },
                  {
                    "type": "return",
                    "name": "i",
                    "array_size": null,
                    "line_number": 619
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 615
                  },
                  {
                    "name": "if",
                    "line_number": 618
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 615
                  },
                  {
                    "type": "if",
                    "line_number": 618
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "line"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "T_SlidingDoor",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "slidedoor_t*",
                    "name": "door"
                  }
                ],
                "start_line": 625,
                "end_line": 708,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 627
                  },
                  {
                    "name": "if",
                    "line_number": 630
                  },
                  {
                    "name": "if",
                    "line_number": 632
                  },
                  {
                    "name": "if",
                    "line_number": 639
                  },
                  {
                    "name": "P_RemoveThinker",
                    "line_number": 642
                  },
                  {
                    "name": "if",
                    "line_number": 666
                  },
                  {
                    "name": "if",
                    "line_number": 669
                  },
                  {
                    "name": "if",
                    "line_number": 683
                  },
                  {
                    "name": "if",
                    "line_number": 685
                  },
                  {
                    "name": "P_RemoveThinker",
                    "line_number": 690
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 630
                  },
                  {
                    "type": "if",
                    "line_number": 632
                  },
                  {
                    "type": "if",
                    "line_number": 639
                  },
                  {
                    "type": "else",
                    "line_number": 649
                  },
                  {
                    "type": "if",
                    "line_number": 666
                  },
                  {
                    "type": "if",
                    "line_number": 669
                  },
                  {
                    "type": "if",
                    "line_number": 683
                  },
                  {
                    "type": "if",
                    "line_number": 685
                  },
                  {
                    "type": "else",
                    "line_number": 693
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "door"
                ],
                "outputs": [],
                "dependencies": [
                  "switch",
                  "P_RemoveThinker",
                  "if"
                ]
              },
              {
                "name": "EV_SlidingDoor",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  },
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  }
                ],
                "start_line": 712,
                "end_line": 760,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 718
                  },
                  {
                    "name": "if",
                    "line_number": 724
                  },
                  {
                    "name": "if",
                    "line_number": 726
                  },
                  {
                    "name": "if",
                    "line_number": 730
                  },
                  {
                    "name": "if",
                    "line_number": 732
                  },
                  {
                    "name": "if",
                    "line_number": 740
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 742
                  },
                  {
                    "name": "sizeof",
                    "line_number": 742
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 743
                  },
                  {
                    "name": "P_FindSlidingDoorType",
                    "line_number": 748
                  },
                  {
                    "name": "if",
                    "line_number": 750
                  },
                  {
                    "name": "I_Error",
                    "line_number": 751
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 718
                  },
                  {
                    "type": "if",
                    "line_number": 724
                  },
                  {
                    "type": "if",
                    "line_number": 726
                  },
                  {
                    "type": "if",
                    "line_number": 730
                  },
                  {
                    "type": "if",
                    "line_number": 732
                  },
                  {
                    "type": "else",
                    "line_number": 735
                  },
                  {
                    "type": "if",
                    "line_number": 740
                  },
                  {
                    "type": "if",
                    "line_number": 750
                  },
                  {
                    "type": "for",
                    "line_number": 751
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "line",
                  "thing"
                ],
                "outputs": [],
                "dependencies": [
                  "P_AddThinker",
                  "Z_Malloc",
                  "if",
                  "I_Error",
                  "sizeof",
                  "P_FindSlidingDoorType"
                ]
              },
              {
                "name": "if",
                "return_type": "Init sliding door vars",
                "parameters": [
                  {
                    "type": "",
                    "name": "!door"
                  }
                ],
                "start_line": 742,
                "end_line": 761,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "Z_Malloc",
                    "line_number": 744
                  },
                  {
                    "name": "sizeof",
                    "line_number": 744
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 745
                  },
                  {
                    "name": "P_FindSlidingDoorType",
                    "line_number": 750
                  },
                  {
                    "name": "if",
                    "line_number": 752
                  },
                  {
                    "name": "I_Error",
                    "line_number": 753
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 752
                  },
                  {
                    "type": "for",
                    "line_number": 753
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "!door"
                ],
                "outputs": [
                  "Init sliding door vars"
                ],
                "dependencies": [
                  "P_AddThinker",
                  "Z_Malloc",
                  "if",
                  "I_Error",
                  "sizeof",
                  "P_FindSlidingDoorType"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "res",
                "type": "result_e",
                "storage_class": null,
                "array_size": null,
                "line_number": 65
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 217
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 224
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 229
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 236
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 241
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 248
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 254
              },
              {
                "name": "rtn",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 346
              },
              {
                "name": "secnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 359
              },
              {
                "name": "side",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 362
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 568
              },
              {
                "name": "f1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 569
              },
              {
                "name": "f2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 570
              },
              {
                "name": "f3",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 571
              },
              {
                "name": "f4",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 572
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 612
              },
              {
                "name": "val",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 613
              },
              {
                "name": "i",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 619
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/p_doors.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "p_enemy.c",
          "type": "file",
          "size": 36693,
          "last_modified": "2024-09-05T16:00:04.236270",
          "path": "linuxdoom-1.10/p_enemy.c",
          "readme": "# p_enemy.c\n\nThis file contains functionality related to p_enemy.",
          "dependencies": [
            "m_random.h",
            "p_local.h",
            "sounds.h",
            "r_state.h",
            "i_system.h",
            "stdlib.h",
            "g_game.h",
            "s_sound.h",
            "doomstat.h",
            "doomdef.h"
          ],
          "inputs": [
            "!allaround",
            "*actor",
            "angle",
            "soundblocks",
            "actor->threshold",
            "mo",
            "MF_JUSTATTACKED",
            "player",
            "target",
            "floatok",
            "8",
            "psp",
            "allaround",
            "sec",
            "thing",
            "soundblocks+1",
            "DI_NODIR",
            "actor",
            "actor->info->missilestate",
            "emmiter",
            "th=th->next",
            "thingy"
          ],
          "outputs": [
            "check for missile attack",
            "if all bosses are dead",
            "travelling cube sound\nvoid",
            "do not attack twice in a row",
            "modify target threshold",
            "open any specials",
            "out of sight",
            "turn towards movement direction if not there yet",
            "boolean",
            "try direct route",
            "wake up all monsters in this sector",
            "to see if all Keens are dead"
          ],
          "content": {
            "functions": [
              {
                "name": "P_RecursiveSound",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "sector_t*",
                    "name": "sec"
                  },
                  {
                    "type": "int",
                    "name": "soundblocks"
                  }
                ],
                "start_line": 105,
                "end_line": 146,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 107
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 112
                  },
                  {
                    "name": "for",
                    "line_number": 122
                  },
                  {
                    "name": "if",
                    "line_number": 125
                  },
                  {
                    "name": "P_LineOpening",
                    "line_number": 128
                  },
                  {
                    "name": "if",
                    "line_number": 130
                  },
                  {
                    "name": "if",
                    "line_number": 133
                  },
                  {
                    "name": "if",
                    "line_number": 138
                  },
                  {
                    "name": "if",
                    "line_number": 140
                  },
                  {
                    "name": "P_RecursiveSound",
                    "line_number": 141
                  },
                  {
                    "name": "P_RecursiveSound",
                    "line_number": 144
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 112
                  },
                  {
                    "type": "for",
                    "line_number": 122
                  },
                  {
                    "type": "if",
                    "line_number": 125
                  },
                  {
                    "type": "if",
                    "line_number": 130
                  },
                  {
                    "type": "if",
                    "line_number": 133
                  },
                  {
                    "type": "else",
                    "line_number": 135
                  },
                  {
                    "type": "if",
                    "line_number": 138
                  },
                  {
                    "type": "if",
                    "line_number": 140
                  },
                  {
                    "type": "else",
                    "line_number": 143
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "sec",
                  "soundblocks"
                ],
                "outputs": [],
                "dependencies": [
                  "P_RecursiveSound",
                  "for",
                  "P_LineOpening",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "wake up all monsters in this sector",
                "parameters": [
                  {
                    "type": "sec->validcount == validcount && sec->soundtraversed <=",
                    "name": "soundblocks+1"
                  }
                ],
                "start_line": 114,
                "end_line": 117,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "soundblocks+1"
                ],
                "outputs": [
                  "wake up all monsters in this sector"
                ],
                "dependencies": []
              },
              {
                "name": "P_NoiseAlert",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "target"
                  },
                  {
                    "type": "mobj_t*",
                    "name": "emmiter"
                  }
                ],
                "start_line": 158,
                "end_line": 163,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_RecursiveSound",
                    "line_number": 162
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "target",
                  "emmiter"
                ],
                "outputs": [],
                "dependencies": [
                  "P_RecursiveSound"
                ]
              },
              {
                "name": "P_CheckMeleeRange",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 174,
                "end_line": 192,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "dist",
                    "array_size": null,
                    "line_number": 177
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 180
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 186
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 189
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 191
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 179
                  },
                  {
                    "name": "P_AproxDistance",
                    "line_number": 183
                  },
                  {
                    "name": "if",
                    "line_number": 185
                  },
                  {
                    "name": "if",
                    "line_number": 188
                  },
                  {
                    "name": "P_CheckSight",
                    "line_number": 188
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 179
                  },
                  {
                    "type": "if",
                    "line_number": 185
                  },
                  {
                    "type": "if",
                    "line_number": 188
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "actor"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "P_CheckSight",
                  "P_AproxDistance",
                  "if"
                ]
              },
              {
                "name": "P_CheckMissileRange",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 197,
                "end_line": 256,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "dist",
                    "array_size": null,
                    "line_number": 199
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 202
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 209
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 213
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 227
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 234
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 253
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 255
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 201
                  },
                  {
                    "name": "P_CheckSight",
                    "line_number": 201
                  },
                  {
                    "name": "if",
                    "line_number": 204
                  },
                  {
                    "name": "if",
                    "line_number": 212
                  },
                  {
                    "name": "P_AproxDistance",
                    "line_number": 216
                  },
                  {
                    "name": "if",
                    "line_number": 219
                  },
                  {
                    "name": "if",
                    "line_number": 224
                  },
                  {
                    "name": "if",
                    "line_number": 226
                  },
                  {
                    "name": "if",
                    "line_number": 231
                  },
                  {
                    "name": "if",
                    "line_number": 233
                  },
                  {
                    "name": "if",
                    "line_number": 239
                  },
                  {
                    "name": "if",
                    "line_number": 246
                  },
                  {
                    "name": "if",
                    "line_number": 249
                  },
                  {
                    "name": "if",
                    "line_number": 252
                  },
                  {
                    "name": "P_Random",
                    "line_number": 252
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 201
                  },
                  {
                    "type": "if",
                    "line_number": 204
                  },
                  {
                    "type": "if",
                    "line_number": 212
                  },
                  {
                    "type": "if",
                    "line_number": 219
                  },
                  {
                    "type": "if",
                    "line_number": 224
                  },
                  {
                    "type": "if",
                    "line_number": 226
                  },
                  {
                    "type": "if",
                    "line_number": 231
                  },
                  {
                    "type": "if",
                    "line_number": 233
                  },
                  {
                    "type": "for",
                    "line_number": 234
                  },
                  {
                    "type": "if",
                    "line_number": 239
                  },
                  {
                    "type": "if",
                    "line_number": 246
                  },
                  {
                    "type": "if",
                    "line_number": 249
                  },
                  {
                    "type": "if",
                    "line_number": 252
                  }
                ],
                "complexity": 15,
                "inputs": [
                  "actor"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "P_CheckSight",
                  "P_AproxDistance",
                  "P_Random",
                  "if"
                ]
              },
              {
                "name": "P_Move",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 272,
                "end_line": 335,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "tryx",
                    "array_size": null,
                    "line_number": 274
                  },
                  {
                    "type": "fixed_t",
                    "name": "tryy",
                    "array_size": null,
                    "line_number": 275
                  },
                  {
                    "type": "boolean",
                    "name": "try_ok",
                    "array_size": null,
                    "line_number": 281
                  },
                  {
                    "type": "boolean",
                    "name": "good",
                    "array_size": null,
                    "line_number": 282
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 285
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 307
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 311
                  },
                  {
                    "type": "return",
                    "name": "good",
                    "array_size": null,
                    "line_number": 324
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 334
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 284
                  },
                  {
                    "name": "if",
                    "line_number": 287
                  },
                  {
                    "name": "I_Error",
                    "line_number": 288
                  },
                  {
                    "name": "P_TryMove",
                    "line_number": 293
                  },
                  {
                    "name": "if",
                    "line_number": 295
                  },
                  {
                    "name": "if",
                    "line_number": 298
                  },
                  {
                    "name": "if",
                    "line_number": 301
                  },
                  {
                    "name": "if",
                    "line_number": 310
                  },
                  {
                    "name": "while",
                    "line_number": 315
                  },
                  {
                    "name": "if",
                    "line_number": 321
                  },
                  {
                    "name": "P_UseSpecialLine",
                    "line_number": 321
                  },
                  {
                    "name": "if",
                    "line_number": 332
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 284
                  },
                  {
                    "type": "if",
                    "line_number": 287
                  },
                  {
                    "type": "if",
                    "line_number": 295
                  },
                  {
                    "type": "if",
                    "line_number": 298
                  },
                  {
                    "type": "if",
                    "line_number": 301
                  },
                  {
                    "type": "else",
                    "line_number": 303
                  },
                  {
                    "type": "if",
                    "line_number": 310
                  },
                  {
                    "type": "while",
                    "line_number": 315
                  },
                  {
                    "type": "if",
                    "line_number": 318
                  },
                  {
                    "type": "if",
                    "line_number": 321
                  },
                  {
                    "type": "else",
                    "line_number": 326
                  },
                  {
                    "type": "if",
                    "line_number": 332
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "actor"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "while",
                  "if",
                  "P_TryMove",
                  "I_Error",
                  "P_UseSpecialLine"
                ]
              },
              {
                "name": "if",
                "return_type": "open any specials",
                "parameters": [
                  {
                    "type": "actor->flags & MF_FLOAT &&",
                    "name": "floatok"
                  }
                ],
                "start_line": 297,
                "end_line": 307,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 306
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 300
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 300
                  },
                  {
                    "type": "else",
                    "line_number": 302
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "floatok"
                ],
                "outputs": [
                  "open any specials"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "P_TryWalk",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 349,
                "end_line": 358,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 353
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 357
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 351
                  },
                  {
                    "name": "P_Move",
                    "line_number": 351
                  },
                  {
                    "name": "P_Random",
                    "line_number": 356
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 351
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "actor"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "P_Move",
                  "P_Random",
                  "if"
                ]
              },
              {
                "name": "P_NewChaseDir",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 363,
                "end_line": 489,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "deltax",
                    "array_size": null,
                    "line_number": 365
                  },
                  {
                    "type": "fixed_t",
                    "name": "deltay",
                    "array_size": null,
                    "line_number": 366
                  },
                  {
                    "type": "dirtype_t",
                    "name": "d",
                    "array_size": "3",
                    "line_number": 368
                  },
                  {
                    "type": "int",
                    "name": "tdir",
                    "array_size": null,
                    "line_number": 370
                  },
                  {
                    "type": "dirtype_t",
                    "name": "olddir",
                    "array_size": null,
                    "line_number": 371
                  },
                  {
                    "type": "dirtype_t",
                    "name": "turnaround",
                    "array_size": null,
                    "line_number": 373
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 375
                  },
                  {
                    "name": "I_Error",
                    "line_number": 376
                  },
                  {
                    "name": "if",
                    "line_number": 384
                  },
                  {
                    "name": "if",
                    "line_number": 386
                  },
                  {
                    "name": "if",
                    "line_number": 391
                  },
                  {
                    "name": "if",
                    "line_number": 393
                  },
                  {
                    "name": "if",
                    "line_number": 399
                  },
                  {
                    "name": "if",
                    "line_number": 403
                  },
                  {
                    "name": "P_TryWalk",
                    "line_number": 403
                  },
                  {
                    "name": "if",
                    "line_number": 408
                  },
                  {
                    "name": "P_Random",
                    "line_number": 408
                  },
                  {
                    "name": "abs",
                    "line_number": 409
                  },
                  {
                    "name": "abs",
                    "line_number": 409
                  },
                  {
                    "name": "if",
                    "line_number": 416
                  },
                  {
                    "name": "if",
                    "line_number": 418
                  },
                  {
                    "name": "if",
                    "line_number": 421
                  },
                  {
                    "name": "if",
                    "line_number": 424
                  },
                  {
                    "name": "P_TryWalk",
                    "line_number": 424
                  },
                  {
                    "name": "if",
                    "line_number": 431
                  },
                  {
                    "name": "if",
                    "line_number": 435
                  },
                  {
                    "name": "P_TryWalk",
                    "line_number": 435
                  },
                  {
                    "name": "if",
                    "line_number": 441
                  },
                  {
                    "name": "if",
                    "line_number": 445
                  },
                  {
                    "name": "P_TryWalk",
                    "line_number": 445
                  },
                  {
                    "name": "if",
                    "line_number": 450
                  },
                  {
                    "name": "P_Random",
                    "line_number": 450
                  },
                  {
                    "name": "for",
                    "line_number": 452
                  },
                  {
                    "name": "if",
                    "line_number": 456
                  },
                  {
                    "name": "if",
                    "line_number": 460
                  },
                  {
                    "name": "P_TryWalk",
                    "line_number": 460
                  },
                  {
                    "name": "for",
                    "line_number": 467
                  },
                  {
                    "name": "if",
                    "line_number": 471
                  },
                  {
                    "name": "if",
                    "line_number": 475
                  },
                  {
                    "name": "P_TryWalk",
                    "line_number": 475
                  },
                  {
                    "name": "if",
                    "line_number": 481
                  },
                  {
                    "name": "if",
                    "line_number": 484
                  },
                  {
                    "name": "P_TryWalk",
                    "line_number": 484
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 375
                  },
                  {
                    "type": "if",
                    "line_number": 384
                  },
                  {
                    "type": "if",
                    "line_number": 386
                  },
                  {
                    "type": "else",
                    "line_number": 388
                  },
                  {
                    "type": "if",
                    "line_number": 391
                  },
                  {
                    "type": "if",
                    "line_number": 393
                  },
                  {
                    "type": "else",
                    "line_number": 395
                  },
                  {
                    "type": "if",
                    "line_number": 399
                  },
                  {
                    "type": "if",
                    "line_number": 403
                  },
                  {
                    "type": "if",
                    "line_number": 408
                  },
                  {
                    "type": "if",
                    "line_number": 416
                  },
                  {
                    "type": "if",
                    "line_number": 418
                  },
                  {
                    "type": "if",
                    "line_number": 421
                  },
                  {
                    "type": "if",
                    "line_number": 424
                  },
                  {
                    "type": "if",
                    "line_number": 431
                  },
                  {
                    "type": "if",
                    "line_number": 435
                  },
                  {
                    "type": "if",
                    "line_number": 441
                  },
                  {
                    "type": "if",
                    "line_number": 445
                  },
                  {
                    "type": "if",
                    "line_number": 450
                  },
                  {
                    "type": "for",
                    "line_number": 452
                  },
                  {
                    "type": "if",
                    "line_number": 456
                  },
                  {
                    "type": "if",
                    "line_number": 460
                  },
                  {
                    "type": "else",
                    "line_number": 465
                  },
                  {
                    "type": "for",
                    "line_number": 467
                  },
                  {
                    "type": "if",
                    "line_number": 471
                  },
                  {
                    "type": "if",
                    "line_number": 475
                  },
                  {
                    "type": "if",
                    "line_number": 481
                  },
                  {
                    "type": "if",
                    "line_number": 484
                  }
                ],
                "complexity": 26,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "abs",
                  "if",
                  "for",
                  "P_TryWalk",
                  "I_Error",
                  "P_Random"
                ]
              },
              {
                "name": "if",
                "return_type": "try direct route",
                "parameters": [
                  {
                    "type": "d[1] != DI_NODIR && d[2] !=",
                    "name": "DI_NODIR"
                  }
                ],
                "start_line": 398,
                "end_line": 403,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 401
                  },
                  {
                    "name": "P_TryWalk",
                    "line_number": 401
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 401
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "DI_NODIR"
                ],
                "outputs": [
                  "try direct route"
                ],
                "dependencies": [
                  "P_TryWalk",
                  "if"
                ]
              },
              {
                "name": "P_LookForPlayers",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  },
                  {
                    "type": "boolean",
                    "name": "allaround"
                  }
                ],
                "start_line": 498,
                "end_line": 555,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 500
                  },
                  {
                    "type": "int",
                    "name": "stop",
                    "array_size": null,
                    "line_number": 501
                  },
                  {
                    "type": "angle_t",
                    "name": "an",
                    "array_size": null,
                    "line_number": 504
                  },
                  {
                    "type": "fixed_t",
                    "name": "dist",
                    "array_size": null,
                    "line_number": 505
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 521
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 551
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 554
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 512
                  },
                  {
                    "name": "if",
                    "line_number": 514
                  },
                  {
                    "name": "if",
                    "line_number": 517
                  },
                  {
                    "name": "if",
                    "line_number": 526
                  },
                  {
                    "name": "if",
                    "line_number": 529
                  },
                  {
                    "name": "P_CheckSight",
                    "line_number": 529
                  },
                  {
                    "name": "if",
                    "line_number": 532
                  },
                  {
                    "name": "R_PointToAngle2",
                    "line_number": 534
                  },
                  {
                    "name": "if",
                    "line_number": 540
                  },
                  {
                    "name": "P_AproxDistance",
                    "line_number": 542
                  },
                  {
                    "name": "if",
                    "line_number": 545
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 512
                  },
                  {
                    "type": "if",
                    "line_number": 514
                  },
                  {
                    "type": "if",
                    "line_number": 517
                  },
                  {
                    "type": "if",
                    "line_number": 526
                  },
                  {
                    "type": "if",
                    "line_number": 529
                  },
                  {
                    "type": "if",
                    "line_number": 532
                  },
                  {
                    "type": "if",
                    "line_number": 540
                  },
                  {
                    "type": "if",
                    "line_number": 544
                  },
                  {
                    "type": "if",
                    "line_number": 545
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "actor",
                  "allaround"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "P_AproxDistance",
                  "if",
                  "for",
                  "R_PointToAngle2",
                  "P_CheckSight"
                ]
              },
              {
                "name": "if",
                "return_type": "out of sight",
                "parameters": [
                  {
                    "type": "",
                    "name": "!allaround"
                  }
                ],
                "start_line": 533,
                "end_line": 549,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "R_PointToAngle2",
                    "line_number": 535
                  },
                  {
                    "name": "if",
                    "line_number": 541
                  },
                  {
                    "name": "P_AproxDistance",
                    "line_number": 543
                  },
                  {
                    "name": "if",
                    "line_number": 546
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 541
                  },
                  {
                    "type": "if",
                    "line_number": 545
                  },
                  {
                    "type": "if",
                    "line_number": 546
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "!allaround"
                ],
                "outputs": [
                  "out of sight"
                ],
                "dependencies": [
                  "if",
                  "P_AproxDistance",
                  "R_PointToAngle2"
                ]
              },
              {
                "name": "A_KeenDie",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 566,
                "end_line": 593,
                "local_variables": [
                  {
                    "type": "line_t",
                    "name": "junk",
                    "array_size": null,
                    "line_number": 570
                  }
                ],
                "function_calls": [
                  {
                    "name": "A_Fall",
                    "line_number": 572
                  },
                  {
                    "name": "for",
                    "line_number": 576
                  },
                  {
                    "name": "if",
                    "line_number": 578
                  },
                  {
                    "name": "if",
                    "line_number": 582
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 592
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 575
                  },
                  {
                    "type": "for",
                    "line_number": 576
                  },
                  {
                    "type": "if",
                    "line_number": 578
                  },
                  {
                    "type": "if",
                    "line_number": 582
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "A_Fall",
                  "if",
                  "EV_DoDoor",
                  "for"
                ]
              },
              {
                "name": "for",
                "return_type": "to see if all Keens are dead",
                "parameters": [
                  {
                    "type": "th = thinkercap.next ; th != &thinkercap ;",
                    "name": "th=th->next"
                  }
                ],
                "start_line": 575,
                "end_line": 588,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 577
                  },
                  {
                    "name": "if",
                    "line_number": 581
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 577
                  },
                  {
                    "type": "if",
                    "line_number": 581
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "th=th->next"
                ],
                "outputs": [
                  "to see if all Keens are dead"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "A_Look",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 604,
                "end_line": 664,
                "local_variables": [
                  {
                    "type": "goto",
                    "name": "seeyou",
                    "array_size": null,
                    "line_number": 619
                  },
                  {
                    "type": "goto",
                    "name": "seeyou",
                    "array_size": null,
                    "line_number": 622
                  },
                  {
                    "type": "int",
                    "name": "sound",
                    "array_size": null,
                    "line_number": 633
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 611
                  },
                  {
                    "name": "if",
                    "line_number": 616
                  },
                  {
                    "name": "if",
                    "line_number": 618
                  },
                  {
                    "name": "P_CheckSight",
                    "line_number": 618
                  },
                  {
                    "name": "if",
                    "line_number": 626
                  },
                  {
                    "name": "P_LookForPlayers",
                    "line_number": 626
                  },
                  {
                    "name": "if",
                    "line_number": 631
                  },
                  {
                    "name": "switch",
                    "line_number": 635
                  },
                  {
                    "name": "P_Random",
                    "line_number": 640
                  },
                  {
                    "name": "P_Random",
                    "line_number": 645
                  },
                  {
                    "name": "if",
                    "line_number": 653
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 657
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 660
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 663
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 611
                  },
                  {
                    "type": "if",
                    "line_number": 616
                  },
                  {
                    "type": "if",
                    "line_number": 618
                  },
                  {
                    "type": "else",
                    "line_number": 621
                  },
                  {
                    "type": "if",
                    "line_number": 626
                  },
                  {
                    "type": "if",
                    "line_number": 631
                  },
                  {
                    "type": "if",
                    "line_number": 653
                  },
                  {
                    "type": "else",
                    "line_number": 659
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_SetMobjState",
                  "P_Random",
                  "P_LookForPlayers",
                  "P_CheckSight",
                  "S_StartSound",
                  "switch"
                ]
              },
              {
                "name": "A_Chase",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 672,
                "end_line": 776,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "delta",
                    "array_size": null,
                    "line_number": 674
                  },
                  {
                    "type": "goto",
                    "name": "nomissile",
                    "array_size": null,
                    "line_number": 741
                  },
                  {
                    "type": "goto",
                    "name": "nomissile",
                    "array_size": null,
                    "line_number": 745
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 676
                  },
                  {
                    "name": "if",
                    "line_number": 681
                  },
                  {
                    "name": "if",
                    "line_number": 683
                  },
                  {
                    "name": "if",
                    "line_number": 693
                  },
                  {
                    "name": "if",
                    "line_number": 698
                  },
                  {
                    "name": "if",
                    "line_number": 700
                  },
                  {
                    "name": "if",
                    "line_number": 704
                  },
                  {
                    "name": "if",
                    "line_number": 708
                  },
                  {
                    "name": "P_LookForPlayers",
                    "line_number": 708
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 711
                  },
                  {
                    "name": "if",
                    "line_number": 716
                  },
                  {
                    "name": "if",
                    "line_number": 719
                  },
                  {
                    "name": "P_NewChaseDir",
                    "line_number": 720
                  },
                  {
                    "name": "if",
                    "line_number": 725
                  },
                  {
                    "name": "P_CheckMeleeRange",
                    "line_number": 726
                  },
                  {
                    "name": "if",
                    "line_number": 728
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 729
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 731
                  },
                  {
                    "name": "if",
                    "line_number": 736
                  },
                  {
                    "name": "if",
                    "line_number": 738
                  },
                  {
                    "name": "if",
                    "line_number": 744
                  },
                  {
                    "name": "P_CheckMissileRange",
                    "line_number": 744
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 747
                  },
                  {
                    "name": "if",
                    "line_number": 755
                  },
                  {
                    "name": "P_CheckSight",
                    "line_number": 757
                  },
                  {
                    "name": "if",
                    "line_number": 759
                  },
                  {
                    "name": "P_LookForPlayers",
                    "line_number": 759
                  },
                  {
                    "name": "if",
                    "line_number": 764
                  },
                  {
                    "name": "P_Move",
                    "line_number": 765
                  },
                  {
                    "name": "P_NewChaseDir",
                    "line_number": 767
                  },
                  {
                    "name": "if",
                    "line_number": 771
                  },
                  {
                    "name": "P_Random",
                    "line_number": 772
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 774
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 676
                  },
                  {
                    "type": "if",
                    "line_number": 681
                  },
                  {
                    "type": "if",
                    "line_number": 683
                  },
                  {
                    "type": "else",
                    "line_number": 688
                  },
                  {
                    "type": "if",
                    "line_number": 692
                  },
                  {
                    "type": "if",
                    "line_number": 693
                  },
                  {
                    "type": "if",
                    "line_number": 698
                  },
                  {
                    "type": "if",
                    "line_number": 700
                  },
                  {
                    "type": "if",
                    "line_number": 704
                  },
                  {
                    "type": "for",
                    "line_number": 707
                  },
                  {
                    "type": "if",
                    "line_number": 708
                  },
                  {
                    "type": "if",
                    "line_number": 716
                  },
                  {
                    "type": "if",
                    "line_number": 719
                  },
                  {
                    "type": "for",
                    "line_number": 724
                  },
                  {
                    "type": "if",
                    "line_number": 725
                  },
                  {
                    "type": "if",
                    "line_number": 728
                  },
                  {
                    "type": "for",
                    "line_number": 735
                  },
                  {
                    "type": "if",
                    "line_number": 736
                  },
                  {
                    "type": "if",
                    "line_number": 738
                  },
                  {
                    "type": "if",
                    "line_number": 744
                  },
                  {
                    "type": "if",
                    "line_number": 755
                  },
                  {
                    "type": "if",
                    "line_number": 759
                  },
                  {
                    "type": "if",
                    "line_number": 764
                  },
                  {
                    "type": "if",
                    "line_number": 771
                  }
                ],
                "complexity": 27,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_SetMobjState",
                  "P_CheckMissileRange",
                  "P_Random",
                  "P_NewChaseDir",
                  "P_Move",
                  "P_LookForPlayers",
                  "P_CheckMeleeRange",
                  "S_StartSound",
                  "P_CheckSight"
                ]
              },
              {
                "name": "if",
                "return_type": "modify target threshold",
                "parameters": [
                  {
                    "type": "",
                    "name": "actor->threshold"
                  }
                ],
                "start_line": 680,
                "end_line": 689,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 682
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 682
                  },
                  {
                    "type": "else",
                    "line_number": 687
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "actor->threshold"
                ],
                "outputs": [
                  "modify target threshold"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "turn towards movement direction if not there yet",
                "parameters": [
                  {
                    "type": "actor->movedir <",
                    "name": "8"
                  }
                ],
                "start_line": 692,
                "end_line": 701,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 697
                  },
                  {
                    "name": "if",
                    "line_number": 699
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 697
                  },
                  {
                    "type": "if",
                    "line_number": 699
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "8"
                ],
                "outputs": [
                  "turn towards movement direction if not there yet"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "do not attack twice in a row",
                "parameters": [
                  {
                    "type": "actor->flags &",
                    "name": "MF_JUSTATTACKED"
                  }
                ],
                "start_line": 715,
                "end_line": 721,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 718
                  },
                  {
                    "name": "P_NewChaseDir",
                    "line_number": 719
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 718
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "MF_JUSTATTACKED"
                ],
                "outputs": [
                  "do not attack twice in a row"
                ],
                "dependencies": [
                  "P_NewChaseDir",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "check for missile attack",
                "parameters": [
                  {
                    "type": "",
                    "name": "actor->info->missilestate"
                  }
                ],
                "start_line": 735,
                "end_line": 749,
                "local_variables": [
                  {
                    "type": "goto",
                    "name": "nomissile",
                    "array_size": null,
                    "line_number": 740
                  },
                  {
                    "type": "goto",
                    "name": "nomissile",
                    "array_size": null,
                    "line_number": 744
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 737
                  },
                  {
                    "name": "if",
                    "line_number": 743
                  },
                  {
                    "name": "P_CheckMissileRange",
                    "line_number": 743
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 746
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 737
                  },
                  {
                    "type": "if",
                    "line_number": 743
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "actor->info->missilestate"
                ],
                "outputs": [
                  "check for missile attack"
                ],
                "dependencies": [
                  "P_SetMobjState",
                  "P_CheckMissileRange",
                  "if"
                ]
              },
              {
                "name": "A_FaceTarget",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 782,
                "end_line": 796,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 784
                  },
                  {
                    "name": "R_PointToAngle2",
                    "line_number": 789
                  },
                  {
                    "name": "if",
                    "line_number": 794
                  },
                  {
                    "name": "P_Random",
                    "line_number": 795
                  },
                  {
                    "name": "P_Random",
                    "line_number": 795
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 784
                  },
                  {
                    "type": "if",
                    "line_number": 794
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "R_PointToAngle2",
                  "P_Random",
                  "if"
                ]
              },
              {
                "name": "A_PosAttack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 802,
                "end_line": 819,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 804
                  },
                  {
                    "type": "int",
                    "name": "damage",
                    "array_size": null,
                    "line_number": 805
                  },
                  {
                    "type": "int",
                    "name": "slope",
                    "array_size": null,
                    "line_number": 806
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 808
                  },
                  {
                    "name": "A_FaceTarget",
                    "line_number": 811
                  },
                  {
                    "name": "P_AimLineAttack",
                    "line_number": 813
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 815
                  },
                  {
                    "name": "P_Random",
                    "line_number": 816
                  },
                  {
                    "name": "P_Random",
                    "line_number": 816
                  },
                  {
                    "name": "P_Random",
                    "line_number": 817
                  },
                  {
                    "name": "P_LineAttack",
                    "line_number": 818
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 808
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_Random",
                  "S_StartSound",
                  "A_FaceTarget",
                  "P_AimLineAttack",
                  "P_LineAttack"
                ]
              },
              {
                "name": "A_SPosAttack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 821,
                "end_line": 843,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 823
                  },
                  {
                    "type": "int",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 824
                  },
                  {
                    "type": "int",
                    "name": "bangle",
                    "array_size": null,
                    "line_number": 825
                  },
                  {
                    "type": "int",
                    "name": "damage",
                    "array_size": null,
                    "line_number": 826
                  },
                  {
                    "type": "int",
                    "name": "slope",
                    "array_size": null,
                    "line_number": 827
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 829
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 832
                  },
                  {
                    "name": "A_FaceTarget",
                    "line_number": 833
                  },
                  {
                    "name": "P_AimLineAttack",
                    "line_number": 835
                  },
                  {
                    "name": "for",
                    "line_number": 837
                  },
                  {
                    "name": "P_Random",
                    "line_number": 839
                  },
                  {
                    "name": "P_Random",
                    "line_number": 839
                  },
                  {
                    "name": "P_Random",
                    "line_number": 840
                  },
                  {
                    "name": "P_LineAttack",
                    "line_number": 841
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 829
                  },
                  {
                    "type": "for",
                    "line_number": 837
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "if",
                  "P_Random",
                  "S_StartSound",
                  "A_FaceTarget",
                  "P_AimLineAttack",
                  "P_LineAttack"
                ]
              },
              {
                "name": "A_CPosAttack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 845,
                "end_line": 863,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 847
                  },
                  {
                    "type": "int",
                    "name": "bangle",
                    "array_size": null,
                    "line_number": 848
                  },
                  {
                    "type": "int",
                    "name": "damage",
                    "array_size": null,
                    "line_number": 849
                  },
                  {
                    "type": "int",
                    "name": "slope",
                    "array_size": null,
                    "line_number": 850
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 852
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 855
                  },
                  {
                    "name": "A_FaceTarget",
                    "line_number": 856
                  },
                  {
                    "name": "P_AimLineAttack",
                    "line_number": 858
                  },
                  {
                    "name": "P_Random",
                    "line_number": 860
                  },
                  {
                    "name": "P_Random",
                    "line_number": 860
                  },
                  {
                    "name": "P_Random",
                    "line_number": 861
                  },
                  {
                    "name": "P_LineAttack",
                    "line_number": 862
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 852
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_Random",
                  "S_StartSound",
                  "A_FaceTarget",
                  "P_AimLineAttack",
                  "P_LineAttack"
                ]
              },
              {
                "name": "A_CPosRefire",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 865,
                "end_line": 879,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "A_FaceTarget",
                    "line_number": 868
                  },
                  {
                    "name": "if",
                    "line_number": 870
                  },
                  {
                    "name": "P_Random",
                    "line_number": 870
                  },
                  {
                    "name": "if",
                    "line_number": 873
                  },
                  {
                    "name": "P_CheckSight",
                    "line_number": 875
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 877
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 870
                  },
                  {
                    "type": "if",
                    "line_number": 873
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_SetMobjState",
                  "P_Random",
                  "P_CheckSight",
                  "A_FaceTarget"
                ]
              },
              {
                "name": "A_SpidRefire",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 882,
                "end_line": 896,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "A_FaceTarget",
                    "line_number": 885
                  },
                  {
                    "name": "if",
                    "line_number": 887
                  },
                  {
                    "name": "P_Random",
                    "line_number": 887
                  },
                  {
                    "name": "if",
                    "line_number": 890
                  },
                  {
                    "name": "P_CheckSight",
                    "line_number": 892
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 894
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 887
                  },
                  {
                    "type": "if",
                    "line_number": 890
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_SetMobjState",
                  "P_Random",
                  "P_CheckSight",
                  "A_FaceTarget"
                ]
              },
              {
                "name": "A_BspiAttack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t",
                    "name": "*actor"
                  }
                ],
                "start_line": 898,
                "end_line": 907,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 900
                  },
                  {
                    "name": "A_FaceTarget",
                    "line_number": 903
                  },
                  {
                    "name": "P_SpawnMissile",
                    "line_number": 906
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 900
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "*actor"
                ],
                "outputs": [],
                "dependencies": [
                  "A_FaceTarget",
                  "P_SpawnMissile",
                  "if"
                ]
              },
              {
                "name": "A_TroopAttack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 913,
                "end_line": 932,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "damage",
                    "array_size": null,
                    "line_number": 915
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 917
                  },
                  {
                    "name": "A_FaceTarget",
                    "line_number": 920
                  },
                  {
                    "name": "if",
                    "line_number": 921
                  },
                  {
                    "name": "P_CheckMeleeRange",
                    "line_number": 921
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 923
                  },
                  {
                    "name": "P_Random",
                    "line_number": 924
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 925
                  },
                  {
                    "name": "P_SpawnMissile",
                    "line_number": 931
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 917
                  },
                  {
                    "type": "if",
                    "line_number": 921
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_DamageMobj",
                  "P_Random",
                  "P_SpawnMissile",
                  "P_CheckMeleeRange",
                  "S_StartSound",
                  "A_FaceTarget"
                ]
              },
              {
                "name": "A_SargAttack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 935,
                "end_line": 948,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "damage",
                    "array_size": null,
                    "line_number": 937
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 939
                  },
                  {
                    "name": "A_FaceTarget",
                    "line_number": 942
                  },
                  {
                    "name": "if",
                    "line_number": 943
                  },
                  {
                    "name": "P_CheckMeleeRange",
                    "line_number": 943
                  },
                  {
                    "name": "P_Random",
                    "line_number": 945
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 946
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 939
                  },
                  {
                    "type": "if",
                    "line_number": 943
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_DamageMobj",
                  "P_Random",
                  "P_CheckMeleeRange",
                  "A_FaceTarget"
                ]
              },
              {
                "name": "A_HeadAttack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 950,
                "end_line": 967,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "damage",
                    "array_size": null,
                    "line_number": 952
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 954
                  },
                  {
                    "name": "A_FaceTarget",
                    "line_number": 957
                  },
                  {
                    "name": "if",
                    "line_number": 958
                  },
                  {
                    "name": "P_CheckMeleeRange",
                    "line_number": 958
                  },
                  {
                    "name": "P_Random",
                    "line_number": 960
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 961
                  },
                  {
                    "name": "P_SpawnMissile",
                    "line_number": 966
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 954
                  },
                  {
                    "type": "if",
                    "line_number": 958
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_DamageMobj",
                  "P_Random",
                  "P_SpawnMissile",
                  "P_CheckMeleeRange",
                  "A_FaceTarget"
                ]
              },
              {
                "name": "A_CyberAttack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 969,
                "end_line": 976,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 971
                  },
                  {
                    "name": "A_FaceTarget",
                    "line_number": 974
                  },
                  {
                    "name": "P_SpawnMissile",
                    "line_number": 975
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 971
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "A_FaceTarget",
                  "P_SpawnMissile",
                  "if"
                ]
              },
              {
                "name": "A_BruisAttack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 979,
                "end_line": 996,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "damage",
                    "array_size": null,
                    "line_number": 981
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 983
                  },
                  {
                    "name": "if",
                    "line_number": 986
                  },
                  {
                    "name": "P_CheckMeleeRange",
                    "line_number": 986
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 988
                  },
                  {
                    "name": "P_Random",
                    "line_number": 989
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 990
                  },
                  {
                    "name": "P_SpawnMissile",
                    "line_number": 995
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 983
                  },
                  {
                    "type": "if",
                    "line_number": 986
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_DamageMobj",
                  "P_Random",
                  "P_SpawnMissile",
                  "P_CheckMeleeRange",
                  "S_StartSound"
                ]
              },
              {
                "name": "A_SkelMissile",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1002,
                "end_line": 1017,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1006
                  },
                  {
                    "name": "A_FaceTarget",
                    "line_number": 1009
                  },
                  {
                    "name": "P_SpawnMissile",
                    "line_number": 1011
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1006
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "A_FaceTarget",
                  "P_SpawnMissile",
                  "if"
                ]
              },
              {
                "name": "A_Tracer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1021,
                "end_line": 1090,
                "local_variables": [
                  {
                    "type": "angle_t",
                    "name": "exact",
                    "array_size": null,
                    "line_number": 1023
                  },
                  {
                    "type": "fixed_t",
                    "name": "dist",
                    "array_size": null,
                    "line_number": 1024
                  },
                  {
                    "type": "fixed_t",
                    "name": "slope",
                    "array_size": null,
                    "line_number": 1025
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1029
                  },
                  {
                    "name": "P_SpawnPuff",
                    "line_number": 1033
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 1035
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1040
                  },
                  {
                    "name": "if",
                    "line_number": 1041
                  },
                  {
                    "name": "if",
                    "line_number": 1047
                  },
                  {
                    "name": "R_PointToAngle2",
                    "line_number": 1051
                  },
                  {
                    "name": "if",
                    "line_number": 1056
                  },
                  {
                    "name": "if",
                    "line_number": 1058
                  },
                  {
                    "name": "if",
                    "line_number": 1061
                  },
                  {
                    "name": "if",
                    "line_number": 1067
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1073
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1074
                  },
                  {
                    "name": "P_AproxDistance",
                    "line_number": 1077
                  },
                  {
                    "name": "if",
                    "line_number": 1082
                  },
                  {
                    "name": "if",
                    "line_number": 1086
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1029
                  },
                  {
                    "type": "if",
                    "line_number": 1041
                  },
                  {
                    "type": "if",
                    "line_number": 1047
                  },
                  {
                    "type": "if",
                    "line_number": 1056
                  },
                  {
                    "type": "if",
                    "line_number": 1058
                  },
                  {
                    "type": "if",
                    "line_number": 1061
                  },
                  {
                    "type": "else",
                    "line_number": 1064
                  },
                  {
                    "type": "if",
                    "line_number": 1067
                  },
                  {
                    "type": "if",
                    "line_number": 1082
                  },
                  {
                    "type": "if",
                    "line_number": 1086
                  },
                  {
                    "type": "else",
                    "line_number": 1088
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SpawnPuff",
                  "P_AproxDistance",
                  "if",
                  "P_SpawnMobj",
                  "P_Random",
                  "R_PointToAngle2",
                  "FixedMul"
                ]
              },
              {
                "name": "A_SkelWhoosh",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1093,
                "end_line": 1099,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1095
                  },
                  {
                    "name": "A_FaceTarget",
                    "line_number": 1097
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1098
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1095
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "A_FaceTarget",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "A_SkelFist",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1101,
                "end_line": 1116,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "damage",
                    "array_size": null,
                    "line_number": 1103
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1105
                  },
                  {
                    "name": "A_FaceTarget",
                    "line_number": 1108
                  },
                  {
                    "name": "if",
                    "line_number": 1110
                  },
                  {
                    "name": "P_CheckMeleeRange",
                    "line_number": 1110
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1112
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1113
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 1114
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1105
                  },
                  {
                    "type": "if",
                    "line_number": 1110
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_DamageMobj",
                  "P_Random",
                  "P_CheckMeleeRange",
                  "S_StartSound",
                  "A_FaceTarget"
                ]
              },
              {
                "name": "PIT_VileCheck",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  }
                ],
                "start_line": 1129,
                "end_line": 1159,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "maxdist",
                    "array_size": null,
                    "line_number": 1131
                  },
                  {
                    "type": "boolean",
                    "name": "check",
                    "array_size": null,
                    "line_number": 1132
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1135
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1138
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1141
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1147
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1156
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 1158
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1134
                  },
                  {
                    "name": "if",
                    "line_number": 1137
                  },
                  {
                    "name": "if",
                    "line_number": 1140
                  },
                  {
                    "name": "if",
                    "line_number": 1145
                  },
                  {
                    "name": "abs",
                    "line_number": 1145
                  },
                  {
                    "name": "abs",
                    "line_number": 1146
                  },
                  {
                    "name": "P_CheckPosition",
                    "line_number": 1152
                  },
                  {
                    "name": "if",
                    "line_number": 1155
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1134
                  },
                  {
                    "type": "if",
                    "line_number": 1137
                  },
                  {
                    "type": "if",
                    "line_number": 1140
                  },
                  {
                    "type": "if",
                    "line_number": 1145
                  },
                  {
                    "type": "if",
                    "line_number": 1155
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "thing"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "abs",
                  "P_CheckPosition",
                  "if"
                ]
              },
              {
                "name": "A_VileChase",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1167,
                "end_line": 1227,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "xl",
                    "array_size": null,
                    "line_number": 1169
                  },
                  {
                    "type": "int",
                    "name": "xh",
                    "array_size": null,
                    "line_number": 1170
                  },
                  {
                    "type": "int",
                    "name": "yl",
                    "array_size": null,
                    "line_number": 1171
                  },
                  {
                    "type": "int",
                    "name": "yh",
                    "array_size": null,
                    "line_number": 1172
                  },
                  {
                    "type": "int",
                    "name": "bx",
                    "array_size": null,
                    "line_number": 1174
                  },
                  {
                    "type": "int",
                    "name": "by",
                    "array_size": null,
                    "line_number": 1175
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1180
                  },
                  {
                    "name": "for",
                    "line_number": 1194
                  },
                  {
                    "name": "for",
                    "line_number": 1196
                  },
                  {
                    "name": "if",
                    "line_number": 1201
                  },
                  {
                    "name": "P_BlockThingsIterator",
                    "line_number": 1201
                  },
                  {
                    "name": "A_FaceTarget",
                    "line_number": 1206
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 1209
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1210
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 1213
                  },
                  {
                    "name": "A_Chase",
                    "line_number": 1226
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1180
                  },
                  {
                    "type": "for",
                    "line_number": 1182
                  },
                  {
                    "type": "for",
                    "line_number": 1194
                  },
                  {
                    "type": "for",
                    "line_number": 1196
                  },
                  {
                    "type": "if",
                    "line_number": 1201
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "A_Chase",
                  "for",
                  "if",
                  "P_SetMobjState",
                  "P_BlockThingsIterator",
                  "S_StartSound",
                  "A_FaceTarget"
                ]
              },
              {
                "name": "A_VileStart",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1233,
                "end_line": 1236,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 1235
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "S_StartSound"
                ]
              },
              {
                "name": "A_StartFire",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1245,
                "end_line": 1249,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 1247
                  },
                  {
                    "name": "A_Fire",
                    "line_number": 1248
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "A_Fire",
                  "S_StartSound"
                ]
              },
              {
                "name": "A_FireCrackle",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1251,
                "end_line": 1255,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 1253
                  },
                  {
                    "name": "A_Fire",
                    "line_number": 1254
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "A_Fire",
                  "S_StartSound"
                ]
              },
              {
                "name": "A_Fire",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1257,
                "end_line": 1277,
                "local_variables": [
                  {
                    "type": "unsigned",
                    "name": "an",
                    "array_size": null,
                    "line_number": 1260
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1263
                  },
                  {
                    "name": "if",
                    "line_number": 1267
                  },
                  {
                    "name": "P_CheckSight",
                    "line_number": 1267
                  },
                  {
                    "name": "P_UnsetThingPosition",
                    "line_number": 1272
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1273
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1274
                  },
                  {
                    "name": "P_SetThingPosition",
                    "line_number": 1276
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1263
                  },
                  {
                    "type": "if",
                    "line_number": 1266
                  },
                  {
                    "type": "if",
                    "line_number": 1267
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_UnsetThingPosition",
                  "P_SetThingPosition",
                  "P_CheckSight",
                  "FixedMul"
                ]
              },
              {
                "name": "A_VileTarget",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1285,
                "end_line": 1302,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1289
                  },
                  {
                    "name": "A_FaceTarget",
                    "line_number": 1292
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 1294
                  },
                  {
                    "name": "A_Fire",
                    "line_number": 1301
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1289
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "A_FaceTarget",
                  "P_SpawnMobj",
                  "A_Fire",
                  "if"
                ]
              },
              {
                "name": "A_VileAttack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1310,
                "end_line": 1338,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "an",
                    "array_size": null,
                    "line_number": 1313
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1315
                  },
                  {
                    "name": "A_FaceTarget",
                    "line_number": 1318
                  },
                  {
                    "name": "if",
                    "line_number": 1320
                  },
                  {
                    "name": "P_CheckSight",
                    "line_number": 1320
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1323
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 1324
                  },
                  {
                    "name": "if",
                    "line_number": 1331
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1335
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1336
                  },
                  {
                    "name": "P_RadiusAttack",
                    "line_number": 1337
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1315
                  },
                  {
                    "type": "if",
                    "line_number": 1320
                  },
                  {
                    "type": "if",
                    "line_number": 1331
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_DamageMobj",
                  "P_CheckSight",
                  "S_StartSound",
                  "A_FaceTarget",
                  "P_RadiusAttack",
                  "FixedMul"
                ]
              },
              {
                "name": "A_FatRaise",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t",
                    "name": "*actor"
                  }
                ],
                "start_line": 1351,
                "end_line": 1355,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "A_FaceTarget",
                    "line_number": 1353
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1354
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "*actor"
                ],
                "outputs": [],
                "dependencies": [
                  "A_FaceTarget",
                  "S_StartSound"
                ]
              },
              {
                "name": "A_FatAttack1",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1358,
                "end_line": 1373,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "an",
                    "array_size": null,
                    "line_number": 1361
                  }
                ],
                "function_calls": [
                  {
                    "name": "A_FaceTarget",
                    "line_number": 1363
                  },
                  {
                    "name": "P_SpawnMissile",
                    "line_number": 1366
                  },
                  {
                    "name": "P_SpawnMissile",
                    "line_number": 1368
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1371
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1372
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "A_FaceTarget",
                  "FixedMul",
                  "P_SpawnMissile"
                ]
              },
              {
                "name": "A_FatAttack2",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1375,
                "end_line": 1390,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "an",
                    "array_size": null,
                    "line_number": 1378
                  }
                ],
                "function_calls": [
                  {
                    "name": "A_FaceTarget",
                    "line_number": 1380
                  },
                  {
                    "name": "P_SpawnMissile",
                    "line_number": 1383
                  },
                  {
                    "name": "P_SpawnMissile",
                    "line_number": 1385
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1388
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1389
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "A_FaceTarget",
                  "FixedMul",
                  "P_SpawnMissile"
                ]
              },
              {
                "name": "A_FatAttack3",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1392,
                "end_line": 1410,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "an",
                    "array_size": null,
                    "line_number": 1395
                  }
                ],
                "function_calls": [
                  {
                    "name": "A_FaceTarget",
                    "line_number": 1397
                  },
                  {
                    "name": "P_SpawnMissile",
                    "line_number": 1399
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1402
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1403
                  },
                  {
                    "name": "P_SpawnMissile",
                    "line_number": 1405
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1408
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1409
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "A_FaceTarget",
                  "FixedMul",
                  "P_SpawnMissile"
                ]
              },
              {
                "name": "A_SkullAttack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1419,
                "end_line": 1442,
                "local_variables": [
                  {
                    "type": "angle_t",
                    "name": "an",
                    "array_size": null,
                    "line_number": 1422
                  },
                  {
                    "type": "int",
                    "name": "dist",
                    "array_size": null,
                    "line_number": 1423
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1425
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1431
                  },
                  {
                    "name": "A_FaceTarget",
                    "line_number": 1432
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1434
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1435
                  },
                  {
                    "name": "P_AproxDistance",
                    "line_number": 1436
                  },
                  {
                    "name": "if",
                    "line_number": 1439
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1425
                  },
                  {
                    "type": "if",
                    "line_number": 1439
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "P_AproxDistance",
                  "if",
                  "S_StartSound",
                  "A_FaceTarget",
                  "FixedMul"
                ]
              },
              {
                "name": "A_PainShootSkull",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  },
                  {
                    "type": "angle_t",
                    "name": "angle"
                  }
                ],
                "start_line": 1449,
                "end_line": 1502,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "x",
                    "array_size": null,
                    "line_number": 1451
                  },
                  {
                    "type": "fixed_t",
                    "name": "y",
                    "array_size": null,
                    "line_number": 1452
                  },
                  {
                    "type": "fixed_t",
                    "name": "z",
                    "array_size": null,
                    "line_number": 1453
                  },
                  {
                    "type": "angle_t",
                    "name": "an",
                    "array_size": null,
                    "line_number": 1456
                  },
                  {
                    "type": "int",
                    "name": "prestep",
                    "array_size": null,
                    "line_number": 1457
                  },
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 1458
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 1465
                  },
                  {
                    "name": "if",
                    "line_number": 1467
                  },
                  {
                    "name": "if",
                    "line_number": 1475
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1486
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1487
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 1490
                  },
                  {
                    "name": "if",
                    "line_number": 1493
                  },
                  {
                    "name": "P_TryMove",
                    "line_number": 1493
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 1496
                  },
                  {
                    "name": "A_SkullAttack",
                    "line_number": 1501
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 1465
                  },
                  {
                    "type": "if",
                    "line_number": 1467
                  },
                  {
                    "type": "if",
                    "line_number": 1473
                  },
                  {
                    "type": "if",
                    "line_number": 1475
                  },
                  {
                    "type": "for",
                    "line_number": 1479
                  },
                  {
                    "type": "for",
                    "line_number": 1492
                  },
                  {
                    "type": "if",
                    "line_number": 1493
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "actor",
                  "angle"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "A_SkullAttack",
                  "if",
                  "P_DamageMobj",
                  "P_SpawnMobj",
                  "P_TryMove",
                  "FixedMul"
                ]
              },
              {
                "name": "A_PainAttack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1512,
                "end_line": 1519,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1514
                  },
                  {
                    "name": "A_FaceTarget",
                    "line_number": 1517
                  },
                  {
                    "name": "A_PainShootSkull",
                    "line_number": 1518
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1514
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "A_FaceTarget",
                  "A_PainShootSkull",
                  "if"
                ]
              },
              {
                "name": "A_PainDie",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1522,
                "end_line": 1528,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "A_Fall",
                    "line_number": 1524
                  },
                  {
                    "name": "A_PainShootSkull",
                    "line_number": 1525
                  },
                  {
                    "name": "A_PainShootSkull",
                    "line_number": 1526
                  },
                  {
                    "name": "A_PainShootSkull",
                    "line_number": 1527
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "A_Fall",
                  "A_PainShootSkull"
                ]
              },
              {
                "name": "A_Scream",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1535,
                "end_line": 1569,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "sound",
                    "array_size": null,
                    "line_number": 1537
                  }
                ],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 1539
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1547
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1552
                  },
                  {
                    "name": "if",
                    "line_number": 1561
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1565
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1568
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1560
                  },
                  {
                    "type": "if",
                    "line_number": 1561
                  },
                  {
                    "type": "else",
                    "line_number": 1567
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "switch",
                  "S_StartSound",
                  "P_Random",
                  "if"
                ]
              },
              {
                "name": "A_XScream",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1572,
                "end_line": 1575,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 1574
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "S_StartSound"
                ]
              },
              {
                "name": "A_Pain",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "actor"
                  }
                ],
                "start_line": 1577,
                "end_line": 1581,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1579
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1580
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1579
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "actor"
                ],
                "outputs": [],
                "dependencies": [
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "A_Fall",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t",
                    "name": "*actor"
                  }
                ],
                "start_line": 1585,
                "end_line": 1592,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1590
                  }
                ],
                "complexity": 1,
                "inputs": [
                  "*actor"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "A_Explode",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "thingy"
                  }
                ],
                "start_line": 1598,
                "end_line": 1601,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_RadiusAttack",
                    "line_number": 1600
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "thingy"
                ],
                "outputs": [],
                "dependencies": [
                  "P_RadiusAttack"
                ]
              },
              {
                "name": "A_BossDeath",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 1609,
                "end_line": 1756,
                "local_variables": [
                  {
                    "type": "line_t",
                    "name": "junk",
                    "array_size": null,
                    "line_number": 1613
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1614
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1616
                  },
                  {
                    "name": "if",
                    "line_number": 1618
                  },
                  {
                    "name": "if",
                    "line_number": 1621
                  },
                  {
                    "name": "switch",
                    "line_number": 1627
                  },
                  {
                    "name": "if",
                    "line_number": 1630
                  },
                  {
                    "name": "if",
                    "line_number": 1633
                  },
                  {
                    "name": "if",
                    "line_number": 1638
                  },
                  {
                    "name": "if",
                    "line_number": 1641
                  },
                  {
                    "name": "if",
                    "line_number": 1646
                  },
                  {
                    "name": "if",
                    "line_number": 1649
                  },
                  {
                    "name": "switch",
                    "line_number": 1655
                  },
                  {
                    "name": "if",
                    "line_number": 1658
                  },
                  {
                    "name": "if",
                    "line_number": 1663
                  },
                  {
                    "name": "if",
                    "line_number": 1674
                  },
                  {
                    "name": "for",
                    "line_number": 1683
                  },
                  {
                    "name": "if",
                    "line_number": 1684
                  },
                  {
                    "name": "if",
                    "line_number": 1687
                  },
                  {
                    "name": "for",
                    "line_number": 1692
                  },
                  {
                    "name": "if",
                    "line_number": 1694
                  },
                  {
                    "name": "if",
                    "line_number": 1698
                  },
                  {
                    "name": "if",
                    "line_number": 1708
                  },
                  {
                    "name": "if",
                    "line_number": 1710
                  },
                  {
                    "name": "if",
                    "line_number": 1712
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 1715
                  },
                  {
                    "name": "if",
                    "line_number": 1719
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 1722
                  },
                  {
                    "name": "switch",
                    "line_number": 1729
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 1733
                  },
                  {
                    "name": "switch",
                    "line_number": 1738
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 1742
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 1748
                  },
                  {
                    "name": "G_ExitLevel",
                    "line_number": 1755
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1616
                  },
                  {
                    "type": "if",
                    "line_number": 1618
                  },
                  {
                    "type": "if",
                    "line_number": 1621
                  },
                  {
                    "type": "else",
                    "line_number": 1625
                  },
                  {
                    "type": "if",
                    "line_number": 1630
                  },
                  {
                    "type": "if",
                    "line_number": 1633
                  },
                  {
                    "type": "if",
                    "line_number": 1638
                  },
                  {
                    "type": "if",
                    "line_number": 1641
                  },
                  {
                    "type": "if",
                    "line_number": 1646
                  },
                  {
                    "type": "if",
                    "line_number": 1649
                  },
                  {
                    "type": "if",
                    "line_number": 1658
                  },
                  {
                    "type": "if",
                    "line_number": 1663
                  },
                  {
                    "type": "if",
                    "line_number": 1674
                  },
                  {
                    "type": "for",
                    "line_number": 1682
                  },
                  {
                    "type": "for",
                    "line_number": 1683
                  },
                  {
                    "type": "if",
                    "line_number": 1684
                  },
                  {
                    "type": "if",
                    "line_number": 1687
                  },
                  {
                    "type": "if",
                    "line_number": 1691
                  },
                  {
                    "type": "for",
                    "line_number": 1692
                  },
                  {
                    "type": "if",
                    "line_number": 1694
                  },
                  {
                    "type": "if",
                    "line_number": 1698
                  },
                  {
                    "type": "if",
                    "line_number": 1708
                  },
                  {
                    "type": "if",
                    "line_number": 1710
                  },
                  {
                    "type": "if",
                    "line_number": 1712
                  },
                  {
                    "type": "if",
                    "line_number": 1719
                  },
                  {
                    "type": "else",
                    "line_number": 1727
                  }
                ],
                "complexity": 26,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "EV_DoDoor",
                  "for",
                  "if",
                  "G_ExitLevel",
                  "switch",
                  "EV_DoFloor"
                ]
              },
              {
                "name": "for",
                "return_type": "if all bosses are dead",
                "parameters": [
                  {
                    "type": "th = thinkercap.next ; th != &thinkercap ;",
                    "name": "th=th->next"
                  }
                ],
                "start_line": 1691,
                "end_line": 1704,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1693
                  },
                  {
                    "name": "if",
                    "line_number": 1697
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1693
                  },
                  {
                    "type": "if",
                    "line_number": 1697
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "th=th->next"
                ],
                "outputs": [
                  "if all bosses are dead"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "A_Hoof",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 1759,
                "end_line": 1763,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 1761
                  },
                  {
                    "name": "A_Chase",
                    "line_number": 1762
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "A_Chase",
                  "S_StartSound"
                ]
              },
              {
                "name": "A_Metal",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 1765,
                "end_line": 1769,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 1767
                  },
                  {
                    "name": "A_Chase",
                    "line_number": 1768
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "A_Chase",
                  "S_StartSound"
                ]
              },
              {
                "name": "A_BabyMetal",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 1771,
                "end_line": 1775,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 1773
                  },
                  {
                    "name": "A_Chase",
                    "line_number": 1774
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "A_Chase",
                  "S_StartSound"
                ]
              },
              {
                "name": "A_OpenShotgun2",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 1777,
                "end_line": 1780,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 1779
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "S_StartSound"
                ]
              },
              {
                "name": "A_LoadShotgun2",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 1785,
                "end_line": 1788,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 1787
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "S_StartSound"
                ]
              },
              {
                "name": "A_CloseShotgun2",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 1798,
                "end_line": 1802,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 1800
                  },
                  {
                    "name": "A_ReFire",
                    "line_number": 1801
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "A_ReFire",
                  "S_StartSound"
                ]
              },
              {
                "name": "A_BrainAwake",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 1813,
                "end_line": 1840,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1823
                  },
                  {
                    "name": "if",
                    "line_number": 1827
                  },
                  {
                    "name": "if",
                    "line_number": 1832
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1839
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1823
                  },
                  {
                    "type": "if",
                    "line_number": 1827
                  },
                  {
                    "type": "if",
                    "line_number": 1832
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "S_StartSound",
                  "for"
                ]
              },
              {
                "name": "A_BrainPain",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 1843,
                "end_line": 1846,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 1845
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "S_StartSound"
                ]
              },
              {
                "name": "A_BrainScream",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 1849,
                "end_line": 1871,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 1851
                  },
                  {
                    "type": "int",
                    "name": "y",
                    "array_size": null,
                    "line_number": 1852
                  },
                  {
                    "type": "int",
                    "name": "z",
                    "array_size": null,
                    "line_number": 1853
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1856
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1859
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 1860
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1861
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 1863
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1865
                  },
                  {
                    "name": "if",
                    "line_number": 1866
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1870
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1856
                  },
                  {
                    "type": "if",
                    "line_number": 1866
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for",
                  "P_SpawnMobj",
                  "P_SetMobjState",
                  "P_Random",
                  "S_StartSound"
                ]
              },
              {
                "name": "A_BrainExplode",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 1875,
                "end_line": 1893,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 1877
                  },
                  {
                    "type": "int",
                    "name": "y",
                    "array_size": null,
                    "line_number": 1878
                  },
                  {
                    "type": "int",
                    "name": "z",
                    "array_size": null,
                    "line_number": 1879
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_Random",
                    "line_number": 1882
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1882
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1884
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 1885
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1886
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 1888
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1890
                  },
                  {
                    "name": "if",
                    "line_number": 1891
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1891
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SpawnMobj",
                  "P_SetMobjState",
                  "P_Random",
                  "if"
                ]
              },
              {
                "name": "A_BrainDie",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 1896,
                "end_line": 1899,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "G_ExitLevel",
                    "line_number": 1898
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "G_ExitLevel"
                ]
              },
              {
                "name": "A_BrainSpit",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 1901,
                "end_line": 1923,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1909
                  },
                  {
                    "name": "P_SpawnMissile",
                    "line_number": 1917
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1922
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1909
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SpawnMissile",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "A_SpawnSound",
                "return_type": "travelling cube sound\nvoid",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 1929,
                "end_line": 1933,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 1931
                  },
                  {
                    "name": "A_SpawnFly",
                    "line_number": 1932
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "mo"
                ],
                "outputs": [
                  "travelling cube sound\nvoid"
                ],
                "dependencies": [
                  "A_SpawnFly",
                  "S_StartSound"
                ]
              },
              {
                "name": "A_SpawnFly",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 1936,
                "end_line": 1990,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "r",
                    "array_size": null,
                    "line_number": 1941
                  },
                  {
                    "type": "mobjtype_t",
                    "name": "type",
                    "array_size": null,
                    "line_number": 1942
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1944
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 1950
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1951
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1954
                  },
                  {
                    "name": "distribution",
                    "line_number": 1956
                  },
                  {
                    "name": "if",
                    "line_number": 1958
                  },
                  {
                    "name": "if",
                    "line_number": 1960
                  },
                  {
                    "name": "if",
                    "line_number": 1962
                  },
                  {
                    "name": "if",
                    "line_number": 1964
                  },
                  {
                    "name": "if",
                    "line_number": 1966
                  },
                  {
                    "name": "if",
                    "line_number": 1968
                  },
                  {
                    "name": "if",
                    "line_number": 1970
                  },
                  {
                    "name": "if",
                    "line_number": 1972
                  },
                  {
                    "name": "if",
                    "line_number": 1974
                  },
                  {
                    "name": "if",
                    "line_number": 1976
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 1981
                  },
                  {
                    "name": "if",
                    "line_number": 1982
                  },
                  {
                    "name": "P_LookForPlayers",
                    "line_number": 1982
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 1983
                  },
                  {
                    "name": "P_TeleportMove",
                    "line_number": 1986
                  },
                  {
                    "name": "self",
                    "line_number": 1988
                  },
                  {
                    "name": "P_RemoveMobj",
                    "line_number": 1989
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1944
                  },
                  {
                    "type": "if",
                    "line_number": 1958
                  },
                  {
                    "type": "if",
                    "line_number": 1960
                  },
                  {
                    "type": "if",
                    "line_number": 1962
                  },
                  {
                    "type": "if",
                    "line_number": 1964
                  },
                  {
                    "type": "if",
                    "line_number": 1966
                  },
                  {
                    "type": "if",
                    "line_number": 1968
                  },
                  {
                    "type": "if",
                    "line_number": 1970
                  },
                  {
                    "type": "if",
                    "line_number": 1972
                  },
                  {
                    "type": "if",
                    "line_number": 1974
                  },
                  {
                    "type": "if",
                    "line_number": 1976
                  },
                  {
                    "type": "else",
                    "line_number": 1978
                  },
                  {
                    "type": "if",
                    "line_number": 1982
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "distribution",
                  "if",
                  "P_RemoveMobj",
                  "P_SpawnMobj",
                  "P_SetMobjState",
                  "P_Random",
                  "P_LookForPlayers",
                  "P_TeleportMove",
                  "S_StartSound",
                  "self"
                ]
              },
              {
                "name": "A_PlayerScream",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 1994,
                "end_line": 2008,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1999
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 2007
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1999
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "S_StartSound",
                  "if"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 110
              },
              {
                "name": "dist",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 177
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 180
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 186
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 189
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 191
              },
              {
                "name": "dist",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 199
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 202
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 209
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 213
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 227
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 234
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 253
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 255
              },
              {
                "name": "numspechit",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 270
              },
              {
                "name": "tryx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 274
              },
              {
                "name": "tryy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 275
              },
              {
                "name": "try_ok",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 281
              },
              {
                "name": "good",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 282
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 285
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 307
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 311
              },
              {
                "name": "good",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 324
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 334
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 353
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 357
              },
              {
                "name": "deltax",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 365
              },
              {
                "name": "deltay",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 366
              },
              {
                "name": "d",
                "type": "dirtype_t",
                "storage_class": null,
                "array_size": "3",
                "line_number": 368
              },
              {
                "name": "tdir",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 370
              },
              {
                "name": "olddir",
                "type": "dirtype_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 371
              },
              {
                "name": "turnaround",
                "type": "dirtype_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 373
              },
              {
                "name": "c",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 503
              },
              {
                "name": "stop",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 504
              },
              {
                "name": "an",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 507
              },
              {
                "name": "dist",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 508
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 524
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 554
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 557
              },
              {
                "name": "junk",
                "type": "line_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 570
              },
              {
                "name": "seeyou",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 619
              },
              {
                "name": "seeyou",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 622
              },
              {
                "name": "sound",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 633
              },
              {
                "name": "delta",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 674
              },
              {
                "name": "nomissile",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 741
              },
              {
                "name": "nomissile",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 745
              },
              {
                "name": "angle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 804
              },
              {
                "name": "damage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 805
              },
              {
                "name": "slope",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 806
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 823
              },
              {
                "name": "angle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 824
              },
              {
                "name": "bangle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 825
              },
              {
                "name": "damage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 826
              },
              {
                "name": "slope",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 827
              },
              {
                "name": "angle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 847
              },
              {
                "name": "bangle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 848
              },
              {
                "name": "damage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 849
              },
              {
                "name": "slope",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 850
              },
              {
                "name": "damage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 915
              },
              {
                "name": "damage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 937
              },
              {
                "name": "damage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 952
              },
              {
                "name": "damage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 981
              },
              {
                "name": "exact",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1023
              },
              {
                "name": "dist",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1024
              },
              {
                "name": "slope",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1025
              },
              {
                "name": "damage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1103
              },
              {
                "name": "viletryx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1126
              },
              {
                "name": "viletryy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1127
              },
              {
                "name": "maxdist",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1131
              },
              {
                "name": "check",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 1132
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1135
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1138
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1141
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1147
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1156
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1158
              },
              {
                "name": "xl",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1169
              },
              {
                "name": "xh",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1170
              },
              {
                "name": "yl",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1171
              },
              {
                "name": "yh",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1172
              },
              {
                "name": "bx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1174
              },
              {
                "name": "by",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1175
              },
              {
                "name": "an",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 1260
              },
              {
                "name": "an",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1313
              },
              {
                "name": "an",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1361
              },
              {
                "name": "an",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1378
              },
              {
                "name": "an",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1395
              },
              {
                "name": "an",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1422
              },
              {
                "name": "dist",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1423
              },
              {
                "name": "x",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1454
              },
              {
                "name": "y",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1455
              },
              {
                "name": "z",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1456
              },
              {
                "name": "an",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1459
              },
              {
                "name": "prestep",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1460
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1461
              },
              {
                "name": "sound",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1537
              },
              {
                "name": "junk",
                "type": "line_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1613
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1614
              },
              {
                "name": "numbraintargets",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1810
              },
              {
                "name": "braintargeton",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1811
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1851
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1852
              },
              {
                "name": "z",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1853
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1877
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1878
              },
              {
                "name": "z",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1879
              },
              {
                "name": "r",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1941
              },
              {
                "name": "type",
                "type": "mobjtype_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1942
              }
            ],
            "defines": [
              {
                "name": "MAXSPECIALCROSS",
                "value": "8",
                "line_number": 267
              },
              {
                "name": "FATSPREAD",
                "value": "(ANG90/8)",
                "line_number": 1349
              },
              {
                "name": "SKULLSPEED",
                "value": "(20*FRACUNIT)",
                "line_number": 1417
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/p_enemy.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of functions",
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "p_floor.c",
          "type": "file",
          "size": 11486,
          "last_modified": "2024-09-05T16:00:04.262781",
          "path": "linuxdoom-1.10/p_floor.c",
          "readme": "# p_floor.c\n\nThis file contains functionality related to p_floor.",
          "dependencies": [
            "p_local.h",
            "sounds.h",
            "z_zone.h",
            "doomstat.h",
            "r_state.h",
            "s_sound.h",
            "doomdef.h"
          ],
          "inputs": [
            "true",
            "sector",
            "floor",
            "type",
            "-1",
            "speed",
            "floorOrCeiling",
            "floortype",
            "line",
            "direction",
            "dest",
            "crush"
          ],
          "outputs": [
            "CEILING",
            "FLOOR",
            "int",
            "result_e",
            "DOWN",
            "UP",
            "if 0",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "T_MovePlane",
                "return_type": "result_e",
                "parameters": [
                  {
                    "type": "sector_t*",
                    "name": "sector"
                  },
                  {
                    "type": "fixed_t",
                    "name": "speed"
                  },
                  {
                    "type": "fixed_t",
                    "name": "dest"
                  },
                  {
                    "type": "boolean",
                    "name": "crush"
                  },
                  {
                    "type": "int",
                    "name": "floorOrCeiling"
                  },
                  {
                    "type": "int",
                    "name": "direction"
                  }
                ],
                "start_line": 48,
                "end_line": 196,
                "local_variables": [
                  {
                    "type": "boolean",
                    "name": "flag",
                    "array_size": null,
                    "line_number": 50
                  },
                  {
                    "type": "fixed_t",
                    "name": "lastpos",
                    "array_size": null,
                    "line_number": 51
                  },
                  {
                    "type": "return",
                    "name": "pastdest",
                    "array_size": null,
                    "line_number": 72
                  },
                  {
                    "type": "return",
                    "name": "crushed",
                    "array_size": null,
                    "line_number": 83
                  },
                  {
                    "type": "return",
                    "name": "pastdest",
                    "array_size": null,
                    "line_number": 101
                  },
                  {
                    "type": "return",
                    "name": "crushed",
                    "array_size": null,
                    "line_number": 112
                  },
                  {
                    "type": "return",
                    "name": "crushed",
                    "array_size": null,
                    "line_number": 115
                  },
                  {
                    "type": "return",
                    "name": "pastdest",
                    "array_size": null,
                    "line_number": 140
                  },
                  {
                    "type": "return",
                    "name": "crushed",
                    "array_size": null,
                    "line_number": 152
                  },
                  {
                    "type": "return",
                    "name": "crushed",
                    "array_size": null,
                    "line_number": 155
                  },
                  {
                    "type": "return",
                    "name": "pastdest",
                    "array_size": null,
                    "line_number": 173
                  },
                  {
                    "type": "return",
                    "name": "crushed",
                    "array_size": null,
                    "line_number": 186
                  },
                  {
                    "type": "return",
                    "name": "ok",
                    "array_size": null,
                    "line_number": 195
                  }
                ],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 53
                  },
                  {
                    "name": "switch",
                    "line_number": 57
                  },
                  {
                    "name": "if",
                    "line_number": 61
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 65
                  },
                  {
                    "name": "if",
                    "line_number": 66
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 69
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 78
                  },
                  {
                    "name": "if",
                    "line_number": 79
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 82
                  },
                  {
                    "name": "if",
                    "line_number": 90
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 94
                  },
                  {
                    "name": "if",
                    "line_number": 95
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 98
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 108
                  },
                  {
                    "name": "if",
                    "line_number": 109
                  },
                  {
                    "name": "if",
                    "line_number": 111
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 114
                  },
                  {
                    "name": "switch",
                    "line_number": 124
                  },
                  {
                    "name": "if",
                    "line_number": 128
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 132
                  },
                  {
                    "name": "if",
                    "line_number": 134
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 137
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 147
                  },
                  {
                    "name": "if",
                    "line_number": 149
                  },
                  {
                    "name": "if",
                    "line_number": 151
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 154
                  },
                  {
                    "name": "if",
                    "line_number": 162
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 166
                  },
                  {
                    "name": "if",
                    "line_number": 167
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 170
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 179
                  },
                  {
                    "name": "if",
                    "line_number": 182
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 185
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 61
                  },
                  {
                    "type": "if",
                    "line_number": 66
                  },
                  {
                    "type": "else",
                    "line_number": 74
                  },
                  {
                    "type": "if",
                    "line_number": 79
                  },
                  {
                    "type": "if",
                    "line_number": 90
                  },
                  {
                    "type": "if",
                    "line_number": 95
                  },
                  {
                    "type": "else",
                    "line_number": 103
                  },
                  {
                    "type": "if",
                    "line_number": 109
                  },
                  {
                    "type": "if",
                    "line_number": 111
                  },
                  {
                    "type": "if",
                    "line_number": 128
                  },
                  {
                    "type": "if",
                    "line_number": 134
                  },
                  {
                    "type": "else",
                    "line_number": 142
                  },
                  {
                    "type": "if",
                    "line_number": 149
                  },
                  {
                    "type": "if",
                    "line_number": 151
                  },
                  {
                    "type": "if",
                    "line_number": 162
                  },
                  {
                    "type": "if",
                    "line_number": 167
                  },
                  {
                    "type": "else",
                    "line_number": 175
                  },
                  {
                    "type": "if",
                    "line_number": 181
                  },
                  {
                    "type": "if",
                    "line_number": 182
                  }
                ],
                "complexity": 15,
                "inputs": [
                  "sector",
                  "speed",
                  "dest",
                  "crush",
                  "floorOrCeiling",
                  "direction"
                ],
                "outputs": [
                  "result_e"
                ],
                "dependencies": [
                  "switch",
                  "P_ChangeSector",
                  "if"
                ]
              },
              {
                "name": "switch",
                "return_type": "FLOOR",
                "parameters": [
                  {
                    "type": "",
                    "name": "direction"
                  }
                ],
                "start_line": 63,
                "end_line": 125,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "pastdest",
                    "array_size": null,
                    "line_number": 78
                  },
                  {
                    "type": "return",
                    "name": "crushed",
                    "array_size": null,
                    "line_number": 89
                  },
                  {
                    "type": "return",
                    "name": "pastdest",
                    "array_size": null,
                    "line_number": 107
                  },
                  {
                    "type": "return",
                    "name": "crushed",
                    "array_size": null,
                    "line_number": 118
                  },
                  {
                    "type": "return",
                    "name": "crushed",
                    "array_size": null,
                    "line_number": 121
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 67
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 71
                  },
                  {
                    "name": "if",
                    "line_number": 72
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 75
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 84
                  },
                  {
                    "name": "if",
                    "line_number": 85
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 88
                  },
                  {
                    "name": "if",
                    "line_number": 96
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 100
                  },
                  {
                    "name": "if",
                    "line_number": 101
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 104
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 114
                  },
                  {
                    "name": "if",
                    "line_number": 115
                  },
                  {
                    "name": "if",
                    "line_number": 117
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 120
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 67
                  },
                  {
                    "type": "if",
                    "line_number": 72
                  },
                  {
                    "type": "else",
                    "line_number": 80
                  },
                  {
                    "type": "if",
                    "line_number": 85
                  },
                  {
                    "type": "if",
                    "line_number": 96
                  },
                  {
                    "type": "if",
                    "line_number": 101
                  },
                  {
                    "type": "else",
                    "line_number": 109
                  },
                  {
                    "type": "if",
                    "line_number": 115
                  },
                  {
                    "type": "if",
                    "line_number": 117
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "direction"
                ],
                "outputs": [
                  "FLOOR"
                ],
                "dependencies": [
                  "P_ChangeSector",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "DOWN",
                "parameters": [
                  {
                    "type": "sector->floorheight - speed <",
                    "name": "dest"
                  }
                ],
                "start_line": 67,
                "end_line": 79,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "pastdest",
                    "array_size": null,
                    "line_number": 78
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_ChangeSector",
                    "line_number": 71
                  },
                  {
                    "name": "if",
                    "line_number": 72
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 75
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 72
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "dest"
                ],
                "outputs": [
                  "DOWN"
                ],
                "dependencies": [
                  "P_ChangeSector",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "UP",
                "parameters": [
                  {
                    "type": "sector->floorheight + speed >",
                    "name": "dest"
                  }
                ],
                "start_line": 96,
                "end_line": 108,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "pastdest",
                    "array_size": null,
                    "line_number": 107
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_ChangeSector",
                    "line_number": 100
                  },
                  {
                    "name": "if",
                    "line_number": 101
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 104
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 101
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "dest"
                ],
                "outputs": [
                  "UP"
                ],
                "dependencies": [
                  "P_ChangeSector",
                  "if"
                ]
              },
              {
                "name": "switch",
                "return_type": "CEILING",
                "parameters": [
                  {
                    "type": "",
                    "name": "direction"
                  }
                ],
                "start_line": 130,
                "end_line": 197,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "pastdest",
                    "array_size": null,
                    "line_number": 146
                  },
                  {
                    "type": "return",
                    "name": "crushed",
                    "array_size": null,
                    "line_number": 158
                  },
                  {
                    "type": "return",
                    "name": "crushed",
                    "array_size": null,
                    "line_number": 161
                  },
                  {
                    "type": "return",
                    "name": "pastdest",
                    "array_size": null,
                    "line_number": 179
                  },
                  {
                    "type": "return",
                    "name": "crushed",
                    "array_size": null,
                    "line_number": 192
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 134
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 138
                  },
                  {
                    "name": "if",
                    "line_number": 140
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 143
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 153
                  },
                  {
                    "name": "if",
                    "line_number": 155
                  },
                  {
                    "name": "if",
                    "line_number": 157
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 160
                  },
                  {
                    "name": "if",
                    "line_number": 168
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 172
                  },
                  {
                    "name": "if",
                    "line_number": 173
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 176
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 185
                  },
                  {
                    "name": "if",
                    "line_number": 188
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 191
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 134
                  },
                  {
                    "type": "if",
                    "line_number": 140
                  },
                  {
                    "type": "else",
                    "line_number": 148
                  },
                  {
                    "type": "if",
                    "line_number": 155
                  },
                  {
                    "type": "if",
                    "line_number": 157
                  },
                  {
                    "type": "if",
                    "line_number": 168
                  },
                  {
                    "type": "if",
                    "line_number": 173
                  },
                  {
                    "type": "else",
                    "line_number": 181
                  },
                  {
                    "type": "if",
                    "line_number": 187
                  },
                  {
                    "type": "if",
                    "line_number": 188
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "direction"
                ],
                "outputs": [
                  "CEILING"
                ],
                "dependencies": [
                  "P_ChangeSector",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "DOWN",
                "parameters": [
                  {
                    "type": "sector->ceilingheight - speed <",
                    "name": "dest"
                  }
                ],
                "start_line": 134,
                "end_line": 147,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "pastdest",
                    "array_size": null,
                    "line_number": 146
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_ChangeSector",
                    "line_number": 138
                  },
                  {
                    "name": "if",
                    "line_number": 140
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 143
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 140
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "dest"
                ],
                "outputs": [
                  "DOWN"
                ],
                "dependencies": [
                  "P_ChangeSector",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "UP",
                "parameters": [
                  {
                    "type": "sector->ceilingheight + speed >",
                    "name": "dest"
                  }
                ],
                "start_line": 168,
                "end_line": 180,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "pastdest",
                    "array_size": null,
                    "line_number": 179
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_ChangeSector",
                    "line_number": 172
                  },
                  {
                    "name": "if",
                    "line_number": 173
                  },
                  {
                    "name": "P_ChangeSector",
                    "line_number": 176
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 173
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "dest"
                ],
                "outputs": [
                  "UP"
                ],
                "dependencies": [
                  "P_ChangeSector",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "if 0",
                "parameters": [
                  {
                    "type": "flag ==",
                    "name": "true"
                  }
                ],
                "start_line": 188,
                "end_line": 193,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "crushed",
                    "array_size": null,
                    "line_number": 192
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_ChangeSector",
                    "line_number": 191
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "true"
                ],
                "outputs": [
                  "if 0"
                ],
                "dependencies": [
                  "P_ChangeSector"
                ]
              },
              {
                "name": "T_MoveFloor",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "floormove_t*",
                    "name": "floor"
                  }
                ],
                "start_line": 209,
                "end_line": 254,
                "local_variables": [
                  {
                    "type": "result_e",
                    "name": "res",
                    "array_size": null,
                    "line_number": 211
                  }
                ],
                "function_calls": [
                  {
                    "name": "T_MovePlane",
                    "line_number": 213
                  },
                  {
                    "name": "if",
                    "line_number": 218
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 219
                  },
                  {
                    "name": "if",
                    "line_number": 222
                  },
                  {
                    "name": "if",
                    "line_number": 226
                  },
                  {
                    "name": "switch",
                    "line_number": 228
                  },
                  {
                    "name": "if",
                    "line_number": 237
                  },
                  {
                    "name": "switch",
                    "line_number": 239
                  },
                  {
                    "name": "P_RemoveThinker",
                    "line_number": 248
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 250
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 218
                  },
                  {
                    "type": "if",
                    "line_number": 222
                  },
                  {
                    "type": "if",
                    "line_number": 226
                  },
                  {
                    "type": "if",
                    "line_number": 237
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "floor"
                ],
                "outputs": [],
                "dependencies": [
                  "P_RemoveThinker",
                  "T_MovePlane",
                  "if",
                  "S_StartSound",
                  "switch"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "floor->direction ==",
                    "name": "-1"
                  }
                ],
                "start_line": 237,
                "end_line": 247,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 239
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "-1"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "switch"
                ]
              },
              {
                "name": "EV_DoFloor",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  },
                  {
                    "type": "floor_e",
                    "name": "floortype"
                  }
                ],
                "start_line": 259,
                "end_line": 441,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "secnum",
                    "array_size": null,
                    "line_number": 261
                  },
                  {
                    "type": "int",
                    "name": "rtn",
                    "array_size": null,
                    "line_number": 262
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 263
                  },
                  {
                    "type": "return",
                    "name": "rtn",
                    "array_size": null,
                    "line_number": 440
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 269
                  },
                  {
                    "name": "P_FindSectorFromLineTag",
                    "line_number": 269
                  },
                  {
                    "name": "if",
                    "line_number": 274
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 279
                  },
                  {
                    "name": "sizeof",
                    "line_number": 279
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 280
                  },
                  {
                    "name": "switch",
                    "line_number": 286
                  },
                  {
                    "name": "P_FindHighestFloorSurrounding",
                    "line_number": 293
                  },
                  {
                    "name": "P_FindLowestFloorSurrounding",
                    "line_number": 301
                  },
                  {
                    "name": "P_FindHighestFloorSurrounding",
                    "line_number": 309
                  },
                  {
                    "name": "if",
                    "line_number": 310
                  },
                  {
                    "name": "P_FindLowestCeilingSurrounding",
                    "line_number": 321
                  },
                  {
                    "name": "if",
                    "line_number": 322
                  },
                  {
                    "name": "P_FindNextHighestFloor",
                    "line_number": 333
                  },
                  {
                    "name": "P_FindNextHighestFloor",
                    "line_number": 341
                  },
                  {
                    "name": "for",
                    "line_number": 377
                  },
                  {
                    "name": "if",
                    "line_number": 379
                  },
                  {
                    "name": "twoSided",
                    "line_number": 379
                  },
                  {
                    "name": "getSide",
                    "line_number": 381
                  },
                  {
                    "name": "if",
                    "line_number": 382
                  },
                  {
                    "name": "if",
                    "line_number": 383
                  },
                  {
                    "name": "getSide",
                    "line_number": 387
                  },
                  {
                    "name": "if",
                    "line_number": 388
                  },
                  {
                    "name": "if",
                    "line_number": 389
                  },
                  {
                    "name": "P_FindLowestFloorSurrounding",
                    "line_number": 405
                  },
                  {
                    "name": "for",
                    "line_number": 408
                  },
                  {
                    "name": "if",
                    "line_number": 410
                  },
                  {
                    "name": "twoSided",
                    "line_number": 410
                  },
                  {
                    "name": "if",
                    "line_number": 412
                  },
                  {
                    "name": "getSide",
                    "line_number": 412
                  },
                  {
                    "name": "getSector",
                    "line_number": 414
                  },
                  {
                    "name": "if",
                    "line_number": 416
                  },
                  {
                    "name": "getSector",
                    "line_number": 425
                  },
                  {
                    "name": "if",
                    "line_number": 427
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 269
                  },
                  {
                    "type": "if",
                    "line_number": 274
                  },
                  {
                    "type": "if",
                    "line_number": 310
                  },
                  {
                    "type": "if",
                    "line_number": 322
                  },
                  {
                    "type": "for",
                    "line_number": 377
                  },
                  {
                    "type": "if",
                    "line_number": 379
                  },
                  {
                    "type": "if",
                    "line_number": 382
                  },
                  {
                    "type": "if",
                    "line_number": 383
                  },
                  {
                    "type": "if",
                    "line_number": 388
                  },
                  {
                    "type": "if",
                    "line_number": 389
                  },
                  {
                    "type": "for",
                    "line_number": 408
                  },
                  {
                    "type": "if",
                    "line_number": 410
                  },
                  {
                    "type": "if",
                    "line_number": 412
                  },
                  {
                    "type": "if",
                    "line_number": 416
                  },
                  {
                    "type": "else",
                    "line_number": 423
                  },
                  {
                    "type": "if",
                    "line_number": 427
                  }
                ],
                "complexity": 16,
                "inputs": [
                  "line",
                  "floortype"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "P_AddThinker",
                  "while",
                  "P_FindLowestCeilingSurrounding",
                  "Z_Malloc",
                  "if",
                  "P_FindHighestFloorSurrounding",
                  "for",
                  "getSector",
                  "P_FindSectorFromLineTag",
                  "sizeof",
                  "P_FindNextHighestFloor",
                  "twoSided",
                  "P_FindLowestFloorSurrounding",
                  "switch",
                  "getSide"
                ]
              },
              {
                "name": "EV_BuildStairs",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  },
                  {
                    "type": "stair_e",
                    "name": "type"
                  }
                ],
                "start_line": 452,
                "end_line": 551,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "secnum",
                    "array_size": null,
                    "line_number": 454
                  },
                  {
                    "type": "int",
                    "name": "height",
                    "array_size": null,
                    "line_number": 455
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 456
                  },
                  {
                    "type": "int",
                    "name": "newsecnum",
                    "array_size": null,
                    "line_number": 457
                  },
                  {
                    "type": "int",
                    "name": "texture",
                    "array_size": null,
                    "line_number": 458
                  },
                  {
                    "type": "int",
                    "name": "ok",
                    "array_size": null,
                    "line_number": 459
                  },
                  {
                    "type": "int",
                    "name": "rtn",
                    "array_size": null,
                    "line_number": 460
                  },
                  {
                    "type": "fixed_t",
                    "name": "stairsize",
                    "array_size": null,
                    "line_number": 467
                  },
                  {
                    "type": "fixed_t",
                    "name": "speed",
                    "array_size": null,
                    "line_number": 468
                  },
                  {
                    "type": "return",
                    "name": "rtn",
                    "array_size": null,
                    "line_number": 550
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 472
                  },
                  {
                    "name": "P_FindSectorFromLineTag",
                    "line_number": 472
                  },
                  {
                    "name": "if",
                    "line_number": 477
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 482
                  },
                  {
                    "name": "sizeof",
                    "line_number": 482
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 483
                  },
                  {
                    "name": "switch",
                    "line_number": 488
                  },
                  {
                    "name": "for",
                    "line_number": 511
                  },
                  {
                    "name": "if",
                    "line_number": 513
                  },
                  {
                    "name": "if",
                    "line_number": 519
                  },
                  {
                    "name": "if",
                    "line_number": 525
                  },
                  {
                    "name": "if",
                    "line_number": 530
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 535
                  },
                  {
                    "name": "sizeof",
                    "line_number": 535
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 537
                  },
                  {
                    "name": "while",
                    "line_number": 548
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 472
                  },
                  {
                    "type": "if",
                    "line_number": 477
                  },
                  {
                    "type": "for",
                    "line_number": 511
                  },
                  {
                    "type": "if",
                    "line_number": 513
                  },
                  {
                    "type": "if",
                    "line_number": 519
                  },
                  {
                    "type": "if",
                    "line_number": 525
                  },
                  {
                    "type": "if",
                    "line_number": 530
                  },
                  {
                    "type": "while",
                    "line_number": 548
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "line",
                  "type"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "P_AddThinker",
                  "while",
                  "Z_Malloc",
                  "if",
                  "for",
                  "P_FindSectorFromLineTag",
                  "sizeof",
                  "switch"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "flag",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 57
              },
              {
                "name": "lastpos",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 58
              },
              {
                "name": "crushed",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 77
              },
              {
                "name": "pastdest",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 79
              },
              {
                "name": "crushed",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 90
              },
              {
                "name": "crushed",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 106
              },
              {
                "name": "pastdest",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 108
              },
              {
                "name": "crushed",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 119
              },
              {
                "name": "crushed",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 122
              },
              {
                "name": "crushed",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 145
              },
              {
                "name": "pastdest",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 147
              },
              {
                "name": "crushed",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 159
              },
              {
                "name": "crushed",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 162
              },
              {
                "name": "crushed",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 178
              },
              {
                "name": "pastdest",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 180
              },
              {
                "name": "crushed",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 193
              },
              {
                "name": "ok",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 202
              },
              {
                "name": "res",
                "type": "result_e",
                "storage_class": null,
                "array_size": null,
                "line_number": 211
              },
              {
                "name": "secnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 264
              },
              {
                "name": "rtn",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 265
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 266
              },
              {
                "name": "rtn",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 443
              },
              {
                "name": "secnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 457
              },
              {
                "name": "height",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 458
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 459
              },
              {
                "name": "newsecnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 460
              },
              {
                "name": "texture",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 461
              },
              {
                "name": "ok",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 462
              },
              {
                "name": "rtn",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 463
              },
              {
                "name": "stairsize",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 470
              },
              {
                "name": "speed",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 471
              },
              {
                "name": "rtn",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 553
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/p_floor.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "p_inter.c",
          "type": "file",
          "size": 18140,
          "last_modified": "2024-09-05T16:00:04.287780",
          "path": "linuxdoom-1.10/p_inter.c",
          "readme": "# p_inter.c\n\nThis file contains functionality related to p_inter.",
          "dependencies": [
            "p_inter.h",
            "m_random.h",
            "p_local.h",
            "sounds.h",
            "doomstat.h",
            "i_system.h",
            "s_sound.h",
            "doomdef.h",
            "dstrings.h",
            "am_map.h"
          ],
          "inputs": [
            "dropped",
            "target->health",
            "card",
            "armortype",
            "target",
            "inflictor",
            "power",
            "special",
            "num",
            "weapon",
            "toucher",
            "damage",
            "player",
            "ammo",
            "source"
          ],
          "outputs": [
            "boolean",
            "end of game hell hack",
            "player specific"
          ],
          "content": {
            "functions": [
              {
                "name": "P_GiveAmmo",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "ammotype_t",
                    "name": "ammo"
                  },
                  {
                    "type": "int",
                    "name": "num"
                  }
                ],
                "start_line": 73,
                "end_line": 156,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "oldammo",
                    "array_size": null,
                    "line_number": 75
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 78
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 84
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 110
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 155
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 77
                  },
                  {
                    "name": "if",
                    "line_number": 80
                  },
                  {
                    "name": "I_Error",
                    "line_number": 81
                  },
                  {
                    "name": "if",
                    "line_number": 83
                  },
                  {
                    "name": "if",
                    "line_number": 86
                  },
                  {
                    "name": "if",
                    "line_number": 91
                  },
                  {
                    "name": "if",
                    "line_number": 103
                  },
                  {
                    "name": "if",
                    "line_number": 109
                  },
                  {
                    "name": "switch",
                    "line_number": 115
                  },
                  {
                    "name": "if",
                    "line_number": 118
                  },
                  {
                    "name": "if",
                    "line_number": 120
                  },
                  {
                    "name": "if",
                    "line_number": 128
                  },
                  {
                    "name": "if",
                    "line_number": 131
                  },
                  {
                    "name": "if",
                    "line_number": 137
                  },
                  {
                    "name": "if",
                    "line_number": 140
                  },
                  {
                    "name": "if",
                    "line_number": 146
                  },
                  {
                    "name": "if",
                    "line_number": 148
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 77
                  },
                  {
                    "type": "if",
                    "line_number": 80
                  },
                  {
                    "type": "if",
                    "line_number": 83
                  },
                  {
                    "type": "if",
                    "line_number": 86
                  },
                  {
                    "type": "else",
                    "line_number": 88
                  },
                  {
                    "type": "if",
                    "line_number": 91
                  },
                  {
                    "type": "if",
                    "line_number": 103
                  },
                  {
                    "type": "if",
                    "line_number": 109
                  },
                  {
                    "type": "if",
                    "line_number": 118
                  },
                  {
                    "type": "if",
                    "line_number": 120
                  },
                  {
                    "type": "else",
                    "line_number": 122
                  },
                  {
                    "type": "if",
                    "line_number": 128
                  },
                  {
                    "type": "if",
                    "line_number": 131
                  },
                  {
                    "type": "if",
                    "line_number": 137
                  },
                  {
                    "type": "if",
                    "line_number": 140
                  },
                  {
                    "type": "if",
                    "line_number": 146
                  },
                  {
                    "type": "if",
                    "line_number": 148
                  }
                ],
                "complexity": 19,
                "inputs": [
                  "player",
                  "ammo",
                  "num"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "switch",
                  "I_Error",
                  "if"
                ]
              },
              {
                "name": "P_GiveWeapon",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "weapontype_t",
                    "name": "weapon"
                  },
                  {
                    "type": "boolean",
                    "name": "dropped"
                  }
                ],
                "start_line": 167,
                "end_line": 216,
                "local_variables": [
                  {
                    "type": "boolean",
                    "name": "gaveammo",
                    "array_size": null,
                    "line_number": 169
                  },
                  {
                    "type": "boolean",
                    "name": "gaveweapon",
                    "array_size": null,
                    "line_number": 170
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 178
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 191
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 172
                  },
                  {
                    "name": "if",
                    "line_number": 177
                  },
                  {
                    "name": "if",
                    "line_number": 183
                  },
                  {
                    "name": "P_GiveAmmo",
                    "line_number": 184
                  },
                  {
                    "name": "P_GiveAmmo",
                    "line_number": 186
                  },
                  {
                    "name": "if",
                    "line_number": 189
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 190
                  },
                  {
                    "name": "if",
                    "line_number": 194
                  },
                  {
                    "name": "if",
                    "line_number": 198
                  },
                  {
                    "name": "P_GiveAmmo",
                    "line_number": 199
                  },
                  {
                    "name": "P_GiveAmmo",
                    "line_number": 201
                  },
                  {
                    "name": "if",
                    "line_number": 206
                  },
                  {
                    "name": "return",
                    "line_number": 215
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 172
                  },
                  {
                    "type": "if",
                    "line_number": 177
                  },
                  {
                    "type": "if",
                    "line_number": 183
                  },
                  {
                    "type": "else",
                    "line_number": 185
                  },
                  {
                    "type": "if",
                    "line_number": 189
                  },
                  {
                    "type": "if",
                    "line_number": 194
                  },
                  {
                    "type": "if",
                    "line_number": 198
                  },
                  {
                    "type": "else",
                    "line_number": 200
                  },
                  {
                    "type": "else",
                    "line_number": 203
                  },
                  {
                    "type": "if",
                    "line_number": 206
                  },
                  {
                    "type": "else",
                    "line_number": 208
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "player",
                  "weapon",
                  "dropped"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "return",
                  "P_GiveAmmo",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "P_GiveBody",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "int",
                    "name": "num"
                  }
                ],
                "start_line": 228,
                "end_line": 239,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 231
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 238
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 230
                  },
                  {
                    "name": "if",
                    "line_number": 234
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 230
                  },
                  {
                    "type": "if",
                    "line_number": 234
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "player",
                  "num"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "P_GiveArmor",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "int",
                    "name": "armortype"
                  }
                ],
                "start_line": 251,
                "end_line": 263,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "hits",
                    "array_size": null,
                    "line_number": 253
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 257
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 262
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 256
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 256
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "player",
                  "armortype"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "P_GiveCard",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "card_t",
                    "name": "card"
                  }
                ],
                "start_line": 273,
                "end_line": 280,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 275
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 275
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "player",
                  "card"
                ],
                "outputs": [],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "P_GivePower",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "int /*powertype_t*/",
                    "name": "power"
                  }
                ],
                "start_line": 289,
                "end_line": 328,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 294
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 301
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 307
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 313
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 320
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 324
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 327
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 291
                  },
                  {
                    "name": "if",
                    "line_number": 297
                  },
                  {
                    "name": "if",
                    "line_number": 304
                  },
                  {
                    "name": "if",
                    "line_number": 310
                  },
                  {
                    "name": "if",
                    "line_number": 316
                  },
                  {
                    "name": "P_GiveBody",
                    "line_number": 318
                  },
                  {
                    "name": "if",
                    "line_number": 323
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 291
                  },
                  {
                    "type": "if",
                    "line_number": 297
                  },
                  {
                    "type": "if",
                    "line_number": 304
                  },
                  {
                    "type": "if",
                    "line_number": 310
                  },
                  {
                    "type": "if",
                    "line_number": 316
                  },
                  {
                    "type": "if",
                    "line_number": 323
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "player",
                  "power"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "P_GiveBody",
                  "if"
                ]
              },
              {
                "name": "P_TouchSpecialThing",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "special"
                  },
                  {
                    "type": "mobj_t*",
                    "name": "toucher"
                  }
                ],
                "start_line": 338,
                "end_line": 658,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 341
                  },
                  {
                    "type": "fixed_t",
                    "name": "delta",
                    "array_size": null,
                    "line_number": 342
                  },
                  {
                    "type": "int",
                    "name": "sound",
                    "array_size": null,
                    "line_number": 343
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 347
                  },
                  {
                    "name": "if",
                    "line_number": 360
                  },
                  {
                    "name": "switch",
                    "line_number": 364
                  },
                  {
                    "name": "if",
                    "line_number": 368
                  },
                  {
                    "name": "P_GiveArmor",
                    "line_number": 368
                  },
                  {
                    "name": "if",
                    "line_number": 374
                  },
                  {
                    "name": "P_GiveArmor",
                    "line_number": 374
                  },
                  {
                    "name": "if",
                    "line_number": 382
                  },
                  {
                    "name": "if",
                    "line_number": 390
                  },
                  {
                    "name": "if",
                    "line_number": 392
                  },
                  {
                    "name": "if",
                    "line_number": 399
                  },
                  {
                    "name": "if",
                    "line_number": 407
                  },
                  {
                    "name": "P_GiveArmor",
                    "line_number": 411
                  },
                  {
                    "name": "if",
                    "line_number": 419
                  },
                  {
                    "name": "P_GiveCard",
                    "line_number": 421
                  },
                  {
                    "name": "if",
                    "line_number": 422
                  },
                  {
                    "name": "if",
                    "line_number": 427
                  },
                  {
                    "name": "P_GiveCard",
                    "line_number": 429
                  },
                  {
                    "name": "if",
                    "line_number": 430
                  },
                  {
                    "name": "if",
                    "line_number": 435
                  },
                  {
                    "name": "P_GiveCard",
                    "line_number": 437
                  },
                  {
                    "name": "if",
                    "line_number": 438
                  },
                  {
                    "name": "if",
                    "line_number": 443
                  },
                  {
                    "name": "P_GiveCard",
                    "line_number": 445
                  },
                  {
                    "name": "if",
                    "line_number": 446
                  },
                  {
                    "name": "if",
                    "line_number": 451
                  },
                  {
                    "name": "P_GiveCard",
                    "line_number": 453
                  },
                  {
                    "name": "if",
                    "line_number": 454
                  },
                  {
                    "name": "if",
                    "line_number": 459
                  },
                  {
                    "name": "P_GiveCard",
                    "line_number": 461
                  },
                  {
                    "name": "if",
                    "line_number": 462
                  },
                  {
                    "name": "if",
                    "line_number": 468
                  },
                  {
                    "name": "P_GiveBody",
                    "line_number": 468
                  },
                  {
                    "name": "if",
                    "line_number": 474
                  },
                  {
                    "name": "P_GiveBody",
                    "line_number": 474
                  },
                  {
                    "name": "if",
                    "line_number": 477
                  },
                  {
                    "name": "if",
                    "line_number": 486
                  },
                  {
                    "name": "P_GivePower",
                    "line_number": 486
                  },
                  {
                    "name": "if",
                    "line_number": 493
                  },
                  {
                    "name": "P_GivePower",
                    "line_number": 493
                  },
                  {
                    "name": "if",
                    "line_number": 496
                  },
                  {
                    "name": "if",
                    "line_number": 502
                  },
                  {
                    "name": "P_GivePower",
                    "line_number": 502
                  },
                  {
                    "name": "if",
                    "line_number": 509
                  },
                  {
                    "name": "P_GivePower",
                    "line_number": 509
                  },
                  {
                    "name": "if",
                    "line_number": 516
                  },
                  {
                    "name": "P_GivePower",
                    "line_number": 516
                  },
                  {
                    "name": "if",
                    "line_number": 523
                  },
                  {
                    "name": "P_GivePower",
                    "line_number": 523
                  },
                  {
                    "name": "if",
                    "line_number": 531
                  },
                  {
                    "name": "if",
                    "line_number": 533
                  },
                  {
                    "name": "P_GiveAmmo",
                    "line_number": 533
                  },
                  {
                    "name": "if",
                    "line_number": 538
                  },
                  {
                    "name": "P_GiveAmmo",
                    "line_number": 538
                  },
                  {
                    "name": "if",
                    "line_number": 545
                  },
                  {
                    "name": "P_GiveAmmo",
                    "line_number": 545
                  },
                  {
                    "name": "if",
                    "line_number": 551
                  },
                  {
                    "name": "P_GiveAmmo",
                    "line_number": 551
                  },
                  {
                    "name": "if",
                    "line_number": 557
                  },
                  {
                    "name": "P_GiveAmmo",
                    "line_number": 557
                  },
                  {
                    "name": "if",
                    "line_number": 563
                  },
                  {
                    "name": "P_GiveAmmo",
                    "line_number": 563
                  },
                  {
                    "name": "if",
                    "line_number": 569
                  },
                  {
                    "name": "P_GiveAmmo",
                    "line_number": 569
                  },
                  {
                    "name": "if",
                    "line_number": 575
                  },
                  {
                    "name": "P_GiveAmmo",
                    "line_number": 575
                  },
                  {
                    "name": "if",
                    "line_number": 581
                  },
                  {
                    "name": "P_GiveAmmo",
                    "line_number": 581
                  },
                  {
                    "name": "if",
                    "line_number": 587
                  },
                  {
                    "name": "for",
                    "line_number": 589
                  },
                  {
                    "name": "for",
                    "line_number": 593
                  },
                  {
                    "name": "P_GiveAmmo",
                    "line_number": 594
                  },
                  {
                    "name": "if",
                    "line_number": 600
                  },
                  {
                    "name": "P_GiveWeapon",
                    "line_number": 600
                  },
                  {
                    "name": "if",
                    "line_number": 607
                  },
                  {
                    "name": "P_GiveWeapon",
                    "line_number": 607
                  },
                  {
                    "name": "if",
                    "line_number": 614
                  },
                  {
                    "name": "P_GiveWeapon",
                    "line_number": 614
                  },
                  {
                    "name": "if",
                    "line_number": 621
                  },
                  {
                    "name": "P_GiveWeapon",
                    "line_number": 621
                  },
                  {
                    "name": "if",
                    "line_number": 628
                  },
                  {
                    "name": "P_GiveWeapon",
                    "line_number": 628
                  },
                  {
                    "name": "if",
                    "line_number": 635
                  },
                  {
                    "name": "P_GiveWeapon",
                    "line_number": 635
                  },
                  {
                    "name": "if",
                    "line_number": 642
                  },
                  {
                    "name": "P_GiveWeapon",
                    "line_number": 642
                  },
                  {
                    "name": "I_Error",
                    "line_number": 649
                  },
                  {
                    "name": "if",
                    "line_number": 652
                  },
                  {
                    "name": "P_RemoveMobj",
                    "line_number": 654
                  },
                  {
                    "name": "if",
                    "line_number": 656
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 657
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 347
                  },
                  {
                    "type": "if",
                    "line_number": 360
                  },
                  {
                    "type": "if",
                    "line_number": 368
                  },
                  {
                    "type": "if",
                    "line_number": 374
                  },
                  {
                    "type": "if",
                    "line_number": 382
                  },
                  {
                    "type": "if",
                    "line_number": 390
                  },
                  {
                    "type": "if",
                    "line_number": 392
                  },
                  {
                    "type": "if",
                    "line_number": 399
                  },
                  {
                    "type": "if",
                    "line_number": 407
                  },
                  {
                    "type": "for",
                    "line_number": 417
                  },
                  {
                    "type": "if",
                    "line_number": 419
                  },
                  {
                    "type": "if",
                    "line_number": 422
                  },
                  {
                    "type": "if",
                    "line_number": 427
                  },
                  {
                    "type": "if",
                    "line_number": 430
                  },
                  {
                    "type": "if",
                    "line_number": 435
                  },
                  {
                    "type": "if",
                    "line_number": 438
                  },
                  {
                    "type": "if",
                    "line_number": 443
                  },
                  {
                    "type": "if",
                    "line_number": 446
                  },
                  {
                    "type": "if",
                    "line_number": 451
                  },
                  {
                    "type": "if",
                    "line_number": 454
                  },
                  {
                    "type": "if",
                    "line_number": 459
                  },
                  {
                    "type": "if",
                    "line_number": 462
                  },
                  {
                    "type": "if",
                    "line_number": 468
                  },
                  {
                    "type": "if",
                    "line_number": 474
                  },
                  {
                    "type": "if",
                    "line_number": 477
                  },
                  {
                    "type": "else",
                    "line_number": 479
                  },
                  {
                    "type": "if",
                    "line_number": 486
                  },
                  {
                    "type": "if",
                    "line_number": 493
                  },
                  {
                    "type": "if",
                    "line_number": 496
                  },
                  {
                    "type": "if",
                    "line_number": 502
                  },
                  {
                    "type": "if",
                    "line_number": 509
                  },
                  {
                    "type": "if",
                    "line_number": 516
                  },
                  {
                    "type": "if",
                    "line_number": 523
                  },
                  {
                    "type": "if",
                    "line_number": 531
                  },
                  {
                    "type": "if",
                    "line_number": 533
                  },
                  {
                    "type": "else",
                    "line_number": 536
                  },
                  {
                    "type": "if",
                    "line_number": 538
                  },
                  {
                    "type": "if",
                    "line_number": 545
                  },
                  {
                    "type": "if",
                    "line_number": 551
                  },
                  {
                    "type": "if",
                    "line_number": 557
                  },
                  {
                    "type": "if",
                    "line_number": 563
                  },
                  {
                    "type": "if",
                    "line_number": 569
                  },
                  {
                    "type": "if",
                    "line_number": 575
                  },
                  {
                    "type": "if",
                    "line_number": 581
                  },
                  {
                    "type": "if",
                    "line_number": 587
                  },
                  {
                    "type": "for",
                    "line_number": 589
                  },
                  {
                    "type": "for",
                    "line_number": 593
                  },
                  {
                    "type": "if",
                    "line_number": 600
                  },
                  {
                    "type": "if",
                    "line_number": 607
                  },
                  {
                    "type": "if",
                    "line_number": 614
                  },
                  {
                    "type": "if",
                    "line_number": 621
                  },
                  {
                    "type": "if",
                    "line_number": 628
                  },
                  {
                    "type": "if",
                    "line_number": 635
                  },
                  {
                    "type": "if",
                    "line_number": 642
                  },
                  {
                    "type": "if",
                    "line_number": 652
                  },
                  {
                    "type": "if",
                    "line_number": 656
                  }
                ],
                "complexity": 55,
                "inputs": [
                  "special",
                  "toucher"
                ],
                "outputs": [],
                "dependencies": [
                  "P_GivePower",
                  "if",
                  "for",
                  "P_RemoveMobj",
                  "P_GiveCard",
                  "P_GiveWeapon",
                  "I_Error",
                  "P_GiveAmmo",
                  "S_StartSound",
                  "P_GiveBody",
                  "P_GiveArmor",
                  "switch"
                ]
              },
              {
                "name": "P_KillMobj",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "source"
                  },
                  {
                    "type": "mobj_t*",
                    "name": "target"
                  }
                ],
                "start_line": 667,
                "end_line": 755,
                "local_variables": [
                  {
                    "type": "mobjtype_t",
                    "name": "item",
                    "array_size": null,
                    "line_number": 669
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 674
                  },
                  {
                    "name": "if",
                    "line_number": 680
                  },
                  {
                    "name": "if",
                    "line_number": 683
                  },
                  {
                    "name": "if",
                    "line_number": 686
                  },
                  {
                    "name": "if",
                    "line_number": 689
                  },
                  {
                    "name": "if",
                    "line_number": 696
                  },
                  {
                    "name": "if",
                    "line_number": 699
                  },
                  {
                    "name": "P_DropWeapon",
                    "line_number": 704
                  },
                  {
                    "name": "if",
                    "line_number": 706
                  },
                  {
                    "name": "AM_Stop",
                    "line_number": 711
                  },
                  {
                    "name": "if",
                    "line_number": 716
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 719
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 722
                  },
                  {
                    "name": "P_Random",
                    "line_number": 723
                  },
                  {
                    "name": "if",
                    "line_number": 725
                  },
                  {
                    "name": "I_StartSound",
                    "line_number": 728
                  },
                  {
                    "name": "switch",
                    "line_number": 734
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 753
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 674
                  },
                  {
                    "type": "if",
                    "line_number": 680
                  },
                  {
                    "type": "for",
                    "line_number": 682
                  },
                  {
                    "type": "if",
                    "line_number": 683
                  },
                  {
                    "type": "if",
                    "line_number": 686
                  },
                  {
                    "type": "if",
                    "line_number": 689
                  },
                  {
                    "type": "if",
                    "line_number": 696
                  },
                  {
                    "type": "if",
                    "line_number": 699
                  },
                  {
                    "type": "if",
                    "line_number": 706
                  },
                  {
                    "type": "if",
                    "line_number": 716
                  },
                  {
                    "type": "else",
                    "line_number": 721
                  },
                  {
                    "type": "if",
                    "line_number": 725
                  }
                ],
                "complexity": 12,
                "inputs": [
                  "source",
                  "target"
                ],
                "outputs": [],
                "dependencies": [
                  "P_DropWeapon",
                  "if",
                  "P_SpawnMobj",
                  "P_SetMobjState",
                  "P_Random",
                  "I_StartSound",
                  "switch",
                  "AM_Stop"
                ]
              },
              {
                "name": "P_DamageMobj",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "target"
                  },
                  {
                    "type": "mobj_t*",
                    "name": "inflictor"
                  },
                  {
                    "type": "mobj_t*",
                    "name": "source"
                  },
                  {
                    "type": "int",
                    "name": "damage"
                  }
                ],
                "start_line": 774,
                "end_line": 912,
                "local_variables": [
                  {
                    "type": "unsigned",
                    "name": "ang",
                    "array_size": null,
                    "line_number": 776
                  },
                  {
                    "type": "int",
                    "name": "saved",
                    "array_size": null,
                    "line_number": 777
                  },
                  {
                    "type": "fixed_t",
                    "name": "thrust",
                    "array_size": null,
                    "line_number": 779
                  },
                  {
                    "type": "int",
                    "name": "temp",
                    "array_size": null,
                    "line_number": 780
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 782
                  },
                  {
                    "name": "if",
                    "line_number": 785
                  },
                  {
                    "name": "if",
                    "line_number": 788
                  },
                  {
                    "name": "if",
                    "line_number": 794
                  },
                  {
                    "name": "if",
                    "line_number": 801
                  },
                  {
                    "name": "R_PointToAngle2",
                    "line_number": 807
                  },
                  {
                    "name": "if",
                    "line_number": 815
                  },
                  {
                    "name": "P_Random",
                    "line_number": 818
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 825
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 826
                  },
                  {
                    "name": "if",
                    "line_number": 830
                  },
                  {
                    "name": "if",
                    "line_number": 833
                  },
                  {
                    "name": "if",
                    "line_number": 842
                  },
                  {
                    "name": "if",
                    "line_number": 849
                  },
                  {
                    "name": "if",
                    "line_number": 851
                  },
                  {
                    "name": "if",
                    "line_number": 856
                  },
                  {
                    "name": "if",
                    "line_number": 866
                  },
                  {
                    "name": "if",
                    "line_number": 872
                  },
                  {
                    "name": "if",
                    "line_number": 877
                  },
                  {
                    "name": "I_Tactile",
                    "line_number": 878
                  },
                  {
                    "name": "if",
                    "line_number": 883
                  },
                  {
                    "name": "P_KillMobj",
                    "line_number": 885
                  },
                  {
                    "name": "if",
                    "line_number": 889
                  },
                  {
                    "name": "P_Random",
                    "line_number": 889
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 894
                  },
                  {
                    "name": "if",
                    "line_number": 899
                  },
                  {
                    "name": "if",
                    "line_number": 907
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 909
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 782
                  },
                  {
                    "type": "if",
                    "line_number": 785
                  },
                  {
                    "type": "if",
                    "line_number": 788
                  },
                  {
                    "type": "if",
                    "line_number": 794
                  },
                  {
                    "type": "if",
                    "line_number": 801
                  },
                  {
                    "type": "if",
                    "line_number": 815
                  },
                  {
                    "type": "if",
                    "line_number": 830
                  },
                  {
                    "type": "if",
                    "line_number": 833
                  },
                  {
                    "type": "if",
                    "line_number": 842
                  },
                  {
                    "type": "if",
                    "line_number": 849
                  },
                  {
                    "type": "if",
                    "line_number": 851
                  },
                  {
                    "type": "else",
                    "line_number": 853
                  },
                  {
                    "type": "if",
                    "line_number": 856
                  },
                  {
                    "type": "for",
                    "line_number": 865
                  },
                  {
                    "type": "if",
                    "line_number": 866
                  },
                  {
                    "type": "if",
                    "line_number": 872
                  },
                  {
                    "type": "if",
                    "line_number": 877
                  },
                  {
                    "type": "if",
                    "line_number": 883
                  },
                  {
                    "type": "if",
                    "line_number": 889
                  },
                  {
                    "type": "if",
                    "line_number": 899
                  },
                  {
                    "type": "if",
                    "line_number": 903
                  },
                  {
                    "type": "if",
                    "line_number": 907
                  }
                ],
                "complexity": 34,
                "inputs": [
                  "target",
                  "inflictor",
                  "source",
                  "damage"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_SetMobjState",
                  "P_Random",
                  "R_PointToAngle2",
                  "P_KillMobj",
                  "I_Tactile",
                  "FixedMul"
                ]
              },
              {
                "name": "if",
                "return_type": "player specific",
                "parameters": [
                  {
                    "type": "",
                    "name": "player"
                  }
                ],
                "start_line": 834,
                "end_line": 883,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 837
                  },
                  {
                    "name": "if",
                    "line_number": 846
                  },
                  {
                    "name": "if",
                    "line_number": 853
                  },
                  {
                    "name": "if",
                    "line_number": 855
                  },
                  {
                    "name": "if",
                    "line_number": 860
                  },
                  {
                    "name": "if",
                    "line_number": 870
                  },
                  {
                    "name": "if",
                    "line_number": 876
                  },
                  {
                    "name": "if",
                    "line_number": 881
                  },
                  {
                    "name": "I_Tactile",
                    "line_number": 882
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 837
                  },
                  {
                    "type": "if",
                    "line_number": 846
                  },
                  {
                    "type": "if",
                    "line_number": 853
                  },
                  {
                    "type": "if",
                    "line_number": 855
                  },
                  {
                    "type": "else",
                    "line_number": 857
                  },
                  {
                    "type": "if",
                    "line_number": 860
                  },
                  {
                    "type": "for",
                    "line_number": 869
                  },
                  {
                    "type": "if",
                    "line_number": 870
                  },
                  {
                    "type": "if",
                    "line_number": 876
                  },
                  {
                    "type": "if",
                    "line_number": 881
                  }
                ],
                "complexity": 12,
                "inputs": [
                  "player"
                ],
                "outputs": [
                  "player specific"
                ],
                "dependencies": [
                  "I_Tactile",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "end of game hell hack",
                "parameters": [
                  {
                    "type": "target->subsector->sector->special == 11 && damage >=",
                    "name": "target->health"
                  }
                ],
                "start_line": 837,
                "end_line": 840,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "target->health"
                ],
                "outputs": [
                  "end of game hell hack"
                ],
                "dependencies": []
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "oldammo",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 79
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 82
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 88
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 114
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 159
              },
              {
                "name": "gaveammo",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 173
              },
              {
                "name": "gaveweapon",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 174
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 182
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 195
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 234
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 241
              },
              {
                "name": "hits",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 256
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 260
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 265
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 297
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 304
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 310
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 316
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 323
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 327
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 330
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 344
              },
              {
                "name": "delta",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 345
              },
              {
                "name": "sound",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 346
              },
              {
                "name": "item",
                "type": "mobjtype_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 672
              },
              {
                "name": "ang",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 781
              },
              {
                "name": "saved",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 782
              },
              {
                "name": "thrust",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 784
              },
              {
                "name": "temp",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 785
              }
            ],
            "defines": [
              {
                "name": "BONUSADD",
                "value": "6",
                "line_number": 51
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/p_inter.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "p_inter.h",
          "type": "file",
          "size": 1002,
          "last_modified": "2024-09-05T16:00:04.311780",
          "path": "linuxdoom-1.10/p_inter.h",
          "readme": "# p_inter.h\n\nThis file contains functionality related to p_inter.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/p_inter.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "p_lights.c",
          "type": "file",
          "size": 6684,
          "last_modified": "2024-09-05T16:00:04.337792",
          "path": "linuxdoom-1.10/p_lights.c",
          "readme": "# p_lights.c\n\nThis file contains functionality related to p_lights.",
          "dependencies": [
            "m_random.h",
            "p_local.h",
            "r_state.h",
            "z_zone.h",
            "doomdef.h"
          ],
          "inputs": [
            "g",
            "bright",
            "sector",
            "fastOrSlow",
            "flick",
            "line",
            "flash",
            "!bright",
            "inSync"
          ],
          "outputs": [
            "surrounding sector"
          ],
          "content": {
            "functions": [
              {
                "name": "T_FireFlicker",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "fireflicker_t*",
                    "name": "flick"
                  }
                ],
                "start_line": 46,
                "end_line": 61,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "amount",
                    "array_size": null,
                    "line_number": 48
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 50
                  },
                  {
                    "name": "P_Random",
                    "line_number": 53
                  },
                  {
                    "name": "if",
                    "line_number": 55
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 50
                  },
                  {
                    "type": "if",
                    "line_number": 55
                  },
                  {
                    "type": "else",
                    "line_number": 57
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "flick"
                ],
                "outputs": [],
                "dependencies": [
                  "P_Random",
                  "if"
                ]
              },
              {
                "name": "P_SpawnFireFlicker",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "sector_t*",
                    "name": "sector"
                  }
                ],
                "start_line": 68,
                "end_line": 85,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "Z_Malloc",
                    "line_number": 76
                  },
                  {
                    "name": "sizeof",
                    "line_number": 76
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 78
                  },
                  {
                    "name": "P_FindMinSurroundingLight",
                    "line_number": 83
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "sector"
                ],
                "outputs": [],
                "dependencies": [
                  "P_AddThinker",
                  "P_FindMinSurroundingLight",
                  "Z_Malloc",
                  "sizeof"
                ]
              },
              {
                "name": "T_LightFlash",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "lightflash_t*",
                    "name": "flash"
                  }
                ],
                "start_line": 98,
                "end_line": 114,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 100
                  },
                  {
                    "name": "if",
                    "line_number": 103
                  },
                  {
                    "name": "P_Random",
                    "line_number": 106
                  },
                  {
                    "name": "P_Random",
                    "line_number": 111
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 100
                  },
                  {
                    "type": "if",
                    "line_number": 103
                  },
                  {
                    "type": "else",
                    "line_number": 108
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "flash"
                ],
                "outputs": [],
                "dependencies": [
                  "P_Random",
                  "if"
                ]
              },
              {
                "name": "P_SpawnLightFlash",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "sector_t*",
                    "name": "sector"
                  }
                ],
                "start_line": 124,
                "end_line": 143,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "Z_Malloc",
                    "line_number": 131
                  },
                  {
                    "name": "sizeof",
                    "line_number": 131
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 133
                  },
                  {
                    "name": "P_FindMinSurroundingLight",
                    "line_number": 139
                  },
                  {
                    "name": "P_Random",
                    "line_number": 142
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "sector"
                ],
                "outputs": [],
                "dependencies": [
                  "P_AddThinker",
                  "Z_Malloc",
                  "P_FindMinSurroundingLight",
                  "P_Random",
                  "sizeof"
                ]
              },
              {
                "name": "T_StrobeFlash",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "strobe_t*",
                    "name": "flash"
                  }
                ],
                "start_line": 155,
                "end_line": 171,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 157
                  },
                  {
                    "name": "if",
                    "line_number": 160
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 157
                  },
                  {
                    "type": "if",
                    "line_number": 160
                  },
                  {
                    "type": "else",
                    "line_number": 165
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "flash"
                ],
                "outputs": [],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "P_SpawnStrobeFlash",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "sector_t*",
                    "name": "sector"
                  },
                  {
                    "type": "int",
                    "name": "fastOrSlow"
                  },
                  {
                    "type": "int",
                    "name": "inSync"
                  }
                ],
                "start_line": 180,
                "end_line": 205,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "Z_Malloc",
                    "line_number": 184
                  },
                  {
                    "name": "sizeof",
                    "line_number": 184
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 186
                  },
                  {
                    "name": "P_FindMinSurroundingLight",
                    "line_number": 193
                  },
                  {
                    "name": "if",
                    "line_number": 195
                  },
                  {
                    "name": "if",
                    "line_number": 201
                  },
                  {
                    "name": "P_Random",
                    "line_number": 202
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 195
                  },
                  {
                    "type": "if",
                    "line_number": 201
                  },
                  {
                    "type": "else",
                    "line_number": 203
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "sector",
                  "fastOrSlow",
                  "inSync"
                ],
                "outputs": [],
                "dependencies": [
                  "P_AddThinker",
                  "Z_Malloc",
                  "if",
                  "P_FindMinSurroundingLight",
                  "P_Random",
                  "sizeof"
                ]
              },
              {
                "name": "EV_StartLightStrobing",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  }
                ],
                "start_line": 215,
                "end_line": 229,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "secnum",
                    "array_size": null,
                    "line_number": 217
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 221
                  },
                  {
                    "name": "P_FindSectorFromLineTag",
                    "line_number": 221
                  },
                  {
                    "name": "if",
                    "line_number": 224
                  },
                  {
                    "name": "P_SpawnStrobeFlash",
                    "line_number": 227
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 221
                  },
                  {
                    "type": "if",
                    "line_number": 224
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "line"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SpawnStrobeFlash",
                  "while",
                  "P_FindSectorFromLineTag",
                  "if"
                ]
              },
              {
                "name": "EV_TurnTagLightsOff",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  }
                ],
                "start_line": 236,
                "end_line": 264,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 238
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 239
                  },
                  {
                    "type": "int",
                    "name": "min",
                    "array_size": null,
                    "line_number": 240
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 247
                  },
                  {
                    "name": "if",
                    "line_number": 249
                  },
                  {
                    "name": "for",
                    "line_number": 252
                  },
                  {
                    "name": "getNextSector",
                    "line_number": 255
                  },
                  {
                    "name": "if",
                    "line_number": 256
                  },
                  {
                    "name": "if",
                    "line_number": 258
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 247
                  },
                  {
                    "type": "if",
                    "line_number": 249
                  },
                  {
                    "type": "for",
                    "line_number": 252
                  },
                  {
                    "type": "if",
                    "line_number": 256
                  },
                  {
                    "type": "if",
                    "line_number": 258
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "line"
                ],
                "outputs": [],
                "dependencies": [
                  "getNextSector",
                  "if",
                  "for"
                ]
              },
              {
                "name": "EV_LightTurnOn",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  },
                  {
                    "type": "int",
                    "name": "bright"
                  }
                ],
                "start_line": 270,
                "end_line": 304,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 272
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 273
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 280
                  },
                  {
                    "name": "if",
                    "line_number": 282
                  },
                  {
                    "name": "if",
                    "line_number": 287
                  },
                  {
                    "name": "for",
                    "line_number": 289
                  },
                  {
                    "name": "getNextSector",
                    "line_number": 292
                  },
                  {
                    "name": "if",
                    "line_number": 294
                  },
                  {
                    "name": "if",
                    "line_number": 297
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 280
                  },
                  {
                    "type": "if",
                    "line_number": 282
                  },
                  {
                    "type": "for",
                    "line_number": 285
                  },
                  {
                    "type": "if",
                    "line_number": 287
                  },
                  {
                    "type": "for",
                    "line_number": 289
                  },
                  {
                    "type": "if",
                    "line_number": 294
                  },
                  {
                    "type": "if",
                    "line_number": 297
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "line",
                  "bright"
                ],
                "outputs": [],
                "dependencies": [
                  "getNextSector",
                  "if",
                  "for"
                ]
              },
              {
                "name": "if",
                "return_type": "surrounding sector",
                "parameters": [
                  {
                    "type": "",
                    "name": "!bright"
                  }
                ],
                "start_line": 289,
                "end_line": 302,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 291
                  },
                  {
                    "name": "getNextSector",
                    "line_number": 294
                  },
                  {
                    "name": "if",
                    "line_number": 296
                  },
                  {
                    "name": "if",
                    "line_number": 299
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 291
                  },
                  {
                    "type": "if",
                    "line_number": 296
                  },
                  {
                    "type": "if",
                    "line_number": 299
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "!bright"
                ],
                "outputs": [
                  "surrounding sector"
                ],
                "dependencies": [
                  "getNextSector",
                  "if",
                  "for"
                ]
              },
              {
                "name": "T_Glow",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "glow_t*",
                    "name": "g"
                  }
                ],
                "start_line": 314,
                "end_line": 338,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 316
                  },
                  {
                    "name": "if",
                    "line_number": 321
                  },
                  {
                    "name": "if",
                    "line_number": 331
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 321
                  },
                  {
                    "type": "if",
                    "line_number": 331
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "g"
                ],
                "outputs": [],
                "dependencies": [
                  "switch",
                  "if"
                ]
              },
              {
                "name": "P_SpawnGlowingLight",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "sector_t*",
                    "name": "sector"
                  }
                ],
                "start_line": 341,
                "end_line": 356,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "Z_Malloc",
                    "line_number": 345
                  },
                  {
                    "name": "sizeof",
                    "line_number": 345
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 347
                  },
                  {
                    "name": "P_FindMinSurroundingLight",
                    "line_number": 350
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "sector"
                ],
                "outputs": [],
                "dependencies": [
                  "P_AddThinker",
                  "P_FindMinSurroundingLight",
                  "Z_Malloc",
                  "sizeof"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "amount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 48
              },
              {
                "name": "secnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 217
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 238
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 239
              },
              {
                "name": "min",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 240
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 275
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 276
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/p_lights.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "p_local.h",
          "type": "file",
          "size": 5955,
          "last_modified": "2024-09-05T16:00:04.362311",
          "path": "linuxdoom-1.10/p_local.h",
          "readme": "# p_local.h\n\nThis file contains functionality related to p_local.",
          "dependencies": [
            "r_local.h",
            "p_spec.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "thinkercap",
                "type": "thinker_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 70
              },
              {
                "name": "iquehead",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 103
              },
              {
                "name": "iquetail",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 104
              },
              {
                "name": "x",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 137
              },
              {
                "name": "y",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 138
              },
              {
                "name": "dx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 139
              },
              {
                "name": "dy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 140
              },
              {
                "name": "frac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 146
              },
              {
                "name": "isaline",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 147
              },
              {
                "name": "opentop",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 168
              },
              {
                "name": "openbottom",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 169
              },
              {
                "name": "openrange",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 170
              },
              {
                "name": "lowfloor",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 171
              },
              {
                "name": "trace",
                "type": "divline_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 182
              },
              {
                "name": "floatok",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 203
              },
              {
                "name": "tmfloorz",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 204
              },
              {
                "name": "tmceilingz",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 205
              },
              {
                "name": "bmapwidth",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 249
              },
              {
                "name": "bmapheight",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 250
              },
              {
                "name": "bmaporgx",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 251
              },
              {
                "name": "bmaporgy",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 252
              }
            ],
            "defines": [
              {
                "name": "FLOATSPEED",
                "value": "(FRACUNIT*4)",
                "line_number": 30
              },
              {
                "name": "MAXHEALTH",
                "value": "100",
                "line_number": 33
              },
              {
                "name": "VIEWHEIGHT",
                "value": "(41*FRACUNIT)",
                "line_number": 34
              },
              {
                "name": "MAPBLOCKUNITS",
                "value": "128",
                "line_number": 38
              },
              {
                "name": "MAPBLOCKSIZE",
                "value": "(MAPBLOCKUNITS*FRACUNIT)",
                "line_number": 39
              },
              {
                "name": "MAPBLOCKSHIFT",
                "value": "(FRACBITS+7)",
                "line_number": 40
              },
              {
                "name": "MAPBMASK",
                "value": "(MAPBLOCKSIZE-1)",
                "line_number": 41
              },
              {
                "name": "MAPBTOFRAC",
                "value": "(MAPBLOCKSHIFT-FRACBITS)",
                "line_number": 42
              },
              {
                "name": "PLAYERRADIUS",
                "value": "16*FRACUNIT",
                "line_number": 46
              },
              {
                "name": "MAXRADIUS",
                "value": "32*FRACUNIT",
                "line_number": 51
              },
              {
                "name": "GRAVITY",
                "value": "FRACUNIT",
                "line_number": 53
              },
              {
                "name": "MAXMOVE",
                "value": "(30*FRACUNIT)",
                "line_number": 54
              },
              {
                "name": "USERANGE",
                "value": "(64*FRACUNIT)",
                "line_number": 56
              },
              {
                "name": "MELEERANGE",
                "value": "(64*FRACUNIT)",
                "line_number": 57
              },
              {
                "name": "MISSILERANGE",
                "value": "(32*64*FRACUNIT)",
                "line_number": 58
              },
              {
                "name": "BASETHRESHOLD",
                "value": "100",
                "line_number": 61
              },
              {
                "name": "ONFLOORZ",
                "value": "MININT",
                "line_number": 95
              },
              {
                "name": "ONCEILINGZ",
                "value": "MAXINT",
                "line_number": 96
              },
              {
                "name": "ITEMQUESIZE",
                "value": "128",
                "line_number": 99
              },
              {
                "name": "MAXINTERCEPTS",
                "value": "128",
                "line_number": 154
              },
              {
                "name": "PT_ADDLINES",
                "value": "1",
                "line_number": 178
              },
              {
                "name": "PT_ADDTHINGS",
                "value": "2",
                "line_number": 179
              },
              {
                "name": "PT_EARLYOUT",
                "value": "4",
                "line_number": 180
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/p_local.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "p_map.c",
          "type": "file",
          "size": 28315,
          "last_modified": "2024-09-05T16:00:04.388311",
          "path": "linuxdoom-1.10/p_map.c",
          "readme": "# p_map.c\n\nThis file contains functionality related to p_map.",
          "dependencies": [
            "m_random.h",
            "p_local.h",
            "m_bbox.h",
            "sounds.h",
            "r_state.h",
            "i_system.h",
            "stdlib.h",
            "doomstat.h",
            "s_sound.h",
            "doomdef.h"
          ],
          "inputs": [
            "ld->special",
            "angle",
            "spot",
            "MF_DROPPED",
            "t1",
            "sector",
            "mo",
            "MF_SPECIAL",
            "0",
            "player",
            "tmceilingz",
            "FRACUNIT+1",
            "source",
            "x",
            "in",
            "y",
            "crunch",
            "damage",
            "distance",
            "MF_SKULLFLY",
            "thing",
            "MF_MISSILE",
            "slope",
            "ld"
          ],
          "outputs": [
            "check for special pickup",
            "check for skulls slamming into things",
            "crunch dropped items",
            "move up to the wall",
            "add it to the list",
            "ceiling heights",
            "trace along the three leading corners",
            "crunch bodies to giblets",
            "fixed_t",
            "boolean",
            "missiles can hit other things"
          ],
          "content": {
            "functions": [
              {
                "name": "PIT_StompThing",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  }
                ],
                "start_line": 81,
                "end_line": 108,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "blockdist",
                    "array_size": null,
                    "line_number": 83
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 86
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 94
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 99
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 103
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 107
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 85
                  },
                  {
                    "name": "if",
                    "line_number": 90
                  },
                  {
                    "name": "abs",
                    "line_number": 90
                  },
                  {
                    "name": "abs",
                    "line_number": 91
                  },
                  {
                    "name": "if",
                    "line_number": 98
                  },
                  {
                    "name": "if",
                    "line_number": 102
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 105
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 85
                  },
                  {
                    "type": "if",
                    "line_number": 90
                  },
                  {
                    "type": "if",
                    "line_number": 98
                  },
                  {
                    "type": "if",
                    "line_number": 102
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "thing"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "abs",
                  "P_DamageMobj",
                  "if"
                ]
              },
              {
                "name": "P_TeleportMove",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  },
                  {
                    "type": "fixed_t",
                    "name": "x"
                  },
                  {
                    "type": "fixed_t",
                    "name": "y"
                  }
                ],
                "start_line": 114,
                "end_line": 173,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "xl",
                    "array_size": null,
                    "line_number": 116
                  },
                  {
                    "type": "int",
                    "name": "xh",
                    "array_size": null,
                    "line_number": 117
                  },
                  {
                    "type": "int",
                    "name": "yl",
                    "array_size": null,
                    "line_number": 118
                  },
                  {
                    "type": "int",
                    "name": "yh",
                    "array_size": null,
                    "line_number": 119
                  },
                  {
                    "type": "int",
                    "name": "bx",
                    "array_size": null,
                    "line_number": 120
                  },
                  {
                    "type": "int",
                    "name": "by",
                    "array_size": null,
                    "line_number": 121
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 159
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 172
                  }
                ],
                "function_calls": [
                  {
                    "name": "R_PointInSubsector",
                    "line_number": 137
                  },
                  {
                    "name": "for",
                    "line_number": 156
                  },
                  {
                    "name": "for",
                    "line_number": 157
                  },
                  {
                    "name": "if",
                    "line_number": 158
                  },
                  {
                    "name": "P_BlockThingsIterator",
                    "line_number": 158
                  },
                  {
                    "name": "P_UnsetThingPosition",
                    "line_number": 163
                  },
                  {
                    "name": "P_SetThingPosition",
                    "line_number": 170
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 156
                  },
                  {
                    "type": "for",
                    "line_number": 157
                  },
                  {
                    "type": "if",
                    "line_number": 158
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "thing",
                  "x",
                  "y"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "R_PointInSubsector",
                  "if",
                  "P_UnsetThingPosition",
                  "for",
                  "P_SetThingPosition",
                  "P_BlockThingsIterator"
                ]
              },
              {
                "name": "PIT_CheckLine",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "ld"
                  }
                ],
                "start_line": 189,
                "end_line": 247,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 195
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 198
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 212
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 217
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 220
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 246
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 191
                  },
                  {
                    "name": "if",
                    "line_number": 197
                  },
                  {
                    "name": "P_BoxOnLineSide",
                    "line_number": 197
                  },
                  {
                    "name": "if",
                    "line_number": 211
                  },
                  {
                    "name": "if",
                    "line_number": 214
                  },
                  {
                    "name": "if",
                    "line_number": 216
                  },
                  {
                    "name": "if",
                    "line_number": 219
                  },
                  {
                    "name": "P_LineOpening",
                    "line_number": 224
                  },
                  {
                    "name": "if",
                    "line_number": 227
                  },
                  {
                    "name": "if",
                    "line_number": 233
                  },
                  {
                    "name": "if",
                    "line_number": 236
                  },
                  {
                    "name": "if",
                    "line_number": 240
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 191
                  },
                  {
                    "type": "if",
                    "line_number": 197
                  },
                  {
                    "type": "if",
                    "line_number": 206
                  },
                  {
                    "type": "if",
                    "line_number": 211
                  },
                  {
                    "type": "if",
                    "line_number": 214
                  },
                  {
                    "type": "if",
                    "line_number": 216
                  },
                  {
                    "type": "if",
                    "line_number": 219
                  },
                  {
                    "type": "if",
                    "line_number": 227
                  },
                  {
                    "type": "if",
                    "line_number": 233
                  },
                  {
                    "type": "if",
                    "line_number": 236
                  },
                  {
                    "type": "if",
                    "line_number": 239
                  },
                  {
                    "type": "if",
                    "line_number": 240
                  }
                ],
                "complexity": 14,
                "inputs": [
                  "ld"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "P_BoxOnLineSide",
                  "P_LineOpening",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "ceiling heights",
                "parameters": [
                  {
                    "type": "opentop <",
                    "name": "tmceilingz"
                  }
                ],
                "start_line": 226,
                "end_line": 230,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "tmceilingz"
                ],
                "outputs": [
                  "ceiling heights"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "add it to the list",
                "parameters": [
                  {
                    "type": "",
                    "name": "ld->special"
                  }
                ],
                "start_line": 239,
                "end_line": 243,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "ld->special"
                ],
                "outputs": [
                  "add it to the list"
                ],
                "dependencies": []
              },
              {
                "name": "PIT_CheckThing",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  }
                ],
                "start_line": 252,
                "end_line": 343,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "blockdist",
                    "array_size": null,
                    "line_number": 254
                  },
                  {
                    "type": "boolean",
                    "name": "solid",
                    "array_size": null,
                    "line_number": 255
                  },
                  {
                    "type": "int",
                    "name": "damage",
                    "array_size": null,
                    "line_number": 256
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 259
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 267
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 272
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 286
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 295
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 297
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 306
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 312
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 327
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 258
                  },
                  {
                    "name": "if",
                    "line_number": 263
                  },
                  {
                    "name": "abs",
                    "line_number": 263
                  },
                  {
                    "name": "abs",
                    "line_number": 264
                  },
                  {
                    "name": "if",
                    "line_number": 271
                  },
                  {
                    "name": "if",
                    "line_number": 275
                  },
                  {
                    "name": "P_Random",
                    "line_number": 277
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 279
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 284
                  },
                  {
                    "name": "if",
                    "line_number": 291
                  },
                  {
                    "name": "if",
                    "line_number": 294
                  },
                  {
                    "name": "if",
                    "line_number": 296
                  },
                  {
                    "name": "if",
                    "line_number": 299
                  },
                  {
                    "name": "if",
                    "line_number": 305
                  },
                  {
                    "name": "if",
                    "line_number": 308
                  },
                  {
                    "name": "if",
                    "line_number": 316
                  },
                  {
                    "name": "P_Random",
                    "line_number": 323
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 324
                  },
                  {
                    "name": "if",
                    "line_number": 331
                  },
                  {
                    "name": "if",
                    "line_number": 334
                  },
                  {
                    "name": "P_TouchSpecialThing",
                    "line_number": 337
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 258
                  },
                  {
                    "type": "if",
                    "line_number": 263
                  },
                  {
                    "type": "if",
                    "line_number": 271
                  },
                  {
                    "type": "for",
                    "line_number": 274
                  },
                  {
                    "type": "if",
                    "line_number": 275
                  },
                  {
                    "type": "if",
                    "line_number": 291
                  },
                  {
                    "type": "if",
                    "line_number": 293
                  },
                  {
                    "type": "if",
                    "line_number": 294
                  },
                  {
                    "type": "if",
                    "line_number": 296
                  },
                  {
                    "type": "if",
                    "line_number": 299
                  },
                  {
                    "type": "if",
                    "line_number": 305
                  },
                  {
                    "type": "if",
                    "line_number": 308
                  },
                  {
                    "type": "if",
                    "line_number": 316
                  },
                  {
                    "type": "for",
                    "line_number": 330
                  },
                  {
                    "type": "if",
                    "line_number": 331
                  },
                  {
                    "type": "if",
                    "line_number": 334
                  }
                ],
                "complexity": 15,
                "inputs": [
                  "thing"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "abs",
                  "P_TouchSpecialThing",
                  "if",
                  "P_DamageMobj",
                  "P_SetMobjState",
                  "P_Random"
                ]
              },
              {
                "name": "if",
                "return_type": "check for skulls slamming into things",
                "parameters": [
                  {
                    "type": "tmthing->flags &",
                    "name": "MF_SKULLFLY"
                  }
                ],
                "start_line": 274,
                "end_line": 286,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 285
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_Random",
                    "line_number": 276
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 278
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 283
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "MF_SKULLFLY"
                ],
                "outputs": [
                  "check for skulls slamming into things"
                ],
                "dependencies": [
                  "P_DamageMobj",
                  "P_SetMobjState",
                  "P_Random"
                ]
              },
              {
                "name": "if",
                "return_type": "missiles can hit other things",
                "parameters": [
                  {
                    "type": "tmthing->flags &",
                    "name": "MF_MISSILE"
                  }
                ],
                "start_line": 290,
                "end_line": 327,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 294
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 296
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 305
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 311
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 326
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 293
                  },
                  {
                    "name": "if",
                    "line_number": 295
                  },
                  {
                    "name": "if",
                    "line_number": 298
                  },
                  {
                    "name": "if",
                    "line_number": 304
                  },
                  {
                    "name": "if",
                    "line_number": 307
                  },
                  {
                    "name": "if",
                    "line_number": 315
                  },
                  {
                    "name": "P_Random",
                    "line_number": 322
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 323
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 292
                  },
                  {
                    "type": "if",
                    "line_number": 293
                  },
                  {
                    "type": "if",
                    "line_number": 295
                  },
                  {
                    "type": "if",
                    "line_number": 298
                  },
                  {
                    "type": "if",
                    "line_number": 304
                  },
                  {
                    "type": "if",
                    "line_number": 307
                  },
                  {
                    "type": "if",
                    "line_number": 315
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "MF_MISSILE"
                ],
                "outputs": [
                  "missiles can hit other things"
                ],
                "dependencies": [
                  "P_DamageMobj",
                  "P_Random",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "check for special pickup",
                "parameters": [
                  {
                    "type": "thing->flags &",
                    "name": "MF_SPECIAL"
                  }
                ],
                "start_line": 330,
                "end_line": 339,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 333
                  },
                  {
                    "name": "P_TouchSpecialThing",
                    "line_number": 336
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 333
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "MF_SPECIAL"
                ],
                "outputs": [
                  "check for special pickup"
                ],
                "dependencies": [
                  "P_TouchSpecialThing",
                  "if"
                ]
              },
              {
                "name": "P_CheckPosition",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  },
                  {
                    "type": "fixed_t",
                    "name": "x"
                  },
                  {
                    "type": "fixed_t",
                    "name": "y"
                  }
                ],
                "start_line": 374,
                "end_line": 438,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "xl",
                    "array_size": null,
                    "line_number": 376
                  },
                  {
                    "type": "int",
                    "name": "xh",
                    "array_size": null,
                    "line_number": 377
                  },
                  {
                    "type": "int",
                    "name": "yl",
                    "array_size": null,
                    "line_number": 378
                  },
                  {
                    "type": "int",
                    "name": "yh",
                    "array_size": null,
                    "line_number": 379
                  },
                  {
                    "type": "int",
                    "name": "bx",
                    "array_size": null,
                    "line_number": 380
                  },
                  {
                    "type": "int",
                    "name": "by",
                    "array_size": null,
                    "line_number": 381
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 409
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 424
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 435
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 437
                  }
                ],
                "function_calls": [
                  {
                    "name": "R_PointInSubsector",
                    "line_number": 395
                  },
                  {
                    "name": "if",
                    "line_number": 408
                  },
                  {
                    "name": "for",
                    "line_number": 421
                  },
                  {
                    "name": "for",
                    "line_number": 422
                  },
                  {
                    "name": "if",
                    "line_number": 423
                  },
                  {
                    "name": "P_BlockThingsIterator",
                    "line_number": 423
                  },
                  {
                    "name": "for",
                    "line_number": 432
                  },
                  {
                    "name": "for",
                    "line_number": 433
                  },
                  {
                    "name": "if",
                    "line_number": 434
                  },
                  {
                    "name": "P_BlockLinesIterator",
                    "line_number": 434
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 408
                  },
                  {
                    "type": "for",
                    "line_number": 421
                  },
                  {
                    "type": "for",
                    "line_number": 422
                  },
                  {
                    "type": "if",
                    "line_number": 423
                  },
                  {
                    "type": "for",
                    "line_number": 432
                  },
                  {
                    "type": "for",
                    "line_number": 433
                  },
                  {
                    "type": "if",
                    "line_number": 434
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "thing",
                  "x",
                  "y"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "R_PointInSubsector",
                  "P_BlockLinesIterator",
                  "for",
                  "if",
                  "P_BlockThingsIterator"
                ]
              },
              {
                "name": "P_TryMove",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  },
                  {
                    "type": "fixed_t",
                    "name": "x"
                  },
                  {
                    "type": "fixed_t",
                    "name": "y"
                  }
                ],
                "start_line": 450,
                "end_line": 513,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "oldx",
                    "array_size": null,
                    "line_number": 452
                  },
                  {
                    "type": "fixed_t",
                    "name": "oldy",
                    "array_size": null,
                    "line_number": 453
                  },
                  {
                    "type": "int",
                    "name": "side",
                    "array_size": null,
                    "line_number": 454
                  },
                  {
                    "type": "int",
                    "name": "oldside",
                    "array_size": null,
                    "line_number": 455
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 460
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 465
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 471
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 475
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 479
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 512
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 459
                  },
                  {
                    "name": "P_CheckPosition",
                    "line_number": 459
                  },
                  {
                    "name": "if",
                    "line_number": 462
                  },
                  {
                    "name": "if",
                    "line_number": 464
                  },
                  {
                    "name": "if",
                    "line_number": 469
                  },
                  {
                    "name": "if",
                    "line_number": 473
                  },
                  {
                    "name": "if",
                    "line_number": 477
                  },
                  {
                    "name": "P_UnsetThingPosition",
                    "line_number": 484
                  },
                  {
                    "name": "P_SetThingPosition",
                    "line_number": 493
                  },
                  {
                    "name": "if",
                    "line_number": 496
                  },
                  {
                    "name": "while",
                    "line_number": 498
                  },
                  {
                    "name": "P_PointOnLineSide",
                    "line_number": 502
                  },
                  {
                    "name": "P_PointOnLineSide",
                    "line_number": 503
                  },
                  {
                    "name": "if",
                    "line_number": 504
                  },
                  {
                    "name": "if",
                    "line_number": 506
                  },
                  {
                    "name": "P_CrossSpecialLine",
                    "line_number": 507
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 459
                  },
                  {
                    "type": "if",
                    "line_number": 462
                  },
                  {
                    "type": "if",
                    "line_number": 464
                  },
                  {
                    "type": "if",
                    "line_number": 469
                  },
                  {
                    "type": "if",
                    "line_number": 473
                  },
                  {
                    "type": "if",
                    "line_number": 477
                  },
                  {
                    "type": "if",
                    "line_number": 495
                  },
                  {
                    "type": "if",
                    "line_number": 496
                  },
                  {
                    "type": "while",
                    "line_number": 498
                  },
                  {
                    "type": "if",
                    "line_number": 500
                  },
                  {
                    "type": "if",
                    "line_number": 504
                  },
                  {
                    "type": "if",
                    "line_number": 506
                  }
                ],
                "complexity": 14,
                "inputs": [
                  "thing",
                  "x",
                  "y"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "while",
                  "if",
                  "P_UnsetThingPosition",
                  "P_SetThingPosition",
                  "P_CheckPosition",
                  "P_PointOnLineSide",
                  "P_CrossSpecialLine"
                ]
              },
              {
                "name": "P_ThingHeightClip",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  }
                ],
                "start_line": 530,
                "end_line": 558,
                "local_variables": [
                  {
                    "type": "boolean",
                    "name": "onfloor",
                    "array_size": null,
                    "line_number": 532
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 555
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 557
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_CheckPosition",
                    "line_number": 536
                  },
                  {
                    "name": "if",
                    "line_number": 542
                  },
                  {
                    "name": "if",
                    "line_number": 550
                  },
                  {
                    "name": "if",
                    "line_number": 554
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 542
                  },
                  {
                    "type": "else",
                    "line_number": 547
                  },
                  {
                    "type": "if",
                    "line_number": 550
                  },
                  {
                    "type": "if",
                    "line_number": 554
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "thing"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "P_CheckPosition",
                  "if"
                ]
              },
              {
                "name": "P_HitSlideLine",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "ld"
                  }
                ],
                "start_line": 584,
                "end_line": 630,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "side",
                    "array_size": null,
                    "line_number": 586
                  },
                  {
                    "type": "angle_t",
                    "name": "lineangle",
                    "array_size": null,
                    "line_number": 588
                  },
                  {
                    "type": "angle_t",
                    "name": "moveangle",
                    "array_size": null,
                    "line_number": 589
                  },
                  {
                    "type": "angle_t",
                    "name": "deltaangle",
                    "array_size": null,
                    "line_number": 590
                  },
                  {
                    "type": "fixed_t",
                    "name": "movelen",
                    "array_size": null,
                    "line_number": 592
                  },
                  {
                    "type": "fixed_t",
                    "name": "newlen",
                    "array_size": null,
                    "line_number": 593
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 596
                  },
                  {
                    "name": "if",
                    "line_number": 602
                  },
                  {
                    "name": "P_PointOnLineSide",
                    "line_number": 608
                  },
                  {
                    "name": "R_PointToAngle2",
                    "line_number": 610
                  },
                  {
                    "name": "if",
                    "line_number": 612
                  },
                  {
                    "name": "R_PointToAngle2",
                    "line_number": 615
                  },
                  {
                    "name": "if",
                    "line_number": 618
                  },
                  {
                    "name": "I_Error",
                    "line_number": 620
                  },
                  {
                    "name": "P_AproxDistance",
                    "line_number": 625
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 626
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 628
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 629
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 596
                  },
                  {
                    "type": "if",
                    "line_number": 602
                  },
                  {
                    "type": "if",
                    "line_number": 612
                  },
                  {
                    "type": "if",
                    "line_number": 618
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "ld"
                ],
                "outputs": [],
                "dependencies": [
                  "P_AproxDistance",
                  "if",
                  "I_Error",
                  "P_PointOnLineSide",
                  "R_PointToAngle2",
                  "FixedMul"
                ]
              },
              {
                "name": "PTR_SlideTraverse",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "intercept_t*",
                    "name": "in"
                  }
                ],
                "start_line": 636,
                "end_line": 682,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 650
                  },
                  {
                    "type": "goto",
                    "name": "isblocking",
                    "array_size": null,
                    "line_number": 652
                  },
                  {
                    "type": "goto",
                    "name": "isblocking",
                    "array_size": null,
                    "line_number": 659
                  },
                  {
                    "type": "goto",
                    "name": "isblocking",
                    "array_size": null,
                    "line_number": 662
                  },
                  {
                    "type": "goto",
                    "name": "isblocking",
                    "array_size": null,
                    "line_number": 665
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 668
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 681
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 640
                  },
                  {
                    "name": "I_Error",
                    "line_number": 641
                  },
                  {
                    "name": "if",
                    "line_number": 645
                  },
                  {
                    "name": "if",
                    "line_number": 647
                  },
                  {
                    "name": "P_PointOnLineSide",
                    "line_number": 647
                  },
                  {
                    "name": "P_LineOpening",
                    "line_number": 656
                  },
                  {
                    "name": "if",
                    "line_number": 658
                  },
                  {
                    "name": "if",
                    "line_number": 661
                  },
                  {
                    "name": "if",
                    "line_number": 664
                  },
                  {
                    "name": "if",
                    "line_number": 673
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 640
                  },
                  {
                    "type": "if",
                    "line_number": 645
                  },
                  {
                    "type": "if",
                    "line_number": 647
                  },
                  {
                    "type": "if",
                    "line_number": 658
                  },
                  {
                    "type": "if",
                    "line_number": 661
                  },
                  {
                    "type": "if",
                    "line_number": 664
                  },
                  {
                    "type": "if",
                    "line_number": 671
                  },
                  {
                    "type": "if",
                    "line_number": 673
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "in"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "P_LineOpening",
                  "I_Error",
                  "P_PointOnLineSide",
                  "if"
                ]
              },
              {
                "name": "P_SlideMove",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 695,
                "end_line": 788,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "leadx",
                    "array_size": null,
                    "line_number": 697
                  },
                  {
                    "type": "fixed_t",
                    "name": "leady",
                    "array_size": null,
                    "line_number": 698
                  },
                  {
                    "type": "fixed_t",
                    "name": "trailx",
                    "array_size": null,
                    "line_number": 699
                  },
                  {
                    "type": "fixed_t",
                    "name": "traily",
                    "array_size": null,
                    "line_number": 700
                  },
                  {
                    "type": "fixed_t",
                    "name": "newx",
                    "array_size": null,
                    "line_number": 701
                  },
                  {
                    "type": "fixed_t",
                    "name": "newy",
                    "array_size": null,
                    "line_number": 702
                  },
                  {
                    "type": "int",
                    "name": "hitcount",
                    "array_size": null,
                    "line_number": 703
                  },
                  {
                    "type": "goto",
                    "name": "stairstep",
                    "array_size": null,
                    "line_number": 710
                  },
                  {
                    "type": "goto",
                    "name": "stairstep",
                    "array_size": null,
                    "line_number": 763
                  },
                  {
                    "type": "goto",
                    "name": "retry",
                    "array_size": null,
                    "line_number": 786
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 709
                  },
                  {
                    "name": "if",
                    "line_number": 714
                  },
                  {
                    "name": "if",
                    "line_number": 725
                  },
                  {
                    "name": "P_PathTraverse",
                    "line_number": 738
                  },
                  {
                    "name": "P_PathTraverse",
                    "line_number": 740
                  },
                  {
                    "name": "P_PathTraverse",
                    "line_number": 742
                  },
                  {
                    "name": "if",
                    "line_number": 746
                  },
                  {
                    "name": "if",
                    "line_number": 750
                  },
                  {
                    "name": "P_TryMove",
                    "line_number": 750
                  },
                  {
                    "name": "P_TryMove",
                    "line_number": 751
                  },
                  {
                    "name": "if",
                    "line_number": 757
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 759
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 760
                  },
                  {
                    "name": "if",
                    "line_number": 762
                  },
                  {
                    "name": "P_TryMove",
                    "line_number": 762
                  },
                  {
                    "name": "if",
                    "line_number": 770
                  },
                  {
                    "name": "if",
                    "line_number": 773
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 776
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 777
                  },
                  {
                    "name": "P_HitSlideLine",
                    "line_number": 779
                  },
                  {
                    "name": "if",
                    "line_number": 784
                  },
                  {
                    "name": "P_TryMove",
                    "line_number": 784
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 709
                  },
                  {
                    "type": "if",
                    "line_number": 714
                  },
                  {
                    "type": "else",
                    "line_number": 719
                  },
                  {
                    "type": "if",
                    "line_number": 725
                  },
                  {
                    "type": "else",
                    "line_number": 730
                  },
                  {
                    "type": "if",
                    "line_number": 746
                  },
                  {
                    "type": "if",
                    "line_number": 750
                  },
                  {
                    "type": "if",
                    "line_number": 757
                  },
                  {
                    "type": "if",
                    "line_number": 762
                  },
                  {
                    "type": "if",
                    "line_number": 770
                  },
                  {
                    "type": "if",
                    "line_number": 773
                  },
                  {
                    "type": "if",
                    "line_number": 784
                  }
                ],
                "complexity": 11,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_TryMove",
                  "P_HitSlideLine",
                  "P_PathTraverse",
                  "FixedMul"
                ]
              },
              {
                "name": "if",
                "return_type": "trace along the three leading corners",
                "parameters": [
                  {
                    "type": "mo->momx >",
                    "name": "0"
                  }
                ],
                "start_line": 713,
                "end_line": 717,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "0"
                ],
                "outputs": [
                  "trace along the three leading corners"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "move up to the wall",
                "parameters": [
                  {
                    "type": "bestslidefrac ==",
                    "name": "FRACUNIT+1"
                  }
                ],
                "start_line": 745,
                "end_line": 752,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 749
                  },
                  {
                    "name": "P_TryMove",
                    "line_number": 749
                  },
                  {
                    "name": "P_TryMove",
                    "line_number": 750
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 749
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "FRACUNIT+1"
                ],
                "outputs": [
                  "move up to the wall"
                ],
                "dependencies": [
                  "P_TryMove",
                  "if"
                ]
              },
              {
                "name": "PTR_AimTraverse",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "intercept_t*",
                    "name": "in"
                  }
                ],
                "start_line": 815,
                "end_line": 892,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "slope",
                    "array_size": null,
                    "line_number": 819
                  },
                  {
                    "type": "fixed_t",
                    "name": "thingtopslope",
                    "array_size": null,
                    "line_number": 820
                  },
                  {
                    "type": "fixed_t",
                    "name": "thingbottomslope",
                    "array_size": null,
                    "line_number": 821
                  },
                  {
                    "type": "fixed_t",
                    "name": "dist",
                    "array_size": null,
                    "line_number": 822
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 829
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 837
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 856
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 858
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 864
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 867
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 874
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 879
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 891
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 824
                  },
                  {
                    "name": "if",
                    "line_number": 828
                  },
                  {
                    "name": "P_LineOpening",
                    "line_number": 834
                  },
                  {
                    "name": "if",
                    "line_number": 836
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 839
                  },
                  {
                    "name": "if",
                    "line_number": 841
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 843
                  },
                  {
                    "name": "if",
                    "line_number": 844
                  },
                  {
                    "name": "if",
                    "line_number": 848
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 850
                  },
                  {
                    "name": "if",
                    "line_number": 851
                  },
                  {
                    "name": "if",
                    "line_number": 855
                  },
                  {
                    "name": "if",
                    "line_number": 863
                  },
                  {
                    "name": "if",
                    "line_number": 866
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 870
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 871
                  },
                  {
                    "name": "if",
                    "line_number": 873
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 876
                  },
                  {
                    "name": "if",
                    "line_number": 878
                  },
                  {
                    "name": "if",
                    "line_number": 882
                  },
                  {
                    "name": "if",
                    "line_number": 885
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 824
                  },
                  {
                    "type": "if",
                    "line_number": 828
                  },
                  {
                    "type": "if",
                    "line_number": 836
                  },
                  {
                    "type": "if",
                    "line_number": 841
                  },
                  {
                    "type": "if",
                    "line_number": 844
                  },
                  {
                    "type": "if",
                    "line_number": 848
                  },
                  {
                    "type": "if",
                    "line_number": 851
                  },
                  {
                    "type": "if",
                    "line_number": 855
                  },
                  {
                    "type": "if",
                    "line_number": 863
                  },
                  {
                    "type": "if",
                    "line_number": 866
                  },
                  {
                    "type": "if",
                    "line_number": 869
                  },
                  {
                    "type": "if",
                    "line_number": 873
                  },
                  {
                    "type": "if",
                    "line_number": 878
                  },
                  {
                    "type": "if",
                    "line_number": 882
                  },
                  {
                    "type": "if",
                    "line_number": 885
                  }
                ],
                "complexity": 15,
                "inputs": [
                  "in"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "FixedDiv",
                  "FixedMul",
                  "P_LineOpening",
                  "if"
                ]
              },
              {
                "name": "PTR_ShootTraverse",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "intercept_t*",
                    "name": "in"
                  }
                ],
                "start_line": 899,
                "end_line": 1016,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "x",
                    "array_size": null,
                    "line_number": 901
                  },
                  {
                    "type": "fixed_t",
                    "name": "y",
                    "array_size": null,
                    "line_number": 902
                  },
                  {
                    "type": "fixed_t",
                    "name": "z",
                    "array_size": null,
                    "line_number": 903
                  },
                  {
                    "type": "fixed_t",
                    "name": "frac",
                    "array_size": null,
                    "line_number": 904
                  },
                  {
                    "type": "fixed_t",
                    "name": "slope",
                    "array_size": null,
                    "line_number": 910
                  },
                  {
                    "type": "fixed_t",
                    "name": "dist",
                    "array_size": null,
                    "line_number": 911
                  },
                  {
                    "type": "fixed_t",
                    "name": "thingtopslope",
                    "array_size": null,
                    "line_number": 912
                  },
                  {
                    "type": "fixed_t",
                    "name": "thingbottomslope",
                    "array_size": null,
                    "line_number": 913
                  },
                  {
                    "type": "goto",
                    "name": "hitline",
                    "array_size": null,
                    "line_number": 923
                  },
                  {
                    "type": "goto",
                    "name": "hitline",
                    "array_size": null,
                    "line_number": 934
                  },
                  {
                    "type": "goto",
                    "name": "hitline",
                    "array_size": null,
                    "line_number": 941
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 945
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 960
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 964
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 971
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 977
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 980
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 987
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 992
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 1014
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 915
                  },
                  {
                    "name": "if",
                    "line_number": 919
                  },
                  {
                    "name": "P_ShootSpecialLine",
                    "line_number": 920
                  },
                  {
                    "name": "if",
                    "line_number": 922
                  },
                  {
                    "name": "P_LineOpening",
                    "line_number": 926
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 928
                  },
                  {
                    "name": "if",
                    "line_number": 930
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 932
                  },
                  {
                    "name": "if",
                    "line_number": 933
                  },
                  {
                    "name": "if",
                    "line_number": 937
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 939
                  },
                  {
                    "name": "if",
                    "line_number": 940
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 951
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 952
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 953
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 954
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 954
                  },
                  {
                    "name": "if",
                    "line_number": 956
                  },
                  {
                    "name": "if",
                    "line_number": 959
                  },
                  {
                    "name": "if",
                    "line_number": 963
                  },
                  {
                    "name": "P_SpawnPuff",
                    "line_number": 968
                  },
                  {
                    "name": "if",
                    "line_number": 976
                  },
                  {
                    "name": "if",
                    "line_number": 979
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 983
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 984
                  },
                  {
                    "name": "if",
                    "line_number": 986
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 989
                  },
                  {
                    "name": "if",
                    "line_number": 991
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 997
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 999
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1000
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1001
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 1001
                  },
                  {
                    "name": "if",
                    "line_number": 1005
                  },
                  {
                    "name": "P_SpawnPuff",
                    "line_number": 1006
                  },
                  {
                    "name": "P_SpawnBlood",
                    "line_number": 1008
                  },
                  {
                    "name": "if",
                    "line_number": 1010
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 1011
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 915
                  },
                  {
                    "type": "if",
                    "line_number": 919
                  },
                  {
                    "type": "if",
                    "line_number": 922
                  },
                  {
                    "type": "if",
                    "line_number": 930
                  },
                  {
                    "type": "if",
                    "line_number": 933
                  },
                  {
                    "type": "if",
                    "line_number": 937
                  },
                  {
                    "type": "if",
                    "line_number": 940
                  },
                  {
                    "type": "if",
                    "line_number": 956
                  },
                  {
                    "type": "if",
                    "line_number": 959
                  },
                  {
                    "type": "if",
                    "line_number": 963
                  },
                  {
                    "type": "if",
                    "line_number": 976
                  },
                  {
                    "type": "if",
                    "line_number": 979
                  },
                  {
                    "type": "if",
                    "line_number": 982
                  },
                  {
                    "type": "if",
                    "line_number": 986
                  },
                  {
                    "type": "if",
                    "line_number": 991
                  },
                  {
                    "type": "if",
                    "line_number": 1005
                  },
                  {
                    "type": "else",
                    "line_number": 1007
                  },
                  {
                    "type": "if",
                    "line_number": 1010
                  }
                ],
                "complexity": 17,
                "inputs": [
                  "in"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "P_SpawnPuff",
                  "P_LineOpening",
                  "if",
                  "P_SpawnBlood",
                  "P_DamageMobj",
                  "P_ShootSpecialLine",
                  "FixedDiv",
                  "FixedMul"
                ]
              },
              {
                "name": "P_AimLineAttack",
                "return_type": "fixed_t",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "t1"
                  },
                  {
                    "type": "angle_t",
                    "name": "angle"
                  },
                  {
                    "type": "fixed_t",
                    "name": "distance"
                  }
                ],
                "start_line": 1022,
                "end_line": 1050,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "x2",
                    "array_size": null,
                    "line_number": 1024
                  },
                  {
                    "type": "fixed_t",
                    "name": "y2",
                    "array_size": null,
                    "line_number": 1025
                  },
                  {
                    "type": "return",
                    "name": "aimslope",
                    "array_size": null,
                    "line_number": 1047
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 1049
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_PathTraverse",
                    "line_number": 1041
                  },
                  {
                    "name": "if",
                    "line_number": 1046
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1046
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "t1",
                  "angle",
                  "distance"
                ],
                "outputs": [
                  "fixed_t"
                ],
                "dependencies": [
                  "P_PathTraverse",
                  "if"
                ]
              },
              {
                "name": "P_LineAttack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "t1"
                  },
                  {
                    "type": "angle_t",
                    "name": "angle"
                  },
                  {
                    "type": "fixed_t",
                    "name": "distance"
                  },
                  {
                    "type": "fixed_t",
                    "name": "slope"
                  },
                  {
                    "type": "int",
                    "name": "damage"
                  }
                ],
                "start_line": 1062,
                "end_line": 1080,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "x2",
                    "array_size": null,
                    "line_number": 1064
                  },
                  {
                    "type": "fixed_t",
                    "name": "y2",
                    "array_size": null,
                    "line_number": 1065
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_PathTraverse",
                    "line_number": 1076
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "t1",
                  "angle",
                  "distance",
                  "slope",
                  "damage"
                ],
                "outputs": [],
                "dependencies": [
                  "P_PathTraverse"
                ]
              },
              {
                "name": "PTR_UseTraverse",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "intercept_t*",
                    "name": "in"
                  }
                ],
                "start_line": 1095,
                "end_line": 1123,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "side",
                    "array_size": null,
                    "line_number": 1097
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 1107
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 1122
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1099
                  },
                  {
                    "name": "P_LineOpening",
                    "line_number": 1101
                  },
                  {
                    "name": "if",
                    "line_number": 1102
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1104
                  },
                  {
                    "name": "if",
                    "line_number": 1114
                  },
                  {
                    "name": "P_PointOnLineSide",
                    "line_number": 1114
                  },
                  {
                    "name": "P_UseSpecialLine",
                    "line_number": 1119
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1099
                  },
                  {
                    "type": "if",
                    "line_number": 1102
                  },
                  {
                    "type": "if",
                    "line_number": 1114
                  },
                  {
                    "type": "for",
                    "line_number": 1121
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "in"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "P_LineOpening",
                  "if",
                  "P_PointOnLineSide",
                  "S_StartSound",
                  "P_UseSpecialLine"
                ]
              },
              {
                "name": "P_UseLines",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  }
                ],
                "start_line": 1130,
                "end_line": 1148,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 1132
                  },
                  {
                    "type": "fixed_t",
                    "name": "x1",
                    "array_size": null,
                    "line_number": 1133
                  },
                  {
                    "type": "fixed_t",
                    "name": "y1",
                    "array_size": null,
                    "line_number": 1134
                  },
                  {
                    "type": "fixed_t",
                    "name": "x2",
                    "array_size": null,
                    "line_number": 1135
                  },
                  {
                    "type": "fixed_t",
                    "name": "y2",
                    "array_size": null,
                    "line_number": 1136
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_PathTraverse",
                    "line_number": 1147
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "P_PathTraverse"
                ]
              },
              {
                "name": "PIT_RadiusAttack",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  }
                ],
                "start_line": 1164,
                "end_line": 1198,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "dx",
                    "array_size": null,
                    "line_number": 1166
                  },
                  {
                    "type": "fixed_t",
                    "name": "dy",
                    "array_size": null,
                    "line_number": 1167
                  },
                  {
                    "type": "fixed_t",
                    "name": "dist",
                    "array_size": null,
                    "line_number": 1168
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1171
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1177
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1189
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1197
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1170
                  },
                  {
                    "name": "if",
                    "line_number": 1175
                  },
                  {
                    "name": "abs",
                    "line_number": 1179
                  },
                  {
                    "name": "abs",
                    "line_number": 1180
                  },
                  {
                    "name": "if",
                    "line_number": 1185
                  },
                  {
                    "name": "if",
                    "line_number": 1188
                  },
                  {
                    "name": "if",
                    "line_number": 1191
                  },
                  {
                    "name": "P_CheckSight",
                    "line_number": 1191
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 1194
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1170
                  },
                  {
                    "type": "if",
                    "line_number": 1175
                  },
                  {
                    "type": "if",
                    "line_number": 1185
                  },
                  {
                    "type": "if",
                    "line_number": 1188
                  },
                  {
                    "type": "if",
                    "line_number": 1191
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "thing"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "abs",
                  "P_CheckSight",
                  "P_DamageMobj",
                  "if"
                ]
              },
              {
                "name": "P_RadiusAttack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "spot"
                  },
                  {
                    "type": "mobj_t*",
                    "name": "source"
                  },
                  {
                    "type": "int",
                    "name": "damage"
                  }
                ],
                "start_line": 1205,
                "end_line": 1229,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 1207
                  },
                  {
                    "type": "int",
                    "name": "y",
                    "array_size": null,
                    "line_number": 1208
                  },
                  {
                    "type": "int",
                    "name": "xl",
                    "array_size": null,
                    "line_number": 1210
                  },
                  {
                    "type": "int",
                    "name": "xh",
                    "array_size": null,
                    "line_number": 1211
                  },
                  {
                    "type": "int",
                    "name": "yl",
                    "array_size": null,
                    "line_number": 1212
                  },
                  {
                    "type": "int",
                    "name": "yh",
                    "array_size": null,
                    "line_number": 1213
                  },
                  {
                    "type": "fixed_t",
                    "name": "dist",
                    "array_size": null,
                    "line_number": 1215
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1226
                  },
                  {
                    "name": "for",
                    "line_number": 1227
                  },
                  {
                    "name": "P_BlockThingsIterator",
                    "line_number": 1228
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1226
                  },
                  {
                    "type": "for",
                    "line_number": 1227
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "spot",
                  "source",
                  "damage"
                ],
                "outputs": [],
                "dependencies": [
                  "P_BlockThingsIterator",
                  "for"
                ]
              },
              {
                "name": "PIT_ChangeSector",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  }
                ],
                "start_line": 1257,
                "end_line": 1313,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1264
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1278
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1287
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1293
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1312
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1261
                  },
                  {
                    "name": "P_ThingHeightClip",
                    "line_number": 1261
                  },
                  {
                    "name": "if",
                    "line_number": 1269
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 1271
                  },
                  {
                    "name": "if",
                    "line_number": 1282
                  },
                  {
                    "name": "P_RemoveMobj",
                    "line_number": 1284
                  },
                  {
                    "name": "if",
                    "line_number": 1290
                  },
                  {
                    "name": "if",
                    "line_number": 1298
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 1300
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 1303
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1307
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1307
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1308
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1308
                  },
                  {
                    "name": "checking",
                    "line_number": 1311
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1261
                  },
                  {
                    "type": "if",
                    "line_number": 1269
                  },
                  {
                    "type": "if",
                    "line_number": 1282
                  },
                  {
                    "type": "if",
                    "line_number": 1290
                  },
                  {
                    "type": "if",
                    "line_number": 1298
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "thing"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "if",
                  "P_DamageMobj",
                  "P_SpawnMobj",
                  "P_SetMobjState",
                  "P_Random",
                  "checking",
                  "P_RemoveMobj",
                  "P_ThingHeightClip"
                ]
              },
              {
                "name": "if",
                "return_type": "crunch bodies to giblets",
                "parameters": [
                  {
                    "type": "thing->health <=",
                    "name": "0"
                  }
                ],
                "start_line": 1268,
                "end_line": 1278,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1277
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_SetMobjState",
                    "line_number": 1270
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "0"
                ],
                "outputs": [
                  "crunch bodies to giblets"
                ],
                "dependencies": [
                  "P_SetMobjState"
                ]
              },
              {
                "name": "if",
                "return_type": "crunch dropped items",
                "parameters": [
                  {
                    "type": "thing->flags &",
                    "name": "MF_DROPPED"
                  }
                ],
                "start_line": 1281,
                "end_line": 1287,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 1286
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_RemoveMobj",
                    "line_number": 1283
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "MF_DROPPED"
                ],
                "outputs": [
                  "crunch dropped items"
                ],
                "dependencies": [
                  "P_RemoveMobj"
                ]
              },
              {
                "name": "P_ChangeSector",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "sector_t*",
                    "name": "sector"
                  },
                  {
                    "type": "boolean",
                    "name": "crunch"
                  }
                ],
                "start_line": 1320,
                "end_line": 1335,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 1322
                  },
                  {
                    "type": "int",
                    "name": "y",
                    "array_size": null,
                    "line_number": 1323
                  },
                  {
                    "type": "return",
                    "name": "nofit",
                    "array_size": null,
                    "line_number": 1334
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1329
                  },
                  {
                    "name": "for",
                    "line_number": 1330
                  },
                  {
                    "name": "P_BlockThingsIterator",
                    "line_number": 1331
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1328
                  },
                  {
                    "type": "for",
                    "line_number": 1329
                  },
                  {
                    "type": "for",
                    "line_number": 1330
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "sector",
                  "crunch"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "P_BlockThingsIterator",
                  "for"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "tmbbox",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": "4",
                "line_number": 46
              },
              {
                "name": "tmflags",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 48
              },
              {
                "name": "tmx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 49
              },
              {
                "name": "tmy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 50
              },
              {
                "name": "floatok",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 55
              },
              {
                "name": "tmfloorz",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 57
              },
              {
                "name": "tmceilingz",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 58
              },
              {
                "name": "tmdropoffz",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 59
              },
              {
                "name": "numspechit",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 70
              },
              {
                "name": "blockdist",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 83
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 86
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 94
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 99
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 103
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 107
              },
              {
                "name": "xl",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 120
              },
              {
                "name": "xh",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 121
              },
              {
                "name": "yl",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 122
              },
              {
                "name": "yh",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 123
              },
              {
                "name": "bx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 124
              },
              {
                "name": "by",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 125
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 163
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 176
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 195
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 198
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 212
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 217
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 220
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 246
              },
              {
                "name": "blockdist",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 254
              },
              {
                "name": "solid",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 255
              },
              {
                "name": "damage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 256
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 259
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 267
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 272
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 286
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 295
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 297
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 306
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 312
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 327
              },
              {
                "name": "xl",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 380
              },
              {
                "name": "xh",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 381
              },
              {
                "name": "yl",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 382
              },
              {
                "name": "yh",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 383
              },
              {
                "name": "bx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 384
              },
              {
                "name": "by",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 385
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 413
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 428
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 439
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 441
              },
              {
                "name": "oldx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 456
              },
              {
                "name": "oldy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 457
              },
              {
                "name": "side",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 458
              },
              {
                "name": "oldside",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 459
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 464
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 469
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 475
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 479
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 483
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 516
              },
              {
                "name": "onfloor",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 532
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 555
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 557
              },
              {
                "name": "bestslidefrac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 566
              },
              {
                "name": "secondslidefrac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 567
              },
              {
                "name": "tmxmove",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 574
              },
              {
                "name": "tmymove",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 575
              },
              {
                "name": "side",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 586
              },
              {
                "name": "lineangle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 588
              },
              {
                "name": "moveangle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 589
              },
              {
                "name": "deltaangle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 590
              },
              {
                "name": "movelen",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 592
              },
              {
                "name": "newlen",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 593
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 650
              },
              {
                "name": "isblocking",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 652
              },
              {
                "name": "isblocking",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 659
              },
              {
                "name": "isblocking",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 662
              },
              {
                "name": "isblocking",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 665
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 668
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 681
              },
              {
                "name": "leadx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 697
              },
              {
                "name": "leady",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 698
              },
              {
                "name": "trailx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 699
              },
              {
                "name": "traily",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 700
              },
              {
                "name": "newx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 701
              },
              {
                "name": "newy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 702
              },
              {
                "name": "hitcount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 703
              },
              {
                "name": "stairstep",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 710
              },
              {
                "name": "stairstep",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 763
              },
              {
                "name": "retry",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 786
              },
              {
                "name": "shootz",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 799
              },
              {
                "name": "la_damage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 801
              },
              {
                "name": "attackrange",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 802
              },
              {
                "name": "aimslope",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 804
              },
              {
                "name": "topslope",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 807
              },
              {
                "name": "bottomslope",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 808
              },
              {
                "name": "slope",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 820
              },
              {
                "name": "thingtopslope",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 821
              },
              {
                "name": "thingbottomslope",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 822
              },
              {
                "name": "dist",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 823
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 830
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 838
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 857
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 859
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 865
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 868
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 875
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 880
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 892
              },
              {
                "name": "x",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 901
              },
              {
                "name": "y",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 902
              },
              {
                "name": "z",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 903
              },
              {
                "name": "frac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 904
              },
              {
                "name": "slope",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 910
              },
              {
                "name": "dist",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 911
              },
              {
                "name": "thingtopslope",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 912
              },
              {
                "name": "thingbottomslope",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 913
              },
              {
                "name": "hitline",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 923
              },
              {
                "name": "hitline",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 934
              },
              {
                "name": "hitline",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 941
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 945
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 960
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 964
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 971
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 977
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 980
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 987
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 992
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1014
              },
              {
                "name": "x2",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1028
              },
              {
                "name": "y2",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1029
              },
              {
                "name": "aimslope",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1051
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1053
              },
              {
                "name": "x2",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1070
              },
              {
                "name": "y2",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1071
              },
              {
                "name": "side",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1097
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1107
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1117
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1122
              },
              {
                "name": "angle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1132
              },
              {
                "name": "x1",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1133
              },
              {
                "name": "y1",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1134
              },
              {
                "name": "x2",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1135
              },
              {
                "name": "y2",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1136
              },
              {
                "name": "bombdamage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1156
              },
              {
                "name": "dx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1166
              },
              {
                "name": "dy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1167
              },
              {
                "name": "dist",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1168
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1171
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1177
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1189
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1197
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1211
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1212
              },
              {
                "name": "xl",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1214
              },
              {
                "name": "xh",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1215
              },
              {
                "name": "yl",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1216
              },
              {
                "name": "yh",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1217
              },
              {
                "name": "dist",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 1219
              },
              {
                "name": "crushchange",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 1250
              },
              {
                "name": "nofit",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 1251
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1264
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1278
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1287
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1293
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1312
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1325
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1326
              },
              {
                "name": "nofit",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1337
              }
            ],
            "defines": [
              {
                "name": "MAXSPECIALCROSS",
                "value": "8",
                "line_number": 67
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/p_map.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of functions",
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "p_maputl.c",
          "type": "file",
          "size": 16178,
          "last_modified": "2024-09-05T16:00:04.415314",
          "path": "linuxdoom-1.10/p_maputl.c",
          "readme": "# p_maputl.c\n\nThis file contains functionality related to p_maputl.",
          "dependencies": [
            "p_local.h",
            "m_bbox.h",
            "r_state.h",
            "stdlib.h",
            "doomdef.h"
          ],
          "inputs": [
            "-FRACUNIT*16",
            "dl",
            "dy",
            "dx",
            "line",
            "linedef",
            "tmbox",
            "yt1",
            "x",
            "y",
            "v1",
            "func",
            "count--",
            "v2",
            "!ld->backsector",
            "thing",
            "li",
            "maxfrac",
            "tracepositive",
            "ld",
            "xt1"
          ],
          "outputs": [
            "int",
            "shut up compiler warning",
            "avoid precision problems with two routines",
            "try to early out the check",
            "check a corner to corner crossection for hit",
            "fixed_t",
            "boolean",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "P_AproxDistance",
                "return_type": "fixed_t",
                "parameters": [
                  {
                    "type": "fixed_t",
                    "name": "dx"
                  },
                  {
                    "type": "fixed_t",
                    "name": "dy"
                  }
                ],
                "start_line": 48,
                "end_line": 55,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "abs",
                    "line_number": 50
                  },
                  {
                    "name": "abs",
                    "line_number": 51
                  },
                  {
                    "name": "if",
                    "line_number": 52
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 52
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "dx",
                  "dy"
                ],
                "outputs": [
                  "fixed_t"
                ],
                "dependencies": [
                  "abs",
                  "if"
                ]
              },
              {
                "name": "P_PointOnLineSide",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "fixed_t",
                    "name": "x"
                  },
                  {
                    "type": "fixed_t",
                    "name": "y"
                  },
                  {
                    "type": "line_t*",
                    "name": "line"
                  }
                ],
                "start_line": 65,
                "end_line": 96,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "dx",
                    "array_size": null,
                    "line_number": 67
                  },
                  {
                    "type": "fixed_t",
                    "name": "dy",
                    "array_size": null,
                    "line_number": 68
                  },
                  {
                    "type": "fixed_t",
                    "name": "left",
                    "array_size": null,
                    "line_number": 69
                  },
                  {
                    "type": "fixed_t",
                    "name": "right",
                    "array_size": null,
                    "line_number": 70
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 94
                  },
                  {
                    "type": "return",
                    "name": "1",
                    "array_size": null,
                    "line_number": 95
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 72
                  },
                  {
                    "name": "if",
                    "line_number": 74
                  },
                  {
                    "name": "if",
                    "line_number": 79
                  },
                  {
                    "name": "if",
                    "line_number": 81
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 90
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 91
                  },
                  {
                    "name": "if",
                    "line_number": 93
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 72
                  },
                  {
                    "type": "if",
                    "line_number": 74
                  },
                  {
                    "type": "if",
                    "line_number": 79
                  },
                  {
                    "type": "if",
                    "line_number": 81
                  },
                  {
                    "type": "if",
                    "line_number": 93
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "x",
                  "y",
                  "line"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "FixedMul",
                  "if"
                ]
              },
              {
                "name": "P_BoxOnLineSide",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "fixed_t*",
                    "name": "tmbox"
                  },
                  {
                    "type": "line_t*",
                    "name": "ld"
                  }
                ],
                "start_line": 109,
                "end_line": 150,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "p1",
                    "array_size": null,
                    "line_number": 111
                  },
                  {
                    "type": "int",
                    "name": "p2",
                    "array_size": null,
                    "line_number": 112
                  },
                  {
                    "type": "return",
                    "name": "p1",
                    "array_size": null,
                    "line_number": 148
                  }
                ],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 114
                  },
                  {
                    "name": "if",
                    "line_number": 119
                  },
                  {
                    "name": "if",
                    "line_number": 129
                  },
                  {
                    "name": "P_PointOnLineSide",
                    "line_number": 137
                  },
                  {
                    "name": "P_PointOnLineSide",
                    "line_number": 138
                  },
                  {
                    "name": "P_PointOnLineSide",
                    "line_number": 142
                  },
                  {
                    "name": "P_PointOnLineSide",
                    "line_number": 143
                  },
                  {
                    "name": "if",
                    "line_number": 147
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 119
                  },
                  {
                    "type": "if",
                    "line_number": 129
                  },
                  {
                    "type": "if",
                    "line_number": 147
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "tmbox",
                  "ld"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "switch",
                  "P_PointOnLineSide",
                  "if"
                ]
              },
              {
                "name": "P_PointOnDivlineSide",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "fixed_t",
                    "name": "x"
                  },
                  {
                    "type": "fixed_t",
                    "name": "y"
                  },
                  {
                    "type": "divline_t*",
                    "name": "line"
                  }
                ],
                "start_line": 160,
                "end_line": 199,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "dx",
                    "array_size": null,
                    "line_number": 162
                  },
                  {
                    "type": "fixed_t",
                    "name": "dy",
                    "array_size": null,
                    "line_number": 163
                  },
                  {
                    "type": "fixed_t",
                    "name": "left",
                    "array_size": null,
                    "line_number": 164
                  },
                  {
                    "type": "fixed_t",
                    "name": "right",
                    "array_size": null,
                    "line_number": 165
                  },
                  {
                    "type": "return",
                    "name": "1",
                    "array_size": null,
                    "line_number": 189
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 190
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 197
                  },
                  {
                    "type": "return",
                    "name": "1",
                    "array_size": null,
                    "line_number": 198
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 167
                  },
                  {
                    "name": "if",
                    "line_number": 169
                  },
                  {
                    "name": "if",
                    "line_number": 174
                  },
                  {
                    "name": "if",
                    "line_number": 176
                  },
                  {
                    "name": "if",
                    "line_number": 186
                  },
                  {
                    "name": "if",
                    "line_number": 188
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 193
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 194
                  },
                  {
                    "name": "if",
                    "line_number": 196
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 167
                  },
                  {
                    "type": "if",
                    "line_number": 169
                  },
                  {
                    "type": "if",
                    "line_number": 174
                  },
                  {
                    "type": "if",
                    "line_number": 176
                  },
                  {
                    "type": "if",
                    "line_number": 186
                  },
                  {
                    "type": "if",
                    "line_number": 188
                  },
                  {
                    "type": "if",
                    "line_number": 196
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "x",
                  "y",
                  "line"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "FixedMul",
                  "if"
                ]
              },
              {
                "name": "P_MakeDivline",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "li"
                  },
                  {
                    "type": "divline_t*",
                    "name": "dl"
                  }
                ],
                "start_line": 210,
                "end_line": 216,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "li",
                  "dl"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "P_InterceptVector",
                "return_type": "fixed_t",
                "parameters": [
                  {
                    "type": "divline_t*",
                    "name": "v2"
                  },
                  {
                    "type": "divline_t*",
                    "name": "v1"
                  }
                ],
                "start_line": 230,
                "end_line": 282,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "frac",
                    "array_size": null,
                    "line_number": 233
                  },
                  {
                    "type": "fixed_t",
                    "name": "num",
                    "array_size": null,
                    "line_number": 234
                  },
                  {
                    "type": "fixed_t",
                    "name": "den",
                    "array_size": null,
                    "line_number": 235
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 240
                  },
                  {
                    "type": "return",
                    "name": "frac",
                    "array_size": null,
                    "line_number": 249
                  },
                  {
                    "type": "float",
                    "name": "frac",
                    "array_size": null,
                    "line_number": 251
                  },
                  {
                    "type": "float",
                    "name": "num",
                    "array_size": null,
                    "line_number": 252
                  },
                  {
                    "type": "float",
                    "name": "den",
                    "array_size": null,
                    "line_number": 253
                  },
                  {
                    "type": "float",
                    "name": "v1x",
                    "array_size": null,
                    "line_number": 254
                  },
                  {
                    "type": "float",
                    "name": "v1y",
                    "array_size": null,
                    "line_number": 255
                  },
                  {
                    "type": "float",
                    "name": "v1dx",
                    "array_size": null,
                    "line_number": 256
                  },
                  {
                    "type": "float",
                    "name": "v1dy",
                    "array_size": null,
                    "line_number": 257
                  },
                  {
                    "type": "float",
                    "name": "v2x",
                    "array_size": null,
                    "line_number": 258
                  },
                  {
                    "type": "float",
                    "name": "v2y",
                    "array_size": null,
                    "line_number": 259
                  },
                  {
                    "type": "float",
                    "name": "v2dx",
                    "array_size": null,
                    "line_number": 260
                  },
                  {
                    "type": "float",
                    "name": "v2dy",
                    "array_size": null,
                    "line_number": 261
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 275
                  }
                ],
                "function_calls": [
                  {
                    "name": "FixedMul",
                    "line_number": 237
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 237
                  },
                  {
                    "name": "if",
                    "line_number": 239
                  },
                  {
                    "name": "I_Error",
                    "line_number": 241
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 244
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 245
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 247
                  },
                  {
                    "name": "if",
                    "line_number": 274
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 232
                  },
                  {
                    "type": "if",
                    "line_number": 239
                  },
                  {
                    "type": "else",
                    "line_number": 250
                  },
                  {
                    "type": "if",
                    "line_number": 274
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "v2",
                  "v1"
                ],
                "outputs": [
                  "fixed_t"
                ],
                "dependencies": [
                  "FixedDiv",
                  "I_Error",
                  "FixedMul",
                  "if"
                ]
              },
              {
                "name": "P_LineOpening",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "linedef"
                  }
                ],
                "start_line": 300,
                "end_line": 332,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 305
                  },
                  {
                    "name": "if",
                    "line_number": 315
                  },
                  {
                    "name": "if",
                    "line_number": 320
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 305
                  },
                  {
                    "type": "if",
                    "line_number": 315
                  },
                  {
                    "type": "else",
                    "line_number": 317
                  },
                  {
                    "type": "if",
                    "line_number": 320
                  },
                  {
                    "type": "else",
                    "line_number": 325
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "linedef"
                ],
                "outputs": [],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "P_UnsetThingPosition",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  }
                ],
                "start_line": 347,
                "end_line": 386,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "blockx",
                    "array_size": null,
                    "line_number": 349
                  },
                  {
                    "type": "int",
                    "name": "blocky",
                    "array_size": null,
                    "line_number": 350
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 352
                  },
                  {
                    "name": "if",
                    "line_number": 356
                  },
                  {
                    "name": "if",
                    "line_number": 359
                  },
                  {
                    "name": "if",
                    "line_number": 365
                  },
                  {
                    "name": "if",
                    "line_number": 369
                  },
                  {
                    "name": "if",
                    "line_number": 372
                  },
                  {
                    "name": "if",
                    "line_number": 379
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 352
                  },
                  {
                    "type": "if",
                    "line_number": 356
                  },
                  {
                    "type": "if",
                    "line_number": 359
                  },
                  {
                    "type": "else",
                    "line_number": 361
                  },
                  {
                    "type": "if",
                    "line_number": 365
                  },
                  {
                    "type": "if",
                    "line_number": 369
                  },
                  {
                    "type": "if",
                    "line_number": 372
                  },
                  {
                    "type": "else",
                    "line_number": 374
                  },
                  {
                    "type": "if",
                    "line_number": 379
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "thing"
                ],
                "outputs": [],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "P_SetThingPosition",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  }
                ],
                "start_line": 395,
                "end_line": 449,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "blockx",
                    "array_size": null,
                    "line_number": 399
                  },
                  {
                    "type": "int",
                    "name": "blocky",
                    "array_size": null,
                    "line_number": 400
                  }
                ],
                "function_calls": [
                  {
                    "name": "R_PointInSubsector",
                    "line_number": 405
                  },
                  {
                    "name": "if",
                    "line_number": 408
                  },
                  {
                    "name": "if",
                    "line_number": 416
                  },
                  {
                    "name": "if",
                    "line_number": 424
                  },
                  {
                    "name": "if",
                    "line_number": 430
                  },
                  {
                    "name": "if",
                    "line_number": 438
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 408
                  },
                  {
                    "type": "if",
                    "line_number": 416
                  },
                  {
                    "type": "if",
                    "line_number": 424
                  },
                  {
                    "type": "if",
                    "line_number": 430
                  },
                  {
                    "type": "if",
                    "line_number": 438
                  },
                  {
                    "type": "else",
                    "line_number": 443
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "thing"
                ],
                "outputs": [],
                "dependencies": [
                  "R_PointInSubsector",
                  "if"
                ]
              },
              {
                "name": "PIT_AddLineIntercepts",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "ld"
                  }
                ],
                "start_line": 561,
                "end_line": 608,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "s1",
                    "array_size": null,
                    "line_number": 563
                  },
                  {
                    "type": "int",
                    "name": "s2",
                    "array_size": null,
                    "line_number": 564
                  },
                  {
                    "type": "fixed_t",
                    "name": "frac",
                    "array_size": null,
                    "line_number": 565
                  },
                  {
                    "type": "divline_t",
                    "name": "dl",
                    "array_size": null,
                    "line_number": 566
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 584
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 591
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 598
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 607
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 569
                  },
                  {
                    "name": "P_PointOnDivlineSide",
                    "line_number": 574
                  },
                  {
                    "name": "P_PointOnDivlineSide",
                    "line_number": 575
                  },
                  {
                    "name": "P_PointOnLineSide",
                    "line_number": 579
                  },
                  {
                    "name": "P_PointOnLineSide",
                    "line_number": 580
                  },
                  {
                    "name": "if",
                    "line_number": 583
                  },
                  {
                    "name": "P_MakeDivline",
                    "line_number": 587
                  },
                  {
                    "name": "P_InterceptVector",
                    "line_number": 588
                  },
                  {
                    "name": "if",
                    "line_number": 590
                  },
                  {
                    "name": "if",
                    "line_number": 594
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 569
                  },
                  {
                    "type": "else",
                    "line_number": 577
                  },
                  {
                    "type": "if",
                    "line_number": 583
                  },
                  {
                    "type": "if",
                    "line_number": 590
                  },
                  {
                    "type": "if",
                    "line_number": 594
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "ld"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "P_InterceptVector",
                  "if",
                  "P_PointOnLineSide",
                  "P_PointOnDivlineSide",
                  "P_MakeDivline"
                ]
              },
              {
                "name": "if",
                "return_type": "avoid precision problems with two routines",
                "parameters": [
                  {
                    "type": "trace.dx > FRACUNIT*16 || trace.dy > FRACUNIT*16 || trace.dx < -FRACUNIT*16 || trace.dy <",
                    "name": "-FRACUNIT*16"
                  }
                ],
                "start_line": 569,
                "end_line": 573,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_PointOnDivlineSide",
                    "line_number": 571
                  },
                  {
                    "name": "P_PointOnDivlineSide",
                    "line_number": 572
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "-FRACUNIT*16"
                ],
                "outputs": [
                  "avoid precision problems with two routines"
                ],
                "dependencies": [
                  "P_PointOnDivlineSide"
                ]
              },
              {
                "name": "if",
                "return_type": "try to early out the check",
                "parameters": [
                  {
                    "type": "earlyout && frac < FRACUNIT &&",
                    "name": "!ld->backsector"
                  }
                ],
                "start_line": 594,
                "end_line": 597,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 596
                  }
                ],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "!ld->backsector"
                ],
                "outputs": [
                  "try to early out the check"
                ],
                "dependencies": []
              },
              {
                "name": "PIT_AddThingIntercepts",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  }
                ],
                "start_line": 616,
                "end_line": 674,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "x1",
                    "array_size": null,
                    "line_number": 618
                  },
                  {
                    "type": "fixed_t",
                    "name": "y1",
                    "array_size": null,
                    "line_number": 619
                  },
                  {
                    "type": "fixed_t",
                    "name": "x2",
                    "array_size": null,
                    "line_number": 620
                  },
                  {
                    "type": "fixed_t",
                    "name": "y2",
                    "array_size": null,
                    "line_number": 621
                  },
                  {
                    "type": "int",
                    "name": "s1",
                    "array_size": null,
                    "line_number": 623
                  },
                  {
                    "type": "int",
                    "name": "s2",
                    "array_size": null,
                    "line_number": 624
                  },
                  {
                    "type": "boolean",
                    "name": "tracepositive",
                    "array_size": null,
                    "line_number": 626
                  },
                  {
                    "type": "divline_t",
                    "name": "dl",
                    "array_size": null,
                    "line_number": 628
                  },
                  {
                    "type": "fixed_t",
                    "name": "frac",
                    "array_size": null,
                    "line_number": 630
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 656
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 666
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 673
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 635
                  },
                  {
                    "name": "P_PointOnDivlineSide",
                    "line_number": 652
                  },
                  {
                    "name": "P_PointOnDivlineSide",
                    "line_number": 653
                  },
                  {
                    "name": "if",
                    "line_number": 655
                  },
                  {
                    "name": "P_InterceptVector",
                    "line_number": 663
                  },
                  {
                    "name": "if",
                    "line_number": 665
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 634
                  },
                  {
                    "type": "if",
                    "line_number": 635
                  },
                  {
                    "type": "else",
                    "line_number": 643
                  },
                  {
                    "type": "if",
                    "line_number": 655
                  },
                  {
                    "type": "if",
                    "line_number": 665
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "thing"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "P_PointOnDivlineSide",
                  "P_InterceptVector",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "check a corner to corner crossection for hit",
                "parameters": [
                  {
                    "type": "",
                    "name": "tracepositive"
                  }
                ],
                "start_line": 634,
                "end_line": 641,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "tracepositive"
                ],
                "outputs": [
                  "check a corner to corner crossection for hit"
                ],
                "dependencies": []
              },
              {
                "name": "P_TraverseIntercepts",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "traverser_t",
                    "name": "func"
                  },
                  {
                    "type": "fixed_t",
                    "name": "maxfrac"
                  }
                ],
                "start_line": 682,
                "end_line": 727,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 684
                  },
                  {
                    "type": "fixed_t",
                    "name": "dist",
                    "array_size": null,
                    "line_number": 685
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 706
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 716
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 721
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 726
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 693
                  },
                  {
                    "name": "for",
                    "line_number": 696
                  },
                  {
                    "name": "if",
                    "line_number": 698
                  },
                  {
                    "name": "if",
                    "line_number": 705
                  },
                  {
                    "name": "for",
                    "line_number": 712
                  },
                  {
                    "name": "if",
                    "line_number": 713
                  },
                  {
                    "name": "if",
                    "line_number": 720
                  },
                  {
                    "name": "func",
                    "line_number": 720
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 693
                  },
                  {
                    "type": "for",
                    "line_number": 696
                  },
                  {
                    "type": "if",
                    "line_number": 698
                  },
                  {
                    "type": "if",
                    "line_number": 705
                  },
                  {
                    "type": "if",
                    "line_number": 708
                  },
                  {
                    "type": "for",
                    "line_number": 712
                  },
                  {
                    "type": "if",
                    "line_number": 713
                  },
                  {
                    "type": "if",
                    "line_number": 720
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "func",
                  "maxfrac"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "func",
                  "while",
                  "if",
                  "for"
                ]
              },
              {
                "name": "while",
                "return_type": "shut up compiler warning",
                "parameters": [
                  {
                    "type": "",
                    "name": "count--"
                  }
                ],
                "start_line": 694,
                "end_line": 725,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 707
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 717
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 722
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 697
                  },
                  {
                    "name": "if",
                    "line_number": 699
                  },
                  {
                    "name": "if",
                    "line_number": 706
                  },
                  {
                    "name": "for",
                    "line_number": 713
                  },
                  {
                    "name": "if",
                    "line_number": 714
                  },
                  {
                    "name": "if",
                    "line_number": 721
                  },
                  {
                    "name": "func",
                    "line_number": 721
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 697
                  },
                  {
                    "type": "if",
                    "line_number": 699
                  },
                  {
                    "type": "if",
                    "line_number": 706
                  },
                  {
                    "type": "if",
                    "line_number": 709
                  },
                  {
                    "type": "for",
                    "line_number": 713
                  },
                  {
                    "type": "if",
                    "line_number": 714
                  },
                  {
                    "type": "if",
                    "line_number": 721
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "count--"
                ],
                "outputs": [
                  "shut up compiler warning"
                ],
                "dependencies": [
                  "func",
                  "if",
                  "for"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "xt2 <",
                    "name": "xt1"
                  }
                ],
                "start_line": 804,
                "end_line": 809,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "FixedDiv",
                    "line_number": 808
                  },
                  {
                    "name": "abs",
                    "line_number": 808
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "xt1"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "FixedDiv",
                  "abs"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "yt2 <",
                    "name": "yt1"
                  }
                ],
                "start_line": 826,
                "end_line": 831,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "FixedDiv",
                    "line_number": 830
                  },
                  {
                    "name": "abs",
                    "line_number": 830
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "yt1"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "FixedDiv",
                  "abs"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "dx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 71
              },
              {
                "name": "dy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 72
              },
              {
                "name": "left",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 73
              },
              {
                "name": "right",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 74
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 98
              },
              {
                "name": "1",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 99
              },
              {
                "name": "p1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 114
              },
              {
                "name": "p2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 115
              },
              {
                "name": "p1",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 151
              },
              {
                "name": "dx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 166
              },
              {
                "name": "dy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 167
              },
              {
                "name": "left",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 168
              },
              {
                "name": "right",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 169
              },
              {
                "name": "1",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 193
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 194
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 201
              },
              {
                "name": "1",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 202
              },
              {
                "name": "frac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 236
              },
              {
                "name": "num",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 237
              },
              {
                "name": "den",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 238
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 243
              },
              {
                "name": "frac",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 252
              },
              {
                "name": "frac",
                "type": "float",
                "storage_class": null,
                "array_size": null,
                "line_number": 254
              },
              {
                "name": "num",
                "type": "float",
                "storage_class": null,
                "array_size": null,
                "line_number": 255
              },
              {
                "name": "den",
                "type": "float",
                "storage_class": null,
                "array_size": null,
                "line_number": 256
              },
              {
                "name": "v1x",
                "type": "float",
                "storage_class": null,
                "array_size": null,
                "line_number": 257
              },
              {
                "name": "v1y",
                "type": "float",
                "storage_class": null,
                "array_size": null,
                "line_number": 258
              },
              {
                "name": "v1dx",
                "type": "float",
                "storage_class": null,
                "array_size": null,
                "line_number": 259
              },
              {
                "name": "v1dy",
                "type": "float",
                "storage_class": null,
                "array_size": null,
                "line_number": 260
              },
              {
                "name": "v2x",
                "type": "float",
                "storage_class": null,
                "array_size": null,
                "line_number": 261
              },
              {
                "name": "v2y",
                "type": "float",
                "storage_class": null,
                "array_size": null,
                "line_number": 262
              },
              {
                "name": "v2dx",
                "type": "float",
                "storage_class": null,
                "array_size": null,
                "line_number": 263
              },
              {
                "name": "v2dy",
                "type": "float",
                "storage_class": null,
                "array_size": null,
                "line_number": 264
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 278
              },
              {
                "name": "opentop",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 294
              },
              {
                "name": "openbottom",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 295
              },
              {
                "name": "openrange",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 296
              },
              {
                "name": "lowfloor",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 297
              },
              {
                "name": "blockx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 349
              },
              {
                "name": "blocky",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 350
              },
              {
                "name": "blockx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 400
              },
              {
                "name": "blocky",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 401
              },
              {
                "name": "offset",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 477
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 486
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 503
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 505
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 525
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 534
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 536
              },
              {
                "name": "trace",
                "type": "divline_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 547
              },
              {
                "name": "earlyout",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 548
              },
              {
                "name": "ptflags",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 549
              },
              {
                "name": "s1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 564
              },
              {
                "name": "s2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 565
              },
              {
                "name": "frac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 566
              },
              {
                "name": "dl",
                "type": "divline_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 567
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 585
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 592
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 599
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 608
              },
              {
                "name": "x1",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 618
              },
              {
                "name": "y1",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 619
              },
              {
                "name": "x2",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 620
              },
              {
                "name": "y2",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 621
              },
              {
                "name": "s1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 623
              },
              {
                "name": "s2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 624
              },
              {
                "name": "tracepositive",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 626
              },
              {
                "name": "dl",
                "type": "divline_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 628
              },
              {
                "name": "frac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 630
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 656
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 666
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 673
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 687
              },
              {
                "name": "dist",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 688
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 709
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 719
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 724
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 729
              },
              {
                "name": "xt1",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 751
              },
              {
                "name": "yt1",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 752
              },
              {
                "name": "xt2",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 753
              },
              {
                "name": "yt2",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 754
              },
              {
                "name": "xstep",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 756
              },
              {
                "name": "ystep",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 757
              },
              {
                "name": "partial",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 759
              },
              {
                "name": "xintercept",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 761
              },
              {
                "name": "yintercept",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 762
              },
              {
                "name": "mapx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 764
              },
              {
                "name": "mapy",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 765
              },
              {
                "name": "mapxstep",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 767
              },
              {
                "name": "mapystep",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 768
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 770
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 851
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 857
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/p_maputl.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "p_mobj.c",
          "type": "file",
          "size": 19304,
          "last_modified": "2024-09-05T16:00:04.442319",
          "path": "linuxdoom-1.10/p_mobj.c",
          "readme": "# p_mobj.c\n\nThis file contains functionality related to p_mobj.",
          "dependencies": [
            "st_stuff.h",
            "m_random.h",
            "p_local.h",
            "sounds.h",
            "z_zone.h",
            "i_system.h",
            "doomstat.h",
            "s_sound.h",
            "hu_stuff.h",
            "doomdef.h"
          ],
          "inputs": [
            "mobj",
            "i++",
            "th",
            "type",
            "mo",
            "-1",
            "skyflatnum",
            "CF_NOMOMENTUM",
            "11",
            "source",
            "mo->player",
            "x",
            "mthing",
            "y",
            "void",
            "mo->floorz",
            "4",
            "damage",
            "MF_MISSILE",
            "MF_CORPSE",
            "state",
            "-FRACUNIT/4",
            "z"
          ],
          "outputs": [
            "if halfway off a step with some momentum",
            "explode a missile",
            "check for players specially",
            "blocked move",
            "no friction when airborne",
            "clip movement",
            "find which type to spawn",
            "count deathmatch start positions",
            "calling action functions at transitions",
            "slow down",
            "boolean",
            "check for smooth step up",
            "define FRICTION\t\t0xe800\n\nvoid",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "P_SetMobjState",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mobj"
                  },
                  {
                    "type": "statenum_t",
                    "name": "state"
                  }
                ],
                "start_line": 53,
                "end_line": 81,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 63
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 80
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 59
                  },
                  {
                    "name": "P_RemoveMobj",
                    "line_number": 62
                  },
                  {
                    "name": "if",
                    "line_number": 74
                  },
                  {
                    "name": "acp1",
                    "line_number": 75
                  },
                  {
                    "name": "while",
                    "line_number": 78
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 59
                  },
                  {
                    "type": "if",
                    "line_number": 74
                  },
                  {
                    "type": "while",
                    "line_number": 78
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "mobj",
                  "state"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "P_RemoveMobj",
                  "while",
                  "acp1",
                  "if"
                ]
              },
              {
                "name": "P_ExplodeMissile",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 90,
                "end_line": 105,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_SetMobjState",
                    "line_number": 94
                  },
                  {
                    "name": "P_Random",
                    "line_number": 96
                  },
                  {
                    "name": "if",
                    "line_number": 98
                  },
                  {
                    "name": "if",
                    "line_number": 103
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 104
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 98
                  },
                  {
                    "type": "if",
                    "line_number": 103
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "S_StartSound",
                  "P_SetMobjState",
                  "P_Random",
                  "if"
                ]
              },
              {
                "name": "P_XYMovement",
                "return_type": "define FRICTION\t\t0xe800\n\nvoid",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 112,
                "end_line": 239,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "ptryx",
                    "array_size": null,
                    "line_number": 114
                  },
                  {
                    "type": "fixed_t",
                    "name": "ptryy",
                    "array_size": null,
                    "line_number": 115
                  },
                  {
                    "type": "fixed_t",
                    "name": "xmove",
                    "array_size": null,
                    "line_number": 117
                  },
                  {
                    "type": "fixed_t",
                    "name": "ymove",
                    "array_size": null,
                    "line_number": 118
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 120
                  },
                  {
                    "name": "if",
                    "line_number": 122
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 128
                  },
                  {
                    "name": "if",
                    "line_number": 135
                  },
                  {
                    "name": "if",
                    "line_number": 137
                  },
                  {
                    "name": "if",
                    "line_number": 140
                  },
                  {
                    "name": "if",
                    "line_number": 142
                  },
                  {
                    "name": "if",
                    "line_number": 150
                  },
                  {
                    "name": "if",
                    "line_number": 164
                  },
                  {
                    "name": "P_TryMove",
                    "line_number": 164
                  },
                  {
                    "name": "if",
                    "line_number": 167
                  },
                  {
                    "name": "P_SlideMove",
                    "line_number": 169
                  },
                  {
                    "name": "if",
                    "line_number": 171
                  },
                  {
                    "name": "if",
                    "line_number": 174
                  },
                  {
                    "name": "P_RemoveMobj",
                    "line_number": 181
                  },
                  {
                    "name": "P_ExplodeMissile",
                    "line_number": 184
                  },
                  {
                    "name": "while",
                    "line_number": 189
                  },
                  {
                    "name": "if",
                    "line_number": 192
                  },
                  {
                    "name": "if",
                    "line_number": 199
                  },
                  {
                    "name": "if",
                    "line_number": 202
                  },
                  {
                    "name": "if",
                    "line_number": 205
                  },
                  {
                    "name": "if",
                    "line_number": 209
                  },
                  {
                    "name": "if",
                    "line_number": 214
                  },
                  {
                    "name": "if",
                    "line_number": 219
                  },
                  {
                    "name": "if",
                    "line_number": 228
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 229
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 236
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 237
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 120
                  },
                  {
                    "type": "if",
                    "line_number": 122
                  },
                  {
                    "type": "if",
                    "line_number": 135
                  },
                  {
                    "type": "if",
                    "line_number": 137
                  },
                  {
                    "type": "if",
                    "line_number": 140
                  },
                  {
                    "type": "if",
                    "line_number": 142
                  },
                  {
                    "type": "if",
                    "line_number": 150
                  },
                  {
                    "type": "else",
                    "line_number": 157
                  },
                  {
                    "type": "if",
                    "line_number": 164
                  },
                  {
                    "type": "if",
                    "line_number": 167
                  },
                  {
                    "type": "if",
                    "line_number": 171
                  },
                  {
                    "type": "if",
                    "line_number": 174
                  },
                  {
                    "type": "else",
                    "line_number": 186
                  },
                  {
                    "type": "while",
                    "line_number": 189
                  },
                  {
                    "type": "if",
                    "line_number": 192
                  },
                  {
                    "type": "for",
                    "line_number": 194
                  },
                  {
                    "type": "if",
                    "line_number": 199
                  },
                  {
                    "type": "for",
                    "line_number": 200
                  },
                  {
                    "type": "if",
                    "line_number": 202
                  },
                  {
                    "type": "if",
                    "line_number": 205
                  },
                  {
                    "type": "if",
                    "line_number": 208
                  },
                  {
                    "type": "if",
                    "line_number": 209
                  },
                  {
                    "type": "if",
                    "line_number": 214
                  },
                  {
                    "type": "if",
                    "line_number": 219
                  },
                  {
                    "type": "if",
                    "line_number": 227
                  },
                  {
                    "type": "if",
                    "line_number": 228
                  },
                  {
                    "type": "else",
                    "line_number": 234
                  }
                ],
                "complexity": 26,
                "inputs": [
                  "mo"
                ],
                "outputs": [
                  "define FRICTION\t\t0xe800\n\nvoid"
                ],
                "dependencies": [
                  "while",
                  "P_ExplodeMissile",
                  "if",
                  "P_TryMove",
                  "P_SlideMove",
                  "P_SetMobjState",
                  "P_RemoveMobj",
                  "FixedMul"
                ]
              },
              {
                "name": "if",
                "return_type": "blocked move",
                "parameters": [
                  {
                    "type": "",
                    "name": "mo->player"
                  }
                ],
                "start_line": 168,
                "end_line": 171,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_SlideMove",
                    "line_number": 170
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "mo->player"
                ],
                "outputs": [
                  "blocked move"
                ],
                "dependencies": [
                  "P_SlideMove"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "mo->flags &",
                    "name": "MF_MISSILE"
                  }
                ],
                "start_line": 173,
                "end_line": 187,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 176
                  },
                  {
                    "name": "P_RemoveMobj",
                    "line_number": 183
                  },
                  {
                    "name": "P_ExplodeMissile",
                    "line_number": 186
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 176
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "MF_MISSILE"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "P_RemoveMobj",
                  "P_ExplodeMissile",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "explode a missile",
                "parameters": [
                  {
                    "type": "ceilingline && ceilingline->backsector && ceilingline->backsector->ceilingpic ==",
                    "name": "skyflatnum"
                  }
                ],
                "start_line": 175,
                "end_line": 182,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_RemoveMobj",
                    "line_number": 180
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "skyflatnum"
                ],
                "outputs": [
                  "explode a missile"
                ],
                "dependencies": [
                  "P_RemoveMobj"
                ]
              },
              {
                "name": "if",
                "return_type": "slow down",
                "parameters": [
                  {
                    "type": "player && player->cheats &",
                    "name": "CF_NOMOMENTUM"
                  }
                ],
                "start_line": 193,
                "end_line": 198,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 195
                  }
                ],
                "complexity": 1,
                "inputs": [
                  "CF_NOMOMENTUM"
                ],
                "outputs": [
                  "slow down"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "no friction when airborne",
                "parameters": [
                  {
                    "type": "mo->flags &",
                    "name": "MF_CORPSE"
                  }
                ],
                "start_line": 205,
                "end_line": 217,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 209
                  },
                  {
                    "name": "if",
                    "line_number": 214
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 208
                  },
                  {
                    "type": "if",
                    "line_number": 209
                  },
                  {
                    "type": "if",
                    "line_number": 214
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "MF_CORPSE"
                ],
                "outputs": [
                  "no friction when airborne"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "if halfway off a step with some momentum",
                "parameters": [
                  {
                    "type": "mo->momx > FRACUNIT/4 || mo->momx < -FRACUNIT/4 || mo->momy > FRACUNIT/4 || mo->momy <",
                    "name": "-FRACUNIT/4"
                  }
                ],
                "start_line": 210,
                "end_line": 214,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 212
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 212
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "-FRACUNIT/4"
                ],
                "outputs": [
                  "if halfway off a step with some momentum"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "P_ZMovement",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 246,
                "end_line": 349,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "dist",
                    "array_size": null,
                    "line_number": 248
                  },
                  {
                    "type": "fixed_t",
                    "name": "delta",
                    "array_size": null,
                    "line_number": 249
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 252
                  },
                  {
                    "name": "if",
                    "line_number": 263
                  },
                  {
                    "name": "if",
                    "line_number": 267
                  },
                  {
                    "name": "P_AproxDistance",
                    "line_number": 270
                  },
                  {
                    "name": "if",
                    "line_number": 275
                  },
                  {
                    "name": "if",
                    "line_number": 277
                  },
                  {
                    "name": "if",
                    "line_number": 284
                  },
                  {
                    "name": "Note",
                    "line_number": 288
                  },
                  {
                    "name": "if",
                    "line_number": 291
                  },
                  {
                    "name": "if",
                    "line_number": 297
                  },
                  {
                    "name": "if",
                    "line_number": 299
                  },
                  {
                    "name": "ground",
                    "line_number": 304
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 307
                  },
                  {
                    "name": "if",
                    "line_number": 313
                  },
                  {
                    "name": "P_ExplodeMissile",
                    "line_number": 316
                  },
                  {
                    "name": "if",
                    "line_number": 320
                  },
                  {
                    "name": "if",
                    "line_number": 322
                  },
                  {
                    "name": "if",
                    "line_number": 328
                  },
                  {
                    "name": "if",
                    "line_number": 331
                  },
                  {
                    "name": "if",
                    "line_number": 337
                  },
                  {
                    "name": "if",
                    "line_number": 342
                  },
                  {
                    "name": "P_ExplodeMissile",
                    "line_number": 345
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 251
                  },
                  {
                    "type": "if",
                    "line_number": 252
                  },
                  {
                    "type": "if",
                    "line_number": 263
                  },
                  {
                    "type": "if",
                    "line_number": 266
                  },
                  {
                    "type": "if",
                    "line_number": 267
                  },
                  {
                    "type": "if",
                    "line_number": 275
                  },
                  {
                    "type": "if",
                    "line_number": 277
                  },
                  {
                    "type": "if",
                    "line_number": 284
                  },
                  {
                    "type": "if",
                    "line_number": 291
                  },
                  {
                    "type": "if",
                    "line_number": 297
                  },
                  {
                    "type": "if",
                    "line_number": 299
                  },
                  {
                    "type": "for",
                    "line_number": 303
                  },
                  {
                    "type": "if",
                    "line_number": 313
                  },
                  {
                    "type": "if",
                    "line_number": 320
                  },
                  {
                    "type": "if",
                    "line_number": 322
                  },
                  {
                    "type": "else",
                    "line_number": 324
                  },
                  {
                    "type": "if",
                    "line_number": 328
                  },
                  {
                    "type": "if",
                    "line_number": 331
                  },
                  {
                    "type": "if",
                    "line_number": 337
                  },
                  {
                    "type": "if",
                    "line_number": 342
                  }
                ],
                "complexity": 20,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "P_AproxDistance",
                  "P_ExplodeMissile",
                  "if",
                  "ground",
                  "S_StartSound",
                  "Note"
                ]
              },
              {
                "name": "if",
                "return_type": "check for smooth step up",
                "parameters": [
                  {
                    "type": "mo->player && mo->z <",
                    "name": "mo->floorz"
                  }
                ],
                "start_line": 251,
                "end_line": 257,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "mo->floorz"
                ],
                "outputs": [
                  "check for smooth step up"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "clip movement",
                "parameters": [
                  {
                    "type": "mo->z <=",
                    "name": "mo->floorz"
                  }
                ],
                "start_line": 283,
                "end_line": 318,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "Note",
                    "line_number": 287
                  },
                  {
                    "name": "if",
                    "line_number": 290
                  },
                  {
                    "name": "if",
                    "line_number": 296
                  },
                  {
                    "name": "if",
                    "line_number": 298
                  },
                  {
                    "name": "ground",
                    "line_number": 303
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 306
                  },
                  {
                    "name": "if",
                    "line_number": 312
                  },
                  {
                    "name": "P_ExplodeMissile",
                    "line_number": 315
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 290
                  },
                  {
                    "type": "if",
                    "line_number": 296
                  },
                  {
                    "type": "if",
                    "line_number": 298
                  },
                  {
                    "type": "for",
                    "line_number": 302
                  },
                  {
                    "type": "if",
                    "line_number": 312
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "mo->floorz"
                ],
                "outputs": [
                  "clip movement"
                ],
                "dependencies": [
                  "P_ExplodeMissile",
                  "if",
                  "ground",
                  "S_StartSound",
                  "Note"
                ]
              },
              {
                "name": "P_NightmareRespawn",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mobj"
                  }
                ],
                "start_line": 356,
                "end_line": 408,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "x",
                    "array_size": null,
                    "line_number": 358
                  },
                  {
                    "type": "fixed_t",
                    "name": "y",
                    "array_size": null,
                    "line_number": 359
                  },
                  {
                    "type": "fixed_t",
                    "name": "z",
                    "array_size": null,
                    "line_number": 360
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 369
                  },
                  {
                    "name": "P_CheckPosition",
                    "line_number": 369
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 374
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 378
                  },
                  {
                    "name": "R_PointInSubsector",
                    "line_number": 381
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 383
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 385
                  },
                  {
                    "name": "if",
                    "line_number": 391
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 397
                  },
                  {
                    "name": "if",
                    "line_number": 401
                  },
                  {
                    "name": "P_RemoveMobj",
                    "line_number": 407
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 369
                  },
                  {
                    "type": "if",
                    "line_number": 391
                  },
                  {
                    "type": "else",
                    "line_number": 393
                  },
                  {
                    "type": "if",
                    "line_number": 401
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "mobj"
                ],
                "outputs": [],
                "dependencies": [
                  "R_PointInSubsector",
                  "if",
                  "P_SpawnMobj",
                  "P_CheckPosition",
                  "S_StartSound",
                  "P_RemoveMobj"
                ]
              },
              {
                "name": "P_MobjThinker",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mobj"
                  }
                ],
                "start_line": 415,
                "end_line": 473,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 418
                  },
                  {
                    "name": "P_XYMovement",
                    "line_number": 422
                  },
                  {
                    "name": "if",
                    "line_number": 425
                  },
                  {
                    "name": "if",
                    "line_number": 428
                  },
                  {
                    "name": "P_ZMovement",
                    "line_number": 431
                  },
                  {
                    "name": "if",
                    "line_number": 434
                  },
                  {
                    "name": "if",
                    "line_number": 441
                  },
                  {
                    "name": "if",
                    "line_number": 446
                  },
                  {
                    "name": "if",
                    "line_number": 447
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 447
                  },
                  {
                    "name": "if",
                    "line_number": 453
                  },
                  {
                    "name": "if",
                    "line_number": 456
                  },
                  {
                    "name": "if",
                    "line_number": 461
                  },
                  {
                    "name": "if",
                    "line_number": 464
                  },
                  {
                    "name": "if",
                    "line_number": 467
                  },
                  {
                    "name": "P_Random",
                    "line_number": 467
                  },
                  {
                    "name": "P_NightmareRespawn",
                    "line_number": 470
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 418
                  },
                  {
                    "type": "if",
                    "line_number": 425
                  },
                  {
                    "type": "if",
                    "line_number": 428
                  },
                  {
                    "type": "if",
                    "line_number": 434
                  },
                  {
                    "type": "if",
                    "line_number": 441
                  },
                  {
                    "type": "if",
                    "line_number": 446
                  },
                  {
                    "type": "if",
                    "line_number": 447
                  },
                  {
                    "type": "else",
                    "line_number": 450
                  },
                  {
                    "type": "for",
                    "line_number": 452
                  },
                  {
                    "type": "if",
                    "line_number": 453
                  },
                  {
                    "type": "if",
                    "line_number": 456
                  },
                  {
                    "type": "if",
                    "line_number": 461
                  },
                  {
                    "type": "if",
                    "line_number": 464
                  },
                  {
                    "type": "if",
                    "line_number": 467
                  }
                ],
                "complexity": 16,
                "inputs": [
                  "mobj"
                ],
                "outputs": [],
                "dependencies": [
                  "P_NightmareRespawn",
                  "if",
                  "P_ZMovement",
                  "P_SetMobjState",
                  "P_Random",
                  "P_XYMovement"
                ]
              },
              {
                "name": "if",
                "return_type": "calling action functions at transitions",
                "parameters": [
                  {
                    "type": "mobj->tics !=",
                    "name": "-1"
                  }
                ],
                "start_line": 440,
                "end_line": 448,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 445
                  },
                  {
                    "name": "if",
                    "line_number": 446
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 446
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 445
                  },
                  {
                    "type": "if",
                    "line_number": 446
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "-1"
                ],
                "outputs": [
                  "calling action functions at transitions"
                ],
                "dependencies": [
                  "P_SetMobjState",
                  "if"
                ]
              },
              {
                "name": "P_RemoveMobj",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mobj"
                  }
                ],
                "start_line": 546,
                "end_line": 570,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 548
                  },
                  {
                    "name": "if",
                    "line_number": 558
                  },
                  {
                    "name": "P_UnsetThingPosition",
                    "line_number": 563
                  },
                  {
                    "name": "S_StopSound",
                    "line_number": 566
                  },
                  {
                    "name": "P_RemoveThinker",
                    "line_number": 569
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 548
                  },
                  {
                    "type": "if",
                    "line_number": 558
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "mobj"
                ],
                "outputs": [],
                "dependencies": [
                  "P_UnsetThingPosition",
                  "S_StopSound",
                  "P_RemoveThinker",
                  "if"
                ]
              },
              {
                "name": "P_RespawnSpecials",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 578,
                "end_line": 631,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "x",
                    "array_size": null,
                    "line_number": 580
                  },
                  {
                    "type": "fixed_t",
                    "name": "y",
                    "array_size": null,
                    "line_number": 581
                  },
                  {
                    "type": "fixed_t",
                    "name": "z",
                    "array_size": null,
                    "line_number": 582
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 588
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 591
                  },
                  {
                    "name": "if",
                    "line_number": 595
                  },
                  {
                    "name": "if",
                    "line_number": 599
                  },
                  {
                    "name": "R_PointInSubsector",
                    "line_number": 608
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 609
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 610
                  },
                  {
                    "name": "for",
                    "line_number": 613
                  },
                  {
                    "name": "if",
                    "line_number": 615
                  },
                  {
                    "name": "if",
                    "line_number": 620
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 625
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 591
                  },
                  {
                    "type": "if",
                    "line_number": 595
                  },
                  {
                    "type": "if",
                    "line_number": 599
                  },
                  {
                    "type": "for",
                    "line_number": 613
                  },
                  {
                    "type": "if",
                    "line_number": 615
                  },
                  {
                    "type": "if",
                    "line_number": 620
                  },
                  {
                    "type": "else",
                    "line_number": 622
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "R_PointInSubsector",
                  "for",
                  "if",
                  "P_SpawnMobj",
                  "S_StartSound"
                ]
              },
              {
                "name": "for",
                "return_type": "find which type to spawn",
                "parameters": [
                  {
                    "type": "i=0 ; i< NUMMOBJTYPES ;",
                    "name": "i++"
                  }
                ],
                "start_line": 612,
                "end_line": 616,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 614
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 614
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "i++"
                ],
                "outputs": [
                  "find which type to spawn"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "P_SpawnPlayer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mapthing_t*",
                    "name": "mthing"
                  }
                ],
                "start_line": 642,
                "end_line": 700,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "x",
                    "array_size": null,
                    "line_number": 645
                  },
                  {
                    "type": "fixed_t",
                    "name": "y",
                    "array_size": null,
                    "line_number": 646
                  },
                  {
                    "type": "fixed_t",
                    "name": "z",
                    "array_size": null,
                    "line_number": 647
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 651
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 654
                  },
                  {
                    "name": "if",
                    "line_number": 659
                  },
                  {
                    "name": "G_PlayerReborn",
                    "line_number": 660
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 665
                  },
                  {
                    "name": "if",
                    "line_number": 668
                  },
                  {
                    "name": "P_SetupPsprites",
                    "line_number": 686
                  },
                  {
                    "name": "if",
                    "line_number": 689
                  },
                  {
                    "name": "for",
                    "line_number": 690
                  },
                  {
                    "name": "if",
                    "line_number": 693
                  },
                  {
                    "name": "ST_Start",
                    "line_number": 696
                  },
                  {
                    "name": "HU_Start",
                    "line_number": 698
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 654
                  },
                  {
                    "type": "if",
                    "line_number": 659
                  },
                  {
                    "type": "for",
                    "line_number": 667
                  },
                  {
                    "type": "if",
                    "line_number": 668
                  },
                  {
                    "type": "if",
                    "line_number": 689
                  },
                  {
                    "type": "for",
                    "line_number": 690
                  },
                  {
                    "type": "if",
                    "line_number": 693
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "mthing"
                ],
                "outputs": [],
                "dependencies": [
                  "G_PlayerReborn",
                  "for",
                  "if",
                  "P_SpawnMobj",
                  "P_SetupPsprites",
                  "HU_Start",
                  "ST_Start"
                ]
              },
              {
                "name": "P_SpawnMapThing",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mapthing_t*",
                    "name": "mthing"
                  }
                ],
                "start_line": 708,
                "end_line": 797,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 710
                  },
                  {
                    "type": "int",
                    "name": "bit",
                    "array_size": null,
                    "line_number": 711
                  },
                  {
                    "type": "fixed_t",
                    "name": "x",
                    "array_size": null,
                    "line_number": 713
                  },
                  {
                    "type": "fixed_t",
                    "name": "y",
                    "array_size": null,
                    "line_number": 714
                  },
                  {
                    "type": "fixed_t",
                    "name": "z",
                    "array_size": null,
                    "line_number": 715
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 718
                  },
                  {
                    "name": "if",
                    "line_number": 720
                  },
                  {
                    "name": "memcpy",
                    "line_number": 722
                  },
                  {
                    "name": "sizeof",
                    "line_number": 722
                  },
                  {
                    "name": "if",
                    "line_number": 729
                  },
                  {
                    "name": "if",
                    "line_number": 733
                  },
                  {
                    "name": "P_SpawnPlayer",
                    "line_number": 734
                  },
                  {
                    "name": "if",
                    "line_number": 740
                  },
                  {
                    "name": "if",
                    "line_number": 743
                  },
                  {
                    "name": "if",
                    "line_number": 745
                  },
                  {
                    "name": "if",
                    "line_number": 750
                  },
                  {
                    "name": "for",
                    "line_number": 754
                  },
                  {
                    "name": "if",
                    "line_number": 755
                  },
                  {
                    "name": "if",
                    "line_number": 758
                  },
                  {
                    "name": "I_Error",
                    "line_number": 759
                  },
                  {
                    "name": "at",
                    "line_number": 759
                  },
                  {
                    "name": "if",
                    "line_number": 764
                  },
                  {
                    "name": "if",
                    "line_number": 768
                  },
                  {
                    "name": "if",
                    "line_number": 779
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 784
                  },
                  {
                    "name": "if",
                    "line_number": 787
                  },
                  {
                    "name": "P_Random",
                    "line_number": 788
                  },
                  {
                    "name": "if",
                    "line_number": 789
                  },
                  {
                    "name": "if",
                    "line_number": 791
                  },
                  {
                    "name": "if",
                    "line_number": 795
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 718
                  },
                  {
                    "type": "if",
                    "line_number": 720
                  },
                  {
                    "type": "for",
                    "line_number": 728
                  },
                  {
                    "type": "if",
                    "line_number": 729
                  },
                  {
                    "type": "for",
                    "line_number": 731
                  },
                  {
                    "type": "if",
                    "line_number": 733
                  },
                  {
                    "type": "for",
                    "line_number": 739
                  },
                  {
                    "type": "if",
                    "line_number": 740
                  },
                  {
                    "type": "if",
                    "line_number": 743
                  },
                  {
                    "type": "if",
                    "line_number": 745
                  },
                  {
                    "type": "else",
                    "line_number": 747
                  },
                  {
                    "type": "if",
                    "line_number": 750
                  },
                  {
                    "type": "for",
                    "line_number": 754
                  },
                  {
                    "type": "if",
                    "line_number": 755
                  },
                  {
                    "type": "if",
                    "line_number": 758
                  },
                  {
                    "type": "if",
                    "line_number": 764
                  },
                  {
                    "type": "if",
                    "line_number": 767
                  },
                  {
                    "type": "if",
                    "line_number": 768
                  },
                  {
                    "type": "if",
                    "line_number": 779
                  },
                  {
                    "type": "else",
                    "line_number": 781
                  },
                  {
                    "type": "if",
                    "line_number": 787
                  },
                  {
                    "type": "if",
                    "line_number": 789
                  },
                  {
                    "type": "if",
                    "line_number": 791
                  },
                  {
                    "type": "if",
                    "line_number": 795
                  }
                ],
                "complexity": 20,
                "inputs": [
                  "mthing"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SpawnPlayer",
                  "for",
                  "if",
                  "at",
                  "P_SpawnMobj",
                  "I_Error",
                  "P_Random",
                  "sizeof",
                  "memcpy"
                ]
              },
              {
                "name": "if",
                "return_type": "count deathmatch start positions",
                "parameters": [
                  {
                    "type": "mthing->type ==",
                    "name": "11"
                  }
                ],
                "start_line": 717,
                "end_line": 725,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 719
                  },
                  {
                    "name": "memcpy",
                    "line_number": 721
                  },
                  {
                    "name": "sizeof",
                    "line_number": 721
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 719
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "11"
                ],
                "outputs": [
                  "count deathmatch start positions"
                ],
                "dependencies": [
                  "memcpy",
                  "sizeof",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "check for players specially",
                "parameters": [
                  {
                    "type": "mthing->type <=",
                    "name": "4"
                  }
                ],
                "start_line": 728,
                "end_line": 736,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 732
                  },
                  {
                    "name": "P_SpawnPlayer",
                    "line_number": 733
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 730
                  },
                  {
                    "type": "if",
                    "line_number": 732
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "4"
                ],
                "outputs": [
                  "check for players specially"
                ],
                "dependencies": [
                  "P_SpawnPlayer",
                  "if"
                ]
              },
              {
                "name": "P_SpawnPuff",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "fixed_t",
                    "name": "x"
                  },
                  {
                    "type": "fixed_t",
                    "name": "y"
                  },
                  {
                    "type": "fixed_t",
                    "name": "z"
                  }
                ],
                "start_line": 811,
                "end_line": 827,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_Random",
                    "line_number": 815
                  },
                  {
                    "name": "P_Random",
                    "line_number": 815
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 817
                  },
                  {
                    "name": "P_Random",
                    "line_number": 819
                  },
                  {
                    "name": "if",
                    "line_number": 821
                  },
                  {
                    "name": "if",
                    "line_number": 825
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 826
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 821
                  },
                  {
                    "type": "if",
                    "line_number": 825
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "x",
                  "y",
                  "z"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SpawnMobj",
                  "P_SetMobjState",
                  "P_Random",
                  "if"
                ]
              },
              {
                "name": "P_SpawnBlood",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "fixed_t",
                    "name": "x"
                  },
                  {
                    "type": "fixed_t",
                    "name": "y"
                  },
                  {
                    "type": "fixed_t",
                    "name": "z"
                  },
                  {
                    "type": "int",
                    "name": "damage"
                  }
                ],
                "start_line": 838,
                "end_line": 854,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_Random",
                    "line_number": 842
                  },
                  {
                    "name": "P_Random",
                    "line_number": 842
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 843
                  },
                  {
                    "name": "P_Random",
                    "line_number": 845
                  },
                  {
                    "name": "if",
                    "line_number": 847
                  },
                  {
                    "name": "if",
                    "line_number": 850
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 851
                  },
                  {
                    "name": "if",
                    "line_number": 852
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 853
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 847
                  },
                  {
                    "type": "if",
                    "line_number": 850
                  },
                  {
                    "type": "if",
                    "line_number": 852
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "x",
                  "y",
                  "z",
                  "damage"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SpawnMobj",
                  "P_SetMobjState",
                  "P_Random",
                  "if"
                ]
              },
              {
                "name": "P_CheckMissileSpawn",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "th"
                  }
                ],
                "start_line": 868,
                "end_line": 882,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_Random",
                    "line_number": 870
                  },
                  {
                    "name": "if",
                    "line_number": 871
                  },
                  {
                    "name": "if",
                    "line_number": 880
                  },
                  {
                    "name": "P_TryMove",
                    "line_number": 880
                  },
                  {
                    "name": "P_ExplodeMissile",
                    "line_number": 881
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 871
                  },
                  {
                    "type": "if",
                    "line_number": 875
                  },
                  {
                    "type": "if",
                    "line_number": 880
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "th"
                ],
                "outputs": [],
                "dependencies": [
                  "P_ExplodeMissile",
                  "P_TryMove",
                  "P_Random",
                  "if"
                ]
              },
              {
                "name": "P_SpawnPlayerMissile",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "source"
                  },
                  {
                    "type": "mobjtype_t",
                    "name": "type"
                  }
                ],
                "start_line": 934,
                "end_line": 984,
                "local_variables": [
                  {
                    "type": "angle_t",
                    "name": "an",
                    "array_size": null,
                    "line_number": 937
                  },
                  {
                    "type": "fixed_t",
                    "name": "x",
                    "array_size": null,
                    "line_number": 939
                  },
                  {
                    "type": "fixed_t",
                    "name": "y",
                    "array_size": null,
                    "line_number": 940
                  },
                  {
                    "type": "fixed_t",
                    "name": "z",
                    "array_size": null,
                    "line_number": 941
                  },
                  {
                    "type": "fixed_t",
                    "name": "slope",
                    "array_size": null,
                    "line_number": 942
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_AimLineAttack",
                    "line_number": 946
                  },
                  {
                    "name": "if",
                    "line_number": 948
                  },
                  {
                    "name": "P_AimLineAttack",
                    "line_number": 951
                  },
                  {
                    "name": "if",
                    "line_number": 953
                  },
                  {
                    "name": "P_AimLineAttack",
                    "line_number": 956
                  },
                  {
                    "name": "if",
                    "line_number": 959
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 970
                  },
                  {
                    "name": "if",
                    "line_number": 972
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 973
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 977
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 979
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 981
                  },
                  {
                    "name": "P_CheckMissileSpawn",
                    "line_number": 983
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 948
                  },
                  {
                    "type": "if",
                    "line_number": 953
                  },
                  {
                    "type": "if",
                    "line_number": 959
                  },
                  {
                    "type": "if",
                    "line_number": 972
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "source",
                  "type"
                ],
                "outputs": [],
                "dependencies": [
                  "P_CheckMissileSpawn",
                  "if",
                  "P_SpawnMobj",
                  "S_StartSound",
                  "P_AimLineAttack",
                  "FixedMul"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "test",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 51
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 66
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 83
              },
              {
                "name": "ptryx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 116
              },
              {
                "name": "ptryy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 117
              },
              {
                "name": "xmove",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 119
              },
              {
                "name": "ymove",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 120
              },
              {
                "name": "dist",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 248
              },
              {
                "name": "delta",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 249
              },
              {
                "name": "x",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 359
              },
              {
                "name": "y",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 360
              },
              {
                "name": "z",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 361
              },
              {
                "name": "mobj",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 533
              },
              {
                "name": "iquehead",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 542
              },
              {
                "name": "iquetail",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 543
              },
              {
                "name": "x",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 580
              },
              {
                "name": "y",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 581
              },
              {
                "name": "z",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 582
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 588
              },
              {
                "name": "x",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 645
              },
              {
                "name": "y",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 646
              },
              {
                "name": "z",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 647
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 651
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 710
              },
              {
                "name": "bit",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 711
              },
              {
                "name": "x",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 713
              },
              {
                "name": "y",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 714
              },
              {
                "name": "z",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 715
              },
              {
                "name": "attackrange",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 809
              },
              {
                "name": "an",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 895
              },
              {
                "name": "dist",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 896
              },
              {
                "name": "th",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 926
              },
              {
                "name": "an",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 940
              },
              {
                "name": "x",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 942
              },
              {
                "name": "y",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 943
              },
              {
                "name": "z",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 944
              },
              {
                "name": "slope",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 945
              }
            ],
            "defines": [
              {
                "name": "STOPSPEED",
                "value": "0x1000",
                "line_number": 111
              },
              {
                "name": "FRICTION",
                "value": "0xe800",
                "line_number": 112
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/p_mobj.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of functions",
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "p_mobj.h",
          "type": "file",
          "size": 8966,
          "last_modified": "2024-09-05T16:00:04.465831",
          "path": "linuxdoom-1.10/p_mobj.h",
          "readme": "# p_mobj.h\n\nThis file contains functionality related to p_mobj.",
          "dependencies": [
            "info.h",
            "d_think.h",
            "tables.h",
            "doomdata.h",
            "m_fixed.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "thinker",
                "type": "thinker_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 210
              },
              {
                "name": "x",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 213
              },
              {
                "name": "y",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 214
              },
              {
                "name": "z",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 215
              },
              {
                "name": "angle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 222
              },
              {
                "name": "sprite",
                "type": "spritenum_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 223
              },
              {
                "name": "frame",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 224
              },
              {
                "name": "floorz",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 234
              },
              {
                "name": "ceilingz",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 235
              },
              {
                "name": "radius",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 238
              },
              {
                "name": "height",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 239
              },
              {
                "name": "momx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 242
              },
              {
                "name": "momy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 243
              },
              {
                "name": "momz",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 244
              },
              {
                "name": "validcount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 247
              },
              {
                "name": "type",
                "type": "mobjtype_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 249
              },
              {
                "name": "tics",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 252
              },
              {
                "name": "flags",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 254
              },
              {
                "name": "health",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 255
              },
              {
                "name": "movedir",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 258
              },
              {
                "name": "movecount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 259
              },
              {
                "name": "reactiontime",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 267
              },
              {
                "name": "threshold",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 271
              },
              {
                "name": "lastlook",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 278
              },
              {
                "name": "spawnpoint",
                "type": "mapthing_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 281
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/p_mobj.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "p_plats.c",
          "type": "file",
          "size": 6633,
          "last_modified": "2024-09-05T16:00:04.491831",
          "path": "linuxdoom-1.10/p_plats.c",
          "readme": "# p_plats.c\n\nThis file contains functionality related to p_plats.",
          "dependencies": [
            "m_random.h",
            "p_local.h",
            "sounds.h",
            "z_zone.h",
            "i_system.h",
            "doomstat.h",
            "r_state.h",
            "s_sound.h",
            "doomdef.h"
          ],
          "inputs": [
            "amount",
            "type",
            "plat",
            "line",
            "tag"
          ],
          "outputs": [
            "int",
            "plats that are in_stasis"
          ],
          "content": {
            "functions": [
              {
                "name": "T_PlatRaise",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "plat_t*",
                    "name": "plat"
                  }
                ],
                "start_line": 52,
                "end_line": 131,
                "local_variables": [
                  {
                    "type": "result_e",
                    "name": "res",
                    "array_size": null,
                    "line_number": 54
                  }
                ],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 56
                  },
                  {
                    "name": "T_MovePlane",
                    "line_number": 59
                  },
                  {
                    "name": "if",
                    "line_number": 64
                  },
                  {
                    "name": "if",
                    "line_number": 67
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 68
                  },
                  {
                    "name": "if",
                    "line_number": 73
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 77
                  },
                  {
                    "name": "if",
                    "line_number": 82
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 86
                  },
                  {
                    "name": "switch",
                    "line_number": 89
                  },
                  {
                    "name": "P_RemoveActivePlat",
                    "line_number": 93
                  },
                  {
                    "name": "P_RemoveActivePlat",
                    "line_number": 98
                  },
                  {
                    "name": "T_MovePlane",
                    "line_number": 109
                  },
                  {
                    "name": "if",
                    "line_number": 111
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 115
                  },
                  {
                    "name": "if",
                    "line_number": 120
                  },
                  {
                    "name": "if",
                    "line_number": 122
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 126
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 64
                  },
                  {
                    "type": "if",
                    "line_number": 67
                  },
                  {
                    "type": "if",
                    "line_number": 73
                  },
                  {
                    "type": "else",
                    "line_number": 80
                  },
                  {
                    "type": "if",
                    "line_number": 82
                  },
                  {
                    "type": "if",
                    "line_number": 111
                  },
                  {
                    "type": "if",
                    "line_number": 120
                  },
                  {
                    "type": "if",
                    "line_number": 122
                  },
                  {
                    "type": "else",
                    "line_number": 124
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "plat"
                ],
                "outputs": [],
                "dependencies": [
                  "T_MovePlane",
                  "P_RemoveActivePlat",
                  "if",
                  "S_StartSound",
                  "switch"
                ]
              },
              {
                "name": "EV_DoPlat",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  },
                  {
                    "type": "plattype_e",
                    "name": "type"
                  },
                  {
                    "type": "int",
                    "name": "amount"
                  }
                ],
                "start_line": 138,
                "end_line": 250,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "secnum",
                    "array_size": null,
                    "line_number": 141
                  },
                  {
                    "type": "int",
                    "name": "rtn",
                    "array_size": null,
                    "line_number": 142
                  },
                  {
                    "type": "return",
                    "name": "rtn",
                    "array_size": null,
                    "line_number": 249
                  }
                ],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 150
                  },
                  {
                    "name": "P_ActivateInStasis",
                    "line_number": 153
                  },
                  {
                    "name": "while",
                    "line_number": 160
                  },
                  {
                    "name": "P_FindSectorFromLineTag",
                    "line_number": 160
                  },
                  {
                    "name": "if",
                    "line_number": 164
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 169
                  },
                  {
                    "name": "sizeof",
                    "line_number": 169
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 170
                  },
                  {
                    "name": "switch",
                    "line_number": 179
                  },
                  {
                    "name": "P_FindNextHighestFloor",
                    "line_number": 184
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 190
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 200
                  },
                  {
                    "name": "P_FindLowestFloorSurrounding",
                    "line_number": 205
                  },
                  {
                    "name": "if",
                    "line_number": 207
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 213
                  },
                  {
                    "name": "P_FindLowestFloorSurrounding",
                    "line_number": 218
                  },
                  {
                    "name": "if",
                    "line_number": 220
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 226
                  },
                  {
                    "name": "P_FindLowestFloorSurrounding",
                    "line_number": 231
                  },
                  {
                    "name": "if",
                    "line_number": 233
                  },
                  {
                    "name": "P_FindHighestFloorSurrounding",
                    "line_number": 236
                  },
                  {
                    "name": "if",
                    "line_number": 238
                  },
                  {
                    "name": "P_Random",
                    "line_number": 242
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 244
                  },
                  {
                    "name": "P_AddActivePlat",
                    "line_number": 247
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 160
                  },
                  {
                    "type": "if",
                    "line_number": 164
                  },
                  {
                    "type": "if",
                    "line_number": 207
                  },
                  {
                    "type": "if",
                    "line_number": 220
                  },
                  {
                    "type": "if",
                    "line_number": 233
                  },
                  {
                    "type": "if",
                    "line_number": 238
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "line",
                  "type",
                  "amount"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "P_AddThinker",
                  "while",
                  "P_ActivateInStasis",
                  "Z_Malloc",
                  "if",
                  "P_FindHighestFloorSurrounding",
                  "P_FindSectorFromLineTag",
                  "P_AddActivePlat",
                  "P_Random",
                  "sizeof",
                  "P_FindNextHighestFloor",
                  "S_StartSound",
                  "P_FindLowestFloorSurrounding",
                  "switch"
                ]
              },
              {
                "name": "switch",
                "return_type": "plats that are in_stasis",
                "parameters": [
                  {
                    "type": "",
                    "name": "type"
                  }
                ],
                "start_line": 153,
                "end_line": 161,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_ActivateInStasis",
                    "line_number": 156
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "type"
                ],
                "outputs": [
                  "plats that are in_stasis"
                ],
                "dependencies": [
                  "P_ActivateInStasis"
                ]
              },
              {
                "name": "P_ActivateInStasis",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "tag"
                  }
                ],
                "start_line": 258,
                "end_line": 271,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 260
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 262
                  },
                  {
                    "name": "if",
                    "line_number": 263
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 262
                  },
                  {
                    "type": "if",
                    "line_number": 263
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "tag"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "EV_StopPlat",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  }
                ],
                "start_line": 273,
                "end_line": 286,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 275
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 277
                  },
                  {
                    "name": "if",
                    "line_number": 278
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 277
                  },
                  {
                    "type": "if",
                    "line_number": 278
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "line"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "P_AddActivePlat",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "plat_t*",
                    "name": "plat"
                  }
                ],
                "start_line": 288,
                "end_line": 299,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 290
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 292
                  },
                  {
                    "name": "if",
                    "line_number": 293
                  },
                  {
                    "name": "I_Error",
                    "line_number": 298
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 292
                  },
                  {
                    "type": "if",
                    "line_number": 293
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "plat"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "I_Error",
                  "for"
                ]
              },
              {
                "name": "P_RemoveActivePlat",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "plat_t*",
                    "name": "plat"
                  }
                ],
                "start_line": 301,
                "end_line": 314,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 303
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 304
                  },
                  {
                    "name": "if",
                    "line_number": 305
                  },
                  {
                    "name": "P_RemoveThinker",
                    "line_number": 308
                  },
                  {
                    "name": "I_Error",
                    "line_number": 313
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 304
                  },
                  {
                    "type": "if",
                    "line_number": 305
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "plat"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_RemoveThinker",
                  "I_Error",
                  "for"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "res",
                "type": "result_e",
                "storage_class": null,
                "array_size": null,
                "line_number": 54
              },
              {
                "name": "secnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 145
              },
              {
                "name": "rtn",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 146
              },
              {
                "name": "rtn",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 253
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 260
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 275
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 290
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 303
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/p_plats.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "p_pspr.c",
          "type": "file",
          "size": 16446,
          "last_modified": "2024-09-05T16:00:04.517832",
          "path": "linuxdoom-1.10/p_pspr.c",
          "readme": "# p_pspr.c\n\nThis file contains functionality related to p_pspr.",
          "dependencies": [
            "p_pspr.h",
            "m_random.h",
            "p_local.h",
            "sounds.h",
            "doomstat.h",
            "s_sound.h",
            "d_event.h",
            "doomdef.h"
          ],
          "inputs": [
            "&states[S_PLAY_ATK2]",
            "player->weaponowned[wp_chainsaw]",
            "state->misc1",
            "accurate",
            "player->ammo[am_misl]",
            "*player",
            "i++",
            "mo",
            "-1",
            "player",
            "BT_ATTACK",
            "psp",
            "player->ammo[am_shell]",
            "*psp",
            "stnum",
            "player->ammo[am_clip]",
            "position",
            "linetarget",
            "!player->health"
          ],
          "outputs": [
            "get out of attack state",
            "put the weapon away",
            "the missile launcher and bfg do not auto fire",
            "1 tic count never changes",
            "offset angles from its attack angle",
            "turn to face target",
            "could be 0",
            "boolean",
            "so change the weapon and start raising it",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "P_SetPsprite",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "int",
                    "name": "position"
                  },
                  {
                    "type": "statenum_t",
                    "name": "stnum"
                  }
                ],
                "start_line": 58,
                "end_line": 98,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 67
                  },
                  {
                    "name": "if",
                    "line_number": 78
                  },
                  {
                    "name": "if",
                    "line_number": 87
                  },
                  {
                    "name": "acp2",
                    "line_number": 89
                  },
                  {
                    "name": "if",
                    "line_number": 90
                  },
                  {
                    "name": "while",
                    "line_number": 96
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 67
                  },
                  {
                    "type": "if",
                    "line_number": 78
                  },
                  {
                    "type": "if",
                    "line_number": 87
                  },
                  {
                    "type": "if",
                    "line_number": 90
                  },
                  {
                    "type": "while",
                    "line_number": 96
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "player",
                  "position",
                  "stnum"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "acp2",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "could be 0",
                "parameters": [
                  {
                    "type": "",
                    "name": "state->misc1"
                  }
                ],
                "start_line": 80,
                "end_line": 85,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "state->misc1"
                ],
                "outputs": [
                  "could be 0"
                ],
                "dependencies": []
              },
              {
                "name": "P_CalcSwing",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  }
                ],
                "start_line": 112,
                "end_line": 128,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "swing",
                    "array_size": null,
                    "line_number": 114
                  },
                  {
                    "type": "int",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 115
                  }
                ],
                "function_calls": [
                  {
                    "name": "FixedMul",
                    "line_number": 124
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 127
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 118
                  }
                ],
                "complexity": 1,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "FixedMul"
                ]
              },
              {
                "name": "P_BringUpWeapon",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  }
                ],
                "start_line": 138,
                "end_line": 154,
                "local_variables": [
                  {
                    "type": "statenum_t",
                    "name": "newstate",
                    "array_size": null,
                    "line_number": 140
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 142
                  },
                  {
                    "name": "if",
                    "line_number": 145
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 146
                  },
                  {
                    "name": "P_SetPsprite",
                    "line_number": 153
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 142
                  },
                  {
                    "type": "if",
                    "line_number": 145
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SetPsprite",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "P_CheckAmmo",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  }
                ],
                "start_line": 161,
                "end_line": 240,
                "local_variables": [
                  {
                    "type": "ammotype_t",
                    "name": "ammo",
                    "array_size": null,
                    "line_number": 163
                  },
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 164
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 179
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 239
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 169
                  },
                  {
                    "name": "if",
                    "line_number": 171
                  },
                  {
                    "name": "if",
                    "line_number": 178
                  },
                  {
                    "name": "if",
                    "line_number": 185
                  },
                  {
                    "name": "if",
                    "line_number": 191
                  },
                  {
                    "name": "if",
                    "line_number": 197
                  },
                  {
                    "name": "if",
                    "line_number": 202
                  },
                  {
                    "name": "if",
                    "line_number": 207
                  },
                  {
                    "name": "if",
                    "line_number": 211
                  },
                  {
                    "name": "if",
                    "line_number": 215
                  },
                  {
                    "name": "if",
                    "line_number": 220
                  },
                  {
                    "name": "while",
                    "line_number": 232
                  },
                  {
                    "name": "P_SetPsprite",
                    "line_number": 235
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 168
                  },
                  {
                    "type": "if",
                    "line_number": 169
                  },
                  {
                    "type": "if",
                    "line_number": 171
                  },
                  {
                    "type": "else",
                    "line_number": 173
                  },
                  {
                    "type": "if",
                    "line_number": 177
                  },
                  {
                    "type": "if",
                    "line_number": 178
                  },
                  {
                    "type": "if",
                    "line_number": 185
                  },
                  {
                    "type": "if",
                    "line_number": 191
                  },
                  {
                    "type": "if",
                    "line_number": 197
                  },
                  {
                    "type": "if",
                    "line_number": 202
                  },
                  {
                    "type": "if",
                    "line_number": 207
                  },
                  {
                    "type": "if",
                    "line_number": 211
                  },
                  {
                    "type": "if",
                    "line_number": 215
                  },
                  {
                    "type": "if",
                    "line_number": 220
                  },
                  {
                    "type": "else",
                    "line_number": 226
                  },
                  {
                    "type": "while",
                    "line_number": 232
                  }
                ],
                "complexity": 13,
                "inputs": [
                  "player"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "while",
                  "P_SetPsprite",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "player->weaponowned[wp_chaingun] &&",
                    "name": "player->ammo[am_clip]"
                  }
                ],
                "start_line": 197,
                "end_line": 200,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player->ammo[am_clip]"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "player->weaponowned[wp_shotgun] &&",
                    "name": "player->ammo[am_shell]"
                  }
                ],
                "start_line": 202,
                "end_line": 205,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player->ammo[am_shell]"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "",
                    "name": "player->ammo[am_clip]"
                  }
                ],
                "start_line": 207,
                "end_line": 210,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player->ammo[am_clip]"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "",
                    "name": "player->weaponowned[wp_chainsaw]"
                  }
                ],
                "start_line": 211,
                "end_line": 214,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player->weaponowned[wp_chainsaw]"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "player->weaponowned[wp_missile] &&",
                    "name": "player->ammo[am_misl]"
                  }
                ],
                "start_line": 215,
                "end_line": 218,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player->ammo[am_misl]"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "P_FireWeapon",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  }
                ],
                "start_line": 246,
                "end_line": 257,
                "local_variables": [
                  {
                    "type": "statenum_t",
                    "name": "newstate",
                    "array_size": null,
                    "line_number": 248
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 250
                  },
                  {
                    "name": "P_CheckAmmo",
                    "line_number": 250
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 253
                  },
                  {
                    "name": "P_SetPsprite",
                    "line_number": 255
                  },
                  {
                    "name": "P_NoiseAlert",
                    "line_number": 256
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 250
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_CheckAmmo",
                  "P_SetMobjState",
                  "P_NoiseAlert",
                  "P_SetPsprite"
                ]
              },
              {
                "name": "P_DropWeapon",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  }
                ],
                "start_line": 265,
                "end_line": 270,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_SetPsprite",
                    "line_number": 267
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SetPsprite"
                ]
              },
              {
                "name": "A_WeaponReady",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 281,
                "end_line": 331,
                "local_variables": [
                  {
                    "type": "statenum_t",
                    "name": "newstate",
                    "array_size": null,
                    "line_number": 283
                  },
                  {
                    "type": "int",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 284
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 287
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 290
                  },
                  {
                    "name": "if",
                    "line_number": 293
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 296
                  },
                  {
                    "name": "if",
                    "line_number": 301
                  },
                  {
                    "name": "P_SetPsprite",
                    "line_number": 306
                  },
                  {
                    "name": "if",
                    "line_number": 312
                  },
                  {
                    "name": "if",
                    "line_number": 314
                  },
                  {
                    "name": "P_FireWeapon",
                    "line_number": 319
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 328
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 330
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 287
                  },
                  {
                    "type": "if",
                    "line_number": 293
                  },
                  {
                    "type": "for",
                    "line_number": 299
                  },
                  {
                    "type": "if",
                    "line_number": 300
                  },
                  {
                    "type": "if",
                    "line_number": 301
                  },
                  {
                    "type": "for",
                    "line_number": 310
                  },
                  {
                    "type": "if",
                    "line_number": 312
                  },
                  {
                    "type": "if",
                    "line_number": 314
                  },
                  {
                    "type": "else",
                    "line_number": 323
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_SetMobjState",
                  "S_StartSound",
                  "P_SetPsprite",
                  "FixedMul",
                  "P_FireWeapon"
                ]
              },
              {
                "name": "if",
                "return_type": "get out of attack state",
                "parameters": [
                  {
                    "type": "player->mo->state == &states[S_PLAY_ATK1] || player->mo->state ==",
                    "name": "&states[S_PLAY_ATK2]"
                  }
                ],
                "start_line": 289,
                "end_line": 292,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_SetMobjState",
                    "line_number": 291
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "&states[S_PLAY_ATK2]"
                ],
                "outputs": [
                  "get out of attack state"
                ],
                "dependencies": [
                  "P_SetMobjState"
                ]
              },
              {
                "name": "if",
                "return_type": "put the weapon away",
                "parameters": [
                  {
                    "type": "player->pendingweapon != wp_nochange ||",
                    "name": "!player->health"
                  }
                ],
                "start_line": 303,
                "end_line": 310,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_SetPsprite",
                    "line_number": 308
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "!player->health"
                ],
                "outputs": [
                  "put the weapon away"
                ],
                "dependencies": [
                  "P_SetPsprite"
                ]
              },
              {
                "name": "if",
                "return_type": "the missile launcher and bfg do not auto fire",
                "parameters": [
                  {
                    "type": "player->cmd.buttons &",
                    "name": "BT_ATTACK"
                  }
                ],
                "start_line": 314,
                "end_line": 324,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 316
                  },
                  {
                    "name": "P_FireWeapon",
                    "line_number": 321
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 316
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "BT_ATTACK"
                ],
                "outputs": [
                  "the missile launcher and bfg do not auto fire"
                ],
                "dependencies": [
                  "P_FireWeapon",
                  "if"
                ]
              },
              {
                "name": "A_ReFire",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 343,
                "end_line": 360,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 348
                  },
                  {
                    "name": "P_FireWeapon",
                    "line_number": 353
                  },
                  {
                    "name": "P_CheckAmmo",
                    "line_number": 358
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 346
                  },
                  {
                    "type": "if",
                    "line_number": 347
                  },
                  {
                    "type": "if",
                    "line_number": 348
                  },
                  {
                    "type": "else",
                    "line_number": 355
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "P_FireWeapon",
                  "P_CheckAmmo",
                  "if"
                ]
              },
              {
                "name": "A_CheckReload",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 365,
                "end_line": 372,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_CheckAmmo",
                    "line_number": 367
                  },
                  {
                    "name": "if",
                    "line_number": 369
                  },
                  {
                    "name": "P_SetPsprite",
                    "line_number": 370
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 368
                  },
                  {
                    "type": "if",
                    "line_number": 369
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SetPsprite",
                  "P_CheckAmmo",
                  "if"
                ]
              },
              {
                "name": "A_Lower",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 384,
                "end_line": 413,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 389
                  },
                  {
                    "name": "if",
                    "line_number": 393
                  },
                  {
                    "name": "if",
                    "line_number": 403
                  },
                  {
                    "name": "P_SetPsprite",
                    "line_number": 406
                  },
                  {
                    "name": "P_BringUpWeapon",
                    "line_number": 412
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 389
                  },
                  {
                    "type": "if",
                    "line_number": 393
                  },
                  {
                    "type": "if",
                    "line_number": 403
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SetPsprite",
                  "P_BringUpWeapon",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "so change the weapon and start raising it",
                "parameters": [
                  {
                    "type": "",
                    "name": "!player->health"
                  }
                ],
                "start_line": 405,
                "end_line": 410,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_SetPsprite",
                    "line_number": 408
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "!player->health"
                ],
                "outputs": [
                  "so change the weapon and start raising it"
                ],
                "dependencies": [
                  "P_SetPsprite"
                ]
              },
              {
                "name": "A_Raise",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 422,
                "end_line": 438,
                "local_variables": [
                  {
                    "type": "statenum_t",
                    "name": "newstate",
                    "array_size": null,
                    "line_number": 424
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 428
                  },
                  {
                    "name": "P_SetPsprite",
                    "line_number": 437
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 428
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SetPsprite",
                  "if"
                ]
              },
              {
                "name": "A_GunFlash",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 448,
                "end_line": 452,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_SetMobjState",
                    "line_number": 450
                  },
                  {
                    "name": "P_SetPsprite",
                    "line_number": 451
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SetPsprite",
                  "P_SetMobjState"
                ]
              },
              {
                "name": "A_Punch",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 467,
                "end_line": 492,
                "local_variables": [
                  {
                    "type": "angle_t",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 469
                  },
                  {
                    "type": "int",
                    "name": "damage",
                    "array_size": null,
                    "line_number": 470
                  },
                  {
                    "type": "int",
                    "name": "slope",
                    "array_size": null,
                    "line_number": 471
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_Random",
                    "line_number": 473
                  },
                  {
                    "name": "if",
                    "line_number": 475
                  },
                  {
                    "name": "P_Random",
                    "line_number": 479
                  },
                  {
                    "name": "P_Random",
                    "line_number": 479
                  },
                  {
                    "name": "P_AimLineAttack",
                    "line_number": 480
                  },
                  {
                    "name": "P_LineAttack",
                    "line_number": 481
                  },
                  {
                    "name": "if",
                    "line_number": 484
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 486
                  },
                  {
                    "name": "R_PointToAngle2",
                    "line_number": 487
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 475
                  },
                  {
                    "type": "if",
                    "line_number": 484
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_Random",
                  "R_PointToAngle2",
                  "S_StartSound",
                  "P_AimLineAttack",
                  "P_LineAttack"
                ]
              },
              {
                "name": "if",
                "return_type": "turn to face target",
                "parameters": [
                  {
                    "type": "",
                    "name": "linetarget"
                  }
                ],
                "start_line": 486,
                "end_line": 493,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 488
                  },
                  {
                    "name": "R_PointToAngle2",
                    "line_number": 489
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "linetarget"
                ],
                "outputs": [
                  "turn to face target"
                ],
                "dependencies": [
                  "S_StartSound",
                  "R_PointToAngle2"
                ]
              },
              {
                "name": "A_Saw",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 501,
                "end_line": 540,
                "local_variables": [
                  {
                    "type": "angle_t",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 503
                  },
                  {
                    "type": "int",
                    "name": "damage",
                    "array_size": null,
                    "line_number": 504
                  },
                  {
                    "type": "int",
                    "name": "slope",
                    "array_size": null,
                    "line_number": 505
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_Random",
                    "line_number": 507
                  },
                  {
                    "name": "P_Random",
                    "line_number": 509
                  },
                  {
                    "name": "P_Random",
                    "line_number": 509
                  },
                  {
                    "name": "P_AimLineAttack",
                    "line_number": 512
                  },
                  {
                    "name": "P_LineAttack",
                    "line_number": 513
                  },
                  {
                    "name": "if",
                    "line_number": 515
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 517
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 520
                  },
                  {
                    "name": "R_PointToAngle2",
                    "line_number": 523
                  },
                  {
                    "name": "if",
                    "line_number": 525
                  },
                  {
                    "name": "if",
                    "line_number": 527
                  },
                  {
                    "name": "if",
                    "line_number": 534
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 515
                  },
                  {
                    "type": "if",
                    "line_number": 525
                  },
                  {
                    "type": "if",
                    "line_number": 527
                  },
                  {
                    "type": "else",
                    "line_number": 529
                  },
                  {
                    "type": "else",
                    "line_number": 532
                  },
                  {
                    "type": "if",
                    "line_number": 534
                  },
                  {
                    "type": "else",
                    "line_number": 536
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_Random",
                  "R_PointToAngle2",
                  "S_StartSound",
                  "P_AimLineAttack",
                  "P_LineAttack"
                ]
              },
              {
                "name": "A_FireMissile",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 550,
                "end_line": 554,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_SpawnPlayerMissile",
                    "line_number": 553
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SpawnPlayerMissile"
                ]
              },
              {
                "name": "A_FireBFG",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 563,
                "end_line": 567,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_SpawnPlayerMissile",
                    "line_number": 566
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SpawnPlayerMissile"
                ]
              },
              {
                "name": "A_FirePlasma",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 577,
                "end_line": 586,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_SetPsprite",
                    "line_number": 581
                  },
                  {
                    "name": "P_Random",
                    "line_number": 583
                  },
                  {
                    "name": "P_SpawnPlayerMissile",
                    "line_number": 585
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SetPsprite",
                  "P_Random",
                  "P_SpawnPlayerMissile"
                ]
              },
              {
                "name": "P_BulletSlope",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 601,
                "end_line": 619,
                "local_variables": [
                  {
                    "type": "angle_t",
                    "name": "an",
                    "array_size": null,
                    "line_number": 603
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_AimLineAttack",
                    "line_number": 607
                  },
                  {
                    "name": "if",
                    "line_number": 609
                  },
                  {
                    "name": "P_AimLineAttack",
                    "line_number": 612
                  },
                  {
                    "name": "if",
                    "line_number": 613
                  },
                  {
                    "name": "P_AimLineAttack",
                    "line_number": 616
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 609
                  },
                  {
                    "type": "if",
                    "line_number": 613
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "P_AimLineAttack",
                  "if"
                ]
              },
              {
                "name": "P_GunShot",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  },
                  {
                    "type": "boolean",
                    "name": "accurate"
                  }
                ],
                "start_line": 625,
                "end_line": 637,
                "local_variables": [
                  {
                    "type": "angle_t",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 627
                  },
                  {
                    "type": "int",
                    "name": "damage",
                    "array_size": null,
                    "line_number": 628
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_Random",
                    "line_number": 630
                  },
                  {
                    "name": "if",
                    "line_number": 633
                  },
                  {
                    "name": "P_Random",
                    "line_number": 634
                  },
                  {
                    "name": "P_Random",
                    "line_number": 634
                  },
                  {
                    "name": "P_LineAttack",
                    "line_number": 636
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 633
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "mo",
                  "accurate"
                ],
                "outputs": [],
                "dependencies": [
                  "P_LineAttack",
                  "P_Random",
                  "if"
                ]
              },
              {
                "name": "A_FirePistol",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 646,
                "end_line": 659,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 648
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 650
                  },
                  {
                    "name": "P_SetPsprite",
                    "line_number": 653
                  },
                  {
                    "name": "P_BulletSlope",
                    "line_number": 657
                  },
                  {
                    "name": "P_GunShot",
                    "line_number": 658
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SetMobjState",
                  "S_StartSound",
                  "P_BulletSlope",
                  "P_SetPsprite",
                  "P_GunShot"
                ]
              },
              {
                "name": "A_FireShotgun",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 668,
                "end_line": 685,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 670
                  }
                ],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 672
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 673
                  },
                  {
                    "name": "P_SetPsprite",
                    "line_number": 677
                  },
                  {
                    "name": "P_BulletSlope",
                    "line_number": 681
                  },
                  {
                    "name": "for",
                    "line_number": 683
                  },
                  {
                    "name": "P_GunShot",
                    "line_number": 684
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 683
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "P_SetMobjState",
                  "S_StartSound",
                  "P_BulletSlope",
                  "P_SetPsprite",
                  "P_GunShot"
                ]
              },
              {
                "name": "A_FireShotgun2",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 695,
                "end_line": 723,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 697
                  },
                  {
                    "type": "angle_t",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 698
                  },
                  {
                    "type": "int",
                    "name": "damage",
                    "array_size": null,
                    "line_number": 699
                  }
                ],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 702
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 703
                  },
                  {
                    "name": "P_SetPsprite",
                    "line_number": 707
                  },
                  {
                    "name": "P_BulletSlope",
                    "line_number": 711
                  },
                  {
                    "name": "for",
                    "line_number": 713
                  },
                  {
                    "name": "P_Random",
                    "line_number": 715
                  },
                  {
                    "name": "P_Random",
                    "line_number": 717
                  },
                  {
                    "name": "P_Random",
                    "line_number": 717
                  },
                  {
                    "name": "P_LineAttack",
                    "line_number": 718
                  },
                  {
                    "name": "P_Random",
                    "line_number": 721
                  },
                  {
                    "name": "P_Random",
                    "line_number": 721
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 713
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "P_SetMobjState",
                  "P_Random",
                  "S_StartSound",
                  "P_BulletSlope",
                  "P_SetPsprite",
                  "P_LineAttack"
                ]
              },
              {
                "name": "A_FireCGun",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 732,
                "end_line": 751,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 734
                  },
                  {
                    "name": "if",
                    "line_number": 736
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 739
                  },
                  {
                    "name": "P_SetPsprite",
                    "line_number": 742
                  },
                  {
                    "name": "P_BulletSlope",
                    "line_number": 748
                  },
                  {
                    "name": "P_GunShot",
                    "line_number": 750
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 736
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_SetMobjState",
                  "S_StartSound",
                  "P_BulletSlope",
                  "P_SetPsprite",
                  "P_GunShot"
                ]
              },
              {
                "name": "A_Light0",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t",
                    "name": "*player"
                  },
                  {
                    "type": "pspdef_t",
                    "name": "*psp"
                  }
                ],
                "start_line": 761,
                "end_line": 764,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "*player",
                  "*psp"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "A_Light1",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t",
                    "name": "*player"
                  },
                  {
                    "type": "pspdef_t",
                    "name": "*psp"
                  }
                ],
                "start_line": 766,
                "end_line": 769,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "*player",
                  "*psp"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "A_Light2",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t",
                    "name": "*player"
                  },
                  {
                    "type": "pspdef_t",
                    "name": "*psp"
                  }
                ],
                "start_line": 771,
                "end_line": 774,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "*player",
                  "*psp"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "A_BFGSpray",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "mo"
                  }
                ],
                "start_line": 781,
                "end_line": 811,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 783
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 784
                  },
                  {
                    "type": "int",
                    "name": "damage",
                    "array_size": null,
                    "line_number": 785
                  },
                  {
                    "type": "angle_t",
                    "name": "an",
                    "array_size": null,
                    "line_number": 786
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 789
                  },
                  {
                    "name": "originator",
                    "line_number": 793
                  },
                  {
                    "name": "P_AimLineAttack",
                    "line_number": 795
                  },
                  {
                    "name": "if",
                    "line_number": 797
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 800
                  },
                  {
                    "name": "for",
                    "line_number": 806
                  },
                  {
                    "name": "P_Random",
                    "line_number": 807
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 809
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 789
                  },
                  {
                    "type": "if",
                    "line_number": 797
                  },
                  {
                    "type": "for",
                    "line_number": 806
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "mo"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for",
                  "P_DamageMobj",
                  "P_SpawnMobj",
                  "P_Random",
                  "originator",
                  "P_AimLineAttack"
                ]
              },
              {
                "name": "for",
                "return_type": "offset angles from its attack angle",
                "parameters": [
                  {
                    "type": "i=0 ; i<40 ;",
                    "name": "i++"
                  }
                ],
                "start_line": 788,
                "end_line": 809,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "originator",
                    "line_number": 792
                  },
                  {
                    "name": "P_AimLineAttack",
                    "line_number": 794
                  },
                  {
                    "name": "if",
                    "line_number": 796
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 799
                  },
                  {
                    "name": "for",
                    "line_number": 805
                  },
                  {
                    "name": "P_Random",
                    "line_number": 806
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 808
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 796
                  },
                  {
                    "type": "for",
                    "line_number": 805
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "i++"
                ],
                "outputs": [
                  "offset angles from its attack angle"
                ],
                "dependencies": [
                  "for",
                  "if",
                  "P_DamageMobj",
                  "P_SpawnMobj",
                  "P_Random",
                  "originator",
                  "P_AimLineAttack"
                ]
              },
              {
                "name": "A_BFGsound",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 817,
                "end_line": 820,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StartSound",
                    "line_number": 819
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player",
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "S_StartSound"
                ]
              },
              {
                "name": "P_SetupPsprites",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  }
                ],
                "start_line": 831,
                "end_line": 842,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 833
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 836
                  },
                  {
                    "name": "P_BringUpWeapon",
                    "line_number": 841
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 836
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "P_BringUpWeapon",
                  "for"
                ]
              },
              {
                "name": "P_MovePsprites",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  }
                ],
                "start_line": 851,
                "end_line": 877,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 853
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 858
                  },
                  {
                    "name": "if",
                    "line_number": 861
                  },
                  {
                    "name": "if",
                    "line_number": 866
                  },
                  {
                    "name": "if",
                    "line_number": 869
                  },
                  {
                    "name": "P_SetPsprite",
                    "line_number": 870
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 858
                  },
                  {
                    "type": "if",
                    "line_number": 861
                  },
                  {
                    "type": "if",
                    "line_number": 866
                  },
                  {
                    "type": "if",
                    "line_number": 869
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SetPsprite",
                  "if",
                  "for"
                ]
              },
              {
                "name": "if",
                "return_type": "1 tic count never changes",
                "parameters": [
                  {
                    "type": "psp->tics !=",
                    "name": "-1"
                  }
                ],
                "start_line": 865,
                "end_line": 870,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 868
                  },
                  {
                    "name": "P_SetPsprite",
                    "line_number": 869
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 868
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "-1"
                ],
                "outputs": [
                  "1 tic count never changes"
                ],
                "dependencies": [
                  "P_SetPsprite",
                  "if"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "swingx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 109
              },
              {
                "name": "swingy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 110
              },
              {
                "name": "swing",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 114
              },
              {
                "name": "angle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 115
              },
              {
                "name": "newstate",
                "type": "statenum_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 140
              },
              {
                "name": "ammo",
                "type": "ammotype_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 163
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 164
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 179
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 239
              },
              {
                "name": "newstate",
                "type": "statenum_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 248
              },
              {
                "name": "newstate",
                "type": "statenum_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 286
              },
              {
                "name": "angle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 287
              },
              {
                "name": "newstate",
                "type": "statenum_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 427
              },
              {
                "name": "angle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 472
              },
              {
                "name": "damage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 473
              },
              {
                "name": "slope",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 474
              },
              {
                "name": "angle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 506
              },
              {
                "name": "damage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 507
              },
              {
                "name": "slope",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 508
              },
              {
                "name": "bulletslope",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 598
              },
              {
                "name": "an",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 603
              },
              {
                "name": "angle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 630
              },
              {
                "name": "damage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 631
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 673
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 700
              },
              {
                "name": "angle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 701
              },
              {
                "name": "damage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 702
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 783
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 784
              },
              {
                "name": "damage",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 785
              },
              {
                "name": "an",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 786
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 833
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 853
              }
            ],
            "defines": [
              {
                "name": "LOWERSPEED",
                "value": "FRACUNIT*6",
                "line_number": 44
              },
              {
                "name": "RAISESPEED",
                "value": "FRACUNIT*6",
                "line_number": 45
              },
              {
                "name": "WEAPONBOTTOM",
                "value": "128*FRACUNIT",
                "line_number": 47
              },
              {
                "name": "WEAPONTOP",
                "value": "32*FRACUNIT",
                "line_number": 48
              },
              {
                "name": "BFGCELLS",
                "value": "40",
                "line_number": 52
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/p_pspr.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of functions",
            "High number of global variables"
          ]
        },
        {
          "name": "p_pspr.h",
          "type": "file",
          "size": 1842,
          "last_modified": "2024-09-05T16:00:04.542839",
          "path": "linuxdoom-1.10/p_pspr.h",
          "readme": "# p_pspr.h\n\nThis file contains functionality related to p_pspr.",
          "dependencies": [
            "info.h",
            "tables.h",
            "m_fixed.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "tics",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 71
              },
              {
                "name": "sx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 72
              },
              {
                "name": "sy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 73
              }
            ],
            "defines": [
              {
                "name": "FF_FULLBRIGHT",
                "value": "0x8000\t// flag in thing->frame",
                "line_number": 50
              },
              {
                "name": "FF_FRAMEMASK",
                "value": "0x7fff",
                "line_number": 51
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/p_pspr.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "p_saveg.c",
          "type": "file",
          "size": 12798,
          "last_modified": "2024-09-05T16:00:04.569929",
          "path": "linuxdoom-1.10/p_saveg.c",
          "readme": "# p_saveg.c\n\nThis file contains functionality related to p_saveg.",
          "dependencies": [
            "p_local.h",
            "z_zone.h",
            "i_system.h",
            "doomstat.h",
            "r_state.h"
          ],
          "inputs": [
            "sec++",
            "i++",
            "1",
            "i=0",
            "th=th->next",
            "void",
            "li++"
          ],
          "outputs": [
            "save off the current thinkers",
            "do sectors",
            "read in saved thinkers",
            "do lines"
          ],
          "content": {
            "functions": [
              {
                "name": "P_ArchivePlayers",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 47,
                "end_line": 72,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 49
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 50
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 53
                  },
                  {
                    "name": "if",
                    "line_number": 55
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 58
                  },
                  {
                    "name": "memcpy",
                    "line_number": 61
                  },
                  {
                    "name": "sizeof",
                    "line_number": 61
                  },
                  {
                    "name": "sizeof",
                    "line_number": 62
                  },
                  {
                    "name": "for",
                    "line_number": 63
                  },
                  {
                    "name": "if",
                    "line_number": 65
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 53
                  },
                  {
                    "type": "if",
                    "line_number": 55
                  },
                  {
                    "type": "for",
                    "line_number": 63
                  },
                  {
                    "type": "if",
                    "line_number": 65
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for",
                  "sizeof",
                  "PADSAVEP",
                  "memcpy"
                ]
              },
              {
                "name": "P_UnArchivePlayers",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 79,
                "end_line": 108,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 81
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 82
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 84
                  },
                  {
                    "name": "if",
                    "line_number": 86
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 89
                  },
                  {
                    "name": "memcpy",
                    "line_number": 91
                  },
                  {
                    "name": "sizeof",
                    "line_number": 91
                  },
                  {
                    "name": "sizeof",
                    "line_number": 92
                  },
                  {
                    "name": "for",
                    "line_number": 99
                  },
                  {
                    "name": "if",
                    "line_number": 101
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 84
                  },
                  {
                    "type": "if",
                    "line_number": 86
                  },
                  {
                    "type": "for",
                    "line_number": 99
                  },
                  {
                    "type": "if",
                    "line_number": 101
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for",
                  "sizeof",
                  "PADSAVEP",
                  "memcpy"
                ]
              },
              {
                "name": "P_ArchiveWorld",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 114,
                "end_line": 160,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 116
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 117
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 126
                  },
                  {
                    "name": "for",
                    "line_number": 139
                  },
                  {
                    "name": "for",
                    "line_number": 144
                  },
                  {
                    "name": "if",
                    "line_number": 146
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 126
                  },
                  {
                    "type": "for",
                    "line_number": 139
                  },
                  {
                    "type": "for",
                    "line_number": 144
                  },
                  {
                    "type": "if",
                    "line_number": 146
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "for",
                "return_type": "do sectors",
                "parameters": [
                  {
                    "type": "",
                    "name": "i=0"
                  },
                  {
                    "type": "sec = sectors ; i<numsectors ;",
                    "name": "i++"
                  },
                  {
                    "type": "",
                    "name": "sec++"
                  }
                ],
                "start_line": 125,
                "end_line": 134,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i=0",
                  "i++",
                  "sec++"
                ],
                "outputs": [
                  "do sectors"
                ],
                "dependencies": []
              },
              {
                "name": "for",
                "return_type": "do lines",
                "parameters": [
                  {
                    "type": "",
                    "name": "i=0"
                  },
                  {
                    "type": "li = lines ; i<numlines ;",
                    "name": "i++"
                  },
                  {
                    "type": "",
                    "name": "li++"
                  }
                ],
                "start_line": 138,
                "end_line": 156,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 143
                  },
                  {
                    "name": "if",
                    "line_number": 145
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 143
                  },
                  {
                    "type": "if",
                    "line_number": 145
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "i=0",
                  "i++",
                  "li++"
                ],
                "outputs": [
                  "do lines"
                ],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "P_UnArchiveWorld",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 167,
                "end_line": 211,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 169
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 170
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 179
                  },
                  {
                    "name": "for",
                    "line_number": 193
                  },
                  {
                    "name": "for",
                    "line_number": 198
                  },
                  {
                    "name": "if",
                    "line_number": 200
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 179
                  },
                  {
                    "type": "for",
                    "line_number": 193
                  },
                  {
                    "type": "for",
                    "line_number": 198
                  },
                  {
                    "type": "if",
                    "line_number": 200
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "for",
                "return_type": "do sectors",
                "parameters": [
                  {
                    "type": "",
                    "name": "i=0"
                  },
                  {
                    "type": "sec = sectors ; i<numsectors ;",
                    "name": "i++"
                  },
                  {
                    "type": "",
                    "name": "sec++"
                  }
                ],
                "start_line": 178,
                "end_line": 189,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i=0",
                  "i++",
                  "sec++"
                ],
                "outputs": [
                  "do sectors"
                ],
                "dependencies": []
              },
              {
                "name": "for",
                "return_type": "do lines",
                "parameters": [
                  {
                    "type": "",
                    "name": "i=0"
                  },
                  {
                    "type": "li = lines ; i<numlines ;",
                    "name": "i++"
                  },
                  {
                    "type": "",
                    "name": "li++"
                  }
                ],
                "start_line": 192,
                "end_line": 208,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 197
                  },
                  {
                    "name": "if",
                    "line_number": 199
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 197
                  },
                  {
                    "type": "if",
                    "line_number": 199
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "i=0",
                  "i++",
                  "li++"
                ],
                "outputs": [
                  "do lines"
                ],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "P_ArchiveThinkers",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 232,
                "end_line": 259,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 238
                  },
                  {
                    "name": "if",
                    "line_number": 240
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 243
                  },
                  {
                    "name": "memcpy",
                    "line_number": 245
                  },
                  {
                    "name": "sizeof",
                    "line_number": 245
                  },
                  {
                    "name": "sizeof",
                    "line_number": 246
                  },
                  {
                    "name": "if",
                    "line_number": 249
                  },
                  {
                    "name": "I_Error",
                    "line_number": 254
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 238
                  },
                  {
                    "type": "if",
                    "line_number": 240
                  },
                  {
                    "type": "if",
                    "line_number": 249
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for",
                  "I_Error",
                  "sizeof",
                  "PADSAVEP",
                  "memcpy"
                ]
              },
              {
                "name": "for",
                "return_type": "save off the current thinkers",
                "parameters": [
                  {
                    "type": "th = thinkercap.next ; th != &thinkercap ;",
                    "name": "th=th->next"
                  }
                ],
                "start_line": 237,
                "end_line": 254,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 239
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 242
                  },
                  {
                    "name": "memcpy",
                    "line_number": 244
                  },
                  {
                    "name": "sizeof",
                    "line_number": 244
                  },
                  {
                    "name": "sizeof",
                    "line_number": 245
                  },
                  {
                    "name": "if",
                    "line_number": 248
                  },
                  {
                    "name": "I_Error",
                    "line_number": 253
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 239
                  },
                  {
                    "type": "if",
                    "line_number": 248
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "th=th->next"
                ],
                "outputs": [
                  "save off the current thinkers"
                ],
                "dependencies": [
                  "if",
                  "I_Error",
                  "sizeof",
                  "PADSAVEP",
                  "memcpy"
                ]
              },
              {
                "name": "P_UnArchiveThinkers",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 266,
                "end_line": 323,
                "local_variables": [
                  {
                    "type": "byte",
                    "name": "tclass",
                    "array_size": null,
                    "line_number": 268
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 275
                  },
                  {
                    "name": "if",
                    "line_number": 279
                  },
                  {
                    "name": "P_RemoveMobj",
                    "line_number": 280
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 282
                  },
                  {
                    "name": "P_InitThinkers",
                    "line_number": 286
                  },
                  {
                    "name": "while",
                    "line_number": 289
                  },
                  {
                    "name": "switch",
                    "line_number": 292
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 298
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 299
                  },
                  {
                    "name": "sizeof",
                    "line_number": 299
                  },
                  {
                    "name": "memcpy",
                    "line_number": 300
                  },
                  {
                    "name": "sizeof",
                    "line_number": 300
                  },
                  {
                    "name": "sizeof",
                    "line_number": 301
                  },
                  {
                    "name": "if",
                    "line_number": 304
                  },
                  {
                    "name": "P_SetThingPosition",
                    "line_number": 309
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 314
                  },
                  {
                    "name": "I_Error",
                    "line_number": 318
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 275
                  },
                  {
                    "type": "if",
                    "line_number": 279
                  },
                  {
                    "type": "else",
                    "line_number": 281
                  },
                  {
                    "type": "while",
                    "line_number": 289
                  },
                  {
                    "type": "if",
                    "line_number": 304
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "P_AddThinker",
                  "while",
                  "Z_Free",
                  "Z_Malloc",
                  "if",
                  "P_SetThingPosition",
                  "I_Error",
                  "sizeof",
                  "PADSAVEP",
                  "P_RemoveMobj",
                  "memcpy",
                  "switch",
                  "P_InitThinkers"
                ]
              },
              {
                "name": "while",
                "return_type": "read in saved thinkers",
                "parameters": [
                  {
                    "type": "",
                    "name": "1"
                  }
                ],
                "start_line": 288,
                "end_line": 320,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 291
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 297
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 298
                  },
                  {
                    "name": "sizeof",
                    "line_number": 298
                  },
                  {
                    "name": "memcpy",
                    "line_number": 299
                  },
                  {
                    "name": "sizeof",
                    "line_number": 299
                  },
                  {
                    "name": "sizeof",
                    "line_number": 300
                  },
                  {
                    "name": "if",
                    "line_number": 303
                  },
                  {
                    "name": "P_SetThingPosition",
                    "line_number": 308
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 313
                  },
                  {
                    "name": "I_Error",
                    "line_number": 317
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 303
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "1"
                ],
                "outputs": [
                  "read in saved thinkers"
                ],
                "dependencies": [
                  "P_AddThinker",
                  "Z_Malloc",
                  "if",
                  "P_SetThingPosition",
                  "I_Error",
                  "sizeof",
                  "PADSAVEP",
                  "memcpy",
                  "switch"
                ]
              },
              {
                "name": "P_ArchiveSpecials",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 355,
                "end_line": 469,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 365
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 368
                  },
                  {
                    "name": "if",
                    "line_number": 370
                  },
                  {
                    "name": "for",
                    "line_number": 372
                  },
                  {
                    "name": "if",
                    "line_number": 373
                  },
                  {
                    "name": "if",
                    "line_number": 376
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 379
                  },
                  {
                    "name": "memcpy",
                    "line_number": 381
                  },
                  {
                    "name": "sizeof",
                    "line_number": 381
                  },
                  {
                    "name": "sizeof",
                    "line_number": 382
                  },
                  {
                    "name": "if",
                    "line_number": 388
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 391
                  },
                  {
                    "name": "memcpy",
                    "line_number": 393
                  },
                  {
                    "name": "sizeof",
                    "line_number": 393
                  },
                  {
                    "name": "sizeof",
                    "line_number": 394
                  },
                  {
                    "name": "if",
                    "line_number": 399
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 402
                  },
                  {
                    "name": "memcpy",
                    "line_number": 404
                  },
                  {
                    "name": "sizeof",
                    "line_number": 404
                  },
                  {
                    "name": "sizeof",
                    "line_number": 405
                  },
                  {
                    "name": "if",
                    "line_number": 410
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 413
                  },
                  {
                    "name": "memcpy",
                    "line_number": 415
                  },
                  {
                    "name": "sizeof",
                    "line_number": 415
                  },
                  {
                    "name": "sizeof",
                    "line_number": 416
                  },
                  {
                    "name": "if",
                    "line_number": 421
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 424
                  },
                  {
                    "name": "memcpy",
                    "line_number": 426
                  },
                  {
                    "name": "sizeof",
                    "line_number": 426
                  },
                  {
                    "name": "sizeof",
                    "line_number": 427
                  },
                  {
                    "name": "if",
                    "line_number": 432
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 435
                  },
                  {
                    "name": "memcpy",
                    "line_number": 437
                  },
                  {
                    "name": "sizeof",
                    "line_number": 437
                  },
                  {
                    "name": "sizeof",
                    "line_number": 438
                  },
                  {
                    "name": "if",
                    "line_number": 443
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 446
                  },
                  {
                    "name": "memcpy",
                    "line_number": 448
                  },
                  {
                    "name": "sizeof",
                    "line_number": 448
                  },
                  {
                    "name": "sizeof",
                    "line_number": 449
                  },
                  {
                    "name": "if",
                    "line_number": 454
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 457
                  },
                  {
                    "name": "memcpy",
                    "line_number": 459
                  },
                  {
                    "name": "sizeof",
                    "line_number": 459
                  },
                  {
                    "name": "sizeof",
                    "line_number": 460
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 368
                  },
                  {
                    "type": "if",
                    "line_number": 370
                  },
                  {
                    "type": "for",
                    "line_number": 372
                  },
                  {
                    "type": "if",
                    "line_number": 373
                  },
                  {
                    "type": "if",
                    "line_number": 376
                  },
                  {
                    "type": "if",
                    "line_number": 388
                  },
                  {
                    "type": "if",
                    "line_number": 399
                  },
                  {
                    "type": "if",
                    "line_number": 410
                  },
                  {
                    "type": "if",
                    "line_number": 421
                  },
                  {
                    "type": "if",
                    "line_number": 432
                  },
                  {
                    "type": "if",
                    "line_number": 443
                  },
                  {
                    "type": "if",
                    "line_number": 454
                  }
                ],
                "complexity": 13,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for",
                  "sizeof",
                  "PADSAVEP",
                  "memcpy"
                ]
              },
              {
                "name": "for",
                "return_type": "save off the current thinkers",
                "parameters": [
                  {
                    "type": "th = thinkercap.next ; th != &thinkercap ;",
                    "name": "th=th->next"
                  }
                ],
                "start_line": 367,
                "end_line": 463,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 369
                  },
                  {
                    "name": "for",
                    "line_number": 371
                  },
                  {
                    "name": "if",
                    "line_number": 372
                  },
                  {
                    "name": "if",
                    "line_number": 375
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 378
                  },
                  {
                    "name": "memcpy",
                    "line_number": 380
                  },
                  {
                    "name": "sizeof",
                    "line_number": 380
                  },
                  {
                    "name": "sizeof",
                    "line_number": 381
                  },
                  {
                    "name": "if",
                    "line_number": 387
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 390
                  },
                  {
                    "name": "memcpy",
                    "line_number": 392
                  },
                  {
                    "name": "sizeof",
                    "line_number": 392
                  },
                  {
                    "name": "sizeof",
                    "line_number": 393
                  },
                  {
                    "name": "if",
                    "line_number": 398
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 401
                  },
                  {
                    "name": "memcpy",
                    "line_number": 403
                  },
                  {
                    "name": "sizeof",
                    "line_number": 403
                  },
                  {
                    "name": "sizeof",
                    "line_number": 404
                  },
                  {
                    "name": "if",
                    "line_number": 409
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 412
                  },
                  {
                    "name": "memcpy",
                    "line_number": 414
                  },
                  {
                    "name": "sizeof",
                    "line_number": 414
                  },
                  {
                    "name": "sizeof",
                    "line_number": 415
                  },
                  {
                    "name": "if",
                    "line_number": 420
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 423
                  },
                  {
                    "name": "memcpy",
                    "line_number": 425
                  },
                  {
                    "name": "sizeof",
                    "line_number": 425
                  },
                  {
                    "name": "sizeof",
                    "line_number": 426
                  },
                  {
                    "name": "if",
                    "line_number": 431
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 434
                  },
                  {
                    "name": "memcpy",
                    "line_number": 436
                  },
                  {
                    "name": "sizeof",
                    "line_number": 436
                  },
                  {
                    "name": "sizeof",
                    "line_number": 437
                  },
                  {
                    "name": "if",
                    "line_number": 442
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 445
                  },
                  {
                    "name": "memcpy",
                    "line_number": 447
                  },
                  {
                    "name": "sizeof",
                    "line_number": 447
                  },
                  {
                    "name": "sizeof",
                    "line_number": 448
                  },
                  {
                    "name": "if",
                    "line_number": 453
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 456
                  },
                  {
                    "name": "memcpy",
                    "line_number": 458
                  },
                  {
                    "name": "sizeof",
                    "line_number": 458
                  },
                  {
                    "name": "sizeof",
                    "line_number": 459
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 369
                  },
                  {
                    "type": "for",
                    "line_number": 371
                  },
                  {
                    "type": "if",
                    "line_number": 372
                  },
                  {
                    "type": "if",
                    "line_number": 375
                  },
                  {
                    "type": "if",
                    "line_number": 387
                  },
                  {
                    "type": "if",
                    "line_number": 398
                  },
                  {
                    "type": "if",
                    "line_number": 409
                  },
                  {
                    "type": "if",
                    "line_number": 420
                  },
                  {
                    "type": "if",
                    "line_number": 431
                  },
                  {
                    "type": "if",
                    "line_number": 442
                  },
                  {
                    "type": "if",
                    "line_number": 453
                  }
                ],
                "complexity": 12,
                "inputs": [
                  "th=th->next"
                ],
                "outputs": [
                  "save off the current thinkers"
                ],
                "dependencies": [
                  "for",
                  "if",
                  "sizeof",
                  "PADSAVEP",
                  "memcpy"
                ]
              },
              {
                "name": "P_UnArchiveSpecials",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 475,
                "end_line": 585,
                "local_variables": [
                  {
                    "type": "byte",
                    "name": "tclass",
                    "array_size": null,
                    "line_number": 477
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 488
                  },
                  {
                    "name": "switch",
                    "line_number": 491
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 497
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 498
                  },
                  {
                    "name": "sizeof",
                    "line_number": 498
                  },
                  {
                    "name": "memcpy",
                    "line_number": 499
                  },
                  {
                    "name": "sizeof",
                    "line_number": 499
                  },
                  {
                    "name": "sizeof",
                    "line_number": 500
                  },
                  {
                    "name": "if",
                    "line_number": 504
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 507
                  },
                  {
                    "name": "P_AddActiveCeiling",
                    "line_number": 508
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 512
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 513
                  },
                  {
                    "name": "sizeof",
                    "line_number": 513
                  },
                  {
                    "name": "memcpy",
                    "line_number": 514
                  },
                  {
                    "name": "sizeof",
                    "line_number": 514
                  },
                  {
                    "name": "sizeof",
                    "line_number": 515
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 519
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 523
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 524
                  },
                  {
                    "name": "sizeof",
                    "line_number": 524
                  },
                  {
                    "name": "memcpy",
                    "line_number": 525
                  },
                  {
                    "name": "sizeof",
                    "line_number": 525
                  },
                  {
                    "name": "sizeof",
                    "line_number": 526
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 530
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 534
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 535
                  },
                  {
                    "name": "sizeof",
                    "line_number": 535
                  },
                  {
                    "name": "memcpy",
                    "line_number": 536
                  },
                  {
                    "name": "sizeof",
                    "line_number": 536
                  },
                  {
                    "name": "sizeof",
                    "line_number": 537
                  },
                  {
                    "name": "if",
                    "line_number": 541
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 544
                  },
                  {
                    "name": "P_AddActivePlat",
                    "line_number": 545
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 549
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 550
                  },
                  {
                    "name": "sizeof",
                    "line_number": 550
                  },
                  {
                    "name": "memcpy",
                    "line_number": 551
                  },
                  {
                    "name": "sizeof",
                    "line_number": 551
                  },
                  {
                    "name": "sizeof",
                    "line_number": 552
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 555
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 559
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 560
                  },
                  {
                    "name": "sizeof",
                    "line_number": 560
                  },
                  {
                    "name": "memcpy",
                    "line_number": 561
                  },
                  {
                    "name": "sizeof",
                    "line_number": 561
                  },
                  {
                    "name": "sizeof",
                    "line_number": 562
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 565
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 569
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 570
                  },
                  {
                    "name": "sizeof",
                    "line_number": 570
                  },
                  {
                    "name": "memcpy",
                    "line_number": 571
                  },
                  {
                    "name": "sizeof",
                    "line_number": 571
                  },
                  {
                    "name": "sizeof",
                    "line_number": 572
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 575
                  },
                  {
                    "name": "I_Error",
                    "line_number": 579
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 488
                  },
                  {
                    "type": "if",
                    "line_number": 504
                  },
                  {
                    "type": "if",
                    "line_number": 541
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "P_AddThinker",
                  "while",
                  "Z_Malloc",
                  "if",
                  "P_AddActivePlat",
                  "I_Error",
                  "sizeof",
                  "P_AddActiveCeiling",
                  "PADSAVEP",
                  "memcpy",
                  "switch"
                ]
              },
              {
                "name": "while",
                "return_type": "read in saved thinkers",
                "parameters": [
                  {
                    "type": "",
                    "name": "1"
                  }
                ],
                "start_line": 487,
                "end_line": 582,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 490
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 496
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 497
                  },
                  {
                    "name": "sizeof",
                    "line_number": 497
                  },
                  {
                    "name": "memcpy",
                    "line_number": 498
                  },
                  {
                    "name": "sizeof",
                    "line_number": 498
                  },
                  {
                    "name": "sizeof",
                    "line_number": 499
                  },
                  {
                    "name": "if",
                    "line_number": 503
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 506
                  },
                  {
                    "name": "P_AddActiveCeiling",
                    "line_number": 507
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 511
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 512
                  },
                  {
                    "name": "sizeof",
                    "line_number": 512
                  },
                  {
                    "name": "memcpy",
                    "line_number": 513
                  },
                  {
                    "name": "sizeof",
                    "line_number": 513
                  },
                  {
                    "name": "sizeof",
                    "line_number": 514
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 518
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 522
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 523
                  },
                  {
                    "name": "sizeof",
                    "line_number": 523
                  },
                  {
                    "name": "memcpy",
                    "line_number": 524
                  },
                  {
                    "name": "sizeof",
                    "line_number": 524
                  },
                  {
                    "name": "sizeof",
                    "line_number": 525
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 529
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 533
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 534
                  },
                  {
                    "name": "sizeof",
                    "line_number": 534
                  },
                  {
                    "name": "memcpy",
                    "line_number": 535
                  },
                  {
                    "name": "sizeof",
                    "line_number": 535
                  },
                  {
                    "name": "sizeof",
                    "line_number": 536
                  },
                  {
                    "name": "if",
                    "line_number": 540
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 543
                  },
                  {
                    "name": "P_AddActivePlat",
                    "line_number": 544
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 548
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 549
                  },
                  {
                    "name": "sizeof",
                    "line_number": 549
                  },
                  {
                    "name": "memcpy",
                    "line_number": 550
                  },
                  {
                    "name": "sizeof",
                    "line_number": 550
                  },
                  {
                    "name": "sizeof",
                    "line_number": 551
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 554
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 558
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 559
                  },
                  {
                    "name": "sizeof",
                    "line_number": 559
                  },
                  {
                    "name": "memcpy",
                    "line_number": 560
                  },
                  {
                    "name": "sizeof",
                    "line_number": 560
                  },
                  {
                    "name": "sizeof",
                    "line_number": 561
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 564
                  },
                  {
                    "name": "PADSAVEP",
                    "line_number": 568
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 569
                  },
                  {
                    "name": "sizeof",
                    "line_number": 569
                  },
                  {
                    "name": "memcpy",
                    "line_number": 570
                  },
                  {
                    "name": "sizeof",
                    "line_number": 570
                  },
                  {
                    "name": "sizeof",
                    "line_number": 571
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 574
                  },
                  {
                    "name": "I_Error",
                    "line_number": 578
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 503
                  },
                  {
                    "type": "if",
                    "line_number": 540
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "1"
                ],
                "outputs": [
                  "read in saved thinkers"
                ],
                "dependencies": [
                  "P_AddThinker",
                  "Z_Malloc",
                  "if",
                  "P_AddActivePlat",
                  "I_Error",
                  "sizeof",
                  "P_AddActiveCeiling",
                  "PADSAVEP",
                  "memcpy",
                  "switch"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 49
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 50
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 81
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 82
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 116
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 117
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 169
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 170
              },
              {
                "name": "tclass",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 268
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 365
              },
              {
                "name": "tclass",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 477
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/p_saveg.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "p_saveg.h",
          "type": "file",
          "size": 1351,
          "last_modified": "2024-09-05T16:00:04.593928",
          "path": "linuxdoom-1.10/p_saveg.h",
          "readme": "# p_saveg.h\n\nThis file contains functionality related to p_saveg.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/p_saveg.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "p_setup.c",
          "type": "file",
          "size": 14994,
          "last_modified": "2024-09-05T16:00:04.619929",
          "path": "linuxdoom-1.10/p_setup.c",
          "readme": "# p_setup.c\n\nThis file contains functionality related to p_setup.",
          "dependencies": [
            "w_wad.h",
            "math.h",
            "p_local.h",
            "m_bbox.h",
            "m_swap.h",
            "z_zone.h",
            "i_system.h",
            "doomstat.h",
            "g_game.h",
            "s_sound.h",
            "doomdef.h"
          ],
          "inputs": [
            "map",
            "debugfile",
            "lump",
            "playermask",
            "deathmatch",
            "skill",
            "episode",
            "void",
            "commercial"
          ],
          "outputs": [
            "UNUSED",
            "randomly spawn the active players",
            "find map name",
            "commercial"
          ],
          "content": {
            "functions": [
              {
                "name": "P_LoadVertexes",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "lump"
                  }
                ],
                "start_line": 122,
                "end_line": 152,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 125
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_LumpLength",
                    "line_number": 131
                  },
                  {
                    "name": "sizeof",
                    "line_number": 131
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 134
                  },
                  {
                    "name": "sizeof",
                    "line_number": 134
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 137
                  },
                  {
                    "name": "for",
                    "line_number": 144
                  },
                  {
                    "name": "SHORT",
                    "line_number": 146
                  },
                  {
                    "name": "SHORT",
                    "line_number": 147
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 151
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 133
                  },
                  {
                    "type": "for",
                    "line_number": 144
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "lump"
                ],
                "outputs": [],
                "dependencies": [
                  "Z_Free",
                  "Z_Malloc",
                  "for",
                  "W_CacheLumpNum",
                  "sizeof",
                  "W_LumpLength",
                  "SHORT"
                ]
              },
              {
                "name": "P_LoadSegs",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "lump"
                  }
                ],
                "start_line": 159,
                "end_line": 196,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 162
                  },
                  {
                    "type": "int",
                    "name": "linedef",
                    "array_size": null,
                    "line_number": 166
                  },
                  {
                    "type": "int",
                    "name": "side",
                    "array_size": null,
                    "line_number": 167
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_LumpLength",
                    "line_number": 169
                  },
                  {
                    "name": "sizeof",
                    "line_number": 169
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 170
                  },
                  {
                    "name": "sizeof",
                    "line_number": 170
                  },
                  {
                    "name": "memset",
                    "line_number": 171
                  },
                  {
                    "name": "sizeof",
                    "line_number": 171
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 172
                  },
                  {
                    "name": "for",
                    "line_number": 176
                  },
                  {
                    "name": "SHORT",
                    "line_number": 178
                  },
                  {
                    "name": "SHORT",
                    "line_number": 179
                  },
                  {
                    "name": "SHORT",
                    "line_number": 181
                  },
                  {
                    "name": "SHORT",
                    "line_number": 182
                  },
                  {
                    "name": "SHORT",
                    "line_number": 183
                  },
                  {
                    "name": "SHORT",
                    "line_number": 186
                  },
                  {
                    "name": "if",
                    "line_number": 189
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 195
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 176
                  },
                  {
                    "type": "if",
                    "line_number": 189
                  },
                  {
                    "type": "else",
                    "line_number": 191
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "lump"
                ],
                "outputs": [],
                "dependencies": [
                  "Z_Free",
                  "Z_Malloc",
                  "for",
                  "if",
                  "memset",
                  "W_CacheLumpNum",
                  "sizeof",
                  "W_LumpLength",
                  "SHORT"
                ]
              },
              {
                "name": "P_LoadSubsectors",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "lump"
                  }
                ],
                "start_line": 202,
                "end_line": 224,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 205
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_LumpLength",
                    "line_number": 209
                  },
                  {
                    "name": "sizeof",
                    "line_number": 209
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 210
                  },
                  {
                    "name": "sizeof",
                    "line_number": 210
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 211
                  },
                  {
                    "name": "memset",
                    "line_number": 214
                  },
                  {
                    "name": "sizeof",
                    "line_number": 214
                  },
                  {
                    "name": "for",
                    "line_number": 217
                  },
                  {
                    "name": "SHORT",
                    "line_number": 219
                  },
                  {
                    "name": "SHORT",
                    "line_number": 220
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 223
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 217
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "lump"
                ],
                "outputs": [],
                "dependencies": [
                  "Z_Free",
                  "Z_Malloc",
                  "for",
                  "memset",
                  "W_CacheLumpNum",
                  "sizeof",
                  "W_LumpLength",
                  "SHORT"
                ]
              },
              {
                "name": "P_LoadSectors",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "lump"
                  }
                ],
                "start_line": 231,
                "end_line": 258,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 234
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_LumpLength",
                    "line_number": 238
                  },
                  {
                    "name": "sizeof",
                    "line_number": 238
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 239
                  },
                  {
                    "name": "sizeof",
                    "line_number": 239
                  },
                  {
                    "name": "memset",
                    "line_number": 240
                  },
                  {
                    "name": "sizeof",
                    "line_number": 240
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 241
                  },
                  {
                    "name": "for",
                    "line_number": 245
                  },
                  {
                    "name": "SHORT",
                    "line_number": 247
                  },
                  {
                    "name": "SHORT",
                    "line_number": 248
                  },
                  {
                    "name": "R_FlatNumForName",
                    "line_number": 249
                  },
                  {
                    "name": "R_FlatNumForName",
                    "line_number": 250
                  },
                  {
                    "name": "SHORT",
                    "line_number": 251
                  },
                  {
                    "name": "SHORT",
                    "line_number": 252
                  },
                  {
                    "name": "SHORT",
                    "line_number": 253
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 257
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 245
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "lump"
                ],
                "outputs": [],
                "dependencies": [
                  "Z_Free",
                  "Z_Malloc",
                  "for",
                  "memset",
                  "W_CacheLumpNum",
                  "sizeof",
                  "R_FlatNumForName",
                  "W_LumpLength",
                  "SHORT"
                ]
              },
              {
                "name": "P_LoadNodes",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "lump"
                  }
                ],
                "start_line": 264,
                "end_line": 295,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 267
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 268
                  },
                  {
                    "type": "int",
                    "name": "k",
                    "array_size": null,
                    "line_number": 269
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_LumpLength",
                    "line_number": 273
                  },
                  {
                    "name": "sizeof",
                    "line_number": 273
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 274
                  },
                  {
                    "name": "sizeof",
                    "line_number": 274
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 275
                  },
                  {
                    "name": "for",
                    "line_number": 280
                  },
                  {
                    "name": "SHORT",
                    "line_number": 282
                  },
                  {
                    "name": "SHORT",
                    "line_number": 283
                  },
                  {
                    "name": "SHORT",
                    "line_number": 284
                  },
                  {
                    "name": "SHORT",
                    "line_number": 285
                  },
                  {
                    "name": "for",
                    "line_number": 286
                  },
                  {
                    "name": "SHORT",
                    "line_number": 288
                  },
                  {
                    "name": "for",
                    "line_number": 289
                  },
                  {
                    "name": "SHORT",
                    "line_number": 290
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 294
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 280
                  },
                  {
                    "type": "for",
                    "line_number": 286
                  },
                  {
                    "type": "for",
                    "line_number": 289
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "lump"
                ],
                "outputs": [],
                "dependencies": [
                  "Z_Free",
                  "Z_Malloc",
                  "for",
                  "W_CacheLumpNum",
                  "sizeof",
                  "W_LumpLength",
                  "SHORT"
                ]
              },
              {
                "name": "P_LoadThings",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "lump"
                  }
                ],
                "start_line": 301,
                "end_line": 350,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 304
                  },
                  {
                    "type": "int",
                    "name": "numthings",
                    "array_size": null,
                    "line_number": 306
                  },
                  {
                    "type": "boolean",
                    "name": "spawn",
                    "array_size": null,
                    "line_number": 307
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 309
                  },
                  {
                    "name": "W_LumpLength",
                    "line_number": 310
                  },
                  {
                    "name": "sizeof",
                    "line_number": 310
                  },
                  {
                    "name": "for",
                    "line_number": 313
                  },
                  {
                    "name": "if",
                    "line_number": 318
                  },
                  {
                    "name": "switch",
                    "line_number": 320
                  },
                  {
                    "name": "if",
                    "line_number": 336
                  },
                  {
                    "name": "SHORT",
                    "line_number": 340
                  },
                  {
                    "name": "SHORT",
                    "line_number": 341
                  },
                  {
                    "name": "SHORT",
                    "line_number": 342
                  },
                  {
                    "name": "SHORT",
                    "line_number": 343
                  },
                  {
                    "name": "SHORT",
                    "line_number": 344
                  },
                  {
                    "name": "P_SpawnMapThing",
                    "line_number": 346
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 349
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 313
                  },
                  {
                    "type": "if",
                    "line_number": 317
                  },
                  {
                    "type": "if",
                    "line_number": 318
                  },
                  {
                    "type": "if",
                    "line_number": 336
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "lump"
                ],
                "outputs": [],
                "dependencies": [
                  "Z_Free",
                  "for",
                  "if",
                  "sizeof",
                  "W_CacheLumpNum",
                  "W_LumpLength",
                  "SHORT",
                  "switch",
                  "P_SpawnMapThing"
                ]
              },
              {
                "name": "if",
                "return_type": "commercial",
                "parameters": [
                  {
                    "type": "gamemode !=",
                    "name": "commercial"
                  }
                ],
                "start_line": 317,
                "end_line": 334,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 319
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "commercial"
                ],
                "outputs": [
                  "commercial"
                ],
                "dependencies": [
                  "switch"
                ]
              },
              {
                "name": "P_LoadLineDefs",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "lump"
                  }
                ],
                "start_line": 357,
                "end_line": 432,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 360
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_LumpLength",
                    "line_number": 366
                  },
                  {
                    "name": "sizeof",
                    "line_number": 366
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 367
                  },
                  {
                    "name": "sizeof",
                    "line_number": 367
                  },
                  {
                    "name": "memset",
                    "line_number": 368
                  },
                  {
                    "name": "sizeof",
                    "line_number": 368
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 369
                  },
                  {
                    "name": "for",
                    "line_number": 373
                  },
                  {
                    "name": "SHORT",
                    "line_number": 375
                  },
                  {
                    "name": "SHORT",
                    "line_number": 376
                  },
                  {
                    "name": "SHORT",
                    "line_number": 377
                  },
                  {
                    "name": "SHORT",
                    "line_number": 378
                  },
                  {
                    "name": "SHORT",
                    "line_number": 379
                  },
                  {
                    "name": "if",
                    "line_number": 383
                  },
                  {
                    "name": "if",
                    "line_number": 385
                  },
                  {
                    "name": "if",
                    "line_number": 389
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 389
                  },
                  {
                    "name": "if",
                    "line_number": 395
                  },
                  {
                    "name": "if",
                    "line_number": 406
                  },
                  {
                    "name": "SHORT",
                    "line_number": 417
                  },
                  {
                    "name": "SHORT",
                    "line_number": 418
                  },
                  {
                    "name": "if",
                    "line_number": 420
                  },
                  {
                    "name": "if",
                    "line_number": 425
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 431
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 373
                  },
                  {
                    "type": "if",
                    "line_number": 383
                  },
                  {
                    "type": "if",
                    "line_number": 385
                  },
                  {
                    "type": "else",
                    "line_number": 387
                  },
                  {
                    "type": "if",
                    "line_number": 389
                  },
                  {
                    "type": "else",
                    "line_number": 391
                  },
                  {
                    "type": "if",
                    "line_number": 395
                  },
                  {
                    "type": "else",
                    "line_number": 400
                  },
                  {
                    "type": "if",
                    "line_number": 406
                  },
                  {
                    "type": "else",
                    "line_number": 411
                  },
                  {
                    "type": "if",
                    "line_number": 420
                  },
                  {
                    "type": "else",
                    "line_number": 422
                  },
                  {
                    "type": "if",
                    "line_number": 425
                  },
                  {
                    "type": "else",
                    "line_number": 427
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "lump"
                ],
                "outputs": [],
                "dependencies": [
                  "Z_Free",
                  "Z_Malloc",
                  "for",
                  "if",
                  "memset",
                  "W_CacheLumpNum",
                  "sizeof",
                  "FixedDiv",
                  "W_LumpLength",
                  "SHORT"
                ]
              },
              {
                "name": "P_LoadSideDefs",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "lump"
                  }
                ],
                "start_line": 438,
                "end_line": 463,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 441
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_LumpLength",
                    "line_number": 445
                  },
                  {
                    "name": "sizeof",
                    "line_number": 445
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 446
                  },
                  {
                    "name": "sizeof",
                    "line_number": 446
                  },
                  {
                    "name": "memset",
                    "line_number": 447
                  },
                  {
                    "name": "sizeof",
                    "line_number": 447
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 448
                  },
                  {
                    "name": "for",
                    "line_number": 452
                  },
                  {
                    "name": "SHORT",
                    "line_number": 454
                  },
                  {
                    "name": "SHORT",
                    "line_number": 455
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 456
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 457
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 458
                  },
                  {
                    "name": "SHORT",
                    "line_number": 459
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 462
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 452
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "lump"
                ],
                "outputs": [],
                "dependencies": [
                  "Z_Free",
                  "Z_Malloc",
                  "for",
                  "memset",
                  "W_CacheLumpNum",
                  "sizeof",
                  "R_TextureNumForName",
                  "W_LumpLength",
                  "SHORT"
                ]
              },
              {
                "name": "P_LoadBlockMap",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "lump"
                  }
                ],
                "start_line": 469,
                "end_line": 490,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 471
                  },
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 472
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 474
                  },
                  {
                    "name": "W_LumpLength",
                    "line_number": 476
                  },
                  {
                    "name": "for",
                    "line_number": 478
                  },
                  {
                    "name": "SHORT",
                    "line_number": 479
                  },
                  {
                    "name": "sizeof",
                    "line_number": 487
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 488
                  },
                  {
                    "name": "memset",
                    "line_number": 489
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 478
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "lump"
                ],
                "outputs": [],
                "dependencies": [
                  "Z_Malloc",
                  "for",
                  "memset",
                  "sizeof",
                  "W_CacheLumpNum",
                  "W_LumpLength",
                  "SHORT"
                ]
              },
              {
                "name": "P_GroupLines",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 499,
                "end_line": 577,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 502
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 503
                  },
                  {
                    "type": "int",
                    "name": "total",
                    "array_size": null,
                    "line_number": 504
                  },
                  {
                    "type": "fixed_t",
                    "name": "bbox",
                    "array_size": "4",
                    "line_number": 509
                  },
                  {
                    "type": "int",
                    "name": "block",
                    "array_size": null,
                    "line_number": 510
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 514
                  },
                  {
                    "name": "for",
                    "line_number": 523
                  },
                  {
                    "name": "if",
                    "line_number": 528
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 536
                  },
                  {
                    "name": "for",
                    "line_number": 538
                  },
                  {
                    "name": "M_ClearBox",
                    "line_number": 540
                  },
                  {
                    "name": "for",
                    "line_number": 543
                  },
                  {
                    "name": "if",
                    "line_number": 545
                  },
                  {
                    "name": "M_AddToBox",
                    "line_number": 548
                  },
                  {
                    "name": "M_AddToBox",
                    "line_number": 549
                  },
                  {
                    "name": "if",
                    "line_number": 552
                  },
                  {
                    "name": "I_Error",
                    "line_number": 553
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 512
                  },
                  {
                    "type": "for",
                    "line_number": 514
                  },
                  {
                    "type": "for",
                    "line_number": 523
                  },
                  {
                    "type": "if",
                    "line_number": 528
                  },
                  {
                    "type": "for",
                    "line_number": 535
                  },
                  {
                    "type": "for",
                    "line_number": 538
                  },
                  {
                    "type": "for",
                    "line_number": 543
                  },
                  {
                    "type": "if",
                    "line_number": 545
                  },
                  {
                    "type": "if",
                    "line_number": 552
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "M_AddToBox",
                  "Z_Malloc",
                  "if",
                  "for",
                  "I_Error",
                  "M_ClearBox"
                ]
              },
              {
                "name": "P_SetupLevel",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "episode"
                  },
                  {
                    "type": "int",
                    "name": "map"
                  },
                  {
                    "type": "int",
                    "name": "playermask"
                  },
                  {
                    "type": "skill_t",
                    "name": "skill"
                  }
                ],
                "start_line": 583,
                "end_line": 688,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 585
                  },
                  {
                    "type": "char",
                    "name": "lumpname",
                    "array_size": "9",
                    "line_number": 586
                  },
                  {
                    "type": "int",
                    "name": "lumpnum",
                    "array_size": null,
                    "line_number": 587
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 591
                  },
                  {
                    "name": "S_Start",
                    "line_number": 602
                  },
                  {
                    "name": "if",
                    "line_number": 606
                  },
                  {
                    "name": "Z_FreeTags",
                    "line_number": 608
                  },
                  {
                    "name": "Z_FileDumpHeap",
                    "line_number": 609
                  },
                  {
                    "name": "Z_FreeTags",
                    "line_number": 613
                  },
                  {
                    "name": "W_Profile",
                    "line_number": 616
                  },
                  {
                    "name": "P_InitThinkers",
                    "line_number": 617
                  },
                  {
                    "name": "W_Reload",
                    "line_number": 620
                  },
                  {
                    "name": "if",
                    "line_number": 623
                  },
                  {
                    "name": "if",
                    "line_number": 625
                  },
                  {
                    "name": "sprintf",
                    "line_number": 626
                  },
                  {
                    "name": "sprintf",
                    "line_number": 628
                  },
                  {
                    "name": "W_GetNumForName",
                    "line_number": 639
                  },
                  {
                    "name": "P_LoadBlockMap",
                    "line_number": 644
                  },
                  {
                    "name": "P_LoadVertexes",
                    "line_number": 645
                  },
                  {
                    "name": "P_LoadSectors",
                    "line_number": 646
                  },
                  {
                    "name": "P_LoadSideDefs",
                    "line_number": 647
                  },
                  {
                    "name": "P_LoadLineDefs",
                    "line_number": 649
                  },
                  {
                    "name": "P_LoadSubsectors",
                    "line_number": 650
                  },
                  {
                    "name": "P_LoadNodes",
                    "line_number": 651
                  },
                  {
                    "name": "P_LoadSegs",
                    "line_number": 652
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 654
                  },
                  {
                    "name": "P_GroupLines",
                    "line_number": 655
                  },
                  {
                    "name": "P_LoadThings",
                    "line_number": 659
                  },
                  {
                    "name": "if",
                    "line_number": 662
                  },
                  {
                    "name": "for",
                    "line_number": 664
                  },
                  {
                    "name": "if",
                    "line_number": 665
                  },
                  {
                    "name": "G_DeathMatchSpawnPlayer",
                    "line_number": 668
                  },
                  {
                    "name": "P_SpawnSpecials",
                    "line_number": 677
                  },
                  {
                    "name": "P_ConnectSubsectors",
                    "line_number": 680
                  },
                  {
                    "name": "if",
                    "line_number": 683
                  },
                  {
                    "name": "R_PrecacheLevel",
                    "line_number": 684
                  },
                  {
                    "name": "printf",
                    "line_number": 686
                  },
                  {
                    "name": "Z_FreeMemory",
                    "line_number": 686
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 591
                  },
                  {
                    "type": "if",
                    "line_number": 605
                  },
                  {
                    "type": "if",
                    "line_number": 606
                  },
                  {
                    "type": "else",
                    "line_number": 611
                  },
                  {
                    "type": "if",
                    "line_number": 619
                  },
                  {
                    "type": "if",
                    "line_number": 623
                  },
                  {
                    "type": "if",
                    "line_number": 625
                  },
                  {
                    "type": "else",
                    "line_number": 627
                  },
                  {
                    "type": "else",
                    "line_number": 630
                  },
                  {
                    "type": "if",
                    "line_number": 661
                  },
                  {
                    "type": "if",
                    "line_number": 662
                  },
                  {
                    "type": "for",
                    "line_number": 664
                  },
                  {
                    "type": "if",
                    "line_number": 665
                  },
                  {
                    "type": "if",
                    "line_number": 683
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "episode",
                  "map",
                  "playermask",
                  "skill"
                ],
                "outputs": [],
                "dependencies": [
                  "G_DeathMatchSpawnPlayer",
                  "Z_FileDumpHeap",
                  "R_PrecacheLevel",
                  "P_LoadSectors",
                  "W_Reload",
                  "P_LoadSubsectors",
                  "P_SpawnSpecials",
                  "P_GroupLines",
                  "P_LoadLineDefs",
                  "P_LoadSegs",
                  "for",
                  "P_LoadVertexes",
                  "P_LoadSideDefs",
                  "P_LoadNodes",
                  "P_LoadBlockMap",
                  "P_InitThinkers",
                  "W_CacheLumpNum",
                  "W_GetNumForName",
                  "printf",
                  "P_LoadThings",
                  "P_ConnectSubsectors",
                  "Z_FreeMemory",
                  "W_Profile",
                  "if",
                  "S_Start",
                  "Z_FreeTags",
                  "sprintf"
                ]
              },
              {
                "name": "if",
                "return_type": "UNUSED",
                "parameters": [
                  {
                    "type": "",
                    "name": "debugfile"
                  }
                ],
                "start_line": 610,
                "end_line": 614,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "Z_FreeTags",
                    "line_number": 612
                  },
                  {
                    "name": "Z_FileDumpHeap",
                    "line_number": 613
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "debugfile"
                ],
                "outputs": [
                  "UNUSED"
                ],
                "dependencies": [
                  "Z_FileDumpHeap",
                  "Z_FreeTags"
                ]
              },
              {
                "name": "if",
                "return_type": "find map name",
                "parameters": [
                  {
                    "type": "gamemode ==",
                    "name": "commercial"
                  }
                ],
                "start_line": 627,
                "end_line": 633,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 629
                  },
                  {
                    "name": "sprintf",
                    "line_number": 630
                  },
                  {
                    "name": "sprintf",
                    "line_number": 632
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 629
                  },
                  {
                    "type": "else",
                    "line_number": 631
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "commercial"
                ],
                "outputs": [
                  "find map name"
                ],
                "dependencies": [
                  "sprintf",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "randomly spawn the active players",
                "parameters": [
                  {
                    "type": "",
                    "name": "deathmatch"
                  }
                ],
                "start_line": 666,
                "end_line": 675,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 668
                  },
                  {
                    "name": "if",
                    "line_number": 669
                  },
                  {
                    "name": "G_DeathMatchSpawnPlayer",
                    "line_number": 672
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 668
                  },
                  {
                    "type": "if",
                    "line_number": 669
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "deathmatch"
                ],
                "outputs": [
                  "randomly spawn the active players"
                ],
                "dependencies": [
                  "G_DeathMatchSpawnPlayer",
                  "if",
                  "for"
                ]
              },
              {
                "name": "P_Init",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 700,
                "end_line": 705,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "P_InitSwitchList",
                    "line_number": 702
                  },
                  {
                    "name": "P_InitPicAnims",
                    "line_number": 703
                  },
                  {
                    "name": "R_InitSprites",
                    "line_number": 704
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "R_InitSprites",
                  "P_InitSwitchList",
                  "P_InitPicAnims"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "numvertexes",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 56
              },
              {
                "name": "numsegs",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 59
              },
              {
                "name": "numsectors",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 62
              },
              {
                "name": "numsubsectors",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 65
              },
              {
                "name": "numnodes",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 68
              },
              {
                "name": "numlines",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 71
              },
              {
                "name": "numsides",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 74
              },
              {
                "name": "bmapwidth",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 86
              },
              {
                "name": "bmapheight",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 87
              },
              {
                "name": "bmaporgx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 92
              },
              {
                "name": "bmaporgy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 93
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 125
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 162
              },
              {
                "name": "linedef",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 166
              },
              {
                "name": "side",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 167
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 205
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 234
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 267
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 268
              },
              {
                "name": "k",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 269
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 304
              },
              {
                "name": "numthings",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 306
              },
              {
                "name": "spawn",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 307
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 360
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 441
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 471
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 472
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 502
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 503
              },
              {
                "name": "total",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 504
              },
              {
                "name": "bbox",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": "4",
                "line_number": 509
              },
              {
                "name": "block",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 510
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 590
              },
              {
                "name": "lumpname",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 591
              },
              {
                "name": "lumpnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 592
              }
            ],
            "defines": [
              {
                "name": "MAX_DEATHMATCH_STARTS",
                "value": "10",
                "line_number": 109
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/p_setup.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "p_setup.h",
          "type": "file",
          "size": 1159,
          "last_modified": "2024-09-05T16:00:04.644935",
          "path": "linuxdoom-1.10/p_setup.h",
          "readme": "# p_setup.h\n\nThis file contains functionality related to p_setup.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/p_setup.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "p_sight.c",
          "type": "file",
          "size": 7176,
          "last_modified": "2024-09-05T16:00:04.671452",
          "path": "linuxdoom-1.10/p_sight.c",
          "readme": "# p_sight.c\n\nThis file contains functionality related to p_sight.",
          "dependencies": [
            "i_system.h",
            "doomdef.h",
            "r_state.h",
            "p_local.h"
          ],
          "inputs": [
            "x",
            "y",
            "v1",
            "t2",
            "num",
            "v2",
            "node",
            "t1",
            "bspnum"
          ],
          "outputs": [
            "boolean",
            "int",
            "fixed_t"
          ],
          "content": {
            "functions": [
              {
                "name": "P_DivlineSide",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "fixed_t",
                    "name": "x"
                  },
                  {
                    "type": "fixed_t",
                    "name": "y"
                  },
                  {
                    "type": "divline_t*",
                    "name": "node"
                  }
                ],
                "start_line": 54,
                "end_line": 95,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "dx",
                    "array_size": null,
                    "line_number": 56
                  },
                  {
                    "type": "fixed_t",
                    "name": "dy",
                    "array_size": null,
                    "line_number": 57
                  },
                  {
                    "type": "fixed_t",
                    "name": "left",
                    "array_size": null,
                    "line_number": 58
                  },
                  {
                    "type": "fixed_t",
                    "name": "right",
                    "array_size": null,
                    "line_number": 59
                  },
                  {
                    "type": "return",
                    "name": "2",
                    "array_size": null,
                    "line_number": 64
                  },
                  {
                    "type": "return",
                    "name": "2",
                    "array_size": null,
                    "line_number": 75
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 90
                  },
                  {
                    "type": "return",
                    "name": "2",
                    "array_size": null,
                    "line_number": 93
                  },
                  {
                    "type": "return",
                    "name": "1",
                    "array_size": null,
                    "line_number": 94
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 61
                  },
                  {
                    "name": "if",
                    "line_number": 63
                  },
                  {
                    "name": "if",
                    "line_number": 66
                  },
                  {
                    "name": "if",
                    "line_number": 72
                  },
                  {
                    "name": "if",
                    "line_number": 74
                  },
                  {
                    "name": "if",
                    "line_number": 77
                  },
                  {
                    "name": "if",
                    "line_number": 89
                  },
                  {
                    "name": "if",
                    "line_number": 92
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 61
                  },
                  {
                    "type": "if",
                    "line_number": 63
                  },
                  {
                    "type": "if",
                    "line_number": 66
                  },
                  {
                    "type": "if",
                    "line_number": 72
                  },
                  {
                    "type": "if",
                    "line_number": 74
                  },
                  {
                    "type": "if",
                    "line_number": 77
                  },
                  {
                    "type": "if",
                    "line_number": 89
                  },
                  {
                    "type": "if",
                    "line_number": 92
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "x",
                  "y",
                  "node"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "P_InterceptVector2",
                "return_type": "fixed_t",
                "parameters": [
                  {
                    "type": "divline_t*",
                    "name": "v2"
                  },
                  {
                    "type": "divline_t*",
                    "name": "v1"
                  }
                ],
                "start_line": 108,
                "end_line": 125,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "frac",
                    "array_size": null,
                    "line_number": 110
                  },
                  {
                    "type": "fixed_t",
                    "name": "num",
                    "array_size": null,
                    "line_number": 111
                  },
                  {
                    "type": "fixed_t",
                    "name": "den",
                    "array_size": null,
                    "line_number": 112
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 117
                  },
                  {
                    "type": "return",
                    "name": "frac",
                    "array_size": null,
                    "line_number": 124
                  }
                ],
                "function_calls": [
                  {
                    "name": "FixedMul",
                    "line_number": 114
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 114
                  },
                  {
                    "name": "if",
                    "line_number": 116
                  },
                  {
                    "name": "I_Error",
                    "line_number": 118
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 120
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 121
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 122
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 116
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "v2",
                  "v1"
                ],
                "outputs": [
                  "fixed_t"
                ],
                "dependencies": [
                  "FixedDiv",
                  "I_Error",
                  "FixedMul",
                  "if"
                ]
              },
              {
                "name": "P_CrossSubsector",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "int",
                    "name": "num"
                  }
                ],
                "start_line": 135,
                "end_line": 248,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "s1",
                    "array_size": null,
                    "line_number": 139
                  },
                  {
                    "type": "int",
                    "name": "s2",
                    "array_size": null,
                    "line_number": 140
                  },
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 141
                  },
                  {
                    "type": "fixed_t",
                    "name": "opentop",
                    "array_size": null,
                    "line_number": 145
                  },
                  {
                    "type": "fixed_t",
                    "name": "openbottom",
                    "array_size": null,
                    "line_number": 146
                  },
                  {
                    "type": "divline_t",
                    "name": "divl",
                    "array_size": null,
                    "line_number": 147
                  },
                  {
                    "type": "fixed_t",
                    "name": "frac",
                    "array_size": null,
                    "line_number": 150
                  },
                  {
                    "type": "fixed_t",
                    "name": "slope",
                    "array_size": null,
                    "line_number": 151
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 199
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 225
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 244
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 247
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 154
                  },
                  {
                    "name": "I_Error",
                    "line_number": 155
                  },
                  {
                    "name": "for",
                    "line_number": 166
                  },
                  {
                    "name": "if",
                    "line_number": 171
                  },
                  {
                    "name": "P_DivlineSide",
                    "line_number": 178
                  },
                  {
                    "name": "P_DivlineSide",
                    "line_number": 179
                  },
                  {
                    "name": "if",
                    "line_number": 182
                  },
                  {
                    "name": "P_DivlineSide",
                    "line_number": 189
                  },
                  {
                    "name": "P_DivlineSide",
                    "line_number": 190
                  },
                  {
                    "name": "if",
                    "line_number": 193
                  },
                  {
                    "name": "if",
                    "line_number": 198
                  },
                  {
                    "name": "if",
                    "line_number": 206
                  },
                  {
                    "name": "if",
                    "line_number": 212
                  },
                  {
                    "name": "if",
                    "line_number": 218
                  },
                  {
                    "name": "if",
                    "line_number": 224
                  },
                  {
                    "name": "P_InterceptVector2",
                    "line_number": 227
                  },
                  {
                    "name": "if",
                    "line_number": 229
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 231
                  },
                  {
                    "name": "if",
                    "line_number": 232
                  },
                  {
                    "name": "if",
                    "line_number": 236
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 238
                  },
                  {
                    "name": "if",
                    "line_number": 239
                  },
                  {
                    "name": "if",
                    "line_number": 243
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 154
                  },
                  {
                    "type": "for",
                    "line_number": 166
                  },
                  {
                    "type": "if",
                    "line_number": 171
                  },
                  {
                    "type": "if",
                    "line_number": 182
                  },
                  {
                    "type": "if",
                    "line_number": 193
                  },
                  {
                    "type": "if",
                    "line_number": 198
                  },
                  {
                    "type": "if",
                    "line_number": 206
                  },
                  {
                    "type": "if",
                    "line_number": 212
                  },
                  {
                    "type": "else",
                    "line_number": 214
                  },
                  {
                    "type": "if",
                    "line_number": 218
                  },
                  {
                    "type": "else",
                    "line_number": 220
                  },
                  {
                    "type": "for",
                    "line_number": 223
                  },
                  {
                    "type": "if",
                    "line_number": 224
                  },
                  {
                    "type": "if",
                    "line_number": 229
                  },
                  {
                    "type": "if",
                    "line_number": 232
                  },
                  {
                    "type": "if",
                    "line_number": 236
                  },
                  {
                    "type": "if",
                    "line_number": 239
                  },
                  {
                    "type": "if",
                    "line_number": 243
                  }
                ],
                "complexity": 17,
                "inputs": [
                  "num"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "for",
                  "if",
                  "P_InterceptVector2",
                  "I_Error",
                  "FixedDiv",
                  "P_DivlineSide"
                ]
              },
              {
                "name": "P_CrossBSPNode",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "int",
                    "name": "bspnum"
                  }
                ],
                "start_line": 257,
                "end_line": 290,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "side",
                    "array_size": null,
                    "line_number": 260
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 279
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 285
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 262
                  },
                  {
                    "name": "if",
                    "line_number": 264
                  },
                  {
                    "name": "P_CrossSubsector",
                    "line_number": 265
                  },
                  {
                    "name": "P_CrossSubsector",
                    "line_number": 267
                  },
                  {
                    "name": "P_DivlineSide",
                    "line_number": 273
                  },
                  {
                    "name": "if",
                    "line_number": 274
                  },
                  {
                    "name": "if",
                    "line_number": 278
                  },
                  {
                    "name": "P_CrossBSPNode",
                    "line_number": 278
                  },
                  {
                    "name": "if",
                    "line_number": 282
                  },
                  {
                    "name": "P_DivlineSide",
                    "line_number": 282
                  },
                  {
                    "name": "P_CrossBSPNode",
                    "line_number": 289
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 262
                  },
                  {
                    "type": "if",
                    "line_number": 264
                  },
                  {
                    "type": "else",
                    "line_number": 266
                  },
                  {
                    "type": "if",
                    "line_number": 274
                  },
                  {
                    "type": "if",
                    "line_number": 278
                  },
                  {
                    "type": "if",
                    "line_number": 282
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "bspnum"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "P_CrossBSPNode",
                  "P_DivlineSide",
                  "P_CrossSubsector",
                  "if"
                ]
              },
              {
                "name": "P_CheckSight",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "t1"
                  },
                  {
                    "type": "mobj_t*",
                    "name": "t2"
                  }
                ],
                "start_line": 299,
                "end_line": 344,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "s1",
                    "array_size": null,
                    "line_number": 301
                  },
                  {
                    "type": "int",
                    "name": "s2",
                    "array_size": null,
                    "line_number": 302
                  },
                  {
                    "type": "int",
                    "name": "pnum",
                    "array_size": null,
                    "line_number": 303
                  },
                  {
                    "type": "int",
                    "name": "bytenum",
                    "array_size": null,
                    "line_number": 304
                  },
                  {
                    "type": "int",
                    "name": "bitnum",
                    "array_size": null,
                    "line_number": 305
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 322
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 317
                  },
                  {
                    "name": "P_CrossBSPNode",
                    "line_number": 343
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 307
                  },
                  {
                    "type": "if",
                    "line_number": 317
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "t1",
                  "t2"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "P_CrossBSPNode",
                  "if"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "sightzstart",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 39
              },
              {
                "name": "topslope",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 40
              },
              {
                "name": "bottomslope",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 41
              },
              {
                "name": "strace",
                "type": "divline_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 43
              },
              {
                "name": "t2x",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 44
              },
              {
                "name": "t2y",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 45
              },
              {
                "name": "sightcounts",
                "type": "int",
                "storage_class": null,
                "array_size": "2",
                "line_number": 47
              },
              {
                "name": "dx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 60
              },
              {
                "name": "dy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 61
              },
              {
                "name": "left",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 62
              },
              {
                "name": "right",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 63
              },
              {
                "name": "2",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 68
              },
              {
                "name": "2",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 79
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 94
              },
              {
                "name": "2",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 97
              },
              {
                "name": "1",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 98
              },
              {
                "name": "frac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 113
              },
              {
                "name": "num",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 114
              },
              {
                "name": "den",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 115
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 120
              },
              {
                "name": "frac",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 127
              },
              {
                "name": "s1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 139
              },
              {
                "name": "s2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 140
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 141
              },
              {
                "name": "opentop",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 145
              },
              {
                "name": "openbottom",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 146
              },
              {
                "name": "divl",
                "type": "divline_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 147
              },
              {
                "name": "frac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 150
              },
              {
                "name": "slope",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 151
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 199
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 225
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 244
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 247
              },
              {
                "name": "side",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 260
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 279
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 285
              },
              {
                "name": "s1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 304
              },
              {
                "name": "s2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 305
              },
              {
                "name": "pnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 306
              },
              {
                "name": "bytenum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 307
              },
              {
                "name": "bitnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 308
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 325
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/p_sight.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "p_spec.c",
          "type": "file",
          "size": 24781,
          "last_modified": "2024-09-05T16:00:04.697451",
          "path": "linuxdoom-1.10/p_spec.c",
          "readme": "# p_spec.c\n\nThis file contains functionality related to p_spec.",
          "dependencies": [
            "m_random.h",
            "w_wad.h",
            "p_local.h",
            "m_argv.h",
            "r_local.h",
            "sounds.h",
            "z_zone.h",
            "i_system.h",
            "doomstat.h",
            "stdlib.h",
            "g_game.h",
            "r_state.h",
            "doomdef.h",
            "s_sound.h"
          ],
          "inputs": [
            "player",
            "anim++",
            "i++",
            "linenum",
            "true",
            "thing",
            "sector",
            "max",
            "*sec",
            "!thing->player",
            "side",
            "line",
            "void",
            "start",
            "sec",
            "currentheight"
          ],
          "outputs": [
            "ANIMATE FLATS AND TEXTURES GLOBALLY",
            "LEVEL TIMER",
            "define MAX_ADJOINING_SECTORS    \t20\n\nfixed_t",
            "TELEPORT MonsterONLY",
            "Triggers that other things can activate",
            "ANIMATE LINE SPECIALS",
            "int",
            "fixed_t"
          ],
          "content": {
            "functions": [
              {
                "name": "P_InitPicAnims",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 148,
                "end_line": 187,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 150
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 155
                  },
                  {
                    "name": "if",
                    "line_number": 157
                  },
                  {
                    "name": "if",
                    "line_number": 160
                  },
                  {
                    "name": "R_CheckTextureNumForName",
                    "line_number": 160
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 163
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 164
                  },
                  {
                    "name": "if",
                    "line_number": 168
                  },
                  {
                    "name": "W_CheckNumForName",
                    "line_number": 168
                  },
                  {
                    "name": "R_FlatNumForName",
                    "line_number": 171
                  },
                  {
                    "name": "R_FlatNumForName",
                    "line_number": 172
                  },
                  {
                    "name": "if",
                    "line_number": 178
                  },
                  {
                    "name": "I_Error",
                    "line_number": 179
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 155
                  },
                  {
                    "type": "if",
                    "line_number": 157
                  },
                  {
                    "type": "if",
                    "line_number": 160
                  },
                  {
                    "type": "else",
                    "line_number": 166
                  },
                  {
                    "type": "if",
                    "line_number": 168
                  },
                  {
                    "type": "if",
                    "line_number": 178
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "R_CheckTextureNumForName",
                  "if",
                  "for",
                  "I_Error",
                  "W_CheckNumForName",
                  "R_TextureNumForName",
                  "R_FlatNumForName"
                ]
              },
              {
                "name": "twoSided",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "sector"
                  },
                  {
                    "type": "int",
                    "name": "line"
                  }
                ],
                "start_line": 234,
                "end_line": 237,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "return",
                    "line_number": 236
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "sector",
                  "line"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "return"
                ]
              },
              {
                "name": "P_FindLowestFloorSurrounding",
                "return_type": "fixed_t",
                "parameters": [
                  {
                    "type": "sector_t*",
                    "name": "sec"
                  }
                ],
                "start_line": 270,
                "end_line": 289,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 272
                  },
                  {
                    "type": "return",
                    "name": "floor",
                    "array_size": null,
                    "line_number": 288
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 277
                  },
                  {
                    "name": "getNextSector",
                    "line_number": 280
                  },
                  {
                    "name": "if",
                    "line_number": 282
                  },
                  {
                    "name": "if",
                    "line_number": 285
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 277
                  },
                  {
                    "type": "if",
                    "line_number": 282
                  },
                  {
                    "type": "if",
                    "line_number": 285
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "sec"
                ],
                "outputs": [
                  "fixed_t"
                ],
                "dependencies": [
                  "getNextSector",
                  "if",
                  "for"
                ]
              },
              {
                "name": "P_FindHighestFloorSurrounding",
                "return_type": "fixed_t",
                "parameters": [
                  {
                    "type": "sector_t",
                    "name": "*sec"
                  }
                ],
                "start_line": 297,
                "end_line": 316,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 299
                  },
                  {
                    "type": "return",
                    "name": "floor",
                    "array_size": null,
                    "line_number": 315
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 304
                  },
                  {
                    "name": "getNextSector",
                    "line_number": 307
                  },
                  {
                    "name": "if",
                    "line_number": 309
                  },
                  {
                    "name": "if",
                    "line_number": 312
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 304
                  },
                  {
                    "type": "if",
                    "line_number": 309
                  },
                  {
                    "type": "if",
                    "line_number": 312
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "*sec"
                ],
                "outputs": [
                  "fixed_t"
                ],
                "dependencies": [
                  "getNextSector",
                  "if",
                  "for"
                ]
              },
              {
                "name": "P_FindNextHighestFloor",
                "return_type": "define MAX_ADJOINING_SECTORS    \t20\n\nfixed_t",
                "parameters": [
                  {
                    "type": "sector_t*",
                    "name": "sec"
                  },
                  {
                    "type": "int",
                    "name": "currentheight"
                  }
                ],
                "start_line": 326,
                "end_line": 370,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 328
                  },
                  {
                    "type": "int",
                    "name": "h",
                    "array_size": null,
                    "line_number": 329
                  },
                  {
                    "type": "int",
                    "name": "min",
                    "array_size": null,
                    "line_number": 330
                  },
                  {
                    "type": "return",
                    "name": "currentheight",
                    "array_size": null,
                    "line_number": 360
                  },
                  {
                    "type": "return",
                    "name": "min",
                    "array_size": null,
                    "line_number": 369
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 338
                  },
                  {
                    "name": "getNextSector",
                    "line_number": 341
                  },
                  {
                    "name": "if",
                    "line_number": 343
                  },
                  {
                    "name": "if",
                    "line_number": 346
                  },
                  {
                    "name": "if",
                    "line_number": 350
                  },
                  {
                    "name": "fprintf",
                    "line_number": 352
                  },
                  {
                    "name": "if",
                    "line_number": 359
                  },
                  {
                    "name": "for",
                    "line_number": 365
                  },
                  {
                    "name": "if",
                    "line_number": 366
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 338
                  },
                  {
                    "type": "if",
                    "line_number": 343
                  },
                  {
                    "type": "if",
                    "line_number": 346
                  },
                  {
                    "type": "for",
                    "line_number": 349
                  },
                  {
                    "type": "if",
                    "line_number": 350
                  },
                  {
                    "type": "if",
                    "line_number": 359
                  },
                  {
                    "type": "for",
                    "line_number": 365
                  },
                  {
                    "type": "if",
                    "line_number": 366
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "sec",
                  "currentheight"
                ],
                "outputs": [
                  "define MAX_ADJOINING_SECTORS    \t20\n\nfixed_t"
                ],
                "dependencies": [
                  "getNextSector",
                  "if",
                  "fprintf",
                  "for"
                ]
              },
              {
                "name": "P_FindLowestCeilingSurrounding",
                "return_type": "fixed_t",
                "parameters": [
                  {
                    "type": "sector_t*",
                    "name": "sec"
                  }
                ],
                "start_line": 381,
                "end_line": 400,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 383
                  },
                  {
                    "type": "return",
                    "name": "height",
                    "array_size": null,
                    "line_number": 399
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 388
                  },
                  {
                    "name": "getNextSector",
                    "line_number": 391
                  },
                  {
                    "name": "if",
                    "line_number": 393
                  },
                  {
                    "name": "if",
                    "line_number": 396
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 388
                  },
                  {
                    "type": "if",
                    "line_number": 393
                  },
                  {
                    "type": "if",
                    "line_number": 396
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "sec"
                ],
                "outputs": [
                  "fixed_t"
                ],
                "dependencies": [
                  "getNextSector",
                  "if",
                  "for"
                ]
              },
              {
                "name": "P_FindHighestCeilingSurrounding",
                "return_type": "fixed_t",
                "parameters": [
                  {
                    "type": "sector_t*",
                    "name": "sec"
                  }
                ],
                "start_line": 407,
                "end_line": 426,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 409
                  },
                  {
                    "type": "return",
                    "name": "height",
                    "array_size": null,
                    "line_number": 425
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 414
                  },
                  {
                    "name": "getNextSector",
                    "line_number": 417
                  },
                  {
                    "name": "if",
                    "line_number": 419
                  },
                  {
                    "name": "if",
                    "line_number": 422
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 414
                  },
                  {
                    "type": "if",
                    "line_number": 419
                  },
                  {
                    "type": "if",
                    "line_number": 422
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "sec"
                ],
                "outputs": [
                  "fixed_t"
                ],
                "dependencies": [
                  "getNextSector",
                  "if",
                  "for"
                ]
              },
              {
                "name": "P_FindSectorFromLineTag",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  },
                  {
                    "type": "int",
                    "name": "start"
                  }
                ],
                "start_line": 433,
                "end_line": 442,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 435
                  },
                  {
                    "type": "return",
                    "name": "i",
                    "array_size": null,
                    "line_number": 439
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 437
                  },
                  {
                    "name": "if",
                    "line_number": 438
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 437
                  },
                  {
                    "type": "if",
                    "line_number": 438
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "line",
                  "start"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "P_FindMinSurroundingLight",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "sector_t*",
                    "name": "sector"
                  },
                  {
                    "type": "int",
                    "name": "max"
                  }
                ],
                "start_line": 453,
                "end_line": 473,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 455
                  },
                  {
                    "type": "int",
                    "name": "min",
                    "array_size": null,
                    "line_number": 456
                  },
                  {
                    "type": "return",
                    "name": "min",
                    "array_size": null,
                    "line_number": 472
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 461
                  },
                  {
                    "name": "getNextSector",
                    "line_number": 464
                  },
                  {
                    "name": "if",
                    "line_number": 466
                  },
                  {
                    "name": "if",
                    "line_number": 469
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 461
                  },
                  {
                    "type": "if",
                    "line_number": 466
                  },
                  {
                    "type": "if",
                    "line_number": 469
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "sector",
                  "max"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "getNextSector",
                  "if",
                  "for"
                ]
              },
              {
                "name": "P_CrossSpecialLine",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "linenum"
                  },
                  {
                    "type": "int",
                    "name": "side"
                  },
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  }
                ],
                "start_line": 491,
                "end_line": 946,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "ok",
                    "array_size": null,
                    "line_number": 494
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 499
                  },
                  {
                    "name": "switch",
                    "line_number": 502
                  },
                  {
                    "name": "switch",
                    "line_number": 517
                  },
                  {
                    "name": "if",
                    "line_number": 529
                  },
                  {
                    "name": "switch",
                    "line_number": 535
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 541
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 547
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 553
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 559
                  },
                  {
                    "name": "EV_DoCeiling",
                    "line_number": 565
                  },
                  {
                    "name": "EV_BuildStairs",
                    "line_number": 571
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 577
                  },
                  {
                    "name": "EV_LightTurnOn",
                    "line_number": 583
                  },
                  {
                    "name": "EV_LightTurnOn",
                    "line_number": 589
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 595
                  },
                  {
                    "name": "EV_StartLightStrobing",
                    "line_number": 601
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 607
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 613
                  },
                  {
                    "name": "EV_DoCeiling",
                    "line_number": 619
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 626
                  },
                  {
                    "name": "EV_LightTurnOn",
                    "line_number": 632
                  },
                  {
                    "name": "Floor",
                    "line_number": 637
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 638
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 644
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 650
                  },
                  {
                    "name": "EV_Teleport",
                    "line_number": 656
                  },
                  {
                    "name": "EV_DoCeiling",
                    "line_number": 662
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 663
                  },
                  {
                    "name": "EV_DoCeiling",
                    "line_number": 669
                  },
                  {
                    "name": "G_ExitLevel",
                    "line_number": 675
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 680
                  },
                  {
                    "name": "EV_StopPlat",
                    "line_number": 686
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 692
                  },
                  {
                    "name": "EV_CeilingCrushStop",
                    "line_number": 698
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 704
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 710
                  },
                  {
                    "name": "sector",
                    "line_number": 715
                  },
                  {
                    "name": "EV_TurnTagLightsOff",
                    "line_number": 716
                  },
                  {
                    "name": "Raise",
                    "line_number": 721
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 722
                  },
                  {
                    "name": "Open",
                    "line_number": 727
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 728
                  },
                  {
                    "name": "EV_BuildStairs",
                    "line_number": 734
                  },
                  {
                    "name": "Close",
                    "line_number": 739
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 740
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 746
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 752
                  },
                  {
                    "name": "G_SecretExitLevel",
                    "line_number": 758
                  },
                  {
                    "name": "if",
                    "line_number": 763
                  },
                  {
                    "name": "EV_Teleport",
                    "line_number": 765
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 772
                  },
                  {
                    "name": "EV_DoCeiling",
                    "line_number": 778
                  },
                  {
                    "name": "EV_DoCeiling",
                    "line_number": 785
                  },
                  {
                    "name": "EV_DoCeiling",
                    "line_number": 790
                  },
                  {
                    "name": "EV_CeilingCrushStop",
                    "line_number": 795
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 800
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 805
                  },
                  {
                    "name": "EV_DoCeiling",
                    "line_number": 810
                  },
                  {
                    "name": "EV_LightTurnOn",
                    "line_number": 815
                  },
                  {
                    "name": "EV_LightTurnOn",
                    "line_number": 820
                  },
                  {
                    "name": "EV_LightTurnOn",
                    "line_number": 825
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 830
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 835
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 840
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 845
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 850
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 855
                  },
                  {
                    "name": "EV_StopPlat",
                    "line_number": 860
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 865
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 870
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 875
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 880
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 885
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 891
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 897
                  },
                  {
                    "name": "EV_Teleport",
                    "line_number": 902
                  },
                  {
                    "name": "Floor",
                    "line_number": 906
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 907
                  },
                  {
                    "name": "Raise",
                    "line_number": 911
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 912
                  },
                  {
                    "name": "Open",
                    "line_number": 916
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 917
                  },
                  {
                    "name": "Close",
                    "line_number": 921
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 922
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 927
                  },
                  {
                    "name": "if",
                    "line_number": 932
                  },
                  {
                    "name": "EV_Teleport",
                    "line_number": 933
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 938
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 943
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 499
                  },
                  {
                    "type": "if",
                    "line_number": 529
                  },
                  {
                    "type": "if",
                    "line_number": 763
                  },
                  {
                    "type": "if",
                    "line_number": 932
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "linenum",
                  "side",
                  "thing"
                ],
                "outputs": [],
                "dependencies": [
                  "Open",
                  "EV_BuildStairs",
                  "G_SecretExitLevel",
                  "EV_DoPlat",
                  "G_ExitLevel",
                  "Floor",
                  "EV_StartLightStrobing",
                  "EV_StopPlat",
                  "EV_DoCeiling",
                  "sector",
                  "EV_CeilingCrushStop",
                  "EV_LightTurnOn",
                  "switch",
                  "EV_DoDoor",
                  "Close",
                  "EV_TurnTagLightsOff",
                  "EV_DoFloor",
                  "if",
                  "EV_Teleport",
                  "Raise"
                ]
              },
              {
                "name": "if",
                "return_type": "Triggers that other things can activate",
                "parameters": [
                  {
                    "type": "",
                    "name": "!thing->player"
                  }
                ],
                "start_line": 502,
                "end_line": 534,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 505
                  },
                  {
                    "name": "switch",
                    "line_number": 520
                  },
                  {
                    "name": "if",
                    "line_number": 532
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 532
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "!thing->player"
                ],
                "outputs": [
                  "Triggers that other things can activate"
                ],
                "dependencies": [
                  "switch",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "TELEPORT MonsterONLY",
                "parameters": [
                  {
                    "type": "",
                    "name": "!thing->player"
                  }
                ],
                "start_line": 766,
                "end_line": 770,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "EV_Teleport",
                    "line_number": 768
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "!thing->player"
                ],
                "outputs": [
                  "TELEPORT MonsterONLY"
                ],
                "dependencies": [
                  "EV_Teleport"
                ]
              },
              {
                "name": "P_ShootSpecialLine",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  },
                  {
                    "type": "line_t*",
                    "name": "line"
                  }
                ],
                "start_line": 958,
                "end_line": 997,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "ok",
                    "array_size": null,
                    "line_number": 960
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 963
                  },
                  {
                    "name": "switch",
                    "line_number": 966
                  },
                  {
                    "name": "if",
                    "line_number": 973
                  },
                  {
                    "name": "switch",
                    "line_number": 977
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 981
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 982
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 987
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 988
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 993
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 994
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 963
                  },
                  {
                    "type": "if",
                    "line_number": 973
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "thing",
                  "line"
                ],
                "outputs": [],
                "dependencies": [
                  "EV_DoDoor",
                  "if",
                  "P_ChangeSwitchTexture",
                  "EV_DoPlat",
                  "switch",
                  "EV_DoFloor"
                ]
              },
              {
                "name": "P_PlayerInSpecialSector",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  }
                ],
                "start_line": 1009,
                "end_line": 1071,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1016
                  },
                  {
                    "name": "switch",
                    "line_number": 1020
                  },
                  {
                    "name": "if",
                    "line_number": 1024
                  },
                  {
                    "name": "if",
                    "line_number": 1025
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 1026
                  },
                  {
                    "name": "if",
                    "line_number": 1031
                  },
                  {
                    "name": "if",
                    "line_number": 1032
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 1033
                  },
                  {
                    "name": "if",
                    "line_number": 1040
                  },
                  {
                    "name": "P_Random",
                    "line_number": 1041
                  },
                  {
                    "name": "if",
                    "line_number": 1043
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 1044
                  },
                  {
                    "name": "if",
                    "line_number": 1058
                  },
                  {
                    "name": "P_DamageMobj",
                    "line_number": 1059
                  },
                  {
                    "name": "if",
                    "line_number": 1061
                  },
                  {
                    "name": "G_ExitLevel",
                    "line_number": 1062
                  },
                  {
                    "name": "I_Error",
                    "line_number": 1066
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1016
                  },
                  {
                    "type": "if",
                    "line_number": 1024
                  },
                  {
                    "type": "if",
                    "line_number": 1025
                  },
                  {
                    "type": "if",
                    "line_number": 1031
                  },
                  {
                    "type": "if",
                    "line_number": 1032
                  },
                  {
                    "type": "if",
                    "line_number": 1040
                  },
                  {
                    "type": "if",
                    "line_number": 1043
                  },
                  {
                    "type": "for",
                    "line_number": 1055
                  },
                  {
                    "type": "if",
                    "line_number": 1058
                  },
                  {
                    "type": "if",
                    "line_number": 1061
                  }
                ],
                "complexity": 11,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "P_DamageMobj",
                  "I_Error",
                  "P_Random",
                  "G_ExitLevel",
                  "switch"
                ]
              },
              {
                "name": "P_UpdateSpecials",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1083,
                "end_line": 1156,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "pic",
                    "array_size": null,
                    "line_number": 1086
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1087
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1092
                  },
                  {
                    "name": "if",
                    "line_number": 1095
                  },
                  {
                    "name": "G_ExitLevel",
                    "line_number": 1096
                  },
                  {
                    "name": "for",
                    "line_number": 1100
                  },
                  {
                    "name": "for",
                    "line_number": 1102
                  },
                  {
                    "name": "if",
                    "line_number": 1105
                  },
                  {
                    "name": "for",
                    "line_number": 1114
                  },
                  {
                    "name": "switch",
                    "line_number": 1117
                  },
                  {
                    "name": "for",
                    "line_number": 1128
                  },
                  {
                    "name": "if",
                    "line_number": 1129
                  },
                  {
                    "name": "if",
                    "line_number": 1132
                  },
                  {
                    "name": "switch",
                    "line_number": 1134
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1151
                  },
                  {
                    "name": "memset",
                    "line_number": 1152
                  },
                  {
                    "name": "sizeof",
                    "line_number": 1152
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1092
                  },
                  {
                    "type": "if",
                    "line_number": 1095
                  },
                  {
                    "type": "for",
                    "line_number": 1100
                  },
                  {
                    "type": "for",
                    "line_number": 1102
                  },
                  {
                    "type": "if",
                    "line_number": 1105
                  },
                  {
                    "type": "else",
                    "line_number": 1107
                  },
                  {
                    "type": "for",
                    "line_number": 1114
                  },
                  {
                    "type": "for",
                    "line_number": 1128
                  },
                  {
                    "type": "if",
                    "line_number": 1129
                  },
                  {
                    "type": "if",
                    "line_number": 1132
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "if",
                  "memset",
                  "sizeof",
                  "G_ExitLevel",
                  "S_StartSound",
                  "switch"
                ]
              },
              {
                "name": "if",
                "return_type": "LEVEL TIMER",
                "parameters": [
                  {
                    "type": "levelTimer ==",
                    "name": "true"
                  }
                ],
                "start_line": 1091,
                "end_line": 1096,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1094
                  },
                  {
                    "name": "G_ExitLevel",
                    "line_number": 1095
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1094
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "true"
                ],
                "outputs": [
                  "LEVEL TIMER"
                ],
                "dependencies": [
                  "G_ExitLevel",
                  "if"
                ]
              },
              {
                "name": "for",
                "return_type": "ANIMATE FLATS AND TEXTURES GLOBALLY",
                "parameters": [
                  {
                    "type": "anim = anims ; anim < lastanim ;",
                    "name": "anim++"
                  }
                ],
                "start_line": 1099,
                "end_line": 1109,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1101
                  },
                  {
                    "name": "if",
                    "line_number": 1104
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1101
                  },
                  {
                    "type": "if",
                    "line_number": 1104
                  },
                  {
                    "type": "else",
                    "line_number": 1106
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "anim++"
                ],
                "outputs": [
                  "ANIMATE FLATS AND TEXTURES GLOBALLY"
                ],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "for",
                "return_type": "ANIMATE LINE SPECIALS",
                "parameters": [
                  {
                    "type": "i = 0; i < numlinespecials;",
                    "name": "i++"
                  }
                ],
                "start_line": 1113,
                "end_line": 1123,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 1116
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i++"
                ],
                "outputs": [
                  "ANIMATE LINE SPECIALS"
                ],
                "dependencies": [
                  "switch"
                ]
              },
              {
                "name": "EV_DoDonut",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  }
                ],
                "start_line": 1163,
                "end_line": 1221,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "secnum",
                    "array_size": null,
                    "line_number": 1168
                  },
                  {
                    "type": "int",
                    "name": "rtn",
                    "array_size": null,
                    "line_number": 1169
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1170
                  },
                  {
                    "type": "return",
                    "name": "rtn",
                    "array_size": null,
                    "line_number": 1220
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 1175
                  },
                  {
                    "name": "P_FindSectorFromLineTag",
                    "line_number": 1175
                  },
                  {
                    "name": "if",
                    "line_number": 1180
                  },
                  {
                    "name": "getNextSector",
                    "line_number": 1184
                  },
                  {
                    "name": "for",
                    "line_number": 1185
                  },
                  {
                    "name": "if",
                    "line_number": 1187
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 1193
                  },
                  {
                    "name": "sizeof",
                    "line_number": 1193
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 1194
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 1207
                  },
                  {
                    "name": "sizeof",
                    "line_number": 1207
                  },
                  {
                    "name": "P_AddThinker",
                    "line_number": 1208
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 1175
                  },
                  {
                    "type": "if",
                    "line_number": 1180
                  },
                  {
                    "type": "for",
                    "line_number": 1185
                  },
                  {
                    "type": "if",
                    "line_number": 1187
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "line"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "P_AddThinker",
                  "while",
                  "Z_Malloc",
                  "for",
                  "if",
                  "P_FindSectorFromLineTag",
                  "sizeof",
                  "getNextSector"
                ]
              },
              {
                "name": "P_SpawnSpecials",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1239,
                "end_line": 1362,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1242
                  },
                  {
                    "type": "int",
                    "name": "episode",
                    "array_size": null,
                    "line_number": 1243
                  },
                  {
                    "type": "int",
                    "name": "time",
                    "array_size": null,
                    "line_number": 1263
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1246
                  },
                  {
                    "name": "W_CheckNumForName",
                    "line_number": 1246
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 1253
                  },
                  {
                    "name": "if",
                    "line_number": 1254
                  },
                  {
                    "name": "M_CheckParm",
                    "line_number": 1260
                  },
                  {
                    "name": "if",
                    "line_number": 1261
                  },
                  {
                    "name": "atoi",
                    "line_number": 1264
                  },
                  {
                    "name": "for",
                    "line_number": 1271
                  },
                  {
                    "name": "if",
                    "line_number": 1273
                  },
                  {
                    "name": "switch",
                    "line_number": 1276
                  },
                  {
                    "name": "P_SpawnLightFlash",
                    "line_number": 1280
                  },
                  {
                    "name": "P_SpawnStrobeFlash",
                    "line_number": 1285
                  },
                  {
                    "name": "P_SpawnStrobeFlash",
                    "line_number": 1290
                  },
                  {
                    "name": "P_SpawnStrobeFlash",
                    "line_number": 1295
                  },
                  {
                    "name": "P_SpawnGlowingLight",
                    "line_number": 1301
                  },
                  {
                    "name": "P_SpawnDoorCloseIn30",
                    "line_number": 1310
                  },
                  {
                    "name": "P_SpawnStrobeFlash",
                    "line_number": 1315
                  },
                  {
                    "name": "P_SpawnStrobeFlash",
                    "line_number": 1320
                  },
                  {
                    "name": "P_SpawnDoorRaiseIn5Mins",
                    "line_number": 1325
                  },
                  {
                    "name": "P_SpawnFireFlicker",
                    "line_number": 1329
                  },
                  {
                    "name": "for",
                    "line_number": 1337
                  },
                  {
                    "name": "switch",
                    "line_number": 1339
                  },
                  {
                    "name": "for",
                    "line_number": 1351
                  },
                  {
                    "name": "for",
                    "line_number": 1354
                  },
                  {
                    "name": "for",
                    "line_number": 1357
                  },
                  {
                    "name": "memset",
                    "line_number": 1358
                  },
                  {
                    "name": "sizeof",
                    "line_number": 1358
                  },
                  {
                    "name": "P_InitSlidingDoorFrames",
                    "line_number": 1361
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1246
                  },
                  {
                    "type": "if",
                    "line_number": 1250
                  },
                  {
                    "type": "if",
                    "line_number": 1254
                  },
                  {
                    "type": "if",
                    "line_number": 1261
                  },
                  {
                    "type": "for",
                    "line_number": 1271
                  },
                  {
                    "type": "if",
                    "line_number": 1273
                  },
                  {
                    "type": "for",
                    "line_number": 1337
                  },
                  {
                    "type": "for",
                    "line_number": 1351
                  },
                  {
                    "type": "for",
                    "line_number": 1354
                  },
                  {
                    "type": "for",
                    "line_number": 1357
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SpawnDoorRaiseIn5Mins",
                  "for",
                  "if",
                  "P_SpawnStrobeFlash",
                  "P_SpawnFireFlicker",
                  "memset",
                  "atoi",
                  "M_CheckParm",
                  "W_CheckNumForName",
                  "P_SpawnLightFlash",
                  "sizeof",
                  "P_SpawnDoorCloseIn30",
                  "P_InitSlidingDoorFrames",
                  "P_SpawnGlowingLight",
                  "switch"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "istexture",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 62
              },
              {
                "name": "picnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 63
              },
              {
                "name": "basepic",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 64
              },
              {
                "name": "numpics",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 65
              },
              {
                "name": "speed",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 66
              },
              {
                "name": "istexture",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 75
              },
              {
                "name": "endname",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 76
              },
              {
                "name": "startname",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 77
              },
              {
                "name": "speed",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 78
              },
              {
                "name": "numlinespecials",
                "type": "short",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 143
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 150
              },
              {
                "name": "NULL",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 256
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 272
              },
              {
                "name": "floor",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 288
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 299
              },
              {
                "name": "floor",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 315
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 333
              },
              {
                "name": "h",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 334
              },
              {
                "name": "min",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 335
              },
              {
                "name": "currentheight",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 365
              },
              {
                "name": "min",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 374
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 384
              },
              {
                "name": "height",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 400
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 409
              },
              {
                "name": "height",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 425
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 438
              },
              {
                "name": "i",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 442
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 458
              },
              {
                "name": "min",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 459
              },
              {
                "name": "min",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 475
              },
              {
                "name": "ok",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 498
              },
              {
                "name": "ok",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 963
              },
              {
                "name": "levelTimer",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 1080
              },
              {
                "name": "levelTimeCount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1081
              },
              {
                "name": "pic",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1086
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1087
              },
              {
                "name": "secnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1168
              },
              {
                "name": "rtn",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1169
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1170
              },
              {
                "name": "rtn",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 1220
              },
              {
                "name": "numlinespecials",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 1234
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1242
              },
              {
                "name": "episode",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1243
              },
              {
                "name": "time",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1263
              }
            ],
            "defines": [
              {
                "name": "MAXANIMS",
                "value": "32",
                "line_number": 83
              },
              {
                "name": "MAXLINEANIMS",
                "value": "64",
                "line_number": 141
              },
              {
                "name": "MAX_ADJOINING_SECTORS",
                "value": "20",
                "line_number": 326
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/p_spec.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "p_spec.h",
          "type": "file",
          "size": 9580,
          "last_modified": "2024-09-05T16:00:04.723450",
          "path": "linuxdoom-1.10/p_spec.h",
          "readme": "# p_spec.h\n\nThis file contains functionality related to p_spec.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "levelTimer",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 33
              },
              {
                "name": "levelTimeCount",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 34
              },
              {
                "name": "thinker",
                "type": "thinker_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 126
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 128
              },
              {
                "name": "maxlight",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 129
              },
              {
                "name": "minlight",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 130
              },
              {
                "name": "thinker",
                "type": "thinker_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 138
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 140
              },
              {
                "name": "maxlight",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 141
              },
              {
                "name": "minlight",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 142
              },
              {
                "name": "maxtime",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 143
              },
              {
                "name": "mintime",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 144
              },
              {
                "name": "thinker",
                "type": "thinker_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 152
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 154
              },
              {
                "name": "minlight",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 155
              },
              {
                "name": "maxlight",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 156
              },
              {
                "name": "darktime",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 157
              },
              {
                "name": "brighttime",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 158
              },
              {
                "name": "thinker",
                "type": "thinker_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 167
              },
              {
                "name": "minlight",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 169
              },
              {
                "name": "maxlight",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 170
              },
              {
                "name": "direction",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 171
              },
              {
                "name": "name1",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 211
              },
              {
                "name": "name2",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 212
              },
              {
                "name": "episode",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 213
              },
              {
                "name": "where",
                "type": "bwhere_e",
                "storage_class": null,
                "array_size": null,
                "line_number": 230
              },
              {
                "name": "btexture",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 231
              },
              {
                "name": "btimer",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 232
              },
              {
                "name": "thinker",
                "type": "thinker_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 287
              },
              {
                "name": "speed",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 289
              },
              {
                "name": "low",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 290
              },
              {
                "name": "high",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 291
              },
              {
                "name": "wait",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 292
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 293
              },
              {
                "name": "status",
                "type": "plat_e",
                "storage_class": null,
                "array_size": null,
                "line_number": 294
              },
              {
                "name": "oldstatus",
                "type": "plat_e",
                "storage_class": null,
                "array_size": null,
                "line_number": 295
              },
              {
                "name": "crush",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 296
              },
              {
                "name": "tag",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 297
              },
              {
                "name": "type",
                "type": "plattype_e",
                "storage_class": null,
                "array_size": null,
                "line_number": 298
              },
              {
                "name": "thinker",
                "type": "thinker_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 345
              },
              {
                "name": "type",
                "type": "vldoor_e",
                "storage_class": null,
                "array_size": null,
                "line_number": 346
              },
              {
                "name": "topheight",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 348
              },
              {
                "name": "speed",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 349
              },
              {
                "name": "direction",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 352
              },
              {
                "name": "topwait",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 355
              },
              {
                "name": "topcountdown",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 358
              },
              {
                "name": "thinker",
                "type": "thinker_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 420
              },
              {
                "name": "type",
                "type": "sdt_e",
                "storage_class": null,
                "array_size": null,
                "line_number": 421
              },
              {
                "name": "frame",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 423
              },
              {
                "name": "whichDoorIndex",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 424
              },
              {
                "name": "timer",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 425
              },
              {
                "name": "status",
                "type": "sd_e",
                "storage_class": null,
                "array_size": null,
                "line_number": 428
              },
              {
                "name": "frontFrame1",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 436
              },
              {
                "name": "frontFrame2",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 437
              },
              {
                "name": "frontFrame3",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 438
              },
              {
                "name": "frontFrame4",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 439
              },
              {
                "name": "backFrame1",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 440
              },
              {
                "name": "backFrame2",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 441
              },
              {
                "name": "backFrame3",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 442
              },
              {
                "name": "backFrame4",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 443
              },
              {
                "name": "frontFrames",
                "type": "int",
                "storage_class": null,
                "array_size": "4",
                "line_number": 451
              },
              {
                "name": "backFrames",
                "type": "int",
                "storage_class": null,
                "array_size": "4",
                "line_number": 452
              },
              {
                "name": "thinker",
                "type": "thinker_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 495
              },
              {
                "name": "type",
                "type": "ceiling_e",
                "storage_class": null,
                "array_size": null,
                "line_number": 496
              },
              {
                "name": "bottomheight",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 498
              },
              {
                "name": "topheight",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 499
              },
              {
                "name": "speed",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 500
              },
              {
                "name": "crush",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 501
              },
              {
                "name": "direction",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 504
              },
              {
                "name": "tag",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 507
              },
              {
                "name": "olddirection",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 508
              },
              {
                "name": "thinker",
                "type": "thinker_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 586
              },
              {
                "name": "type",
                "type": "floor_e",
                "storage_class": null,
                "array_size": null,
                "line_number": 587
              },
              {
                "name": "crush",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 588
              },
              {
                "name": "direction",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 590
              },
              {
                "name": "newspecial",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 591
              },
              {
                "name": "texture",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 592
              },
              {
                "name": "floordestheight",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 593
              },
              {
                "name": "speed",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 594
              }
            ],
            "defines": [
              {
                "name": "MO_TELEPORTMAN",
                "value": "14",
                "line_number": 38
              },
              {
                "name": "GLOWSPEED",
                "value": "8",
                "line_number": 176
              },
              {
                "name": "STROBEBRIGHT",
                "value": "5",
                "line_number": 177
              },
              {
                "name": "FASTDARK",
                "value": "15",
                "line_number": 178
              },
              {
                "name": "SLOWDARK",
                "value": "35",
                "line_number": 179
              },
              {
                "name": "MAXSWITCHES",
                "value": "50",
                "line_number": 241
              },
              {
                "name": "MAXBUTTONS",
                "value": "16",
                "line_number": 244
              },
              {
                "name": "BUTTONTIME",
                "value": "35",
                "line_number": 247
              },
              {
                "name": "PLATWAIT",
                "value": "3",
                "line_number": 304
              },
              {
                "name": "PLATSPEED",
                "value": "FRACUNIT",
                "line_number": 305
              },
              {
                "name": "MAXPLATS",
                "value": "30",
                "line_number": 306
              },
              {
                "name": "VDOORSPEED",
                "value": "FRACUNIT*2",
                "line_number": 364
              },
              {
                "name": "VDOORWAIT",
                "value": "150",
                "line_number": 365
              },
              {
                "name": "SNUMFRAMES",
                "value": "4",
                "line_number": 459
              },
              {
                "name": "SDOORWAIT",
                "value": "35*3",
                "line_number": 461
              },
              {
                "name": "SWAITTICS",
                "value": "4",
                "line_number": 462
              },
              {
                "name": "MAXSLIDEDOORS",
                "value": "5",
                "line_number": 465
              },
              {
                "name": "CEILSPEED",
                "value": "FRACUNIT",
                "line_number": 516
              },
              {
                "name": "CEILWAIT",
                "value": "150",
                "line_number": 517
              },
              {
                "name": "MAXCEILINGS",
                "value": "30",
                "line_number": 518
              },
              {
                "name": "FLOORSPEED",
                "value": "FRACUNIT",
                "line_number": 600
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/p_spec.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "p_switch.c",
          "type": "file",
          "size": 13347,
          "last_modified": "2024-09-05T16:00:04.748971",
          "path": "linuxdoom-1.10/p_switch.c",
          "readme": "# p_switch.c\n\nThis file contains functionality related to p_switch.",
          "dependencies": [
            "p_local.h",
            "sounds.h",
            "r_state.h",
            "i_system.h",
            "doomstat.h",
            "g_game.h",
            "s_sound.h",
            "doomdef.h"
          ],
          "inputs": [
            "MAXBUTTONS;i++",
            "useAgain",
            "time",
            "side",
            "w",
            "line->special",
            "line",
            "void",
            "texture",
            "thing"
          ],
          "outputs": [
            "boolean",
            "do something",
            "See if button is already pressed"
          ],
          "content": {
            "functions": [
              {
                "name": "P_InitSwitchList",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 107,
                "end_line": 148,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 109
                  },
                  {
                    "type": "int",
                    "name": "index",
                    "array_size": null,
                    "line_number": 110
                  },
                  {
                    "type": "int",
                    "name": "episode",
                    "array_size": null,
                    "line_number": 111
                  },
                  {
                    "type": "int",
                    "name": "value",
                    "array_size": null,
                    "line_number": 133
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 115
                  },
                  {
                    "name": "if",
                    "line_number": 118
                  },
                  {
                    "name": "for",
                    "line_number": 121
                  },
                  {
                    "name": "if",
                    "line_number": 123
                  },
                  {
                    "name": "if",
                    "line_number": 130
                  },
                  {
                    "name": "if",
                    "line_number": 135
                  },
                  {
                    "name": "R_CheckTextureNumForName",
                    "line_number": 135
                  },
                  {
                    "name": "I_Error",
                    "line_number": 137
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 142
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 144
                  },
                  {
                    "name": "R_TextureNumForName",
                    "line_number": 145
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 115
                  },
                  {
                    "type": "else",
                    "line_number": 117
                  },
                  {
                    "type": "if",
                    "line_number": 118
                  },
                  {
                    "type": "for",
                    "line_number": 121
                  },
                  {
                    "type": "if",
                    "line_number": 123
                  },
                  {
                    "type": "if",
                    "line_number": 130
                  },
                  {
                    "type": "if",
                    "line_number": 132
                  },
                  {
                    "type": "if",
                    "line_number": 135
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "R_CheckTextureNumForName",
                  "for",
                  "if",
                  "I_Error",
                  "R_TextureNumForName"
                ]
              },
              {
                "name": "P_StartButton",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  },
                  {
                    "type": "bwhere_e",
                    "name": "w"
                  },
                  {
                    "type": "int",
                    "name": "texture"
                  },
                  {
                    "type": "int",
                    "name": "time"
                  }
                ],
                "start_line": 154,
                "end_line": 185,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 156
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 159
                  },
                  {
                    "name": "if",
                    "line_number": 161
                  },
                  {
                    "name": "for",
                    "line_number": 171
                  },
                  {
                    "name": "if",
                    "line_number": 173
                  },
                  {
                    "name": "I_Error",
                    "line_number": 184
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 158
                  },
                  {
                    "type": "for",
                    "line_number": 159
                  },
                  {
                    "type": "if",
                    "line_number": 161
                  },
                  {
                    "type": "for",
                    "line_number": 171
                  },
                  {
                    "type": "if",
                    "line_number": 173
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "line",
                  "w",
                  "texture",
                  "time"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "I_Error",
                  "for"
                ]
              },
              {
                "name": "for",
                "return_type": "See if button is already pressed",
                "parameters": [
                  {
                    "type": "i = 0;i <",
                    "name": "MAXBUTTONS;i++"
                  }
                ],
                "start_line": 163,
                "end_line": 171,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 165
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 165
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "MAXBUTTONS;i++"
                ],
                "outputs": [
                  "See if button is already pressed"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "P_ChangeSwitchTexture",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  },
                  {
                    "type": "int",
                    "name": "useAgain"
                  }
                ],
                "start_line": 200,
                "end_line": 260,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "texTop",
                    "array_size": null,
                    "line_number": 202
                  },
                  {
                    "type": "int",
                    "name": "texMid",
                    "array_size": null,
                    "line_number": 203
                  },
                  {
                    "type": "int",
                    "name": "texBot",
                    "array_size": null,
                    "line_number": 204
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 205
                  },
                  {
                    "type": "int",
                    "name": "sound",
                    "array_size": null,
                    "line_number": 206
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 208
                  },
                  {
                    "name": "if",
                    "line_number": 218
                  },
                  {
                    "name": "for",
                    "line_number": 221
                  },
                  {
                    "name": "if",
                    "line_number": 223
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 225
                  },
                  {
                    "name": "if",
                    "line_number": 228
                  },
                  {
                    "name": "P_StartButton",
                    "line_number": 229
                  },
                  {
                    "name": "if",
                    "line_number": 235
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 237
                  },
                  {
                    "name": "if",
                    "line_number": 240
                  },
                  {
                    "name": "P_StartButton",
                    "line_number": 241
                  },
                  {
                    "name": "if",
                    "line_number": 247
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 249
                  },
                  {
                    "name": "if",
                    "line_number": 252
                  },
                  {
                    "name": "P_StartButton",
                    "line_number": 253
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 208
                  },
                  {
                    "type": "if",
                    "line_number": 218
                  },
                  {
                    "type": "for",
                    "line_number": 221
                  },
                  {
                    "type": "if",
                    "line_number": 223
                  },
                  {
                    "type": "if",
                    "line_number": 228
                  },
                  {
                    "type": "else",
                    "line_number": 233
                  },
                  {
                    "type": "if",
                    "line_number": 235
                  },
                  {
                    "type": "if",
                    "line_number": 240
                  },
                  {
                    "type": "else",
                    "line_number": 245
                  },
                  {
                    "type": "if",
                    "line_number": 247
                  },
                  {
                    "type": "if",
                    "line_number": 252
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "line",
                  "useAgain"
                ],
                "outputs": [],
                "dependencies": [
                  "P_StartButton",
                  "for",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "P_UseSpecialLine",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  },
                  {
                    "type": "line_t*",
                    "name": "line"
                  },
                  {
                    "type": "int",
                    "name": "side"
                  }
                ],
                "start_line": 275,
                "end_line": 649,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 290
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 301
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 312
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 648
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 280
                  },
                  {
                    "name": "switch",
                    "line_number": 282
                  },
                  {
                    "name": "if",
                    "line_number": 297
                  },
                  {
                    "name": "if",
                    "line_number": 300
                  },
                  {
                    "name": "switch",
                    "line_number": 303
                  },
                  {
                    "name": "switch",
                    "line_number": 319
                  },
                  {
                    "name": "EV_VerticalDoor",
                    "line_number": 334
                  },
                  {
                    "name": "EV_SlidingDoor",
                    "line_number": 339
                  },
                  {
                    "name": "if",
                    "line_number": 345
                  },
                  {
                    "name": "EV_BuildStairs",
                    "line_number": 345
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 346
                  },
                  {
                    "name": "if",
                    "line_number": 351
                  },
                  {
                    "name": "EV_DoDonut",
                    "line_number": 351
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 352
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 357
                  },
                  {
                    "name": "G_ExitLevel",
                    "line_number": 358
                  },
                  {
                    "name": "if",
                    "line_number": 363
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 363
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 364
                  },
                  {
                    "name": "if",
                    "line_number": 369
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 369
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 370
                  },
                  {
                    "name": "if",
                    "line_number": 375
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 375
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 376
                  },
                  {
                    "name": "if",
                    "line_number": 381
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 381
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 382
                  },
                  {
                    "name": "if",
                    "line_number": 387
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 387
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 388
                  },
                  {
                    "name": "if",
                    "line_number": 393
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 393
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 394
                  },
                  {
                    "name": "if",
                    "line_number": 399
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 399
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 400
                  },
                  {
                    "name": "if",
                    "line_number": 405
                  },
                  {
                    "name": "EV_DoCeiling",
                    "line_number": 405
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 406
                  },
                  {
                    "name": "if",
                    "line_number": 411
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 411
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 412
                  },
                  {
                    "name": "if",
                    "line_number": 417
                  },
                  {
                    "name": "EV_DoCeiling",
                    "line_number": 417
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 418
                  },
                  {
                    "name": "if",
                    "line_number": 423
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 423
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 424
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 429
                  },
                  {
                    "name": "G_SecretExitLevel",
                    "line_number": 430
                  },
                  {
                    "name": "if",
                    "line_number": 435
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 435
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 436
                  },
                  {
                    "name": "if",
                    "line_number": 441
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 441
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 442
                  },
                  {
                    "name": "if",
                    "line_number": 447
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 447
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 448
                  },
                  {
                    "name": "if",
                    "line_number": 453
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 453
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 454
                  },
                  {
                    "name": "Raise",
                    "line_number": 458
                  },
                  {
                    "name": "if",
                    "line_number": 459
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 459
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 460
                  },
                  {
                    "name": "Open",
                    "line_number": 464
                  },
                  {
                    "name": "if",
                    "line_number": 465
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 465
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 466
                  },
                  {
                    "name": "Close",
                    "line_number": 470
                  },
                  {
                    "name": "if",
                    "line_number": 471
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 471
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 472
                  },
                  {
                    "name": "if",
                    "line_number": 477
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 477
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 478
                  },
                  {
                    "name": "if",
                    "line_number": 483
                  },
                  {
                    "name": "EV_BuildStairs",
                    "line_number": 483
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 484
                  },
                  {
                    "name": "if",
                    "line_number": 489
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 489
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 490
                  },
                  {
                    "name": "if",
                    "line_number": 499
                  },
                  {
                    "name": "EV_DoLockedDoor",
                    "line_number": 499
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 500
                  },
                  {
                    "name": "if",
                    "line_number": 505
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 505
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 506
                  },
                  {
                    "name": "if",
                    "line_number": 512
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 512
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 513
                  },
                  {
                    "name": "if",
                    "line_number": 518
                  },
                  {
                    "name": "EV_DoCeiling",
                    "line_number": 518
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 519
                  },
                  {
                    "name": "if",
                    "line_number": 524
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 524
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 525
                  },
                  {
                    "name": "if",
                    "line_number": 530
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 530
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 531
                  },
                  {
                    "name": "if",
                    "line_number": 536
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 536
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 537
                  },
                  {
                    "name": "if",
                    "line_number": 542
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 542
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 543
                  },
                  {
                    "name": "if",
                    "line_number": 548
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 548
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 549
                  },
                  {
                    "name": "if",
                    "line_number": 554
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 554
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 555
                  },
                  {
                    "name": "if",
                    "line_number": 560
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 560
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 561
                  },
                  {
                    "name": "if",
                    "line_number": 566
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 566
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 567
                  },
                  {
                    "name": "if",
                    "line_number": 572
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 572
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 573
                  },
                  {
                    "name": "if",
                    "line_number": 578
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 578
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 579
                  },
                  {
                    "name": "if",
                    "line_number": 584
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 584
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 585
                  },
                  {
                    "name": "if",
                    "line_number": 590
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 590
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 591
                  },
                  {
                    "name": "Raise",
                    "line_number": 595
                  },
                  {
                    "name": "if",
                    "line_number": 596
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 596
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 597
                  },
                  {
                    "name": "Open",
                    "line_number": 601
                  },
                  {
                    "name": "if",
                    "line_number": 602
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 602
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 603
                  },
                  {
                    "name": "Close",
                    "line_number": 607
                  },
                  {
                    "name": "if",
                    "line_number": 608
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 608
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 609
                  },
                  {
                    "name": "if",
                    "line_number": 614
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 614
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 615
                  },
                  {
                    "name": "if",
                    "line_number": 620
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 620
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 621
                  },
                  {
                    "name": "if",
                    "line_number": 630
                  },
                  {
                    "name": "EV_DoLockedDoor",
                    "line_number": 630
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 631
                  },
                  {
                    "name": "EV_LightTurnOn",
                    "line_number": 636
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 637
                  },
                  {
                    "name": "EV_LightTurnOn",
                    "line_number": 642
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 643
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 280
                  },
                  {
                    "type": "if",
                    "line_number": 297
                  },
                  {
                    "type": "if",
                    "line_number": 300
                  },
                  {
                    "type": "if",
                    "line_number": 345
                  },
                  {
                    "type": "if",
                    "line_number": 351
                  },
                  {
                    "type": "if",
                    "line_number": 363
                  },
                  {
                    "type": "if",
                    "line_number": 369
                  },
                  {
                    "type": "if",
                    "line_number": 375
                  },
                  {
                    "type": "if",
                    "line_number": 381
                  },
                  {
                    "type": "if",
                    "line_number": 387
                  },
                  {
                    "type": "if",
                    "line_number": 393
                  },
                  {
                    "type": "if",
                    "line_number": 399
                  },
                  {
                    "type": "if",
                    "line_number": 405
                  },
                  {
                    "type": "if",
                    "line_number": 411
                  },
                  {
                    "type": "if",
                    "line_number": 417
                  },
                  {
                    "type": "if",
                    "line_number": 423
                  },
                  {
                    "type": "if",
                    "line_number": 435
                  },
                  {
                    "type": "if",
                    "line_number": 441
                  },
                  {
                    "type": "if",
                    "line_number": 447
                  },
                  {
                    "type": "if",
                    "line_number": 453
                  },
                  {
                    "type": "if",
                    "line_number": 459
                  },
                  {
                    "type": "if",
                    "line_number": 465
                  },
                  {
                    "type": "if",
                    "line_number": 471
                  },
                  {
                    "type": "if",
                    "line_number": 477
                  },
                  {
                    "type": "if",
                    "line_number": 483
                  },
                  {
                    "type": "if",
                    "line_number": 489
                  },
                  {
                    "type": "if",
                    "line_number": 499
                  },
                  {
                    "type": "if",
                    "line_number": 505
                  },
                  {
                    "type": "if",
                    "line_number": 512
                  },
                  {
                    "type": "if",
                    "line_number": 518
                  },
                  {
                    "type": "if",
                    "line_number": 524
                  },
                  {
                    "type": "if",
                    "line_number": 530
                  },
                  {
                    "type": "if",
                    "line_number": 536
                  },
                  {
                    "type": "if",
                    "line_number": 542
                  },
                  {
                    "type": "if",
                    "line_number": 548
                  },
                  {
                    "type": "if",
                    "line_number": 554
                  },
                  {
                    "type": "if",
                    "line_number": 560
                  },
                  {
                    "type": "if",
                    "line_number": 566
                  },
                  {
                    "type": "if",
                    "line_number": 572
                  },
                  {
                    "type": "if",
                    "line_number": 578
                  },
                  {
                    "type": "if",
                    "line_number": 584
                  },
                  {
                    "type": "if",
                    "line_number": 590
                  },
                  {
                    "type": "if",
                    "line_number": 596
                  },
                  {
                    "type": "if",
                    "line_number": 602
                  },
                  {
                    "type": "if",
                    "line_number": 608
                  },
                  {
                    "type": "if",
                    "line_number": 614
                  },
                  {
                    "type": "if",
                    "line_number": 620
                  },
                  {
                    "type": "if",
                    "line_number": 630
                  }
                ],
                "complexity": 49,
                "inputs": [
                  "thing",
                  "line",
                  "side"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "Open",
                  "EV_DoCeiling",
                  "EV_DoLockedDoor",
                  "EV_DoDoor",
                  "EV_BuildStairs",
                  "if",
                  "G_SecretExitLevel",
                  "EV_VerticalDoor",
                  "P_ChangeSwitchTexture",
                  "Close",
                  "EV_LightTurnOn",
                  "EV_SlidingDoor",
                  "G_ExitLevel",
                  "EV_DoDonut",
                  "EV_DoPlat",
                  "switch",
                  "Raise",
                  "EV_DoFloor"
                ]
              },
              {
                "name": "switch",
                "return_type": "do something",
                "parameters": [
                  {
                    "type": "",
                    "name": "line->special"
                  }
                ],
                "start_line": 322,
                "end_line": 649,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "EV_VerticalDoor",
                    "line_number": 337
                  },
                  {
                    "name": "EV_SlidingDoor",
                    "line_number": 342
                  },
                  {
                    "name": "if",
                    "line_number": 348
                  },
                  {
                    "name": "EV_BuildStairs",
                    "line_number": 348
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 349
                  },
                  {
                    "name": "if",
                    "line_number": 354
                  },
                  {
                    "name": "EV_DoDonut",
                    "line_number": 354
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 355
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 360
                  },
                  {
                    "name": "G_ExitLevel",
                    "line_number": 361
                  },
                  {
                    "name": "if",
                    "line_number": 366
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 366
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 367
                  },
                  {
                    "name": "if",
                    "line_number": 372
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 372
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 373
                  },
                  {
                    "name": "if",
                    "line_number": 378
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 378
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 379
                  },
                  {
                    "name": "if",
                    "line_number": 384
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 384
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 385
                  },
                  {
                    "name": "if",
                    "line_number": 390
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 390
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 391
                  },
                  {
                    "name": "if",
                    "line_number": 396
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 396
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 397
                  },
                  {
                    "name": "if",
                    "line_number": 402
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 402
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 403
                  },
                  {
                    "name": "if",
                    "line_number": 408
                  },
                  {
                    "name": "EV_DoCeiling",
                    "line_number": 408
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 409
                  },
                  {
                    "name": "if",
                    "line_number": 414
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 414
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 415
                  },
                  {
                    "name": "if",
                    "line_number": 420
                  },
                  {
                    "name": "EV_DoCeiling",
                    "line_number": 420
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 421
                  },
                  {
                    "name": "if",
                    "line_number": 426
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 426
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 427
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 432
                  },
                  {
                    "name": "G_SecretExitLevel",
                    "line_number": 433
                  },
                  {
                    "name": "if",
                    "line_number": 438
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 438
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 439
                  },
                  {
                    "name": "if",
                    "line_number": 444
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 444
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 445
                  },
                  {
                    "name": "if",
                    "line_number": 450
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 450
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 451
                  },
                  {
                    "name": "if",
                    "line_number": 456
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 456
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 457
                  },
                  {
                    "name": "Raise",
                    "line_number": 461
                  },
                  {
                    "name": "if",
                    "line_number": 462
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 462
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 463
                  },
                  {
                    "name": "Open",
                    "line_number": 467
                  },
                  {
                    "name": "if",
                    "line_number": 468
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 468
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 469
                  },
                  {
                    "name": "Close",
                    "line_number": 473
                  },
                  {
                    "name": "if",
                    "line_number": 474
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 474
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 475
                  },
                  {
                    "name": "if",
                    "line_number": 480
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 480
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 481
                  },
                  {
                    "name": "if",
                    "line_number": 486
                  },
                  {
                    "name": "EV_BuildStairs",
                    "line_number": 486
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 487
                  },
                  {
                    "name": "if",
                    "line_number": 492
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 492
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 493
                  },
                  {
                    "name": "if",
                    "line_number": 502
                  },
                  {
                    "name": "EV_DoLockedDoor",
                    "line_number": 502
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 503
                  },
                  {
                    "name": "if",
                    "line_number": 508
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 508
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 509
                  },
                  {
                    "name": "if",
                    "line_number": 515
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 515
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 516
                  },
                  {
                    "name": "if",
                    "line_number": 521
                  },
                  {
                    "name": "EV_DoCeiling",
                    "line_number": 521
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 522
                  },
                  {
                    "name": "if",
                    "line_number": 527
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 527
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 528
                  },
                  {
                    "name": "if",
                    "line_number": 533
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 533
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 534
                  },
                  {
                    "name": "if",
                    "line_number": 539
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 539
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 540
                  },
                  {
                    "name": "if",
                    "line_number": 545
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 545
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 546
                  },
                  {
                    "name": "if",
                    "line_number": 551
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 551
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 552
                  },
                  {
                    "name": "if",
                    "line_number": 557
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 557
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 558
                  },
                  {
                    "name": "if",
                    "line_number": 563
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 563
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 564
                  },
                  {
                    "name": "if",
                    "line_number": 569
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 569
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 570
                  },
                  {
                    "name": "if",
                    "line_number": 575
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 575
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 576
                  },
                  {
                    "name": "if",
                    "line_number": 581
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 581
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 582
                  },
                  {
                    "name": "if",
                    "line_number": 587
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 587
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 588
                  },
                  {
                    "name": "if",
                    "line_number": 593
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 593
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 594
                  },
                  {
                    "name": "Raise",
                    "line_number": 598
                  },
                  {
                    "name": "if",
                    "line_number": 599
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 599
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 600
                  },
                  {
                    "name": "Open",
                    "line_number": 604
                  },
                  {
                    "name": "if",
                    "line_number": 605
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 605
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 606
                  },
                  {
                    "name": "Close",
                    "line_number": 610
                  },
                  {
                    "name": "if",
                    "line_number": 611
                  },
                  {
                    "name": "EV_DoDoor",
                    "line_number": 611
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 612
                  },
                  {
                    "name": "if",
                    "line_number": 617
                  },
                  {
                    "name": "EV_DoPlat",
                    "line_number": 617
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 618
                  },
                  {
                    "name": "if",
                    "line_number": 623
                  },
                  {
                    "name": "EV_DoFloor",
                    "line_number": 623
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 624
                  },
                  {
                    "name": "if",
                    "line_number": 633
                  },
                  {
                    "name": "EV_DoLockedDoor",
                    "line_number": 633
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 634
                  },
                  {
                    "name": "EV_LightTurnOn",
                    "line_number": 639
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 640
                  },
                  {
                    "name": "EV_LightTurnOn",
                    "line_number": 645
                  },
                  {
                    "name": "P_ChangeSwitchTexture",
                    "line_number": 646
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 348
                  },
                  {
                    "type": "if",
                    "line_number": 354
                  },
                  {
                    "type": "if",
                    "line_number": 366
                  },
                  {
                    "type": "if",
                    "line_number": 372
                  },
                  {
                    "type": "if",
                    "line_number": 378
                  },
                  {
                    "type": "if",
                    "line_number": 384
                  },
                  {
                    "type": "if",
                    "line_number": 390
                  },
                  {
                    "type": "if",
                    "line_number": 396
                  },
                  {
                    "type": "if",
                    "line_number": 402
                  },
                  {
                    "type": "if",
                    "line_number": 408
                  },
                  {
                    "type": "if",
                    "line_number": 414
                  },
                  {
                    "type": "if",
                    "line_number": 420
                  },
                  {
                    "type": "if",
                    "line_number": 426
                  },
                  {
                    "type": "if",
                    "line_number": 438
                  },
                  {
                    "type": "if",
                    "line_number": 444
                  },
                  {
                    "type": "if",
                    "line_number": 450
                  },
                  {
                    "type": "if",
                    "line_number": 456
                  },
                  {
                    "type": "if",
                    "line_number": 462
                  },
                  {
                    "type": "if",
                    "line_number": 468
                  },
                  {
                    "type": "if",
                    "line_number": 474
                  },
                  {
                    "type": "if",
                    "line_number": 480
                  },
                  {
                    "type": "if",
                    "line_number": 486
                  },
                  {
                    "type": "if",
                    "line_number": 492
                  },
                  {
                    "type": "if",
                    "line_number": 502
                  },
                  {
                    "type": "if",
                    "line_number": 508
                  },
                  {
                    "type": "if",
                    "line_number": 515
                  },
                  {
                    "type": "if",
                    "line_number": 521
                  },
                  {
                    "type": "if",
                    "line_number": 527
                  },
                  {
                    "type": "if",
                    "line_number": 533
                  },
                  {
                    "type": "if",
                    "line_number": 539
                  },
                  {
                    "type": "if",
                    "line_number": 545
                  },
                  {
                    "type": "if",
                    "line_number": 551
                  },
                  {
                    "type": "if",
                    "line_number": 557
                  },
                  {
                    "type": "if",
                    "line_number": 563
                  },
                  {
                    "type": "if",
                    "line_number": 569
                  },
                  {
                    "type": "if",
                    "line_number": 575
                  },
                  {
                    "type": "if",
                    "line_number": 581
                  },
                  {
                    "type": "if",
                    "line_number": 587
                  },
                  {
                    "type": "if",
                    "line_number": 593
                  },
                  {
                    "type": "if",
                    "line_number": 599
                  },
                  {
                    "type": "if",
                    "line_number": 605
                  },
                  {
                    "type": "if",
                    "line_number": 611
                  },
                  {
                    "type": "if",
                    "line_number": 617
                  },
                  {
                    "type": "if",
                    "line_number": 623
                  },
                  {
                    "type": "if",
                    "line_number": 633
                  }
                ],
                "complexity": 46,
                "inputs": [
                  "line->special"
                ],
                "outputs": [
                  "do something"
                ],
                "dependencies": [
                  "Open",
                  "EV_DoCeiling",
                  "EV_DoLockedDoor",
                  "EV_DoDoor",
                  "EV_BuildStairs",
                  "if",
                  "G_SecretExitLevel",
                  "EV_VerticalDoor",
                  "P_ChangeSwitchTexture",
                  "Close",
                  "EV_LightTurnOn",
                  "EV_SlidingDoor",
                  "G_ExitLevel",
                  "EV_DoDonut",
                  "EV_DoPlat",
                  "Raise",
                  "EV_DoFloor"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "numswitches",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 100
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 109
              },
              {
                "name": "index",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 110
              },
              {
                "name": "episode",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 111
              },
              {
                "name": "value",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 133
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 161
              },
              {
                "name": "texTop",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 205
              },
              {
                "name": "texMid",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 206
              },
              {
                "name": "texBot",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 207
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 208
              },
              {
                "name": "sound",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 209
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 294
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 305
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 316
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 652
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/p_switch.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "p_telept.c",
          "type": "file",
          "size": 2721,
          "last_modified": "2024-09-05T16:00:04.773969",
          "path": "linuxdoom-1.10/p_telept.c",
          "readme": "# p_telept.c\n\nThis file contains functionality related to p_telept.",
          "dependencies": [
            "p_local.h",
            "sounds.h",
            "r_state.h",
            "s_sound.h",
            "doomdef.h"
          ],
          "inputs": [
            "side",
            "line",
            "thing"
          ],
          "outputs": [
            "int"
          ],
          "content": {
            "functions": [
              {
                "name": "EV_Teleport",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "line_t*",
                    "name": "line"
                  },
                  {
                    "type": "int",
                    "name": "side"
                  },
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  }
                ],
                "start_line": 47,
                "end_line": 127,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 49
                  },
                  {
                    "type": "int",
                    "name": "tag",
                    "array_size": null,
                    "line_number": 50
                  },
                  {
                    "type": "unsigned",
                    "name": "an",
                    "array_size": null,
                    "line_number": 53
                  },
                  {
                    "type": "fixed_t",
                    "name": "oldx",
                    "array_size": null,
                    "line_number": 56
                  },
                  {
                    "type": "fixed_t",
                    "name": "oldy",
                    "array_size": null,
                    "line_number": 57
                  },
                  {
                    "type": "fixed_t",
                    "name": "oldz",
                    "array_size": null,
                    "line_number": 58
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 62
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 67
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 100
                  },
                  {
                    "type": "return",
                    "name": "1",
                    "array_size": null,
                    "line_number": 122
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 126
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 61
                  },
                  {
                    "name": "if",
                    "line_number": 66
                  },
                  {
                    "name": "for",
                    "line_number": 71
                  },
                  {
                    "name": "if",
                    "line_number": 73
                  },
                  {
                    "name": "for",
                    "line_number": 76
                  },
                  {
                    "name": "if",
                    "line_number": 81
                  },
                  {
                    "name": "if",
                    "line_number": 87
                  },
                  {
                    "name": "if",
                    "line_number": 92
                  },
                  {
                    "name": "if",
                    "line_number": 99
                  },
                  {
                    "name": "P_TeleportMove",
                    "line_number": 99
                  },
                  {
                    "name": "if",
                    "line_number": 103
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 107
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 108
                  },
                  {
                    "name": "P_SpawnMobj",
                    "line_number": 110
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 114
                  },
                  {
                    "name": "if",
                    "line_number": 117
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 61
                  },
                  {
                    "type": "if",
                    "line_number": 64
                  },
                  {
                    "type": "if",
                    "line_number": 66
                  },
                  {
                    "type": "for",
                    "line_number": 71
                  },
                  {
                    "type": "if",
                    "line_number": 73
                  },
                  {
                    "type": "for",
                    "line_number": 76
                  },
                  {
                    "type": "if",
                    "line_number": 81
                  },
                  {
                    "type": "if",
                    "line_number": 87
                  },
                  {
                    "type": "if",
                    "line_number": 92
                  },
                  {
                    "type": "if",
                    "line_number": 99
                  },
                  {
                    "type": "if",
                    "line_number": 103
                  },
                  {
                    "type": "for",
                    "line_number": 116
                  },
                  {
                    "type": "if",
                    "line_number": 117
                  }
                ],
                "complexity": 12,
                "inputs": [
                  "line",
                  "side",
                  "thing"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "for",
                  "if",
                  "P_SpawnMobj",
                  "P_TeleportMove",
                  "S_StartSound"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 53
              },
              {
                "name": "tag",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 54
              },
              {
                "name": "an",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 57
              },
              {
                "name": "oldx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 60
              },
              {
                "name": "oldy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 61
              },
              {
                "name": "oldz",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 62
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 66
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 71
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 104
              },
              {
                "name": "1",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 126
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 130
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/p_telept.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "p_tick.c",
          "type": "file",
          "size": 2969,
          "last_modified": "2024-09-05T16:00:04.798969",
          "path": "linuxdoom-1.10/p_tick.c",
          "readme": "# p_tick.c\n\nThis file contains functionality related to p_tick.",
          "dependencies": [
            "z_zone.h",
            "doomstat.h",
            "p_local.h"
          ],
          "inputs": [
            "void",
            "thinker",
            "1"
          ],
          "outputs": [
            "pause if in menu and at least one tic has been run"
          ],
          "content": {
            "functions": [
              {
                "name": "P_InitThinkers",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 53,
                "end_line": 56,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "P_AddThinker",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "thinker_t*",
                    "name": "thinker"
                  }
                ],
                "start_line": 65,
                "end_line": 71,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "thinker"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "P_RemoveThinker",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "thinker_t*",
                    "name": "thinker"
                  }
                ],
                "start_line": 80,
                "end_line": 84,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "thinker"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "P_AllocateThinker",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "thinker_t*",
                    "name": "thinker"
                  }
                ],
                "start_line": 92,
                "end_line": 94,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "thinker"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "P_RunThinkers",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 101,
                "end_line": 122,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 106
                  },
                  {
                    "name": "if",
                    "line_number": 108
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 113
                  },
                  {
                    "name": "if",
                    "line_number": 117
                  },
                  {
                    "name": "acp1",
                    "line_number": 118
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 106
                  },
                  {
                    "type": "if",
                    "line_number": 108
                  },
                  {
                    "type": "else",
                    "line_number": 115
                  },
                  {
                    "type": "if",
                    "line_number": 117
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "acp1",
                  "Z_Free",
                  "if"
                ]
              },
              {
                "name": "P_Ticker",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 130,
                "end_line": 158,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 132
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 135
                  },
                  {
                    "name": "if",
                    "line_number": 139
                  },
                  {
                    "name": "for",
                    "line_number": 148
                  },
                  {
                    "name": "if",
                    "line_number": 149
                  },
                  {
                    "name": "P_PlayerThink",
                    "line_number": 150
                  },
                  {
                    "name": "P_RunThinkers",
                    "line_number": 152
                  },
                  {
                    "name": "P_UpdateSpecials",
                    "line_number": 153
                  },
                  {
                    "name": "P_RespawnSpecials",
                    "line_number": 154
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 135
                  },
                  {
                    "type": "if",
                    "line_number": 138
                  },
                  {
                    "type": "if",
                    "line_number": 139
                  },
                  {
                    "type": "for",
                    "line_number": 148
                  },
                  {
                    "type": "if",
                    "line_number": 149
                  },
                  {
                    "type": "for",
                    "line_number": 156
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "if",
                  "P_RunThinkers",
                  "P_PlayerThink",
                  "P_RespawnSpecials",
                  "P_UpdateSpecials"
                ]
              },
              {
                "name": "if",
                "return_type": "pause if in menu and at least one tic has been run",
                "parameters": [
                  {
                    "type": "!netgame && menuactive && !demoplayback && players[consoleplayer].viewz !=",
                    "name": "1"
                  }
                ],
                "start_line": 138,
                "end_line": 141,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "1"
                ],
                "outputs": [
                  "pause if in menu and at least one tic has been run"
                ],
                "dependencies": []
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "leveltime",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 34
              },
              {
                "name": "thinkercap",
                "type": "thinker_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 47
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 132
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/p_tick.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "p_tick.h",
          "type": "file",
          "size": 1091,
          "last_modified": "2024-09-05T16:00:04.823969",
          "path": "linuxdoom-1.10/p_tick.h",
          "readme": "# p_tick.h\n\nThis file contains functionality related to p_tick.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/p_tick.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "p_user.c",
          "type": "file",
          "size": 8321,
          "last_modified": "2024-09-05T16:00:04.849489",
          "path": "linuxdoom-1.10/p_user.c",
          "readme": "# p_user.c\n\nThis file contains functionality related to p_user.",
          "dependencies": [
            "d_event.h",
            "doomdef.h",
            "p_local.h",
            "doomstat.h"
          ],
          "inputs": [
            "angle",
            "player->powers[pw_infrared]",
            "PST_LIVE",
            "move",
            "player",
            "BT_USE"
          ],
          "outputs": [
            "move viewheight",
            "check for use",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "P_Thrust",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  },
                  {
                    "type": "angle_t",
                    "name": "angle"
                  },
                  {
                    "type": "fixed_t",
                    "name": "move"
                  }
                ],
                "start_line": 58,
                "end_line": 64,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "FixedMul",
                    "line_number": 62
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 63
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "player",
                  "angle",
                  "move"
                ],
                "outputs": [],
                "dependencies": [
                  "FixedMul"
                ]
              },
              {
                "name": "P_CalcHeight",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  }
                ],
                "start_line": 77,
                "end_line": 141,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 79
                  },
                  {
                    "type": "fixed_t",
                    "name": "bob",
                    "array_size": null,
                    "line_number": 80
                  }
                ],
                "function_calls": [
                  {
                    "name": "FixedMul",
                    "line_number": 89
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 90
                  },
                  {
                    "name": "if",
                    "line_number": 94
                  },
                  {
                    "name": "if",
                    "line_number": 97
                  },
                  {
                    "name": "if",
                    "line_number": 101
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 109
                  },
                  {
                    "name": "if",
                    "line_number": 113
                  },
                  {
                    "name": "if",
                    "line_number": 117
                  },
                  {
                    "name": "if",
                    "line_number": 123
                  },
                  {
                    "name": "if",
                    "line_number": 126
                  },
                  {
                    "name": "if",
                    "line_number": 130
                  },
                  {
                    "name": "if",
                    "line_number": 133
                  },
                  {
                    "name": "if",
                    "line_number": 139
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 83
                  },
                  {
                    "type": "if",
                    "line_number": 84
                  },
                  {
                    "type": "for",
                    "line_number": 86
                  },
                  {
                    "type": "if",
                    "line_number": 94
                  },
                  {
                    "type": "if",
                    "line_number": 97
                  },
                  {
                    "type": "if",
                    "line_number": 101
                  },
                  {
                    "type": "if",
                    "line_number": 113
                  },
                  {
                    "type": "if",
                    "line_number": 117
                  },
                  {
                    "type": "if",
                    "line_number": 123
                  },
                  {
                    "type": "if",
                    "line_number": 126
                  },
                  {
                    "type": "if",
                    "line_number": 130
                  },
                  {
                    "type": "if",
                    "line_number": 133
                  },
                  {
                    "type": "if",
                    "line_number": 139
                  }
                ],
                "complexity": 11,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "FixedMul",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "move viewheight",
                "parameters": [
                  {
                    "type": "player->playerstate ==",
                    "name": "PST_LIVE"
                  }
                ],
                "start_line": 112,
                "end_line": 135,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 116
                  },
                  {
                    "name": "if",
                    "line_number": 122
                  },
                  {
                    "name": "if",
                    "line_number": 125
                  },
                  {
                    "name": "if",
                    "line_number": 129
                  },
                  {
                    "name": "if",
                    "line_number": 132
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 116
                  },
                  {
                    "type": "if",
                    "line_number": 122
                  },
                  {
                    "type": "if",
                    "line_number": 125
                  },
                  {
                    "type": "if",
                    "line_number": 129
                  },
                  {
                    "type": "if",
                    "line_number": 132
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "PST_LIVE"
                ],
                "outputs": [
                  "move viewheight"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "P_MovePlayer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  }
                ],
                "start_line": 148,
                "end_line": 171,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 160
                  },
                  {
                    "name": "P_Thrust",
                    "line_number": 161
                  },
                  {
                    "name": "if",
                    "line_number": 163
                  },
                  {
                    "name": "P_Thrust",
                    "line_number": 164
                  },
                  {
                    "name": "if",
                    "line_number": 166
                  },
                  {
                    "name": "P_SetMobjState",
                    "line_number": 169
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 157
                  },
                  {
                    "type": "if",
                    "line_number": 160
                  },
                  {
                    "type": "if",
                    "line_number": 163
                  },
                  {
                    "type": "if",
                    "line_number": 166
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "P_SetMobjState",
                  "P_Thrust",
                  "if"
                ]
              },
              {
                "name": "P_DeathThink",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  }
                ],
                "start_line": 182,
                "end_line": 229,
                "local_variables": [
                  {
                    "type": "angle_t",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 184
                  },
                  {
                    "type": "angle_t",
                    "name": "delta",
                    "array_size": null,
                    "line_number": 185
                  }
                ],
                "function_calls": [
                  {
                    "name": "P_MovePsprites",
                    "line_number": 187
                  },
                  {
                    "name": "if",
                    "line_number": 190
                  },
                  {
                    "name": "if",
                    "line_number": 193
                  },
                  {
                    "name": "P_CalcHeight",
                    "line_number": 198
                  },
                  {
                    "name": "if",
                    "line_number": 200
                  },
                  {
                    "name": "R_PointToAngle2",
                    "line_number": 202
                  },
                  {
                    "name": "if",
                    "line_number": 209
                  },
                  {
                    "name": "if",
                    "line_number": 215
                  },
                  {
                    "name": "if",
                    "line_number": 218
                  },
                  {
                    "name": "if",
                    "line_number": 223
                  },
                  {
                    "name": "if",
                    "line_number": 227
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 190
                  },
                  {
                    "type": "if",
                    "line_number": 193
                  },
                  {
                    "type": "if",
                    "line_number": 200
                  },
                  {
                    "type": "if",
                    "line_number": 209
                  },
                  {
                    "type": "if",
                    "line_number": 215
                  },
                  {
                    "type": "if",
                    "line_number": 218
                  },
                  {
                    "type": "else",
                    "line_number": 220
                  },
                  {
                    "type": "if",
                    "line_number": 223
                  },
                  {
                    "type": "if",
                    "line_number": 227
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "P_MovePsprites",
                  "R_PointToAngle2",
                  "P_CalcHeight",
                  "if"
                ]
              },
              {
                "name": "P_PlayerThink",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  }
                ],
                "start_line": 236,
                "end_line": 384,
                "local_variables": [
                  {
                    "type": "weapontype_t",
                    "name": "newweapon",
                    "array_size": null,
                    "line_number": 239
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 242
                  },
                  {
                    "name": "if",
                    "line_number": 249
                  },
                  {
                    "name": "if",
                    "line_number": 258
                  },
                  {
                    "name": "P_DeathThink",
                    "line_number": 260
                  },
                  {
                    "name": "if",
                    "line_number": 267
                  },
                  {
                    "name": "P_MovePlayer",
                    "line_number": 270
                  },
                  {
                    "name": "P_CalcHeight",
                    "line_number": 272
                  },
                  {
                    "name": "if",
                    "line_number": 274
                  },
                  {
                    "name": "P_PlayerInSpecialSector",
                    "line_number": 275
                  },
                  {
                    "name": "if",
                    "line_number": 280
                  },
                  {
                    "name": "if",
                    "line_number": 283
                  },
                  {
                    "name": "if",
                    "line_number": 290
                  },
                  {
                    "name": "if",
                    "line_number": 298
                  },
                  {
                    "name": "if",
                    "line_number": 307
                  },
                  {
                    "name": "if",
                    "line_number": 312
                  },
                  {
                    "name": "if",
                    "line_number": 322
                  },
                  {
                    "name": "if",
                    "line_number": 324
                  },
                  {
                    "name": "P_UseLines",
                    "line_number": 326
                  },
                  {
                    "name": "P_MovePsprites",
                    "line_number": 334
                  },
                  {
                    "name": "if",
                    "line_number": 339
                  },
                  {
                    "name": "if",
                    "line_number": 342
                  },
                  {
                    "name": "if",
                    "line_number": 345
                  },
                  {
                    "name": "if",
                    "line_number": 346
                  },
                  {
                    "name": "if",
                    "line_number": 349
                  },
                  {
                    "name": "if",
                    "line_number": 352
                  },
                  {
                    "name": "if",
                    "line_number": 355
                  },
                  {
                    "name": "if",
                    "line_number": 358
                  },
                  {
                    "name": "if",
                    "line_number": 363
                  },
                  {
                    "name": "if",
                    "line_number": 365
                  },
                  {
                    "name": "if",
                    "line_number": 371
                  },
                  {
                    "name": "if",
                    "line_number": 373
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 242
                  },
                  {
                    "type": "else",
                    "line_number": 244
                  },
                  {
                    "type": "if",
                    "line_number": 249
                  },
                  {
                    "type": "if",
                    "line_number": 258
                  },
                  {
                    "type": "for",
                    "line_number": 266
                  },
                  {
                    "type": "if",
                    "line_number": 267
                  },
                  {
                    "type": "else",
                    "line_number": 269
                  },
                  {
                    "type": "if",
                    "line_number": 274
                  },
                  {
                    "type": "for",
                    "line_number": 277
                  },
                  {
                    "type": "if",
                    "line_number": 280
                  },
                  {
                    "type": "if",
                    "line_number": 283
                  },
                  {
                    "type": "if",
                    "line_number": 290
                  },
                  {
                    "type": "if",
                    "line_number": 298
                  },
                  {
                    "type": "if",
                    "line_number": 307
                  },
                  {
                    "type": "if",
                    "line_number": 311
                  },
                  {
                    "type": "if",
                    "line_number": 312
                  },
                  {
                    "type": "for",
                    "line_number": 321
                  },
                  {
                    "type": "if",
                    "line_number": 322
                  },
                  {
                    "type": "if",
                    "line_number": 324
                  },
                  {
                    "type": "else",
                    "line_number": 330
                  },
                  {
                    "type": "if",
                    "line_number": 339
                  },
                  {
                    "type": "if",
                    "line_number": 342
                  },
                  {
                    "type": "if",
                    "line_number": 345
                  },
                  {
                    "type": "if",
                    "line_number": 346
                  },
                  {
                    "type": "if",
                    "line_number": 349
                  },
                  {
                    "type": "if",
                    "line_number": 352
                  },
                  {
                    "type": "if",
                    "line_number": 355
                  },
                  {
                    "type": "if",
                    "line_number": 358
                  },
                  {
                    "type": "if",
                    "line_number": 363
                  },
                  {
                    "type": "if",
                    "line_number": 365
                  },
                  {
                    "type": "else",
                    "line_number": 368
                  },
                  {
                    "type": "if",
                    "line_number": 371
                  },
                  {
                    "type": "if",
                    "line_number": 373
                  },
                  {
                    "type": "else",
                    "line_number": 379
                  },
                  {
                    "type": "else",
                    "line_number": 382
                  }
                ],
                "complexity": 36,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "P_MovePlayer",
                  "P_CalcHeight",
                  "P_DeathThink",
                  "if",
                  "P_PlayerInSpecialSector",
                  "P_UseLines",
                  "P_MovePsprites"
                ]
              },
              {
                "name": "if",
                "return_type": "check for use",
                "parameters": [
                  {
                    "type": "cmd->buttons &",
                    "name": "BT_USE"
                  }
                ],
                "start_line": 321,
                "end_line": 328,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 323
                  },
                  {
                    "name": "P_UseLines",
                    "line_number": 325
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 323
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "BT_USE"
                ],
                "outputs": [
                  "check for use"
                ],
                "dependencies": [
                  "P_UseLines",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "",
                    "name": "player->powers[pw_infrared]"
                  }
                ],
                "start_line": 371,
                "end_line": 381,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 373
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 373
                  },
                  {
                    "type": "else",
                    "line_number": 379
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "player->powers[pw_infrared]"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "if"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "onground",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 51
              },
              {
                "name": "angle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 79
              },
              {
                "name": "bob",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 80
              },
              {
                "name": "angle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 184
              },
              {
                "name": "delta",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 185
              },
              {
                "name": "newweapon",
                "type": "weapontype_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 239
              }
            ],
            "defines": [
              {
                "name": "INVERSECOLORMAP",
                "value": "32",
                "line_number": 41
              },
              {
                "name": "MAXBOB",
                "value": "0x100000",
                "line_number": 49
              },
              {
                "name": "ANG5",
                "value": "(ANG90/18)",
                "line_number": 180
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/p_user.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "Functions with high cyclomatic complexity"
          ]
        },
        {
          "name": "r_bsp.c",
          "type": "file",
          "size": 11197,
          "last_modified": "2024-09-05T16:00:04.877520",
          "path": "linuxdoom-1.10/r_bsp.c",
          "readme": "# r_bsp.c\n\nThis file contains functionality related to r_bsp.",
          "dependencies": [
            "r_plane.h",
            "m_bbox.h",
            "r_local.h",
            "r_state.h",
            "i_system.h",
            "r_things.h",
            "doomstat.h",
            "doomdef.h",
            "r_main.h"
          ],
          "inputs": [
            "last",
            "first",
            "line",
            "bspcoord",
            "void",
            "num",
            "bspnum"
          ],
          "outputs": [
            "boolean"
          ],
          "content": {
            "functions": [
              {
                "name": "R_ClearDrawSegs",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 68,
                "end_line": 71,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "R_ClipSolidWallSegment",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "first"
                  },
                  {
                    "type": "int",
                    "name": "last"
                  }
                ],
                "start_line": 103,
                "end_line": 182,
                "local_variables": [
                  {
                    "type": "goto",
                    "name": "crunch",
                    "array_size": null,
                    "line_number": 156
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 111
                  },
                  {
                    "name": "if",
                    "line_number": 114
                  },
                  {
                    "name": "if",
                    "line_number": 116
                  },
                  {
                    "name": "visible",
                    "line_number": 118
                  },
                  {
                    "name": "R_StoreWallRange",
                    "line_number": 120
                  },
                  {
                    "name": "while",
                    "line_number": 124
                  },
                  {
                    "name": "R_StoreWallRange",
                    "line_number": 135
                  },
                  {
                    "name": "if",
                    "line_number": 141
                  },
                  {
                    "name": "while",
                    "line_number": 145
                  },
                  {
                    "name": "R_StoreWallRange",
                    "line_number": 148
                  },
                  {
                    "name": "if",
                    "line_number": 151
                  },
                  {
                    "name": "R_StoreWallRange",
                    "line_number": 161
                  },
                  {
                    "name": "if",
                    "line_number": 168
                  },
                  {
                    "name": "while",
                    "line_number": 175
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 111
                  },
                  {
                    "type": "if",
                    "line_number": 114
                  },
                  {
                    "type": "if",
                    "line_number": 116
                  },
                  {
                    "type": "while",
                    "line_number": 124
                  },
                  {
                    "type": "if",
                    "line_number": 141
                  },
                  {
                    "type": "while",
                    "line_number": 145
                  },
                  {
                    "type": "if",
                    "line_number": 151
                  },
                  {
                    "type": "if",
                    "line_number": 168
                  },
                  {
                    "type": "while",
                    "line_number": 175
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "first",
                  "last"
                ],
                "outputs": [],
                "dependencies": [
                  "visible",
                  "while",
                  "R_StoreWallRange",
                  "if"
                ]
              },
              {
                "name": "R_ClipPassWallSegment",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "first"
                  },
                  {
                    "type": "int",
                    "name": "last"
                  }
                ],
                "start_line": 196,
                "end_line": 235,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 203
                  },
                  {
                    "name": "if",
                    "line_number": 206
                  },
                  {
                    "name": "if",
                    "line_number": 208
                  },
                  {
                    "name": "visible",
                    "line_number": 210
                  },
                  {
                    "name": "R_StoreWallRange",
                    "line_number": 211
                  },
                  {
                    "name": "R_StoreWallRange",
                    "line_number": 216
                  },
                  {
                    "name": "if",
                    "line_number": 220
                  },
                  {
                    "name": "while",
                    "line_number": 223
                  },
                  {
                    "name": "R_StoreWallRange",
                    "line_number": 226
                  },
                  {
                    "name": "if",
                    "line_number": 229
                  },
                  {
                    "name": "R_StoreWallRange",
                    "line_number": 234
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 203
                  },
                  {
                    "type": "if",
                    "line_number": 206
                  },
                  {
                    "type": "if",
                    "line_number": 208
                  },
                  {
                    "type": "if",
                    "line_number": 220
                  },
                  {
                    "type": "while",
                    "line_number": 223
                  },
                  {
                    "type": "if",
                    "line_number": 229
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "first",
                  "last"
                ],
                "outputs": [],
                "dependencies": [
                  "visible",
                  "while",
                  "R_StoreWallRange",
                  "if"
                ]
              },
              {
                "name": "R_ClearClipSegs",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 245,
                "end_line": 252,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "R_AddLine",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "seg_t*",
                    "name": "line"
                  }
                ],
                "start_line": 259,
                "end_line": 356,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "x1",
                    "array_size": null,
                    "line_number": 261
                  },
                  {
                    "type": "int",
                    "name": "x2",
                    "array_size": null,
                    "line_number": 262
                  },
                  {
                    "type": "angle_t",
                    "name": "angle1",
                    "array_size": null,
                    "line_number": 263
                  },
                  {
                    "type": "angle_t",
                    "name": "angle2",
                    "array_size": null,
                    "line_number": 264
                  },
                  {
                    "type": "angle_t",
                    "name": "span",
                    "array_size": null,
                    "line_number": 265
                  },
                  {
                    "type": "angle_t",
                    "name": "tspan",
                    "array_size": null,
                    "line_number": 266
                  },
                  {
                    "type": "goto",
                    "name": "clipsolid",
                    "array_size": null,
                    "line_number": 324
                  },
                  {
                    "type": "goto",
                    "name": "clipsolid",
                    "array_size": null,
                    "line_number": 329
                  },
                  {
                    "type": "goto",
                    "name": "clippass",
                    "array_size": null,
                    "line_number": 334
                  }
                ],
                "function_calls": [
                  {
                    "name": "R_PointToAngle",
                    "line_number": 271
                  },
                  {
                    "name": "R_PointToAngle",
                    "line_number": 272
                  },
                  {
                    "name": "clipangle",
                    "line_number": 275
                  },
                  {
                    "name": "if",
                    "line_number": 279
                  },
                  {
                    "name": "if",
                    "line_number": 288
                  },
                  {
                    "name": "if",
                    "line_number": 293
                  },
                  {
                    "name": "if",
                    "line_number": 299
                  },
                  {
                    "name": "if",
                    "line_number": 304
                  },
                  {
                    "name": "if",
                    "line_number": 317
                  },
                  {
                    "name": "if",
                    "line_number": 323
                  },
                  {
                    "name": "if",
                    "line_number": 327
                  },
                  {
                    "name": "if",
                    "line_number": 332
                  },
                  {
                    "name": "if",
                    "line_number": 341
                  },
                  {
                    "name": "R_ClipPassWallSegment",
                    "line_number": 351
                  },
                  {
                    "name": "R_ClipSolidWallSegment",
                    "line_number": 355
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 279
                  },
                  {
                    "type": "if",
                    "line_number": 288
                  },
                  {
                    "type": "if",
                    "line_number": 293
                  },
                  {
                    "type": "if",
                    "line_number": 299
                  },
                  {
                    "type": "if",
                    "line_number": 304
                  },
                  {
                    "type": "if",
                    "line_number": 317
                  },
                  {
                    "type": "if",
                    "line_number": 323
                  },
                  {
                    "type": "if",
                    "line_number": 327
                  },
                  {
                    "type": "if",
                    "line_number": 332
                  },
                  {
                    "type": "for",
                    "line_number": 336
                  },
                  {
                    "type": "if",
                    "line_number": 341
                  }
                ],
                "complexity": 16,
                "inputs": [
                  "line"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "R_ClipPassWallSegment",
                  "R_PointToAngle",
                  "clipangle",
                  "R_ClipSolidWallSegment"
                ]
              },
              {
                "name": "R_CheckBBox",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "fixed_t*",
                    "name": "bspcoord"
                  }
                ],
                "start_line": 381,
                "end_line": 487,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "boxx",
                    "array_size": null,
                    "line_number": 383
                  },
                  {
                    "type": "int",
                    "name": "boxy",
                    "array_size": null,
                    "line_number": 384
                  },
                  {
                    "type": "int",
                    "name": "boxpos",
                    "array_size": null,
                    "line_number": 385
                  },
                  {
                    "type": "fixed_t",
                    "name": "x1",
                    "array_size": null,
                    "line_number": 387
                  },
                  {
                    "type": "fixed_t",
                    "name": "y1",
                    "array_size": null,
                    "line_number": 388
                  },
                  {
                    "type": "fixed_t",
                    "name": "x2",
                    "array_size": null,
                    "line_number": 389
                  },
                  {
                    "type": "fixed_t",
                    "name": "y2",
                    "array_size": null,
                    "line_number": 390
                  },
                  {
                    "type": "angle_t",
                    "name": "angle1",
                    "array_size": null,
                    "line_number": 392
                  },
                  {
                    "type": "angle_t",
                    "name": "angle2",
                    "array_size": null,
                    "line_number": 393
                  },
                  {
                    "type": "angle_t",
                    "name": "span",
                    "array_size": null,
                    "line_number": 394
                  },
                  {
                    "type": "angle_t",
                    "name": "tspan",
                    "array_size": null,
                    "line_number": 395
                  },
                  {
                    "type": "int",
                    "name": "sx1",
                    "array_size": null,
                    "line_number": 399
                  },
                  {
                    "type": "int",
                    "name": "sx2",
                    "array_size": null,
                    "line_number": 400
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 420
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 435
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 445
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 456
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 472
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 483
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 486
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 404
                  },
                  {
                    "name": "if",
                    "line_number": 406
                  },
                  {
                    "name": "if",
                    "line_number": 411
                  },
                  {
                    "name": "if",
                    "line_number": 413
                  },
                  {
                    "name": "if",
                    "line_number": 419
                  },
                  {
                    "name": "R_PointToAngle",
                    "line_number": 428
                  },
                  {
                    "name": "R_PointToAngle",
                    "line_number": 429
                  },
                  {
                    "name": "if",
                    "line_number": 434
                  },
                  {
                    "name": "if",
                    "line_number": 439
                  },
                  {
                    "name": "if",
                    "line_number": 444
                  },
                  {
                    "name": "if",
                    "line_number": 450
                  },
                  {
                    "name": "if",
                    "line_number": 455
                  },
                  {
                    "name": "if",
                    "line_number": 471
                  },
                  {
                    "name": "while",
                    "line_number": 476
                  },
                  {
                    "name": "if",
                    "line_number": 479
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 404
                  },
                  {
                    "type": "if",
                    "line_number": 406
                  },
                  {
                    "type": "else",
                    "line_number": 408
                  },
                  {
                    "type": "if",
                    "line_number": 411
                  },
                  {
                    "type": "if",
                    "line_number": 413
                  },
                  {
                    "type": "else",
                    "line_number": 415
                  },
                  {
                    "type": "if",
                    "line_number": 419
                  },
                  {
                    "type": "for",
                    "line_number": 427
                  },
                  {
                    "type": "if",
                    "line_number": 434
                  },
                  {
                    "type": "if",
                    "line_number": 439
                  },
                  {
                    "type": "if",
                    "line_number": 444
                  },
                  {
                    "type": "if",
                    "line_number": 450
                  },
                  {
                    "type": "if",
                    "line_number": 455
                  },
                  {
                    "type": "if",
                    "line_number": 471
                  },
                  {
                    "type": "while",
                    "line_number": 476
                  },
                  {
                    "type": "if",
                    "line_number": 479
                  }
                ],
                "complexity": 13,
                "inputs": [
                  "bspcoord"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "while",
                  "R_PointToAngle",
                  "if"
                ]
              },
              {
                "name": "R_Subsector",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "num"
                  }
                ],
                "start_line": 497,
                "end_line": 542,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 499
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 504
                  },
                  {
                    "name": "I_Error",
                    "line_number": 505
                  },
                  {
                    "name": "if",
                    "line_number": 516
                  },
                  {
                    "name": "R_FindPlane",
                    "line_number": 518
                  },
                  {
                    "name": "if",
                    "line_number": 525
                  },
                  {
                    "name": "R_FindPlane",
                    "line_number": 528
                  },
                  {
                    "name": "R_AddSprites",
                    "line_number": 535
                  },
                  {
                    "name": "while",
                    "line_number": 537
                  },
                  {
                    "name": "R_AddLine",
                    "line_number": 539
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 504
                  },
                  {
                    "type": "if",
                    "line_number": 516
                  },
                  {
                    "type": "else",
                    "line_number": 522
                  },
                  {
                    "type": "if",
                    "line_number": 525
                  },
                  {
                    "type": "else",
                    "line_number": 532
                  },
                  {
                    "type": "while",
                    "line_number": 537
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "num"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "R_FindPlane",
                  "R_AddSprites",
                  "if",
                  "R_AddLine",
                  "I_Error"
                ]
              },
              {
                "name": "R_RenderBSPNode",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "bspnum"
                  }
                ],
                "start_line": 552,
                "end_line": 578,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "side",
                    "array_size": null,
                    "line_number": 555
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 558
                  },
                  {
                    "name": "if",
                    "line_number": 560
                  },
                  {
                    "name": "R_Subsector",
                    "line_number": 561
                  },
                  {
                    "name": "R_Subsector",
                    "line_number": 563
                  },
                  {
                    "name": "R_PointOnSide",
                    "line_number": 570
                  },
                  {
                    "name": "R_RenderBSPNode",
                    "line_number": 573
                  },
                  {
                    "name": "if",
                    "line_number": 576
                  },
                  {
                    "name": "R_CheckBBox",
                    "line_number": 576
                  },
                  {
                    "name": "R_RenderBSPNode",
                    "line_number": 577
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 558
                  },
                  {
                    "type": "if",
                    "line_number": 560
                  },
                  {
                    "type": "else",
                    "line_number": 562
                  },
                  {
                    "type": "if",
                    "line_number": 576
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "bspnum"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "R_Subsector",
                  "R_CheckBBox",
                  "R_RenderBSPNode",
                  "R_PointOnSide"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "first",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 82
              },
              {
                "name": "last",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 83
              },
              {
                "name": "crunch",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 159
              },
              {
                "name": "x1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 261
              },
              {
                "name": "x2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 262
              },
              {
                "name": "angle1",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 263
              },
              {
                "name": "angle2",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 264
              },
              {
                "name": "span",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 265
              },
              {
                "name": "tspan",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 266
              },
              {
                "name": "clipsolid",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 324
              },
              {
                "name": "clipsolid",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 329
              },
              {
                "name": "clippass",
                "type": "goto",
                "storage_class": null,
                "array_size": null,
                "line_number": 334
              },
              {
                "name": "boxx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 383
              },
              {
                "name": "boxy",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 384
              },
              {
                "name": "boxpos",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 385
              },
              {
                "name": "x1",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 387
              },
              {
                "name": "y1",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 388
              },
              {
                "name": "x2",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 389
              },
              {
                "name": "y2",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 390
              },
              {
                "name": "angle1",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 392
              },
              {
                "name": "angle2",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 393
              },
              {
                "name": "span",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 394
              },
              {
                "name": "tspan",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 395
              },
              {
                "name": "sx1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 399
              },
              {
                "name": "sx2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 400
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 420
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 435
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 445
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 456
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 472
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 483
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 486
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 499
              },
              {
                "name": "side",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 555
              }
            ],
            "defines": [
              {
                "name": "MAXSEGS",
                "value": "32",
                "line_number": 88
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/r_bsp.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "r_bsp.h",
          "type": "file",
          "size": 1663,
          "last_modified": "2024-09-05T16:00:04.900739",
          "path": "linuxdoom-1.10/r_bsp.h",
          "readme": "# r_bsp.h\n\nThis file contains functionality related to r_bsp.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "rw_x",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 37
              },
              {
                "name": "rw_stopx",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 38
              },
              {
                "name": "segtextured",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 40
              },
              {
                "name": "markfloor",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 43
              },
              {
                "name": "markceiling",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 44
              },
              {
                "name": "skymap",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 46
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/r_bsp.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "r_data.c",
          "type": "file",
          "size": 18065,
          "last_modified": "2024-09-05T16:00:04.925739",
          "path": "linuxdoom-1.10/r_data.c",
          "readme": "# r_data.c\n\nThis file contains functionality related to r_data.",
          "dependencies": [
            "w_wad.h",
            "r_sky.h",
            "p_local.h",
            "alloca.h",
            "m_swap.h",
            "r_local.h",
            "z_zone.h",
            "i_system.h",
            "doomstat.h",
            "doomdef.h",
            "r_data.h"
          ],
          "inputs": [
            "originy",
            "texnum",
            "cacheheight",
            "name",
            "cache",
            "void",
            "patch",
            "*name"
          ],
          "outputs": [
            "int"
          ],
          "content": {
            "functions": [
              {
                "name": "R_DrawColumnInCache",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "column_t*",
                    "name": "patch"
                  },
                  {
                    "type": "byte*",
                    "name": "cache"
                  },
                  {
                    "type": "int",
                    "name": "originy"
                  },
                  {
                    "type": "int",
                    "name": "cacheheight"
                  }
                ],
                "start_line": 184,
                "end_line": 213,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 186
                  },
                  {
                    "type": "int",
                    "name": "position",
                    "array_size": null,
                    "line_number": 187
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 193
                  },
                  {
                    "name": "if",
                    "line_number": 199
                  },
                  {
                    "name": "if",
                    "line_number": 205
                  },
                  {
                    "name": "if",
                    "line_number": 208
                  },
                  {
                    "name": "memcpy",
                    "line_number": 209
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 193
                  },
                  {
                    "type": "if",
                    "line_number": 199
                  },
                  {
                    "type": "if",
                    "line_number": 205
                  },
                  {
                    "type": "if",
                    "line_number": 208
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "patch",
                  "cache",
                  "originy",
                  "cacheheight"
                ],
                "outputs": [],
                "dependencies": [
                  "memcpy",
                  "while",
                  "if"
                ]
              },
              {
                "name": "R_GenerateComposite",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "texnum"
                  }
                ],
                "start_line": 228,
                "end_line": 289,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 234
                  },
                  {
                    "type": "int",
                    "name": "x1",
                    "array_size": null,
                    "line_number": 235
                  },
                  {
                    "type": "int",
                    "name": "x2",
                    "array_size": null,
                    "line_number": 236
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 237
                  }
                ],
                "function_calls": [
                  {
                    "name": "Z_Malloc",
                    "line_number": 244
                  },
                  {
                    "name": "for",
                    "line_number": 254
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 258
                  },
                  {
                    "name": "SHORT",
                    "line_number": 260
                  },
                  {
                    "name": "if",
                    "line_number": 262
                  },
                  {
                    "name": "if",
                    "line_number": 267
                  },
                  {
                    "name": "for",
                    "line_number": 270
                  },
                  {
                    "name": "if",
                    "line_number": 273
                  },
                  {
                    "name": "LONG",
                    "line_number": 277
                  },
                  {
                    "name": "R_DrawColumnInCache",
                    "line_number": 278
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 288
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 254
                  },
                  {
                    "type": "if",
                    "line_number": 262
                  },
                  {
                    "type": "else",
                    "line_number": 264
                  },
                  {
                    "type": "if",
                    "line_number": 267
                  },
                  {
                    "type": "for",
                    "line_number": 270
                  },
                  {
                    "type": "if",
                    "line_number": 273
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "texnum"
                ],
                "outputs": [],
                "dependencies": [
                  "R_DrawColumnInCache",
                  "Z_Malloc",
                  "if",
                  "for",
                  "W_CacheLumpNum",
                  "Z_ChangeTag",
                  "LONG",
                  "SHORT"
                ]
              },
              {
                "name": "R_GenerateLookup",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "texnum"
                  }
                ],
                "start_line": 296,
                "end_line": 374,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 302
                  },
                  {
                    "type": "int",
                    "name": "x1",
                    "array_size": null,
                    "line_number": 303
                  },
                  {
                    "type": "int",
                    "name": "x2",
                    "array_size": null,
                    "line_number": 304
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 305
                  }
                ],
                "function_calls": [
                  {
                    "name": "alloca",
                    "line_number": 322
                  },
                  {
                    "name": "memset",
                    "line_number": 323
                  },
                  {
                    "name": "for",
                    "line_number": 326
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 330
                  },
                  {
                    "name": "SHORT",
                    "line_number": 332
                  },
                  {
                    "name": "if",
                    "line_number": 334
                  },
                  {
                    "name": "if",
                    "line_number": 339
                  },
                  {
                    "name": "for",
                    "line_number": 341
                  },
                  {
                    "name": "LONG",
                    "line_number": 345
                  },
                  {
                    "name": "for",
                    "line_number": 349
                  },
                  {
                    "name": "if",
                    "line_number": 351
                  },
                  {
                    "name": "printf",
                    "line_number": 353
                  },
                  {
                    "name": "patch",
                    "line_number": 353
                  },
                  {
                    "name": "I_Error",
                    "line_number": 357
                  },
                  {
                    "name": "if",
                    "line_number": 359
                  },
                  {
                    "name": "if",
                    "line_number": 365
                  },
                  {
                    "name": "I_Error",
                    "line_number": 367
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 326
                  },
                  {
                    "type": "if",
                    "line_number": 334
                  },
                  {
                    "type": "else",
                    "line_number": 336
                  },
                  {
                    "type": "if",
                    "line_number": 339
                  },
                  {
                    "type": "for",
                    "line_number": 341
                  },
                  {
                    "type": "for",
                    "line_number": 349
                  },
                  {
                    "type": "if",
                    "line_number": 351
                  },
                  {
                    "type": "if",
                    "line_number": 359
                  },
                  {
                    "type": "if",
                    "line_number": 365
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "texnum"
                ],
                "outputs": [],
                "dependencies": [
                  "alloca",
                  "for",
                  "if",
                  "memset",
                  "I_Error",
                  "W_CacheLumpNum",
                  "LONG",
                  "printf",
                  "SHORT",
                  "patch"
                ]
              },
              {
                "name": "R_InitTextures",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 411,
                "end_line": 574,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 418
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 419
                  },
                  {
                    "type": "char",
                    "name": "name",
                    "array_size": "9",
                    "line_number": 425
                  },
                  {
                    "type": "int",
                    "name": "totalwidth",
                    "array_size": null,
                    "line_number": 431
                  },
                  {
                    "type": "int",
                    "name": "nummappatches",
                    "array_size": null,
                    "line_number": 432
                  },
                  {
                    "type": "int",
                    "name": "offset",
                    "array_size": null,
                    "line_number": 433
                  },
                  {
                    "type": "int",
                    "name": "maxoff",
                    "array_size": null,
                    "line_number": 434
                  },
                  {
                    "type": "int",
                    "name": "maxoff2",
                    "array_size": null,
                    "line_number": 435
                  },
                  {
                    "type": "int",
                    "name": "numtextures1",
                    "array_size": null,
                    "line_number": 436
                  },
                  {
                    "type": "int",
                    "name": "numtextures2",
                    "array_size": null,
                    "line_number": 437
                  },
                  {
                    "type": "int",
                    "name": "temp1",
                    "array_size": null,
                    "line_number": 441
                  },
                  {
                    "type": "int",
                    "name": "temp2",
                    "array_size": null,
                    "line_number": 442
                  },
                  {
                    "type": "int",
                    "name": "temp3",
                    "array_size": null,
                    "line_number": 443
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 448
                  },
                  {
                    "name": "LONG",
                    "line_number": 449
                  },
                  {
                    "name": "alloca",
                    "line_number": 451
                  },
                  {
                    "name": "sizeof",
                    "line_number": 451
                  },
                  {
                    "name": "for",
                    "line_number": 453
                  },
                  {
                    "name": "strncpy",
                    "line_number": 455
                  },
                  {
                    "name": "W_CheckNumForName",
                    "line_number": 456
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 458
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 463
                  },
                  {
                    "name": "LONG",
                    "line_number": 464
                  },
                  {
                    "name": "W_LumpLength",
                    "line_number": 465
                  },
                  {
                    "name": "W_GetNumForName",
                    "line_number": 465
                  },
                  {
                    "name": "if",
                    "line_number": 468
                  },
                  {
                    "name": "W_CheckNumForName",
                    "line_number": 468
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 470
                  },
                  {
                    "name": "LONG",
                    "line_number": 471
                  },
                  {
                    "name": "W_LumpLength",
                    "line_number": 472
                  },
                  {
                    "name": "W_GetNumForName",
                    "line_number": 472
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 482
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 483
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 484
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 485
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 486
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 487
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 488
                  },
                  {
                    "name": "W_GetNumForName",
                    "line_number": 493
                  },
                  {
                    "name": "W_GetNumForName",
                    "line_number": 494
                  },
                  {
                    "name": "printf",
                    "line_number": 496
                  },
                  {
                    "name": "for",
                    "line_number": 497
                  },
                  {
                    "name": "printf",
                    "line_number": 498
                  },
                  {
                    "name": "printf",
                    "line_number": 499
                  },
                  {
                    "name": "for",
                    "line_number": 500
                  },
                  {
                    "name": "printf",
                    "line_number": 501
                  },
                  {
                    "name": "printf",
                    "line_number": 502
                  },
                  {
                    "name": "for",
                    "line_number": 504
                  },
                  {
                    "name": "if",
                    "line_number": 506
                  },
                  {
                    "name": "printf",
                    "line_number": 507
                  },
                  {
                    "name": "if",
                    "line_number": 509
                  },
                  {
                    "name": "LONG",
                    "line_number": 517
                  },
                  {
                    "name": "if",
                    "line_number": 519
                  },
                  {
                    "name": "I_Error",
                    "line_number": 520
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 525
                  },
                  {
                    "name": "sizeof",
                    "line_number": 525
                  },
                  {
                    "name": "sizeof",
                    "line_number": 526
                  },
                  {
                    "name": "SHORT",
                    "line_number": 526
                  },
                  {
                    "name": "SHORT",
                    "line_number": 529
                  },
                  {
                    "name": "SHORT",
                    "line_number": 530
                  },
                  {
                    "name": "SHORT",
                    "line_number": 531
                  },
                  {
                    "name": "memcpy",
                    "line_number": 533
                  },
                  {
                    "name": "sizeof",
                    "line_number": 533
                  },
                  {
                    "name": "for",
                    "line_number": 537
                  },
                  {
                    "name": "SHORT",
                    "line_number": 539
                  },
                  {
                    "name": "SHORT",
                    "line_number": 540
                  },
                  {
                    "name": "SHORT",
                    "line_number": 541
                  },
                  {
                    "name": "if",
                    "line_number": 542
                  },
                  {
                    "name": "I_Error",
                    "line_number": 544
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 548
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 549
                  },
                  {
                    "name": "while",
                    "line_number": 552
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 561
                  },
                  {
                    "name": "if",
                    "line_number": 562
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 563
                  },
                  {
                    "name": "for",
                    "line_number": 566
                  },
                  {
                    "name": "R_GenerateLookup",
                    "line_number": 567
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 570
                  },
                  {
                    "name": "for",
                    "line_number": 572
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 453
                  },
                  {
                    "type": "for",
                    "line_number": 462
                  },
                  {
                    "type": "if",
                    "line_number": 468
                  },
                  {
                    "type": "else",
                    "line_number": 474
                  },
                  {
                    "type": "for",
                    "line_number": 497
                  },
                  {
                    "type": "for",
                    "line_number": 500
                  },
                  {
                    "type": "for",
                    "line_number": 504
                  },
                  {
                    "type": "if",
                    "line_number": 506
                  },
                  {
                    "type": "if",
                    "line_number": 509
                  },
                  {
                    "type": "if",
                    "line_number": 519
                  },
                  {
                    "type": "for",
                    "line_number": 537
                  },
                  {
                    "type": "if",
                    "line_number": 542
                  },
                  {
                    "type": "while",
                    "line_number": 552
                  },
                  {
                    "type": "if",
                    "line_number": 562
                  },
                  {
                    "type": "for",
                    "line_number": 566
                  },
                  {
                    "type": "for",
                    "line_number": 569
                  },
                  {
                    "type": "for",
                    "line_number": 572
                  }
                ],
                "complexity": 15,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "memcpy",
                  "while",
                  "alloca",
                  "W_CacheLumpName",
                  "strncpy",
                  "Z_Free",
                  "for",
                  "if",
                  "Z_Malloc",
                  "I_Error",
                  "W_CheckNumForName",
                  "sizeof",
                  "LONG",
                  "W_GetNumForName",
                  "printf",
                  "W_LumpLength",
                  "SHORT",
                  "R_GenerateLookup"
                ]
              },
              {
                "name": "R_InitFlats",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 581,
                "end_line": 594,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 583
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_GetNumForName",
                    "line_number": 585
                  },
                  {
                    "name": "W_GetNumForName",
                    "line_number": 586
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 590
                  },
                  {
                    "name": "for",
                    "line_number": 592
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 589
                  },
                  {
                    "type": "for",
                    "line_number": 592
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_GetNumForName",
                  "Z_Malloc",
                  "for"
                ]
              },
              {
                "name": "R_InitSpriteLumps",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 603,
                "end_line": 626,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 605
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_GetNumForName",
                    "line_number": 608
                  },
                  {
                    "name": "W_GetNumForName",
                    "line_number": 609
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 612
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 613
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 614
                  },
                  {
                    "name": "for",
                    "line_number": 616
                  },
                  {
                    "name": "if",
                    "line_number": 618
                  },
                  {
                    "name": "printf",
                    "line_number": 619
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 621
                  },
                  {
                    "name": "SHORT",
                    "line_number": 622
                  },
                  {
                    "name": "SHORT",
                    "line_number": 623
                  },
                  {
                    "name": "SHORT",
                    "line_number": 624
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 616
                  },
                  {
                    "type": "if",
                    "line_number": 618
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "Z_Malloc",
                  "if",
                  "for",
                  "W_CacheLumpNum",
                  "W_GetNumForName",
                  "printf",
                  "SHORT"
                ]
              },
              {
                "name": "R_InitColormaps",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 633,
                "end_line": 644,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "W_GetNumForName",
                    "line_number": 639
                  },
                  {
                    "name": "W_LumpLength",
                    "line_number": 640
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 641
                  },
                  {
                    "name": "W_ReadLump",
                    "line_number": 643
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_LumpLength",
                  "W_GetNumForName",
                  "W_ReadLump",
                  "Z_Malloc"
                ]
              },
              {
                "name": "R_InitData",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 654,
                "end_line": 664,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "R_InitTextures",
                    "line_number": 656
                  },
                  {
                    "name": "printf",
                    "line_number": 657
                  },
                  {
                    "name": "R_InitFlats",
                    "line_number": 658
                  },
                  {
                    "name": "printf",
                    "line_number": 659
                  },
                  {
                    "name": "R_InitSpriteLumps",
                    "line_number": 660
                  },
                  {
                    "name": "printf",
                    "line_number": 661
                  },
                  {
                    "name": "R_InitColormaps",
                    "line_number": 662
                  },
                  {
                    "name": "printf",
                    "line_number": 663
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "R_InitTextures",
                  "R_InitColormaps",
                  "R_InitSpriteLumps",
                  "R_InitFlats",
                  "printf"
                ]
              },
              {
                "name": "R_FlatNumForName",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "name"
                  }
                ],
                "start_line": 672,
                "end_line": 686,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 674
                  },
                  {
                    "type": "char",
                    "name": "namet",
                    "array_size": "9",
                    "line_number": 675
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_CheckNumForName",
                    "line_number": 677
                  },
                  {
                    "name": "if",
                    "line_number": 679
                  },
                  {
                    "name": "memcpy",
                    "line_number": 682
                  },
                  {
                    "name": "I_Error",
                    "line_number": 683
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 679
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "name"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "memcpy",
                  "I_Error",
                  "W_CheckNumForName",
                  "if"
                ]
              },
              {
                "name": "R_CheckTextureNumForName",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "char",
                    "name": "*name"
                  }
                ],
                "start_line": 696,
                "end_line": 709,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 698
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 702
                  },
                  {
                    "type": "return",
                    "name": "i",
                    "array_size": null,
                    "line_number": 706
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 701
                  },
                  {
                    "name": "for",
                    "line_number": 704
                  },
                  {
                    "name": "if",
                    "line_number": 705
                  },
                  {
                    "name": "strncasecmp",
                    "line_number": 705
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 701
                  },
                  {
                    "type": "for",
                    "line_number": 704
                  },
                  {
                    "type": "if",
                    "line_number": 705
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "*name"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "for",
                  "strncasecmp",
                  "if"
                ]
              },
              {
                "name": "R_TextureNumForName",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "name"
                  }
                ],
                "start_line": 718,
                "end_line": 730,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 720
                  },
                  {
                    "type": "return",
                    "name": "i",
                    "array_size": null,
                    "line_number": 729
                  }
                ],
                "function_calls": [
                  {
                    "name": "R_CheckTextureNumForName",
                    "line_number": 722
                  },
                  {
                    "name": "if",
                    "line_number": 724
                  },
                  {
                    "name": "I_Error",
                    "line_number": 726
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 724
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "name"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "R_CheckTextureNumForName",
                  "I_Error",
                  "if"
                ]
              },
              {
                "name": "R_PrecacheLevel",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 743,
                "end_line": 845,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 749
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 750
                  },
                  {
                    "type": "int",
                    "name": "k",
                    "array_size": null,
                    "line_number": 751
                  },
                  {
                    "type": "int",
                    "name": "lump",
                    "array_size": null,
                    "line_number": 752
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 758
                  },
                  {
                    "name": "alloca",
                    "line_number": 762
                  },
                  {
                    "name": "memset",
                    "line_number": 763
                  },
                  {
                    "name": "for",
                    "line_number": 765
                  },
                  {
                    "name": "for",
                    "line_number": 773
                  },
                  {
                    "name": "if",
                    "line_number": 775
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 779
                  },
                  {
                    "name": "alloca",
                    "line_number": 784
                  },
                  {
                    "name": "memset",
                    "line_number": 785
                  },
                  {
                    "name": "for",
                    "line_number": 787
                  },
                  {
                    "name": "for",
                    "line_number": 803
                  },
                  {
                    "name": "if",
                    "line_number": 805
                  },
                  {
                    "name": "for",
                    "line_number": 810
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 814
                  },
                  {
                    "name": "alloca",
                    "line_number": 819
                  },
                  {
                    "name": "memset",
                    "line_number": 820
                  },
                  {
                    "name": "for",
                    "line_number": 822
                  },
                  {
                    "name": "if",
                    "line_number": 824
                  },
                  {
                    "name": "for",
                    "line_number": 829
                  },
                  {
                    "name": "if",
                    "line_number": 831
                  },
                  {
                    "name": "for",
                    "line_number": 834
                  },
                  {
                    "name": "for",
                    "line_number": 837
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 841
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 758
                  },
                  {
                    "type": "for",
                    "line_number": 765
                  },
                  {
                    "type": "for",
                    "line_number": 773
                  },
                  {
                    "type": "if",
                    "line_number": 775
                  },
                  {
                    "type": "for",
                    "line_number": 787
                  },
                  {
                    "type": "while",
                    "line_number": 797
                  },
                  {
                    "type": "for",
                    "line_number": 803
                  },
                  {
                    "type": "if",
                    "line_number": 805
                  },
                  {
                    "type": "for",
                    "line_number": 810
                  },
                  {
                    "type": "for",
                    "line_number": 822
                  },
                  {
                    "type": "if",
                    "line_number": 824
                  },
                  {
                    "type": "for",
                    "line_number": 829
                  },
                  {
                    "type": "if",
                    "line_number": 831
                  },
                  {
                    "type": "for",
                    "line_number": 834
                  },
                  {
                    "type": "for",
                    "line_number": 837
                  }
                ],
                "complexity": 15,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "alloca",
                  "for",
                  "if",
                  "memset",
                  "W_CacheLumpNum"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "originx",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 71
              },
              {
                "name": "originy",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 72
              },
              {
                "name": "patch",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 73
              },
              {
                "name": "stepdir",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 74
              },
              {
                "name": "colormap",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 75
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "8",
                "line_number": 86
              },
              {
                "name": "masked",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 87
              },
              {
                "name": "width",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 88
              },
              {
                "name": "height",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 89
              },
              {
                "name": "patchcount",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 91
              },
              {
                "name": "patches",
                "type": "mappatch_t",
                "storage_class": null,
                "array_size": "1",
                "line_number": 92
              },
              {
                "name": "originx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 104
              },
              {
                "name": "originy",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 105
              },
              {
                "name": "patch",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 106
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "8",
                "line_number": 116
              },
              {
                "name": "width",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 117
              },
              {
                "name": "height",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 118
              },
              {
                "name": "patchcount",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 122
              },
              {
                "name": "patches",
                "type": "texpatch_t",
                "storage_class": null,
                "array_size": "1",
                "line_number": 123
              },
              {
                "name": "firstflat",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 129
              },
              {
                "name": "lastflat",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 130
              },
              {
                "name": "numflats",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 131
              },
              {
                "name": "firstpatch",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 133
              },
              {
                "name": "lastpatch",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 134
              },
              {
                "name": "numpatches",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 135
              },
              {
                "name": "firstspritelump",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 137
              },
              {
                "name": "lastspritelump",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 138
              },
              {
                "name": "numspritelumps",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 139
              },
              {
                "name": "numtextures",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 141
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 191
              },
              {
                "name": "position",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 192
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 234
              },
              {
                "name": "x1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 235
              },
              {
                "name": "x2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 236
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 237
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 302
              },
              {
                "name": "x1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 303
              },
              {
                "name": "x2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 304
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 305
              },
              {
                "name": "lump",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 387
              },
              {
                "name": "ofs",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 388
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 418
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 419
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 425
              },
              {
                "name": "totalwidth",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 431
              },
              {
                "name": "nummappatches",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 432
              },
              {
                "name": "offset",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 433
              },
              {
                "name": "maxoff",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 434
              },
              {
                "name": "maxoff2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 435
              },
              {
                "name": "numtextures1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 436
              },
              {
                "name": "numtextures2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 437
              },
              {
                "name": "temp1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 441
              },
              {
                "name": "temp2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 442
              },
              {
                "name": "temp3",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 443
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 583
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 605
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 674
              },
              {
                "name": "namet",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 675
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 698
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 702
              },
              {
                "name": "i",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 706
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 720
              },
              {
                "name": "i",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 729
              },
              {
                "name": "flatmemory",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 739
              },
              {
                "name": "texturememory",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 740
              },
              {
                "name": "spritememory",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 741
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 749
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 750
              },
              {
                "name": "k",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 751
              },
              {
                "name": "lump",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 752
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/r_data.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "r_data.h",
          "type": "file",
          "size": 1554,
          "last_modified": "2024-09-05T16:00:04.949257",
          "path": "linuxdoom-1.10/r_data.h",
          "readme": "# r_data.h\n\nThis file contains functionality related to r_data.",
          "dependencies": [
            "r_state.h",
            "r_defs.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/r_data.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "r_defs.h",
          "type": "file",
          "size": 9120,
          "last_modified": "2024-09-05T16:00:04.974285",
          "path": "linuxdoom-1.10/r_defs.h",
          "readme": "# r_defs.h\n\nThis file contains functionality related to r_defs.",
          "dependencies": [
            "doomdef.h",
            "d_think.h",
            "p_mobj.h",
            "m_fixed.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "x",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 73
              },
              {
                "name": "y",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 74
              },
              {
                "name": "line_s",
                "type": "struct",
                "storage_class": null,
                "array_size": null,
                "line_number": 80
              },
              {
                "name": "thinker",
                "type": "thinker_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 90
              },
              {
                "name": "x",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 91
              },
              {
                "name": "y",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 92
              },
              {
                "name": "z",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 93
              },
              {
                "name": "floorheight",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 103
              },
              {
                "name": "ceilingheight",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 104
              },
              {
                "name": "floorpic",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 105
              },
              {
                "name": "ceilingpic",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 106
              },
              {
                "name": "lightlevel",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 107
              },
              {
                "name": "special",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 108
              },
              {
                "name": "tag",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 109
              },
              {
                "name": "soundtraversed",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 112
              },
              {
                "name": "blockbox",
                "type": "int",
                "storage_class": null,
                "array_size": "4",
                "line_number": 118
              },
              {
                "name": "soundorg",
                "type": "degenmobj_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 121
              },
              {
                "name": "validcount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 124
              },
              {
                "name": "linecount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 132
              },
              {
                "name": "textureoffset",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 147
              },
              {
                "name": "rowoffset",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 150
              },
              {
                "name": "toptexture",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 154
              },
              {
                "name": "bottomtexture",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 155
              },
              {
                "name": "midtexture",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 156
              },
              {
                "name": "dx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 186
              },
              {
                "name": "dy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 187
              },
              {
                "name": "flags",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 190
              },
              {
                "name": "special",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 191
              },
              {
                "name": "tag",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 192
              },
              {
                "name": "sidenum",
                "type": "short",
                "storage_class": null,
                "array_size": "2",
                "line_number": 196
              },
              {
                "name": "bbox",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": "4",
                "line_number": 200
              },
              {
                "name": "slopetype",
                "type": "slopetype_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 203
              },
              {
                "name": "validcount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 211
              },
              {
                "name": "numlines",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 230
              },
              {
                "name": "firstline",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 231
              },
              {
                "name": "offset",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 245
              },
              {
                "name": "angle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 247
              },
              {
                "name": "x",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 268
              },
              {
                "name": "y",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 269
              },
              {
                "name": "dx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 270
              },
              {
                "name": "dy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 271
              },
              {
                "name": "children",
                "type": "unsigned short",
                "storage_class": null,
                "array_size": "2",
                "line_number": 277
              },
              {
                "name": "topdelta",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 287
              },
              {
                "name": "length",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 288
              },
              {
                "name": "column_t",
                "type": "typedef post_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 292
              },
              {
                "name": "lighttable_t",
                "type": "typedef byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 314
              },
              {
                "name": "x1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 325
              },
              {
                "name": "x2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 326
              },
              {
                "name": "scale1",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 328
              },
              {
                "name": "scale2",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 329
              },
              {
                "name": "scalestep",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 330
              },
              {
                "name": "silhouette",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 333
              },
              {
                "name": "bsilheight",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 336
              },
              {
                "name": "tsilheight",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 339
              },
              {
                "name": "width",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 358
              },
              {
                "name": "height",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 359
              },
              {
                "name": "leftoffset",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 360
              },
              {
                "name": "topoffset",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 361
              },
              {
                "name": "columnofs",
                "type": "int",
                "storage_class": null,
                "array_size": "8",
                "line_number": 362
              },
              {
                "name": "x1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 381
              },
              {
                "name": "x2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 382
              },
              {
                "name": "gx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 385
              },
              {
                "name": "gy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 386
              },
              {
                "name": "gz",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 389
              },
              {
                "name": "gzt",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 390
              },
              {
                "name": "startfrac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 393
              },
              {
                "name": "scale",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 395
              },
              {
                "name": "xiscale",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 398
              },
              {
                "name": "texturemid",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 400
              },
              {
                "name": "patch",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 401
              },
              {
                "name": "mobjflags",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 407
              },
              {
                "name": "rotate",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 432
              },
              {
                "name": "lump",
                "type": "short",
                "storage_class": null,
                "array_size": "8",
                "line_number": 435
              },
              {
                "name": "flip",
                "type": "byte",
                "storage_class": null,
                "array_size": "8",
                "line_number": 438
              },
              {
                "name": "numframes",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 450
              },
              {
                "name": "height",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 462
              },
              {
                "name": "picnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 463
              },
              {
                "name": "lightlevel",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 464
              },
              {
                "name": "minx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 465
              },
              {
                "name": "maxx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 466
              },
              {
                "name": "pad1",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 470
              },
              {
                "name": "pad2",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 474
              },
              {
                "name": "pad3",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 475
              },
              {
                "name": "pad4",
                "type": "byte",
                "storage_class": null,
                "array_size": null,
                "line_number": 478
              }
            ],
            "defines": [
              {
                "name": "SIL_NONE",
                "value": "0",
                "line_number": 50
              },
              {
                "name": "SIL_BOTTOM",
                "value": "1",
                "line_number": 51
              },
              {
                "name": "SIL_TOP",
                "value": "2",
                "line_number": 52
              },
              {
                "name": "SIL_BOTH",
                "value": "3",
                "line_number": 53
              },
              {
                "name": "MAXDRAWSEGS",
                "value": "256",
                "line_number": 55
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/r_defs.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "r_draw.c",
          "type": "file",
          "size": 18567,
          "last_modified": "2024-09-05T16:00:05.000285",
          "path": "linuxdoom-1.10/r_draw.c",
          "readme": "# r_draw.c\n\nThis file contains functionality related to r_draw.",
          "dependencies": [
            "w_wad.h",
            "r_local.h",
            "z_zone.h",
            "doomstat.h",
            "i_system.h",
            "doomdef.h",
            "v_video.h"
          ],
          "inputs": [
            "i++",
            "width",
            "count",
            "ofs",
            "height",
            "detailshift",
            "void"
          ],
          "outputs": [
            "translate just the 16 green colors",
            "WATCOM code",
            "endif\n\n\nvoid",
            "if 0\nvoid"
          ],
          "content": {
            "functions": [
              {
                "name": "R_DrawColumn",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 105,
                "end_line": 148,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 107
                  },
                  {
                    "type": "fixed_t",
                    "name": "frac",
                    "array_size": null,
                    "line_number": 109
                  },
                  {
                    "type": "fixed_t",
                    "name": "fracstep",
                    "array_size": null,
                    "line_number": 110
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 115
                  },
                  {
                    "name": "if",
                    "line_number": 119
                  },
                  {
                    "name": "I_Error",
                    "line_number": 122
                  },
                  {
                    "name": "while",
                    "line_number": 147
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 115
                  },
                  {
                    "type": "if",
                    "line_number": 119
                  },
                  {
                    "type": "for",
                    "line_number": 127
                  },
                  {
                    "type": "while",
                    "line_number": 147
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "I_Error",
                  "if"
                ]
              },
              {
                "name": "R_DrawColumn",
                "return_type": "if 0\nvoid",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 154,
                "end_line": 206,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 156
                  },
                  {
                    "type": "unsigned",
                    "name": "frac",
                    "array_size": null,
                    "line_number": 161
                  },
                  {
                    "type": "unsigned",
                    "name": "fracstep",
                    "array_size": null,
                    "line_number": 162
                  },
                  {
                    "type": "unsigned",
                    "name": "fracstep2",
                    "array_size": null,
                    "line_number": 163
                  },
                  {
                    "type": "unsigned",
                    "name": "fracstep3",
                    "array_size": null,
                    "line_number": 164
                  },
                  {
                    "type": "unsigned",
                    "name": "fracstep4",
                    "array_size": null,
                    "line_number": 165
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 180
                  },
                  {
                    "name": "while",
                    "line_number": 199
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 180
                  },
                  {
                    "type": "while",
                    "line_number": 199
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "if 0\nvoid"
                ],
                "dependencies": [
                  "while"
                ]
              },
              {
                "name": "R_DrawColumnLow",
                "return_type": "endif\n\n\nvoid",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 208,
                "end_line": 250,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 210
                  },
                  {
                    "type": "fixed_t",
                    "name": "frac",
                    "array_size": null,
                    "line_number": 213
                  },
                  {
                    "type": "fixed_t",
                    "name": "fracstep",
                    "array_size": null,
                    "line_number": 214
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 219
                  },
                  {
                    "name": "if",
                    "line_number": 223
                  },
                  {
                    "name": "I_Error",
                    "line_number": 228
                  },
                  {
                    "name": "while",
                    "line_number": 249
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 219
                  },
                  {
                    "type": "if",
                    "line_number": 223
                  },
                  {
                    "type": "while",
                    "line_number": 249
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "endif\n\n\nvoid"
                ],
                "dependencies": [
                  "while",
                  "I_Error",
                  "if"
                ]
              },
              {
                "name": "R_DrawFuzzColumn",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 285,
                "end_line": 368,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 287
                  },
                  {
                    "type": "fixed_t",
                    "name": "frac",
                    "array_size": null,
                    "line_number": 289
                  },
                  {
                    "type": "fixed_t",
                    "name": "fracstep",
                    "array_size": null,
                    "line_number": 290
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 293
                  },
                  {
                    "name": "if",
                    "line_number": 297
                  },
                  {
                    "name": "if",
                    "line_number": 303
                  },
                  {
                    "name": "if",
                    "line_number": 308
                  },
                  {
                    "name": "I_Error",
                    "line_number": 311
                  },
                  {
                    "name": "if",
                    "line_number": 320
                  },
                  {
                    "name": "if",
                    "line_number": 322
                  },
                  {
                    "name": "outpw",
                    "line_number": 324
                  },
                  {
                    "name": "outp",
                    "line_number": 325
                  },
                  {
                    "name": "outpw",
                    "line_number": 329
                  },
                  {
                    "name": "outp",
                    "line_number": 330
                  },
                  {
                    "name": "outpw",
                    "line_number": 336
                  },
                  {
                    "name": "outp",
                    "line_number": 337
                  },
                  {
                    "name": "6",
                    "line_number": 350
                  },
                  {
                    "name": "if",
                    "line_number": 361
                  },
                  {
                    "name": "while",
                    "line_number": 367
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 293
                  },
                  {
                    "type": "if",
                    "line_number": 297
                  },
                  {
                    "type": "if",
                    "line_number": 303
                  },
                  {
                    "type": "if",
                    "line_number": 308
                  },
                  {
                    "type": "if",
                    "line_number": 320
                  },
                  {
                    "type": "if",
                    "line_number": 322
                  },
                  {
                    "type": "else",
                    "line_number": 327
                  },
                  {
                    "type": "else",
                    "line_number": 334
                  },
                  {
                    "type": "if",
                    "line_number": 361
                  },
                  {
                    "type": "while",
                    "line_number": 367
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "outpw",
                  "while",
                  "outp",
                  "if",
                  "I_Error",
                  "6"
                ]
              },
              {
                "name": "if",
                "return_type": "WATCOM code",
                "parameters": [
                  {
                    "type": "",
                    "name": "detailshift"
                  }
                ],
                "start_line": 319,
                "end_line": 332,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 321
                  },
                  {
                    "name": "outpw",
                    "line_number": 323
                  },
                  {
                    "name": "outp",
                    "line_number": 324
                  },
                  {
                    "name": "outpw",
                    "line_number": 328
                  },
                  {
                    "name": "outp",
                    "line_number": 329
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 321
                  },
                  {
                    "type": "else",
                    "line_number": 326
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "detailshift"
                ],
                "outputs": [
                  "WATCOM code"
                ],
                "dependencies": [
                  "outpw",
                  "outp",
                  "if"
                ]
              },
              {
                "name": "R_DrawTranslatedColumn",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 385,
                "end_line": 447,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 387
                  },
                  {
                    "type": "fixed_t",
                    "name": "frac",
                    "array_size": null,
                    "line_number": 389
                  },
                  {
                    "type": "fixed_t",
                    "name": "fracstep",
                    "array_size": null,
                    "line_number": 390
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 393
                  },
                  {
                    "name": "if",
                    "line_number": 397
                  },
                  {
                    "name": "I_Error",
                    "line_number": 401
                  },
                  {
                    "name": "if",
                    "line_number": 410
                  },
                  {
                    "name": "if",
                    "line_number": 412
                  },
                  {
                    "name": "outp",
                    "line_number": 413
                  },
                  {
                    "name": "outp",
                    "line_number": 415
                  },
                  {
                    "name": "outp",
                    "line_number": 421
                  },
                  {
                    "name": "while",
                    "line_number": 446
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 393
                  },
                  {
                    "type": "if",
                    "line_number": 397
                  },
                  {
                    "type": "for",
                    "line_number": 409
                  },
                  {
                    "type": "if",
                    "line_number": 410
                  },
                  {
                    "type": "if",
                    "line_number": 412
                  },
                  {
                    "type": "else",
                    "line_number": 414
                  },
                  {
                    "type": "else",
                    "line_number": 419
                  },
                  {
                    "type": "while",
                    "line_number": 446
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "I_Error",
                  "outp",
                  "if"
                ]
              },
              {
                "name": "R_InitTranslationTables",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 459,
                "end_line": 483,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 461
                  }
                ],
                "function_calls": [
                  {
                    "name": "Z_Malloc",
                    "line_number": 463
                  },
                  {
                    "name": "for",
                    "line_number": 467
                  },
                  {
                    "name": "if",
                    "line_number": 469
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 467
                  },
                  {
                    "type": "if",
                    "line_number": 469
                  },
                  {
                    "type": "else",
                    "line_number": 476
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "Z_Malloc",
                  "for"
                ]
              },
              {
                "name": "for",
                "return_type": "translate just the 16 green colors",
                "parameters": [
                  {
                    "type": "i=0 ; i<256 ;",
                    "name": "i++"
                  }
                ],
                "start_line": 466,
                "end_line": 481,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 468
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 468
                  },
                  {
                    "type": "else",
                    "line_number": 475
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "i++"
                ],
                "outputs": [
                  "translate just the 16 green colors"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "R_DrawSpan",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 520,
                "end_line": 563,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "xfrac",
                    "array_size": null,
                    "line_number": 522
                  },
                  {
                    "type": "fixed_t",
                    "name": "yfrac",
                    "array_size": null,
                    "line_number": 523
                  },
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 525
                  },
                  {
                    "type": "int",
                    "name": "spot",
                    "array_size": null,
                    "line_number": 526
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 529
                  },
                  {
                    "name": "I_Error",
                    "line_number": 534
                  },
                  {
                    "name": "while",
                    "line_number": 562
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 529
                  },
                  {
                    "type": "for",
                    "line_number": 546
                  },
                  {
                    "type": "while",
                    "line_number": 562
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "I_Error",
                  "if"
                ]
              },
              {
                "name": "R_DrawSpan",
                "return_type": "if 0\nvoid",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 569,
                "end_line": 635,
                "local_variables": [
                  {
                    "type": "unsigned",
                    "name": "count",
                    "array_size": null,
                    "line_number": 577
                  },
                  {
                    "type": "usingned",
                    "name": "spot",
                    "array_size": null,
                    "line_number": 578
                  },
                  {
                    "type": "unsigned",
                    "name": "value",
                    "array_size": null,
                    "line_number": 579
                  },
                  {
                    "type": "unsigned",
                    "name": "temp",
                    "array_size": null,
                    "line_number": 580
                  },
                  {
                    "type": "unsigned",
                    "name": "xtemp",
                    "array_size": null,
                    "line_number": 581
                  },
                  {
                    "type": "unsigned",
                    "name": "ytemp",
                    "array_size": null,
                    "line_number": 582
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 592
                  },
                  {
                    "name": "while",
                    "line_number": 625
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 592
                  },
                  {
                    "type": "while",
                    "line_number": 625
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "if 0\nvoid"
                ],
                "dependencies": [
                  "while"
                ]
              },
              {
                "name": "R_DrawSpanLow",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 643,
                "end_line": 686,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "xfrac",
                    "array_size": null,
                    "line_number": 645
                  },
                  {
                    "type": "fixed_t",
                    "name": "yfrac",
                    "array_size": null,
                    "line_number": 646
                  },
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 648
                  },
                  {
                    "type": "int",
                    "name": "spot",
                    "array_size": null,
                    "line_number": 649
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 652
                  },
                  {
                    "name": "I_Error",
                    "line_number": 657
                  },
                  {
                    "name": "while",
                    "line_number": 685
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 652
                  },
                  {
                    "type": "while",
                    "line_number": 678
                  },
                  {
                    "type": "while",
                    "line_number": 685
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "I_Error",
                  "if"
                ]
              },
              {
                "name": "R_InitBuffer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "width"
                  },
                  {
                    "type": "int",
                    "name": "height"
                  }
                ],
                "start_line": 695,
                "end_line": 717,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 697
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 705
                  },
                  {
                    "name": "if",
                    "line_number": 709
                  },
                  {
                    "name": "for",
                    "line_number": 715
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 705
                  },
                  {
                    "type": "if",
                    "line_number": 709
                  },
                  {
                    "type": "else",
                    "line_number": 711
                  },
                  {
                    "type": "for",
                    "line_number": 715
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "width",
                  "height"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "R_FillBackScreen",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 731,
                "end_line": 811,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 735
                  },
                  {
                    "type": "int",
                    "name": "y",
                    "array_size": null,
                    "line_number": 736
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 747
                  },
                  {
                    "name": "if",
                    "line_number": 750
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 755
                  },
                  {
                    "name": "for",
                    "line_number": 758
                  },
                  {
                    "name": "for",
                    "line_number": 760
                  },
                  {
                    "name": "memcpy",
                    "line_number": 762
                  },
                  {
                    "name": "if",
                    "line_number": 766
                  },
                  {
                    "name": "memcpy",
                    "line_number": 768
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 773
                  },
                  {
                    "name": "for",
                    "line_number": 775
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 776
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 777
                  },
                  {
                    "name": "for",
                    "line_number": 779
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 780
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 781
                  },
                  {
                    "name": "for",
                    "line_number": 783
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 784
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 785
                  },
                  {
                    "name": "for",
                    "line_number": 787
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 788
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 792
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 795
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 797
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 800
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 802
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 805
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 807
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 810
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 747
                  },
                  {
                    "type": "if",
                    "line_number": 750
                  },
                  {
                    "type": "else",
                    "line_number": 752
                  },
                  {
                    "type": "for",
                    "line_number": 758
                  },
                  {
                    "type": "for",
                    "line_number": 760
                  },
                  {
                    "type": "if",
                    "line_number": 766
                  },
                  {
                    "type": "for",
                    "line_number": 775
                  },
                  {
                    "type": "for",
                    "line_number": 779
                  },
                  {
                    "type": "for",
                    "line_number": 783
                  },
                  {
                    "type": "for",
                    "line_number": 787
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName",
                  "V_DrawPatch",
                  "for",
                  "if",
                  "memcpy"
                ]
              },
              {
                "name": "R_VideoErase",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "unsigned",
                    "name": "ofs"
                  },
                  {
                    "type": "int",
                    "name": "count"
                  }
                ],
                "start_line": 817,
                "end_line": 825,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "memcpy",
                    "line_number": 824
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 820
                  }
                ],
                "complexity": 1,
                "inputs": [
                  "ofs",
                  "count"
                ],
                "outputs": [],
                "dependencies": [
                  "memcpy"
                ]
              },
              {
                "name": "R_DrawViewBorder",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 843,
                "end_line": 875,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "top",
                    "array_size": null,
                    "line_number": 845
                  },
                  {
                    "type": "int",
                    "name": "side",
                    "array_size": null,
                    "line_number": 846
                  },
                  {
                    "type": "int",
                    "name": "ofs",
                    "array_size": null,
                    "line_number": 847
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 848
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 850
                  },
                  {
                    "name": "R_VideoErase",
                    "line_number": 857
                  },
                  {
                    "name": "R_VideoErase",
                    "line_number": 861
                  },
                  {
                    "name": "for",
                    "line_number": 867
                  },
                  {
                    "name": "R_VideoErase",
                    "line_number": 869
                  },
                  {
                    "name": "V_MarkRect",
                    "line_number": 874
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 850
                  },
                  {
                    "type": "for",
                    "line_number": 867
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "V_MarkRect",
                  "R_VideoErase",
                  "if"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "viewwidth",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 64
              },
              {
                "name": "scaledviewwidth",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 65
              },
              {
                "name": "viewheight",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 66
              },
              {
                "name": "viewwindowx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 67
              },
              {
                "name": "viewwindowy",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 68
              },
              {
                "name": "dc_x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 86
              },
              {
                "name": "dc_yl",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 87
              },
              {
                "name": "dc_yh",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 88
              },
              {
                "name": "dc_iscale",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 89
              },
              {
                "name": "dc_texturemid",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 90
              },
              {
                "name": "dccount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 96
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 107
              },
              {
                "name": "frac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 109
              },
              {
                "name": "fracstep",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 110
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 157
              },
              {
                "name": "frac",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 162
              },
              {
                "name": "fracstep",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 163
              },
              {
                "name": "fracstep2",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 164
              },
              {
                "name": "fracstep3",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 165
              },
              {
                "name": "fracstep4",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 166
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 213
              },
              {
                "name": "frac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 216
              },
              {
                "name": "fracstep",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 217
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 287
              },
              {
                "name": "frac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 289
              },
              {
                "name": "fracstep",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 290
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 387
              },
              {
                "name": "frac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 389
              },
              {
                "name": "fracstep",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 390
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 461
              },
              {
                "name": "ds_y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 500
              },
              {
                "name": "ds_x1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 501
              },
              {
                "name": "ds_x2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 502
              },
              {
                "name": "ds_xfrac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 506
              },
              {
                "name": "ds_yfrac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 507
              },
              {
                "name": "ds_xstep",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 508
              },
              {
                "name": "ds_ystep",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 509
              },
              {
                "name": "dscount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 515
              },
              {
                "name": "xfrac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 522
              },
              {
                "name": "yfrac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 523
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 525
              },
              {
                "name": "spot",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 526
              },
              {
                "name": "count",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 578
              },
              {
                "name": "spot",
                "type": "usingned",
                "storage_class": null,
                "array_size": null,
                "line_number": 579
              },
              {
                "name": "value",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 580
              },
              {
                "name": "temp",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 581
              },
              {
                "name": "xtemp",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 582
              },
              {
                "name": "ytemp",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 583
              },
              {
                "name": "xfrac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 645
              },
              {
                "name": "yfrac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 646
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 648
              },
              {
                "name": "spot",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 649
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 700
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 735
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 736
              },
              {
                "name": "top",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 845
              },
              {
                "name": "side",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 846
              },
              {
                "name": "ofs",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 847
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 848
              }
            ],
            "defines": [
              {
                "name": "MAXWIDTH",
                "value": "1120",
                "line_number": 47
              },
              {
                "name": "MAXHEIGHT",
                "value": "832",
                "line_number": 48
              },
              {
                "name": "SBARHEIGHT",
                "value": "32",
                "line_number": 51
              },
              {
                "name": "FUZZTABLE",
                "value": "50",
                "line_number": 259
              },
              {
                "name": "FUZZOFF",
                "value": "(SCREENWIDTH)",
                "line_number": 260
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/r_draw.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "r_draw.h",
          "type": "file",
          "size": 2472,
          "last_modified": "2024-09-05T16:00:05.024283",
          "path": "linuxdoom-1.10/r_draw.h",
          "readme": "# r_draw.h\n\nThis file contains functionality related to r_draw.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "dc_x",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 33
              },
              {
                "name": "dc_yl",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 34
              },
              {
                "name": "dc_yh",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 35
              },
              {
                "name": "dc_iscale",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 36
              },
              {
                "name": "dc_texturemid",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 37
              },
              {
                "name": "ds_y",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 64
              },
              {
                "name": "ds_x1",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 65
              },
              {
                "name": "ds_x2",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 66
              },
              {
                "name": "ds_xfrac",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 70
              },
              {
                "name": "ds_yfrac",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 71
              },
              {
                "name": "ds_xstep",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 72
              },
              {
                "name": "ds_ystep",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 73
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/r_draw.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "r_local.h",
          "type": "file",
          "size": 1393,
          "last_modified": "2024-09-05T16:00:05.048800",
          "path": "linuxdoom-1.10/r_local.h",
          "readme": "# r_local.h\n\nThis file contains functionality related to r_local.",
          "dependencies": [
            "r_draw.h",
            "r_plane.h",
            "r_main.h",
            "r_things.h",
            "r_segs.h",
            "tables.h",
            "r_bsp.h",
            "doomdef.h",
            "r_data.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/r_local.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "r_main.c",
          "type": "file",
          "size": 15992,
          "last_modified": "2024-09-05T16:00:05.073808",
          "path": "linuxdoom-1.10/r_main.c",
          "readme": "# r_main.c\n\nThis file contains functionality related to r_main.",
          "dependencies": [
            "math.h",
            "r_sky.h",
            "m_bbox.h",
            "r_local.h",
            "stdlib.h",
            "d_net.h",
            "doomdef.h"
          ],
          "inputs": [
            "x>y",
            "i++",
            "x",
            "detail",
            "y",
            "box",
            "y2",
            "visangle",
            "y1",
            "blocks",
            "void",
            "line",
            "0",
            "x2",
            "player",
            "node",
            "x1"
          ],
          "outputs": [
            "0",
            "define DISTMAP\t\t2\n\nvoid",
            "finesine table",
            "angle_t",
            "int",
            "fixed_t",
            "viewangle tangent table",
            "planes"
          ],
          "content": {
            "functions": [
              {
                "name": "R_AddPointToBox",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "fixed_t*",
                    "name": "box"
                  }
                ],
                "start_line": 138,
                "end_line": 148,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 140
                  },
                  {
                    "name": "if",
                    "line_number": 142
                  },
                  {
                    "name": "if",
                    "line_number": 144
                  },
                  {
                    "name": "if",
                    "line_number": 146
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 140
                  },
                  {
                    "type": "if",
                    "line_number": 142
                  },
                  {
                    "type": "if",
                    "line_number": 144
                  },
                  {
                    "type": "if",
                    "line_number": 146
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "x",
                  "y",
                  "box"
                ],
                "outputs": [],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "R_PointOnSide",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "fixed_t",
                    "name": "x"
                  },
                  {
                    "type": "fixed_t",
                    "name": "y"
                  },
                  {
                    "type": "node_t*",
                    "name": "node"
                  }
                ],
                "start_line": 161,
                "end_line": 207,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "dx",
                    "array_size": null,
                    "line_number": 163
                  },
                  {
                    "type": "fixed_t",
                    "name": "dy",
                    "array_size": null,
                    "line_number": 164
                  },
                  {
                    "type": "fixed_t",
                    "name": "left",
                    "array_size": null,
                    "line_number": 165
                  },
                  {
                    "type": "fixed_t",
                    "name": "right",
                    "array_size": null,
                    "line_number": 166
                  },
                  {
                    "type": "return",
                    "name": "1",
                    "array_size": null,
                    "line_number": 192
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 194
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 203
                  },
                  {
                    "type": "return",
                    "name": "1",
                    "array_size": null,
                    "line_number": 206
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 168
                  },
                  {
                    "name": "if",
                    "line_number": 170
                  },
                  {
                    "name": "if",
                    "line_number": 175
                  },
                  {
                    "name": "if",
                    "line_number": 177
                  },
                  {
                    "name": "if",
                    "line_number": 187
                  },
                  {
                    "name": "if",
                    "line_number": 189
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 197
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 198
                  },
                  {
                    "name": "if",
                    "line_number": 200
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 168
                  },
                  {
                    "type": "if",
                    "line_number": 170
                  },
                  {
                    "type": "if",
                    "line_number": 175
                  },
                  {
                    "type": "if",
                    "line_number": 177
                  },
                  {
                    "type": "if",
                    "line_number": 187
                  },
                  {
                    "type": "if",
                    "line_number": 189
                  },
                  {
                    "type": "if",
                    "line_number": 200
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "x",
                  "y",
                  "node"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "FixedMul",
                  "if"
                ]
              },
              {
                "name": "R_PointOnSegSide",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "fixed_t",
                    "name": "x"
                  },
                  {
                    "type": "fixed_t",
                    "name": "y"
                  },
                  {
                    "type": "seg_t*",
                    "name": "line"
                  }
                ],
                "start_line": 214,
                "end_line": 270,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "lx",
                    "array_size": null,
                    "line_number": 216
                  },
                  {
                    "type": "fixed_t",
                    "name": "ly",
                    "array_size": null,
                    "line_number": 217
                  },
                  {
                    "type": "fixed_t",
                    "name": "ldx",
                    "array_size": null,
                    "line_number": 218
                  },
                  {
                    "type": "fixed_t",
                    "name": "ldy",
                    "array_size": null,
                    "line_number": 219
                  },
                  {
                    "type": "fixed_t",
                    "name": "dx",
                    "array_size": null,
                    "line_number": 220
                  },
                  {
                    "type": "fixed_t",
                    "name": "dy",
                    "array_size": null,
                    "line_number": 221
                  },
                  {
                    "type": "fixed_t",
                    "name": "left",
                    "array_size": null,
                    "line_number": 222
                  },
                  {
                    "type": "fixed_t",
                    "name": "right",
                    "array_size": null,
                    "line_number": 223
                  },
                  {
                    "type": "return",
                    "name": "1",
                    "array_size": null,
                    "line_number": 255
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 257
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 266
                  },
                  {
                    "type": "return",
                    "name": "1",
                    "array_size": null,
                    "line_number": 269
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 231
                  },
                  {
                    "name": "if",
                    "line_number": 233
                  },
                  {
                    "name": "if",
                    "line_number": 238
                  },
                  {
                    "name": "if",
                    "line_number": 240
                  },
                  {
                    "name": "if",
                    "line_number": 250
                  },
                  {
                    "name": "if",
                    "line_number": 252
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 260
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 261
                  },
                  {
                    "name": "if",
                    "line_number": 263
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 231
                  },
                  {
                    "type": "if",
                    "line_number": 233
                  },
                  {
                    "type": "if",
                    "line_number": 238
                  },
                  {
                    "type": "if",
                    "line_number": 240
                  },
                  {
                    "type": "if",
                    "line_number": 250
                  },
                  {
                    "type": "if",
                    "line_number": 252
                  },
                  {
                    "type": "if",
                    "line_number": 263
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "x",
                  "y",
                  "line"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "FixedMul",
                  "if"
                ]
              },
              {
                "name": "R_PointToAngle",
                "return_type": "angle_t",
                "parameters": [
                  {
                    "type": "fixed_t",
                    "name": "x"
                  },
                  {
                    "type": "fixed_t",
                    "name": "y"
                  }
                ],
                "start_line": 291,
                "end_line": 371,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 297
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 370
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 296
                  },
                  {
                    "name": "if",
                    "line_number": 299
                  },
                  {
                    "name": "if",
                    "line_number": 302
                  },
                  {
                    "name": "if",
                    "line_number": 306
                  },
                  {
                    "name": "SlopeDiv",
                    "line_number": 309
                  },
                  {
                    "name": "SlopeDiv",
                    "line_number": 314
                  },
                  {
                    "name": "if",
                    "line_number": 322
                  },
                  {
                    "name": "SlopeDiv",
                    "line_number": 325
                  },
                  {
                    "name": "SlopeDiv",
                    "line_number": 330
                  },
                  {
                    "name": "if",
                    "line_number": 339
                  },
                  {
                    "name": "if",
                    "line_number": 342
                  },
                  {
                    "name": "SlopeDiv",
                    "line_number": 345
                  },
                  {
                    "name": "SlopeDiv",
                    "line_number": 350
                  },
                  {
                    "name": "if",
                    "line_number": 358
                  },
                  {
                    "name": "SlopeDiv",
                    "line_number": 361
                  },
                  {
                    "name": "SlopeDiv",
                    "line_number": 366
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 296
                  },
                  {
                    "type": "if",
                    "line_number": 299
                  },
                  {
                    "type": "if",
                    "line_number": 302
                  },
                  {
                    "type": "if",
                    "line_number": 306
                  },
                  {
                    "type": "else",
                    "line_number": 311
                  },
                  {
                    "type": "else",
                    "line_number": 317
                  },
                  {
                    "type": "if",
                    "line_number": 322
                  },
                  {
                    "type": "else",
                    "line_number": 327
                  },
                  {
                    "type": "else",
                    "line_number": 334
                  },
                  {
                    "type": "if",
                    "line_number": 339
                  },
                  {
                    "type": "if",
                    "line_number": 342
                  },
                  {
                    "type": "else",
                    "line_number": 347
                  },
                  {
                    "type": "else",
                    "line_number": 353
                  },
                  {
                    "type": "if",
                    "line_number": 358
                  },
                  {
                    "type": "else",
                    "line_number": 363
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "x",
                  "y"
                ],
                "outputs": [
                  "angle_t"
                ],
                "dependencies": [
                  "SlopeDiv",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "0",
                "parameters": [
                  {
                    "type": "y>=",
                    "name": "0"
                  }
                ],
                "start_line": 304,
                "end_line": 318,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 308
                  },
                  {
                    "name": "SlopeDiv",
                    "line_number": 311
                  },
                  {
                    "name": "SlopeDiv",
                    "line_number": 316
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 308
                  },
                  {
                    "type": "else",
                    "line_number": 313
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "0"
                ],
                "outputs": [
                  "0"
                ],
                "dependencies": [
                  "SlopeDiv",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "0",
                "parameters": [
                  {
                    "type": "",
                    "name": "x>y"
                  }
                ],
                "start_line": 307,
                "end_line": 311,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "SlopeDiv",
                    "line_number": 310
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "x>y"
                ],
                "outputs": [
                  "0"
                ],
                "dependencies": [
                  "SlopeDiv"
                ]
              },
              {
                "name": "if",
                "return_type": "0",
                "parameters": [
                  {
                    "type": "",
                    "name": "x>y"
                  }
                ],
                "start_line": 344,
                "end_line": 348,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "SlopeDiv",
                    "line_number": 347
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "x>y"
                ],
                "outputs": [
                  "0"
                ],
                "dependencies": [
                  "SlopeDiv"
                ]
              },
              {
                "name": "R_PointToAngle2",
                "return_type": "angle_t",
                "parameters": [
                  {
                    "type": "fixed_t",
                    "name": "x1"
                  },
                  {
                    "type": "fixed_t",
                    "name": "y1"
                  },
                  {
                    "type": "fixed_t",
                    "name": "x2"
                  },
                  {
                    "type": "fixed_t",
                    "name": "y2"
                  }
                ],
                "start_line": 377,
                "end_line": 383,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "R_PointToAngle",
                    "line_number": 382
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "x1",
                  "y1",
                  "x2",
                  "y2"
                ],
                "outputs": [
                  "angle_t"
                ],
                "dependencies": [
                  "R_PointToAngle"
                ]
              },
              {
                "name": "R_PointToDist",
                "return_type": "fixed_t",
                "parameters": [
                  {
                    "type": "fixed_t",
                    "name": "x"
                  },
                  {
                    "type": "fixed_t",
                    "name": "y"
                  }
                ],
                "start_line": 391,
                "end_line": 415,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 393
                  },
                  {
                    "type": "fixed_t",
                    "name": "dx",
                    "array_size": null,
                    "line_number": 394
                  },
                  {
                    "type": "fixed_t",
                    "name": "dy",
                    "array_size": null,
                    "line_number": 395
                  },
                  {
                    "type": "fixed_t",
                    "name": "temp",
                    "array_size": null,
                    "line_number": 396
                  },
                  {
                    "type": "fixed_t",
                    "name": "dist",
                    "array_size": null,
                    "line_number": 397
                  },
                  {
                    "type": "return",
                    "name": "dist",
                    "array_size": null,
                    "line_number": 414
                  }
                ],
                "function_calls": [
                  {
                    "name": "abs",
                    "line_number": 399
                  },
                  {
                    "name": "abs",
                    "line_number": 400
                  },
                  {
                    "name": "if",
                    "line_number": 402
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 409
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 412
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 402
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "x",
                  "y"
                ],
                "outputs": [
                  "fixed_t"
                ],
                "dependencies": [
                  "abs",
                  "FixedDiv",
                  "if"
                ]
              },
              {
                "name": "R_InitPointToAngle",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 426,
                "end_line": 443,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 430
                  },
                  {
                    "type": "long",
                    "name": "t",
                    "array_size": null,
                    "line_number": 431
                  },
                  {
                    "type": "float",
                    "name": "f",
                    "array_size": null,
                    "line_number": 432
                  }
                ],
                "function_calls": [
                  {
                    "name": "slope",
                    "line_number": 434
                  },
                  {
                    "name": "for",
                    "line_number": 436
                  },
                  {
                    "name": "atan",
                    "line_number": 438
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 429
                  },
                  {
                    "type": "for",
                    "line_number": 436
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "atan",
                  "slope",
                  "for"
                ]
              },
              {
                "name": "R_ScaleFromGlobalAngle",
                "return_type": "fixed_t",
                "parameters": [
                  {
                    "type": "angle_t",
                    "name": "visangle"
                  }
                ],
                "start_line": 453,
                "end_line": 502,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "scale",
                    "array_size": null,
                    "line_number": 455
                  },
                  {
                    "type": "int",
                    "name": "anglea",
                    "array_size": null,
                    "line_number": 456
                  },
                  {
                    "type": "int",
                    "name": "angleb",
                    "array_size": null,
                    "line_number": 457
                  },
                  {
                    "type": "int",
                    "name": "sinea",
                    "array_size": null,
                    "line_number": 458
                  },
                  {
                    "type": "int",
                    "name": "sineb",
                    "array_size": null,
                    "line_number": 459
                  },
                  {
                    "type": "fixed_t",
                    "name": "num",
                    "array_size": null,
                    "line_number": 460
                  },
                  {
                    "type": "int",
                    "name": "den",
                    "array_size": null,
                    "line_number": 461
                  },
                  {
                    "type": "fixed_t",
                    "name": "dist",
                    "array_size": null,
                    "line_number": 466
                  },
                  {
                    "type": "fixed_t",
                    "name": "z",
                    "array_size": null,
                    "line_number": 467
                  },
                  {
                    "type": "fixed_t",
                    "name": "sinv",
                    "array_size": null,
                    "line_number": 468
                  },
                  {
                    "type": "fixed_t",
                    "name": "cosv",
                    "array_size": null,
                    "line_number": 469
                  },
                  {
                    "type": "return",
                    "name": "scale",
                    "array_size": null,
                    "line_number": 476
                  },
                  {
                    "type": "return",
                    "name": "scale",
                    "array_size": null,
                    "line_number": 501
                  }
                ],
                "function_calls": [
                  {
                    "name": "FixedDiv",
                    "line_number": 472
                  },
                  {
                    "name": "abs",
                    "line_number": 474
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 474
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 475
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 486
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 487
                  },
                  {
                    "name": "if",
                    "line_number": 489
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 491
                  },
                  {
                    "name": "if",
                    "line_number": 493
                  },
                  {
                    "name": "if",
                    "line_number": 495
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 464
                  },
                  {
                    "type": "if",
                    "line_number": 489
                  },
                  {
                    "type": "if",
                    "line_number": 493
                  },
                  {
                    "type": "if",
                    "line_number": 495
                  },
                  {
                    "type": "else",
                    "line_number": 498
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "visangle"
                ],
                "outputs": [
                  "fixed_t"
                ],
                "dependencies": [
                  "FixedDiv",
                  "if",
                  "FixedMul",
                  "abs"
                ]
              },
              {
                "name": "R_InitTables",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 509,
                "end_line": 537,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 513
                  },
                  {
                    "type": "float",
                    "name": "a",
                    "array_size": null,
                    "line_number": 514
                  },
                  {
                    "type": "float",
                    "name": "fv",
                    "array_size": null,
                    "line_number": 515
                  },
                  {
                    "type": "int",
                    "name": "t",
                    "array_size": null,
                    "line_number": 516
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 519
                  },
                  {
                    "name": "tan",
                    "line_number": 522
                  },
                  {
                    "name": "for",
                    "line_number": 528
                  },
                  {
                    "name": "sin",
                    "line_number": 532
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 512
                  },
                  {
                    "type": "for",
                    "line_number": 519
                  },
                  {
                    "type": "for",
                    "line_number": 528
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "tan",
                  "sin",
                  "for"
                ]
              },
              {
                "name": "for",
                "return_type": "viewangle tangent table",
                "parameters": [
                  {
                    "type": "i=0 ; i<FINEANGLES/2 ;",
                    "name": "i++"
                  }
                ],
                "start_line": 518,
                "end_line": 524,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "tan",
                    "line_number": 521
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i++"
                ],
                "outputs": [
                  "viewangle tangent table"
                ],
                "dependencies": [
                  "tan"
                ]
              },
              {
                "name": "for",
                "return_type": "finesine table",
                "parameters": [
                  {
                    "type": "i=0 ; i<5*FINEANGLES/4 ;",
                    "name": "i++"
                  }
                ],
                "start_line": 527,
                "end_line": 533,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "sin",
                    "line_number": 531
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i++"
                ],
                "outputs": [
                  "finesine table"
                ],
                "dependencies": [
                  "sin"
                ]
              },
              {
                "name": "R_InitTextureMapping",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 544,
                "end_line": 603,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 546
                  },
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 547
                  },
                  {
                    "type": "int",
                    "name": "t",
                    "array_size": null,
                    "line_number": 548
                  },
                  {
                    "type": "fixed_t",
                    "name": "focallength",
                    "array_size": null,
                    "line_number": 549
                  }
                ],
                "function_calls": [
                  {
                    "name": "FixedDiv",
                    "line_number": 557
                  },
                  {
                    "name": "for",
                    "line_number": 560
                  },
                  {
                    "name": "if",
                    "line_number": 562
                  },
                  {
                    "name": "if",
                    "line_number": 564
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 568
                  },
                  {
                    "name": "if",
                    "line_number": 571
                  },
                  {
                    "name": "if",
                    "line_number": 573
                  },
                  {
                    "name": "for",
                    "line_number": 582
                  },
                  {
                    "name": "while",
                    "line_number": 585
                  },
                  {
                    "name": "for",
                    "line_number": 591
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 593
                  },
                  {
                    "name": "if",
                    "line_number": 596
                  },
                  {
                    "name": "if",
                    "line_number": 598
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 560
                  },
                  {
                    "type": "if",
                    "line_number": 562
                  },
                  {
                    "type": "if",
                    "line_number": 564
                  },
                  {
                    "type": "else",
                    "line_number": 566
                  },
                  {
                    "type": "if",
                    "line_number": 571
                  },
                  {
                    "type": "if",
                    "line_number": 573
                  },
                  {
                    "type": "for",
                    "line_number": 582
                  },
                  {
                    "type": "while",
                    "line_number": 585
                  },
                  {
                    "type": "for",
                    "line_number": 591
                  },
                  {
                    "type": "if",
                    "line_number": 596
                  },
                  {
                    "type": "if",
                    "line_number": 598
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "if",
                  "for",
                  "FixedDiv",
                  "FixedMul"
                ]
              },
              {
                "name": "R_InitLightTables",
                "return_type": "define DISTMAP\t\t2\n\nvoid",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 612,
                "end_line": 640,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 614
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 615
                  },
                  {
                    "type": "int",
                    "name": "level",
                    "array_size": null,
                    "line_number": 616
                  },
                  {
                    "type": "int",
                    "name": "startmap",
                    "array_size": null,
                    "line_number": 617
                  },
                  {
                    "type": "int",
                    "name": "scale",
                    "array_size": null,
                    "line_number": 618
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 622
                  },
                  {
                    "name": "for",
                    "line_number": 625
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 627
                  },
                  {
                    "name": "if",
                    "line_number": 631
                  },
                  {
                    "name": "if",
                    "line_number": 634
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 621
                  },
                  {
                    "type": "for",
                    "line_number": 622
                  },
                  {
                    "type": "for",
                    "line_number": 625
                  },
                  {
                    "type": "if",
                    "line_number": 631
                  },
                  {
                    "type": "if",
                    "line_number": 634
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "define DISTMAP\t\t2\n\nvoid"
                ],
                "dependencies": [
                  "FixedDiv",
                  "if",
                  "for"
                ]
              },
              {
                "name": "R_SetViewSize",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "blocks"
                  },
                  {
                    "type": "int",
                    "name": "detail"
                  }
                ],
                "start_line": 657,
                "end_line": 662,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "blocks",
                  "detail"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "R_ExecuteSetViewSize",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 671,
                "end_line": 761,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "cosadj",
                    "array_size": null,
                    "line_number": 673
                  },
                  {
                    "type": "fixed_t",
                    "name": "dy",
                    "array_size": null,
                    "line_number": 674
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 675
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 676
                  },
                  {
                    "type": "int",
                    "name": "level",
                    "array_size": null,
                    "line_number": 677
                  },
                  {
                    "type": "int",
                    "name": "startmap",
                    "array_size": null,
                    "line_number": 678
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 682
                  },
                  {
                    "name": "if",
                    "line_number": 702
                  },
                  {
                    "name": "R_InitBuffer",
                    "line_number": 717
                  },
                  {
                    "name": "R_InitTextureMapping",
                    "line_number": 719
                  },
                  {
                    "name": "for",
                    "line_number": 726
                  },
                  {
                    "name": "for",
                    "line_number": 730
                  },
                  {
                    "name": "abs",
                    "line_number": 733
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 734
                  },
                  {
                    "name": "for",
                    "line_number": 737
                  },
                  {
                    "name": "abs",
                    "line_number": 739
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 740
                  },
                  {
                    "name": "for",
                    "line_number": 745
                  },
                  {
                    "name": "for",
                    "line_number": 748
                  },
                  {
                    "name": "if",
                    "line_number": 752
                  },
                  {
                    "name": "if",
                    "line_number": 755
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 682
                  },
                  {
                    "type": "else",
                    "line_number": 687
                  },
                  {
                    "type": "if",
                    "line_number": 702
                  },
                  {
                    "type": "else",
                    "line_number": 709
                  },
                  {
                    "type": "for",
                    "line_number": 726
                  },
                  {
                    "type": "for",
                    "line_number": 730
                  },
                  {
                    "type": "for",
                    "line_number": 737
                  },
                  {
                    "type": "for",
                    "line_number": 744
                  },
                  {
                    "type": "for",
                    "line_number": 745
                  },
                  {
                    "type": "for",
                    "line_number": 748
                  },
                  {
                    "type": "if",
                    "line_number": 752
                  },
                  {
                    "type": "if",
                    "line_number": 755
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "abs",
                  "for",
                  "if",
                  "R_InitBuffer",
                  "FixedDiv",
                  "R_InitTextureMapping"
                ]
              },
              {
                "name": "for",
                "return_type": "planes",
                "parameters": [
                  {
                    "type": "i=0 ; i<viewheight ;",
                    "name": "i++"
                  }
                ],
                "start_line": 729,
                "end_line": 734,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "abs",
                    "line_number": 732
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 733
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i++"
                ],
                "outputs": [
                  "planes"
                ],
                "dependencies": [
                  "abs",
                  "FixedDiv"
                ]
              },
              {
                "name": "R_Init",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 773,
                "end_line": 794,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "R_InitData",
                    "line_number": 775
                  },
                  {
                    "name": "printf",
                    "line_number": 776
                  },
                  {
                    "name": "R_InitPointToAngle",
                    "line_number": 777
                  },
                  {
                    "name": "printf",
                    "line_number": 778
                  },
                  {
                    "name": "R_InitTables",
                    "line_number": 779
                  },
                  {
                    "name": "printf",
                    "line_number": 781
                  },
                  {
                    "name": "R_SetViewSize",
                    "line_number": 783
                  },
                  {
                    "name": "R_InitPlanes",
                    "line_number": 784
                  },
                  {
                    "name": "printf",
                    "line_number": 785
                  },
                  {
                    "name": "R_InitLightTables",
                    "line_number": 786
                  },
                  {
                    "name": "printf",
                    "line_number": 787
                  },
                  {
                    "name": "R_InitSkyMap",
                    "line_number": 788
                  },
                  {
                    "name": "printf",
                    "line_number": 789
                  },
                  {
                    "name": "R_InitTranslationTables",
                    "line_number": 790
                  },
                  {
                    "name": "printf",
                    "line_number": 791
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "R_InitLightTables",
                  "R_InitPlanes",
                  "R_InitTables",
                  "R_InitTranslationTables",
                  "R_InitPointToAngle",
                  "printf",
                  "R_SetViewSize",
                  "R_InitSkyMap",
                  "R_InitData"
                ]
              },
              {
                "name": "R_SetupFrame",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  }
                ],
                "start_line": 830,
                "end_line": 863,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 832
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 847
                  },
                  {
                    "name": "sizeof",
                    "line_number": 851
                  },
                  {
                    "name": "for",
                    "line_number": 855
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 847
                  },
                  {
                    "type": "for",
                    "line_number": 855
                  },
                  {
                    "type": "else",
                    "line_number": 858
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "sizeof",
                  "if"
                ]
              },
              {
                "name": "R_RenderPlayerView",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "player_t*",
                    "name": "player"
                  }
                ],
                "start_line": 870,
                "end_line": 898,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "R_SetupFrame",
                    "line_number": 872
                  },
                  {
                    "name": "R_ClearClipSegs",
                    "line_number": 875
                  },
                  {
                    "name": "R_ClearDrawSegs",
                    "line_number": 876
                  },
                  {
                    "name": "R_ClearPlanes",
                    "line_number": 877
                  },
                  {
                    "name": "R_ClearSprites",
                    "line_number": 878
                  },
                  {
                    "name": "NetUpdate",
                    "line_number": 881
                  },
                  {
                    "name": "R_RenderBSPNode",
                    "line_number": 884
                  },
                  {
                    "name": "NetUpdate",
                    "line_number": 887
                  },
                  {
                    "name": "R_DrawPlanes",
                    "line_number": 889
                  },
                  {
                    "name": "NetUpdate",
                    "line_number": 892
                  },
                  {
                    "name": "R_DrawMasked",
                    "line_number": 894
                  },
                  {
                    "name": "NetUpdate",
                    "line_number": 897
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 880
                  },
                  {
                    "type": "for",
                    "line_number": 886
                  },
                  {
                    "type": "for",
                    "line_number": 891
                  },
                  {
                    "type": "for",
                    "line_number": 896
                  }
                ],
                "complexity": 1,
                "inputs": [
                  "player"
                ],
                "outputs": [],
                "dependencies": [
                  "R_ClearClipSegs",
                  "R_SetupFrame",
                  "R_ClearPlanes",
                  "R_DrawMasked",
                  "R_ClearDrawSegs",
                  "NetUpdate",
                  "R_RenderBSPNode",
                  "R_DrawPlanes",
                  "R_ClearSprites"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "viewangleoffset",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 52
              },
              {
                "name": "centerx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 61
              },
              {
                "name": "centery",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 62
              },
              {
                "name": "centerxfrac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 64
              },
              {
                "name": "centeryfrac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 65
              },
              {
                "name": "projection",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 66
              },
              {
                "name": "framecount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 69
              },
              {
                "name": "sscount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 71
              },
              {
                "name": "linecount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 72
              },
              {
                "name": "loopcount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 73
              },
              {
                "name": "viewx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 75
              },
              {
                "name": "viewy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 76
              },
              {
                "name": "viewz",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 77
              },
              {
                "name": "viewangle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 79
              },
              {
                "name": "viewcos",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 81
              },
              {
                "name": "viewsin",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 82
              },
              {
                "name": "detailshift",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 87
              },
              {
                "name": "clipangle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 92
              },
              {
                "name": "extralight",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 121
              },
              {
                "name": "dx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 167
              },
              {
                "name": "dy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 168
              },
              {
                "name": "left",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 169
              },
              {
                "name": "right",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 170
              },
              {
                "name": "1",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 196
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 198
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 207
              },
              {
                "name": "1",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 210
              },
              {
                "name": "lx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 220
              },
              {
                "name": "ly",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 221
              },
              {
                "name": "ldx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 222
              },
              {
                "name": "ldy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 223
              },
              {
                "name": "dx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 224
              },
              {
                "name": "dy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 225
              },
              {
                "name": "left",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 226
              },
              {
                "name": "right",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 227
              },
              {
                "name": "1",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 259
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 261
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 270
              },
              {
                "name": "1",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 273
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 300
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 373
              },
              {
                "name": "angle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 396
              },
              {
                "name": "dx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 397
              },
              {
                "name": "dy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 398
              },
              {
                "name": "temp",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 399
              },
              {
                "name": "dist",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 400
              },
              {
                "name": "dist",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 417
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 430
              },
              {
                "name": "t",
                "type": "long",
                "storage_class": null,
                "array_size": null,
                "line_number": 431
              },
              {
                "name": "f",
                "type": "float",
                "storage_class": null,
                "array_size": null,
                "line_number": 432
              },
              {
                "name": "scale",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 455
              },
              {
                "name": "anglea",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 456
              },
              {
                "name": "angleb",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 457
              },
              {
                "name": "sinea",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 458
              },
              {
                "name": "sineb",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 459
              },
              {
                "name": "num",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 460
              },
              {
                "name": "den",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 461
              },
              {
                "name": "dist",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 466
              },
              {
                "name": "z",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 467
              },
              {
                "name": "sinv",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 468
              },
              {
                "name": "cosv",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 469
              },
              {
                "name": "scale",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 476
              },
              {
                "name": "scale",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 501
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 513
              },
              {
                "name": "a",
                "type": "float",
                "storage_class": null,
                "array_size": null,
                "line_number": 514
              },
              {
                "name": "fv",
                "type": "float",
                "storage_class": null,
                "array_size": null,
                "line_number": 515
              },
              {
                "name": "t",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 516
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 546
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 547
              },
              {
                "name": "t",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 548
              },
              {
                "name": "focallength",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 549
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 616
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 617
              },
              {
                "name": "level",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 618
              },
              {
                "name": "startmap",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 619
              },
              {
                "name": "scale",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 620
              },
              {
                "name": "setsizeneeded",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 652
              },
              {
                "name": "setblocks",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 653
              },
              {
                "name": "setdetail",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 654
              },
              {
                "name": "cosadj",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 673
              },
              {
                "name": "dy",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 674
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 675
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 676
              },
              {
                "name": "level",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 677
              },
              {
                "name": "startmap",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 678
              },
              {
                "name": "detailLevel",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 768
              },
              {
                "name": "screenblocks",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 769
              },
              {
                "name": "side",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 806
              },
              {
                "name": "nodenum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 807
              },
              {
                "name": "subsectors",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 811
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 832
              }
            ],
            "defines": [
              {
                "name": "FIELDOFVIEW",
                "value": "2048",
                "line_number": 48
              },
              {
                "name": "DISTMAP",
                "value": "2",
                "line_number": 612
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/r_main.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of functions",
            "High number of global variables"
          ]
        },
        {
          "name": "r_main.h",
          "type": "file",
          "size": 3232,
          "last_modified": "2024-09-05T16:00:05.099809",
          "path": "linuxdoom-1.10/r_main.h",
          "readme": "# r_main.h\n\nThis file contains functionality related to r_main.",
          "dependencies": [
            "d_player.h",
            "r_data.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "viewcos",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 38
              },
              {
                "name": "viewsin",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 39
              },
              {
                "name": "viewwidth",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 41
              },
              {
                "name": "viewheight",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 42
              },
              {
                "name": "viewwindowx",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 43
              },
              {
                "name": "viewwindowy",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 44
              },
              {
                "name": "centerx",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 48
              },
              {
                "name": "centery",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 49
              },
              {
                "name": "centerxfrac",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 51
              },
              {
                "name": "centeryfrac",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 52
              },
              {
                "name": "projection",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 53
              },
              {
                "name": "validcount",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 55
              },
              {
                "name": "linecount",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 57
              },
              {
                "name": "loopcount",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 58
              },
              {
                "name": "extralight",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 81
              },
              {
                "name": "detailshift",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 93
              }
            ],
            "defines": [
              {
                "name": "LIGHTLEVELS",
                "value": "16",
                "line_number": 69
              },
              {
                "name": "LIGHTSEGSHIFT",
                "value": "4",
                "line_number": 70
              },
              {
                "name": "MAXLIGHTSCALE",
                "value": "48",
                "line_number": 72
              },
              {
                "name": "LIGHTSCALESHIFT",
                "value": "12",
                "line_number": 73
              },
              {
                "name": "MAXLIGHTZ",
                "value": "128",
                "line_number": 74
              },
              {
                "name": "LIGHTZSHIFT",
                "value": "20",
                "line_number": 75
              },
              {
                "name": "NUMCOLORMAPS",
                "value": "32",
                "line_number": 87
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/r_main.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "r_plane.c",
          "type": "file",
          "size": 8260,
          "last_modified": "2024-09-05T16:00:05.125813",
          "path": "linuxdoom-1.10/r_plane.c",
          "readme": "# r_plane.c\n\nThis file contains functionality related to r_plane.",
          "dependencies": [
            "w_wad.h",
            "r_sky.h",
            "r_local.h",
            "z_zone.h",
            "i_system.h",
            "stdlib.h",
            "doomstat.h",
            "doomdef.h"
          ],
          "inputs": [
            "cachedheight[y]",
            "i++",
            "x",
            "b1",
            "pl++",
            "b2",
            "y",
            "skyflatnum",
            "t2",
            "void",
            "x2",
            "t1",
            "x1"
          ],
          "outputs": [
            "endif",
            "sky flat",
            "clipping determination"
          ],
          "content": {
            "functions": [
              {
                "name": "R_InitPlanes",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 101,
                "end_line": 104,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "R_MapPlane",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "int",
                    "name": "x1"
                  },
                  {
                    "type": "int",
                    "name": "x2"
                  }
                ],
                "start_line": 120,
                "end_line": 174,
                "local_variables": [
                  {
                    "type": "angle_t",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 122
                  },
                  {
                    "type": "fixed_t",
                    "name": "distance",
                    "array_size": null,
                    "line_number": 123
                  },
                  {
                    "type": "fixed_t",
                    "name": "length",
                    "array_size": null,
                    "line_number": 124
                  },
                  {
                    "type": "unsigned",
                    "name": "index",
                    "array_size": null,
                    "line_number": 125
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 128
                  },
                  {
                    "name": "I_Error",
                    "line_number": 133
                  },
                  {
                    "name": "if",
                    "line_number": 137
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 140
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 141
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 142
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 151
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 153
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 154
                  },
                  {
                    "name": "if",
                    "line_number": 156
                  },
                  {
                    "name": "if",
                    "line_number": 162
                  },
                  {
                    "name": "spanfunc",
                    "line_number": 173
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 128
                  },
                  {
                    "type": "if",
                    "line_number": 137
                  },
                  {
                    "type": "else",
                    "line_number": 144
                  },
                  {
                    "type": "if",
                    "line_number": 156
                  },
                  {
                    "type": "else",
                    "line_number": 158
                  },
                  {
                    "type": "if",
                    "line_number": 162
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "y",
                  "x1",
                  "x2"
                ],
                "outputs": [],
                "dependencies": [
                  "spanfunc",
                  "I_Error",
                  "FixedMul",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "endif",
                "parameters": [
                  {
                    "type": "planeheight !=",
                    "name": "cachedheight[y]"
                  }
                ],
                "start_line": 139,
                "end_line": 145,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "FixedMul",
                    "line_number": 142
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 143
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 144
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "cachedheight[y]"
                ],
                "outputs": [
                  "endif"
                ],
                "dependencies": [
                  "FixedMul"
                ]
              },
              {
                "name": "R_ClearPlanes",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 185,
                "end_line": 209,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 187
                  },
                  {
                    "type": "angle_t",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 188
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 191
                  },
                  {
                    "name": "memset",
                    "line_number": 201
                  },
                  {
                    "name": "sizeof",
                    "line_number": 201
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 207
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 208
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 191
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "FixedDiv",
                  "memset",
                  "sizeof",
                  "for"
                ]
              },
              {
                "name": "for",
                "return_type": "clipping determination",
                "parameters": [
                  {
                    "type": "i=0 ; i<viewwidth ;",
                    "name": "i++"
                  }
                ],
                "start_line": 190,
                "end_line": 194,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i++"
                ],
                "outputs": [
                  "clipping determination"
                ],
                "dependencies": []
              },
              {
                "name": "R_MakeSpans",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "t1"
                  },
                  {
                    "type": "int",
                    "name": "b1"
                  },
                  {
                    "type": "int",
                    "name": "t2"
                  },
                  {
                    "type": "int",
                    "name": "b2"
                  }
                ],
                "start_line": 330,
                "end_line": 353,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 332
                  },
                  {
                    "name": "R_MapPlane",
                    "line_number": 334
                  },
                  {
                    "name": "while",
                    "line_number": 337
                  },
                  {
                    "name": "R_MapPlane",
                    "line_number": 339
                  },
                  {
                    "name": "while",
                    "line_number": 343
                  },
                  {
                    "name": "while",
                    "line_number": 348
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 332
                  },
                  {
                    "type": "while",
                    "line_number": 337
                  },
                  {
                    "type": "while",
                    "line_number": 343
                  },
                  {
                    "type": "while",
                    "line_number": 348
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "x",
                  "t1",
                  "b1",
                  "t2",
                  "b2"
                ],
                "outputs": [],
                "dependencies": [
                  "R_MapPlane",
                  "while"
                ]
              },
              {
                "name": "R_DrawPlanes",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 367,
                "end_line": 453,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "light",
                    "array_size": null,
                    "line_number": 370
                  },
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 371
                  },
                  {
                    "type": "int",
                    "name": "stop",
                    "array_size": null,
                    "line_number": 372
                  },
                  {
                    "type": "int",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 373
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 376
                  },
                  {
                    "name": "I_Error",
                    "line_number": 377
                  },
                  {
                    "name": "overflow",
                    "line_number": 377
                  },
                  {
                    "name": "if",
                    "line_number": 380
                  },
                  {
                    "name": "I_Error",
                    "line_number": 381
                  },
                  {
                    "name": "overflow",
                    "line_number": 381
                  },
                  {
                    "name": "if",
                    "line_number": 384
                  },
                  {
                    "name": "I_Error",
                    "line_number": 385
                  },
                  {
                    "name": "overflow",
                    "line_number": 385
                  },
                  {
                    "name": "for",
                    "line_number": 389
                  },
                  {
                    "name": "if",
                    "line_number": 391
                  },
                  {
                    "name": "if",
                    "line_number": 396
                  },
                  {
                    "name": "for",
                    "line_number": 406
                  },
                  {
                    "name": "if",
                    "line_number": 411
                  },
                  {
                    "name": "R_GetColumn",
                    "line_number": 415
                  },
                  {
                    "name": "colfunc",
                    "line_number": 416
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 423
                  },
                  {
                    "name": "abs",
                    "line_number": 427
                  },
                  {
                    "name": "if",
                    "line_number": 430
                  },
                  {
                    "name": "if",
                    "line_number": 433
                  },
                  {
                    "name": "for",
                    "line_number": 443
                  },
                  {
                    "name": "R_MakeSpans",
                    "line_number": 445
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 451
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 376
                  },
                  {
                    "type": "if",
                    "line_number": 380
                  },
                  {
                    "type": "if",
                    "line_number": 384
                  },
                  {
                    "type": "for",
                    "line_number": 389
                  },
                  {
                    "type": "if",
                    "line_number": 391
                  },
                  {
                    "type": "if",
                    "line_number": 396
                  },
                  {
                    "type": "for",
                    "line_number": 406
                  },
                  {
                    "type": "if",
                    "line_number": 411
                  },
                  {
                    "type": "if",
                    "line_number": 430
                  },
                  {
                    "type": "if",
                    "line_number": 433
                  },
                  {
                    "type": "for",
                    "line_number": 443
                  }
                ],
                "complexity": 12,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "abs",
                  "R_GetColumn",
                  "for",
                  "if",
                  "R_MakeSpans",
                  "I_Error",
                  "W_CacheLumpNum",
                  "colfunc",
                  "Z_ChangeTag",
                  "overflow"
                ]
              },
              {
                "name": "for",
                "return_type": "endif",
                "parameters": [
                  {
                    "type": "pl = visplanes ; pl < lastvisplane ;",
                    "name": "pl++"
                  }
                ],
                "start_line": 387,
                "end_line": 450,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 389
                  },
                  {
                    "name": "if",
                    "line_number": 394
                  },
                  {
                    "name": "for",
                    "line_number": 404
                  },
                  {
                    "name": "if",
                    "line_number": 409
                  },
                  {
                    "name": "R_GetColumn",
                    "line_number": 413
                  },
                  {
                    "name": "colfunc",
                    "line_number": 414
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 421
                  },
                  {
                    "name": "abs",
                    "line_number": 425
                  },
                  {
                    "name": "if",
                    "line_number": 428
                  },
                  {
                    "name": "if",
                    "line_number": 431
                  },
                  {
                    "name": "for",
                    "line_number": 441
                  },
                  {
                    "name": "R_MakeSpans",
                    "line_number": 443
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 449
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 389
                  },
                  {
                    "type": "if",
                    "line_number": 394
                  },
                  {
                    "type": "for",
                    "line_number": 404
                  },
                  {
                    "type": "if",
                    "line_number": 409
                  },
                  {
                    "type": "if",
                    "line_number": 428
                  },
                  {
                    "type": "if",
                    "line_number": 431
                  },
                  {
                    "type": "for",
                    "line_number": 441
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "pl++"
                ],
                "outputs": [
                  "endif"
                ],
                "dependencies": [
                  "abs",
                  "R_GetColumn",
                  "for",
                  "if",
                  "R_MakeSpans",
                  "W_CacheLumpNum",
                  "colfunc",
                  "Z_ChangeTag"
                ]
              },
              {
                "name": "if",
                "return_type": "sky flat",
                "parameters": [
                  {
                    "type": "pl->picnum ==",
                    "name": "skyflatnum"
                  }
                ],
                "start_line": 395,
                "end_line": 419,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 405
                  },
                  {
                    "name": "if",
                    "line_number": 410
                  },
                  {
                    "name": "R_GetColumn",
                    "line_number": 414
                  },
                  {
                    "name": "colfunc",
                    "line_number": 415
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 405
                  },
                  {
                    "type": "if",
                    "line_number": 410
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "skyflatnum"
                ],
                "outputs": [
                  "sky flat"
                ],
                "dependencies": [
                  "colfunc",
                  "if",
                  "R_GetColumn",
                  "for"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "floorfunc",
                "type": "planefunction_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 44
              },
              {
                "name": "ceilingfunc",
                "type": "planefunction_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 45
              },
              {
                "name": "planeheight",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 83
              },
              {
                "name": "basexscale",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 87
              },
              {
                "name": "baseyscale",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 88
              },
              {
                "name": "angle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 126
              },
              {
                "name": "distance",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 127
              },
              {
                "name": "length",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 128
              },
              {
                "name": "index",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 129
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 187
              },
              {
                "name": "angle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 188
              },
              {
                "name": "check",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 243
              },
              {
                "name": "check",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 258
              },
              {
                "name": "intrl",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 271
              },
              {
                "name": "intrh",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 272
              },
              {
                "name": "unionl",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 273
              },
              {
                "name": "unionh",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 274
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 275
              },
              {
                "name": "pl",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 309
              },
              {
                "name": "pl",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 323
              },
              {
                "name": "light",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 370
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 371
              },
              {
                "name": "stop",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 372
              },
              {
                "name": "angle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 373
              }
            ],
            "defines": [
              {
                "name": "MAXVISPLANES",
                "value": "128",
                "line_number": 52
              },
              {
                "name": "MAXOPENINGS",
                "value": "SCREENWIDTH*64",
                "line_number": 59
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/r_plane.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "r_plane.h",
          "type": "file",
          "size": 1725,
          "last_modified": "2024-09-05T16:00:05.150329",
          "path": "linuxdoom-1.10/r_plane.h",
          "readme": "# r_plane.h\n\nThis file contains functionality related to r_plane.",
          "dependencies": [
            "r_data.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "floorfunc",
                "type": "planefunction_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 40
              },
              {
                "name": "ceilingfunc_t",
                "type": "planefunction_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 41
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/r_plane.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "r_segs.c",
          "type": "file",
          "size": 16981,
          "last_modified": "2024-09-05T16:00:05.176330",
          "path": "linuxdoom-1.10/r_segs.c",
          "readme": "# r_segs.c\n\nThis file contains functionality related to r_segs.",
          "dependencies": [
            "r_sky.h",
            "r_local.h",
            "stdlib.h",
            "doomstat.h",
            "i_system.h",
            "doomdef.h"
          ],
          "inputs": [
            "dc_x++",
            "rw_x++",
            "MAXSHORT",
            "toptexture",
            "sidedef->midtexture",
            "!fixedcolormap",
            "viewz",
            "skyflatnum",
            "FRACUNIT/2",
            "ds",
            "ML_DONTPEGBOTTOM",
            "void",
            "midtexture",
            "x2",
            "stop",
            "segtextured",
            "x1",
            "start"
          ],
          "outputs": [
            "find positioning",
            "draw the columns",
            "get rid of LIGHTSEGSHIFT globally",
            "draw the wall tiers",
            "texturecolumn and lighting are independent of wall tiers",
            "calculate lighting",
            "allocate space for masked texture tables",
            "shut up compiler warning",
            "hack to allow height changes in outdoor areas",
            "two sided line",
            "if 0",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "R_RenderMaskedSegRange",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "drawseg_t*",
                    "name": "ds"
                  },
                  {
                    "type": "int",
                    "name": "x1"
                  },
                  {
                    "type": "int",
                    "name": "x2"
                  }
                ],
                "start_line": 102,
                "end_line": 186,
                "local_variables": [
                  {
                    "type": "unsigned",
                    "name": "index",
                    "array_size": null,
                    "line_number": 104
                  },
                  {
                    "type": "int",
                    "name": "lightnum",
                    "array_size": null,
                    "line_number": 106
                  },
                  {
                    "type": "int",
                    "name": "texnum",
                    "array_size": null,
                    "line_number": 107
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 120
                  },
                  {
                    "name": "if",
                    "line_number": 122
                  },
                  {
                    "name": "if",
                    "line_number": 125
                  },
                  {
                    "name": "if",
                    "line_number": 127
                  },
                  {
                    "name": "if",
                    "line_number": 140
                  },
                  {
                    "name": "if",
                    "line_number": 154
                  },
                  {
                    "name": "for",
                    "line_number": 158
                  },
                  {
                    "name": "if",
                    "line_number": 161
                  },
                  {
                    "name": "if",
                    "line_number": 163
                  },
                  {
                    "name": "if",
                    "line_number": 167
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 173
                  },
                  {
                    "name": "R_GetColumn",
                    "line_number": 178
                  },
                  {
                    "name": "R_DrawMaskedColumn",
                    "line_number": 180
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 111
                  },
                  {
                    "type": "if",
                    "line_number": 120
                  },
                  {
                    "type": "if",
                    "line_number": 122
                  },
                  {
                    "type": "if",
                    "line_number": 125
                  },
                  {
                    "type": "if",
                    "line_number": 127
                  },
                  {
                    "type": "else",
                    "line_number": 129
                  },
                  {
                    "type": "if",
                    "line_number": 140
                  },
                  {
                    "type": "else",
                    "line_number": 146
                  },
                  {
                    "type": "if",
                    "line_number": 154
                  },
                  {
                    "type": "for",
                    "line_number": 158
                  },
                  {
                    "type": "if",
                    "line_number": 161
                  },
                  {
                    "type": "if",
                    "line_number": 163
                  },
                  {
                    "type": "if",
                    "line_number": 167
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "ds",
                  "x1",
                  "x2"
                ],
                "outputs": [],
                "dependencies": [
                  "R_DrawMaskedColumn",
                  "R_GetColumn",
                  "for",
                  "if",
                  "FixedMul"
                ]
              },
              {
                "name": "if",
                "return_type": "find positioning",
                "parameters": [
                  {
                    "type": "curline->linedef->flags &",
                    "name": "ML_DONTPEGBOTTOM"
                  }
                ],
                "start_line": 143,
                "end_line": 148,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "ML_DONTPEGBOTTOM"
                ],
                "outputs": [
                  "find positioning"
                ],
                "dependencies": []
              },
              {
                "name": "for",
                "return_type": "draw the columns",
                "parameters": [
                  {
                    "type": "dc_x = x1 ; dc_x <= x2 ;",
                    "name": "dc_x++"
                  }
                ],
                "start_line": 161,
                "end_line": 187,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 164
                  },
                  {
                    "name": "if",
                    "line_number": 166
                  },
                  {
                    "name": "if",
                    "line_number": 170
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 176
                  },
                  {
                    "name": "R_GetColumn",
                    "line_number": 181
                  },
                  {
                    "name": "R_DrawMaskedColumn",
                    "line_number": 183
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 164
                  },
                  {
                    "type": "if",
                    "line_number": 166
                  },
                  {
                    "type": "if",
                    "line_number": 170
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "dc_x++"
                ],
                "outputs": [
                  "draw the columns"
                ],
                "dependencies": [
                  "R_DrawMaskedColumn",
                  "R_GetColumn",
                  "FixedMul",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "calculate lighting",
                "parameters": [
                  {
                    "type": "maskedtexturecol[dc_x] !=",
                    "name": "MAXSHORT"
                  }
                ],
                "start_line": 164,
                "end_line": 185,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 166
                  },
                  {
                    "name": "if",
                    "line_number": 170
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 176
                  },
                  {
                    "name": "R_GetColumn",
                    "line_number": 181
                  },
                  {
                    "name": "R_DrawMaskedColumn",
                    "line_number": 183
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 166
                  },
                  {
                    "type": "if",
                    "line_number": 170
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "MAXSHORT"
                ],
                "outputs": [
                  "calculate lighting"
                ],
                "dependencies": [
                  "R_DrawMaskedColumn",
                  "R_GetColumn",
                  "FixedMul",
                  "if"
                ]
              },
              {
                "name": "R_RenderSegLoop",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 206,
                "end_line": 364,
                "local_variables": [
                  {
                    "type": "angle_t",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 208
                  },
                  {
                    "type": "unsigned",
                    "name": "index",
                    "array_size": null,
                    "line_number": 209
                  },
                  {
                    "type": "int",
                    "name": "yl",
                    "array_size": null,
                    "line_number": 210
                  },
                  {
                    "type": "int",
                    "name": "yh",
                    "array_size": null,
                    "line_number": 211
                  },
                  {
                    "type": "int",
                    "name": "mid",
                    "array_size": null,
                    "line_number": 212
                  },
                  {
                    "type": "fixed_t",
                    "name": "texturecolumn",
                    "array_size": null,
                    "line_number": 213
                  },
                  {
                    "type": "int",
                    "name": "top",
                    "array_size": null,
                    "line_number": 214
                  },
                  {
                    "type": "int",
                    "name": "bottom",
                    "array_size": null,
                    "line_number": 215
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 219
                  },
                  {
                    "name": "if",
                    "line_number": 225
                  },
                  {
                    "name": "if",
                    "line_number": 228
                  },
                  {
                    "name": "if",
                    "line_number": 233
                  },
                  {
                    "name": "if",
                    "line_number": 236
                  },
                  {
                    "name": "if",
                    "line_number": 245
                  },
                  {
                    "name": "if",
                    "line_number": 248
                  },
                  {
                    "name": "if",
                    "line_number": 252
                  },
                  {
                    "name": "if",
                    "line_number": 254
                  },
                  {
                    "name": "if",
                    "line_number": 262
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 266
                  },
                  {
                    "name": "if",
                    "line_number": 271
                  },
                  {
                    "name": "if",
                    "line_number": 280
                  },
                  {
                    "name": "R_GetColumn",
                    "line_number": 286
                  },
                  {
                    "name": "colfunc",
                    "line_number": 287
                  },
                  {
                    "name": "if",
                    "line_number": 294
                  },
                  {
                    "name": "if",
                    "line_number": 300
                  },
                  {
                    "name": "if",
                    "line_number": 303
                  },
                  {
                    "name": "R_GetColumn",
                    "line_number": 308
                  },
                  {
                    "name": "colfunc",
                    "line_number": 309
                  },
                  {
                    "name": "if",
                    "line_number": 318
                  },
                  {
                    "name": "if",
                    "line_number": 322
                  },
                  {
                    "name": "if",
                    "line_number": 329
                  },
                  {
                    "name": "if",
                    "line_number": 332
                  },
                  {
                    "name": "R_GetColumn",
                    "line_number": 337
                  },
                  {
                    "name": "colfunc",
                    "line_number": 339
                  },
                  {
                    "name": "if",
                    "line_number": 348
                  },
                  {
                    "name": "if",
                    "line_number": 352
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 219
                  },
                  {
                    "type": "if",
                    "line_number": 225
                  },
                  {
                    "type": "if",
                    "line_number": 228
                  },
                  {
                    "type": "if",
                    "line_number": 233
                  },
                  {
                    "type": "if",
                    "line_number": 236
                  },
                  {
                    "type": "if",
                    "line_number": 245
                  },
                  {
                    "type": "if",
                    "line_number": 248
                  },
                  {
                    "type": "if",
                    "line_number": 252
                  },
                  {
                    "type": "if",
                    "line_number": 254
                  },
                  {
                    "type": "if",
                    "line_number": 262
                  },
                  {
                    "type": "if",
                    "line_number": 271
                  },
                  {
                    "type": "if",
                    "line_number": 280
                  },
                  {
                    "type": "else",
                    "line_number": 291
                  },
                  {
                    "type": "if",
                    "line_number": 294
                  },
                  {
                    "type": "if",
                    "line_number": 300
                  },
                  {
                    "type": "if",
                    "line_number": 303
                  },
                  {
                    "type": "else",
                    "line_number": 312
                  },
                  {
                    "type": "else",
                    "line_number": 315
                  },
                  {
                    "type": "if",
                    "line_number": 318
                  },
                  {
                    "type": "if",
                    "line_number": 322
                  },
                  {
                    "type": "if",
                    "line_number": 329
                  },
                  {
                    "type": "if",
                    "line_number": 332
                  },
                  {
                    "type": "else",
                    "line_number": 342
                  },
                  {
                    "type": "else",
                    "line_number": 345
                  },
                  {
                    "type": "if",
                    "line_number": 348
                  },
                  {
                    "type": "if",
                    "line_number": 352
                  },
                  {
                    "type": "for",
                    "line_number": 355
                  }
                ],
                "complexity": 22,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "R_GetColumn",
                  "if",
                  "for",
                  "colfunc",
                  "FixedMul"
                ]
              },
              {
                "name": "for",
                "return_type": "shut up compiler warning",
                "parameters": [
                  {
                    "type": "; rw_x < rw_stopx ;",
                    "name": "rw_x++"
                  }
                ],
                "start_line": 217,
                "end_line": 361,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 223
                  },
                  {
                    "name": "if",
                    "line_number": 226
                  },
                  {
                    "name": "if",
                    "line_number": 231
                  },
                  {
                    "name": "if",
                    "line_number": 234
                  },
                  {
                    "name": "if",
                    "line_number": 243
                  },
                  {
                    "name": "if",
                    "line_number": 246
                  },
                  {
                    "name": "if",
                    "line_number": 250
                  },
                  {
                    "name": "if",
                    "line_number": 252
                  },
                  {
                    "name": "if",
                    "line_number": 260
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 264
                  },
                  {
                    "name": "if",
                    "line_number": 269
                  },
                  {
                    "name": "if",
                    "line_number": 278
                  },
                  {
                    "name": "R_GetColumn",
                    "line_number": 284
                  },
                  {
                    "name": "colfunc",
                    "line_number": 285
                  },
                  {
                    "name": "if",
                    "line_number": 292
                  },
                  {
                    "name": "if",
                    "line_number": 298
                  },
                  {
                    "name": "if",
                    "line_number": 301
                  },
                  {
                    "name": "R_GetColumn",
                    "line_number": 306
                  },
                  {
                    "name": "colfunc",
                    "line_number": 307
                  },
                  {
                    "name": "if",
                    "line_number": 316
                  },
                  {
                    "name": "if",
                    "line_number": 320
                  },
                  {
                    "name": "if",
                    "line_number": 327
                  },
                  {
                    "name": "if",
                    "line_number": 330
                  },
                  {
                    "name": "R_GetColumn",
                    "line_number": 335
                  },
                  {
                    "name": "colfunc",
                    "line_number": 337
                  },
                  {
                    "name": "if",
                    "line_number": 346
                  },
                  {
                    "name": "if",
                    "line_number": 350
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 223
                  },
                  {
                    "type": "if",
                    "line_number": 226
                  },
                  {
                    "type": "if",
                    "line_number": 231
                  },
                  {
                    "type": "if",
                    "line_number": 234
                  },
                  {
                    "type": "if",
                    "line_number": 243
                  },
                  {
                    "type": "if",
                    "line_number": 246
                  },
                  {
                    "type": "if",
                    "line_number": 250
                  },
                  {
                    "type": "if",
                    "line_number": 252
                  },
                  {
                    "type": "if",
                    "line_number": 260
                  },
                  {
                    "type": "if",
                    "line_number": 269
                  },
                  {
                    "type": "if",
                    "line_number": 278
                  },
                  {
                    "type": "else",
                    "line_number": 289
                  },
                  {
                    "type": "if",
                    "line_number": 292
                  },
                  {
                    "type": "if",
                    "line_number": 298
                  },
                  {
                    "type": "if",
                    "line_number": 301
                  },
                  {
                    "type": "else",
                    "line_number": 310
                  },
                  {
                    "type": "else",
                    "line_number": 313
                  },
                  {
                    "type": "if",
                    "line_number": 316
                  },
                  {
                    "type": "if",
                    "line_number": 320
                  },
                  {
                    "type": "if",
                    "line_number": 327
                  },
                  {
                    "type": "if",
                    "line_number": 330
                  },
                  {
                    "type": "else",
                    "line_number": 340
                  },
                  {
                    "type": "else",
                    "line_number": 343
                  },
                  {
                    "type": "if",
                    "line_number": 346
                  },
                  {
                    "type": "if",
                    "line_number": 350
                  },
                  {
                    "type": "for",
                    "line_number": 353
                  }
                ],
                "complexity": 21,
                "inputs": [
                  "rw_x++"
                ],
                "outputs": [
                  "shut up compiler warning"
                ],
                "dependencies": [
                  "colfunc",
                  "R_GetColumn",
                  "FixedMul",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "texturecolumn and lighting are independent of wall tiers",
                "parameters": [
                  {
                    "type": "",
                    "name": "segtextured"
                  }
                ],
                "start_line": 261,
                "end_line": 276,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "FixedMul",
                    "line_number": 265
                  },
                  {
                    "name": "if",
                    "line_number": 270
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 270
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "segtextured"
                ],
                "outputs": [
                  "texturecolumn and lighting are independent of wall tiers"
                ],
                "dependencies": [
                  "FixedMul",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "draw the wall tiers",
                "parameters": [
                  {
                    "type": "",
                    "name": "midtexture"
                  }
                ],
                "start_line": 279,
                "end_line": 289,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "R_GetColumn",
                    "line_number": 285
                  },
                  {
                    "name": "colfunc",
                    "line_number": 286
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "midtexture"
                ],
                "outputs": [
                  "draw the wall tiers"
                ],
                "dependencies": [
                  "colfunc",
                  "R_GetColumn"
                ]
              },
              {
                "name": "if",
                "return_type": "two sided line",
                "parameters": [
                  {
                    "type": "",
                    "name": "toptexture"
                  }
                ],
                "start_line": 293,
                "end_line": 313,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 299
                  },
                  {
                    "name": "if",
                    "line_number": 302
                  },
                  {
                    "name": "R_GetColumn",
                    "line_number": 307
                  },
                  {
                    "name": "colfunc",
                    "line_number": 308
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 299
                  },
                  {
                    "type": "if",
                    "line_number": 302
                  },
                  {
                    "type": "else",
                    "line_number": 311
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "toptexture"
                ],
                "outputs": [
                  "two sided line"
                ],
                "dependencies": [
                  "colfunc",
                  "R_GetColumn",
                  "if"
                ]
              },
              {
                "name": "R_StoreWallRange",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "start"
                  },
                  {
                    "type": "int",
                    "name": "stop"
                  }
                ],
                "start_line": 374,
                "end_line": 742,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "hyp",
                    "array_size": null,
                    "line_number": 376
                  },
                  {
                    "type": "fixed_t",
                    "name": "sineval",
                    "array_size": null,
                    "line_number": 377
                  },
                  {
                    "type": "fixed_t",
                    "name": "vtop",
                    "array_size": null,
                    "line_number": 379
                  },
                  {
                    "type": "int",
                    "name": "lightnum",
                    "array_size": null,
                    "line_number": 380
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 383
                  },
                  {
                    "name": "if",
                    "line_number": 387
                  },
                  {
                    "name": "I_Error",
                    "line_number": 388
                  },
                  {
                    "name": "abs",
                    "line_number": 399
                  },
                  {
                    "name": "if",
                    "line_number": 401
                  },
                  {
                    "name": "R_PointToDist",
                    "line_number": 405
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 407
                  },
                  {
                    "name": "R_ScaleFromGlobalAngle",
                    "line_number": 417
                  },
                  {
                    "name": "if",
                    "line_number": 419
                  },
                  {
                    "name": "R_ScaleFromGlobalAngle",
                    "line_number": 421
                  },
                  {
                    "name": "if",
                    "line_number": 429
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 437
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 438
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 439
                  },
                  {
                    "name": "if",
                    "line_number": 453
                  },
                  {
                    "name": "if",
                    "line_number": 459
                  },
                  {
                    "name": "if",
                    "line_number": 485
                  },
                  {
                    "name": "if",
                    "line_number": 490
                  },
                  {
                    "name": "if",
                    "line_number": 497
                  },
                  {
                    "name": "if",
                    "line_number": 502
                  },
                  {
                    "name": "if",
                    "line_number": 509
                  },
                  {
                    "name": "if",
                    "line_number": 516
                  },
                  {
                    "name": "if",
                    "line_number": 527
                  },
                  {
                    "name": "if",
                    "line_number": 534
                  },
                  {
                    "name": "if",
                    "line_number": 547
                  },
                  {
                    "name": "if",
                    "line_number": 559
                  },
                  {
                    "name": "if",
                    "line_number": 567
                  },
                  {
                    "name": "if",
                    "line_number": 571
                  },
                  {
                    "name": "if",
                    "line_number": 586
                  },
                  {
                    "name": "if",
                    "line_number": 591
                  },
                  {
                    "name": "if",
                    "line_number": 604
                  },
                  {
                    "name": "rw_offset",
                    "line_number": 613
                  },
                  {
                    "name": "if",
                    "line_number": 616
                  },
                  {
                    "name": "if",
                    "line_number": 620
                  },
                  {
                    "name": "if",
                    "line_number": 623
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 627
                  },
                  {
                    "name": "if",
                    "line_number": 629
                  },
                  {
                    "name": "if",
                    "line_number": 639
                  },
                  {
                    "name": "if",
                    "line_number": 643
                  },
                  {
                    "name": "if",
                    "line_number": 645
                  },
                  {
                    "name": "if",
                    "line_number": 648
                  },
                  {
                    "name": "if",
                    "line_number": 650
                  },
                  {
                    "name": "if",
                    "line_number": 662
                  },
                  {
                    "name": "if",
                    "line_number": 668
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 680
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 681
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 683
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 684
                  },
                  {
                    "name": "if",
                    "line_number": 686
                  },
                  {
                    "name": "if",
                    "line_number": 691
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 693
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 694
                  },
                  {
                    "name": "if",
                    "line_number": 697
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 699
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 700
                  },
                  {
                    "name": "if",
                    "line_number": 705
                  },
                  {
                    "name": "R_CheckPlane",
                    "line_number": 706
                  },
                  {
                    "name": "if",
                    "line_number": 708
                  },
                  {
                    "name": "R_CheckPlane",
                    "line_number": 709
                  },
                  {
                    "name": "R_RenderSegLoop",
                    "line_number": 711
                  },
                  {
                    "name": "if",
                    "line_number": 715
                  },
                  {
                    "name": "memcpy",
                    "line_number": 718
                  },
                  {
                    "name": "if",
                    "line_number": 723
                  },
                  {
                    "name": "memcpy",
                    "line_number": 726
                  },
                  {
                    "name": "if",
                    "line_number": 731
                  },
                  {
                    "name": "if",
                    "line_number": 736
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 383
                  },
                  {
                    "type": "if",
                    "line_number": 387
                  },
                  {
                    "type": "for",
                    "line_number": 394
                  },
                  {
                    "type": "for",
                    "line_number": 397
                  },
                  {
                    "type": "if",
                    "line_number": 401
                  },
                  {
                    "type": "if",
                    "line_number": 419
                  },
                  {
                    "type": "else",
                    "line_number": 425
                  },
                  {
                    "type": "if",
                    "line_number": 428
                  },
                  {
                    "type": "if",
                    "line_number": 429
                  },
                  {
                    "type": "if",
                    "line_number": 446
                  },
                  {
                    "type": "if",
                    "line_number": 453
                  },
                  {
                    "type": "if",
                    "line_number": 459
                  },
                  {
                    "type": "else",
                    "line_number": 466
                  },
                  {
                    "type": "else",
                    "line_number": 479
                  },
                  {
                    "type": "if",
                    "line_number": 485
                  },
                  {
                    "type": "if",
                    "line_number": 490
                  },
                  {
                    "type": "if",
                    "line_number": 497
                  },
                  {
                    "type": "if",
                    "line_number": 502
                  },
                  {
                    "type": "if",
                    "line_number": 509
                  },
                  {
                    "type": "if",
                    "line_number": 516
                  },
                  {
                    "type": "if",
                    "line_number": 527
                  },
                  {
                    "type": "if",
                    "line_number": 534
                  },
                  {
                    "type": "else",
                    "line_number": 540
                  },
                  {
                    "type": "if",
                    "line_number": 547
                  },
                  {
                    "type": "else",
                    "line_number": 553
                  },
                  {
                    "type": "if",
                    "line_number": 559
                  },
                  {
                    "type": "if",
                    "line_number": 567
                  },
                  {
                    "type": "if",
                    "line_number": 571
                  },
                  {
                    "type": "else",
                    "line_number": 576
                  },
                  {
                    "type": "if",
                    "line_number": 586
                  },
                  {
                    "type": "if",
                    "line_number": 591
                  },
                  {
                    "type": "else",
                    "line_number": 597
                  },
                  {
                    "type": "for",
                    "line_number": 603
                  },
                  {
                    "type": "if",
                    "line_number": 604
                  },
                  {
                    "type": "for",
                    "line_number": 613
                  },
                  {
                    "type": "if",
                    "line_number": 616
                  },
                  {
                    "type": "if",
                    "line_number": 620
                  },
                  {
                    "type": "if",
                    "line_number": 623
                  },
                  {
                    "type": "if",
                    "line_number": 629
                  },
                  {
                    "type": "for",
                    "line_number": 637
                  },
                  {
                    "type": "if",
                    "line_number": 639
                  },
                  {
                    "type": "if",
                    "line_number": 643
                  },
                  {
                    "type": "if",
                    "line_number": 645
                  },
                  {
                    "type": "if",
                    "line_number": 648
                  },
                  {
                    "type": "if",
                    "line_number": 650
                  },
                  {
                    "type": "else",
                    "line_number": 652
                  },
                  {
                    "type": "if",
                    "line_number": 657
                  },
                  {
                    "type": "if",
                    "line_number": 662
                  },
                  {
                    "type": "if",
                    "line_number": 668
                  },
                  {
                    "type": "for",
                    "line_number": 676
                  },
                  {
                    "type": "if",
                    "line_number": 686
                  },
                  {
                    "type": "if",
                    "line_number": 691
                  },
                  {
                    "type": "if",
                    "line_number": 697
                  },
                  {
                    "type": "if",
                    "line_number": 705
                  },
                  {
                    "type": "if",
                    "line_number": 708
                  },
                  {
                    "type": "if",
                    "line_number": 715
                  },
                  {
                    "type": "if",
                    "line_number": 723
                  },
                  {
                    "type": "if",
                    "line_number": 731
                  },
                  {
                    "type": "if",
                    "line_number": 736
                  }
                ],
                "complexity": 48,
                "inputs": [
                  "start",
                  "stop"
                ],
                "outputs": [],
                "dependencies": [
                  "abs",
                  "memcpy",
                  "rw_offset",
                  "R_ScaleFromGlobalAngle",
                  "R_RenderSegLoop",
                  "if",
                  "I_Error",
                  "R_CheckPlane",
                  "FixedDiv",
                  "R_PointToDist",
                  "FixedMul"
                ]
              },
              {
                "name": "if",
                "return_type": "if 0",
                "parameters": [
                  {
                    "type": "rw_distance <",
                    "name": "FRACUNIT/2"
                  }
                ],
                "start_line": 431,
                "end_line": 442,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "FixedMul",
                    "line_number": 439
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 440
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 441
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "FRACUNIT/2"
                ],
                "outputs": [
                  "if 0"
                ],
                "dependencies": [
                  "FixedDiv",
                  "FixedMul"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "backsector->floorheight >",
                    "name": "viewz"
                  }
                ],
                "start_line": 493,
                "end_line": 498,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "viewz"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "backsector->ceilingheight <",
                    "name": "viewz"
                  }
                ],
                "start_line": 505,
                "end_line": 510,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "viewz"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "hack to allow height changes in outdoor areas",
                "parameters": [
                  {
                    "type": "frontsector->ceilingpic == skyflatnum && backsector->ceilingpic ==",
                    "name": "skyflatnum"
                  }
                ],
                "start_line": 529,
                "end_line": 532,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "skyflatnum"
                ],
                "outputs": [
                  "hack to allow height changes in outdoor areas"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "allocate space for masked texture tables",
                "parameters": [
                  {
                    "type": "",
                    "name": "sidedef->midtexture"
                  }
                ],
                "start_line": 606,
                "end_line": 612,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "sidedef->midtexture"
                ],
                "outputs": [
                  "allocate space for masked texture tables"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "get rid of LIGHTSEGSHIFT globally",
                "parameters": [
                  {
                    "type": "",
                    "name": "!fixedcolormap"
                  }
                ],
                "start_line": 641,
                "end_line": 656,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 645
                  },
                  {
                    "name": "if",
                    "line_number": 647
                  },
                  {
                    "name": "if",
                    "line_number": 650
                  },
                  {
                    "name": "if",
                    "line_number": 652
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 645
                  },
                  {
                    "type": "if",
                    "line_number": 647
                  },
                  {
                    "type": "if",
                    "line_number": 650
                  },
                  {
                    "type": "if",
                    "line_number": 652
                  },
                  {
                    "type": "else",
                    "line_number": 654
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "!fixedcolormap"
                ],
                "outputs": [
                  "get rid of LIGHTSEGSHIFT globally"
                ],
                "dependencies": [
                  "if"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "segtextured",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 46
              },
              {
                "name": "markfloor",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 49
              },
              {
                "name": "markceiling",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 50
              },
              {
                "name": "maskedtexture",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 52
              },
              {
                "name": "toptexture",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 53
              },
              {
                "name": "bottomtexture",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 54
              },
              {
                "name": "midtexture",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 55
              },
              {
                "name": "rw_normalangle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 58
              },
              {
                "name": "rw_angle1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 60
              },
              {
                "name": "rw_x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 65
              },
              {
                "name": "rw_stopx",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 66
              },
              {
                "name": "rw_centerangle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 67
              },
              {
                "name": "rw_offset",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 68
              },
              {
                "name": "rw_distance",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 69
              },
              {
                "name": "rw_scale",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 70
              },
              {
                "name": "rw_scalestep",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 71
              },
              {
                "name": "rw_midtexturemid",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 72
              },
              {
                "name": "rw_toptexturemid",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 73
              },
              {
                "name": "rw_bottomtexturemid",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 74
              },
              {
                "name": "worldtop",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 76
              },
              {
                "name": "worldbottom",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 77
              },
              {
                "name": "worldhigh",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 78
              },
              {
                "name": "worldlow",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 79
              },
              {
                "name": "pixhigh",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 81
              },
              {
                "name": "pixlow",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 82
              },
              {
                "name": "pixhighstep",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 83
              },
              {
                "name": "pixlowstep",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 84
              },
              {
                "name": "topfrac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 86
              },
              {
                "name": "topstep",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 87
              },
              {
                "name": "bottomfrac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 89
              },
              {
                "name": "bottomstep",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 90
              },
              {
                "name": "index",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 108
              },
              {
                "name": "lightnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 110
              },
              {
                "name": "texnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 111
              },
              {
                "name": "angle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 208
              },
              {
                "name": "index",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 209
              },
              {
                "name": "yl",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 210
              },
              {
                "name": "yh",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 211
              },
              {
                "name": "mid",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 212
              },
              {
                "name": "texturecolumn",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 213
              },
              {
                "name": "top",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 214
              },
              {
                "name": "bottom",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 215
              },
              {
                "name": "hyp",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 379
              },
              {
                "name": "sineval",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 380
              },
              {
                "name": "vtop",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 382
              },
              {
                "name": "lightnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 383
              }
            ],
            "defines": [
              {
                "name": "HEIGHTBITS",
                "value": "12",
                "line_number": 203
              },
              {
                "name": "HEIGHTUNIT",
                "value": "(1<<HEIGHTBITS)",
                "line_number": 204
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/r_segs.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "r_segs.h",
          "type": "file",
          "size": 1074,
          "last_modified": "2024-09-05T16:00:05.202327",
          "path": "linuxdoom-1.10/r_segs.h",
          "readme": "# r_segs.h\n\nThis file contains functionality related to r_segs.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/r_segs.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "r_sky.c",
          "type": "file",
          "size": 1424,
          "last_modified": "2024-09-05T16:00:05.228330",
          "path": "linuxdoom-1.10/r_sky.c",
          "readme": "# r_sky.c\n\nThis file contains functionality related to r_sky.",
          "dependencies": [
            "r_sky.h",
            "m_fixed.h",
            "r_data.h"
          ],
          "inputs": [
            "void"
          ],
          "outputs": [],
          "content": {
            "functions": [
              {
                "name": "R_InitSkyMap",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 57,
                "end_line": 61,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "R_FlatNumForName",
                    "line_number": 59
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "R_FlatNumForName"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "skyflatnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 47
              },
              {
                "name": "skytexture",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 48
              },
              {
                "name": "skytexturemid",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 49
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/r_sky.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "r_sky.h",
          "type": "file",
          "size": 1225,
          "last_modified": "2024-09-05T16:00:05.251429",
          "path": "linuxdoom-1.10/r_sky.h",
          "readme": "# r_sky.h\n\nThis file contains functionality related to r_sky.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "skytexture",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 37
              },
              {
                "name": "skytexturemid",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 38
              }
            ],
            "defines": [
              {
                "name": "SKYFLATNAME",
                "value": "\"F_SKY1\"",
                "line_number": 32
              },
              {
                "name": "ANGLETOSKYSHIFT",
                "value": "22",
                "line_number": 35
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/r_sky.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "r_state.h",
          "type": "file",
          "size": 2642,
          "last_modified": "2024-09-05T16:00:05.277431",
          "path": "linuxdoom-1.10/r_state.h",
          "readme": "# r_state.h\n\nThis file contains functionality related to r_state.",
          "dependencies": [
            "d_player.h",
            "r_data.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "viewwidth",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 54
              },
              {
                "name": "scaledviewwidth",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 55
              },
              {
                "name": "viewheight",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 56
              },
              {
                "name": "firstflat",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 58
              },
              {
                "name": "firstspritelump",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 66
              },
              {
                "name": "lastspritelump",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 67
              },
              {
                "name": "numspritelumps",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 68
              },
              {
                "name": "numsprites",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 75
              },
              {
                "name": "numvertexes",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 78
              },
              {
                "name": "numsegs",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 81
              },
              {
                "name": "numsectors",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 84
              },
              {
                "name": "numsubsectors",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 87
              },
              {
                "name": "numnodes",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 90
              },
              {
                "name": "numlines",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 93
              },
              {
                "name": "numsides",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 96
              },
              {
                "name": "viewx",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 103
              },
              {
                "name": "viewy",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 104
              },
              {
                "name": "viewz",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 105
              },
              {
                "name": "viewangle",
                "type": "angle_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 107
              },
              {
                "name": "clipangle",
                "type": "angle_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 112
              },
              {
                "name": "rw_distance",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 118
              },
              {
                "name": "rw_normalangle",
                "type": "angle_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 119
              },
              {
                "name": "rw_angle1",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 124
              },
              {
                "name": "sscount",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 127
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/r_state.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "r_things.c",
          "type": "file",
          "size": 20752,
          "last_modified": "2024-09-05T16:00:05.302428",
          "path": "linuxdoom-1.10/r_things.c",
          "readme": "# r_things.c\n\nThis file contains functionality related to r_things.",
          "dependencies": [
            "w_wad.h",
            "stdio.h",
            "m_swap.h",
            "r_local.h",
            "z_zone.h",
            "i_system.h",
            "stdlib.h",
            "doomstat.h",
            "doomdef.h"
          ],
          "inputs": [
            "i=0",
            "FF_FULLBRIGHT",
            "spr=spr->next",
            "fixedcolormap",
            "x2",
            "i++",
            "-1",
            "namelist",
            "vis",
            "psp++",
            "l++",
            "column",
            "spr",
            "flipped",
            "2",
            "rotation",
            "void",
            "frame",
            "psp",
            "sec",
            "thing",
            "MF_SHADOW",
            "x++",
            "lump",
            "3",
            "MF_TRANSLATION",
            "x1"
          ],
          "outputs": [
            "both",
            "Just compare 4 characters as ints",
            "get light level",
            "filling in the frames for whatever is found",
            "add all active psprites",
            "check the frames that were found for completeness",
            "draw all vissprites back to front",
            "check for unclipped columns",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "R_InstallSpriteLump",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "lump"
                  },
                  {
                    "type": "unsigned",
                    "name": "frame"
                  },
                  {
                    "type": "unsigned",
                    "name": "rotation"
                  },
                  {
                    "type": "boolean",
                    "name": "flipped"
                  }
                ],
                "start_line": 105,
                "end_line": 152,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "r",
                    "array_size": null,
                    "line_number": 107
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 109
                  },
                  {
                    "name": "I_Error",
                    "line_number": 110
                  },
                  {
                    "name": "if",
                    "line_number": 113
                  },
                  {
                    "name": "if",
                    "line_number": 116
                  },
                  {
                    "name": "if",
                    "line_number": 119
                  },
                  {
                    "name": "I_Error",
                    "line_number": 120
                  },
                  {
                    "name": "if",
                    "line_number": 123
                  },
                  {
                    "name": "I_Error",
                    "line_number": 124
                  },
                  {
                    "name": "for",
                    "line_number": 128
                  },
                  {
                    "name": "if",
                    "line_number": 137
                  },
                  {
                    "name": "I_Error",
                    "line_number": 138
                  },
                  {
                    "name": "if",
                    "line_number": 145
                  },
                  {
                    "name": "I_Error",
                    "line_number": 146
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 109
                  },
                  {
                    "type": "if",
                    "line_number": 113
                  },
                  {
                    "type": "if",
                    "line_number": 116
                  },
                  {
                    "type": "for",
                    "line_number": 118
                  },
                  {
                    "type": "if",
                    "line_number": 119
                  },
                  {
                    "type": "if",
                    "line_number": 123
                  },
                  {
                    "type": "for",
                    "line_number": 128
                  },
                  {
                    "type": "for",
                    "line_number": 136
                  },
                  {
                    "type": "if",
                    "line_number": 137
                  },
                  {
                    "type": "if",
                    "line_number": 145
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "lump",
                  "frame",
                  "rotation",
                  "flipped"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "I_Error",
                  "if"
                ]
              },
              {
                "name": "R_InitSpriteDefs",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char**",
                    "name": "namelist"
                  }
                ],
                "start_line": 177,
                "end_line": 281,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 180
                  },
                  {
                    "type": "int",
                    "name": "l",
                    "array_size": null,
                    "line_number": 181
                  },
                  {
                    "type": "int",
                    "name": "intname",
                    "array_size": null,
                    "line_number": 182
                  },
                  {
                    "type": "int",
                    "name": "frame",
                    "array_size": null,
                    "line_number": 183
                  },
                  {
                    "type": "int",
                    "name": "rotation",
                    "array_size": null,
                    "line_number": 184
                  },
                  {
                    "type": "int",
                    "name": "start",
                    "array_size": null,
                    "line_number": 185
                  },
                  {
                    "type": "int",
                    "name": "end",
                    "array_size": null,
                    "line_number": 186
                  },
                  {
                    "type": "int",
                    "name": "patched",
                    "array_size": null,
                    "line_number": 187
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 191
                  },
                  {
                    "name": "if",
                    "line_number": 196
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 199
                  },
                  {
                    "name": "sizeof",
                    "line_number": 199
                  },
                  {
                    "name": "for",
                    "line_number": 207
                  },
                  {
                    "name": "memset",
                    "line_number": 210
                  },
                  {
                    "name": "sizeof",
                    "line_number": 210
                  },
                  {
                    "name": "for",
                    "line_number": 217
                  },
                  {
                    "name": "if",
                    "line_number": 219
                  },
                  {
                    "name": "if",
                    "line_number": 224
                  },
                  {
                    "name": "W_GetNumForName",
                    "line_number": 225
                  },
                  {
                    "name": "R_InstallSpriteLump",
                    "line_number": 229
                  },
                  {
                    "name": "if",
                    "line_number": 231
                  },
                  {
                    "name": "R_InstallSpriteLump",
                    "line_number": 235
                  },
                  {
                    "name": "if",
                    "line_number": 241
                  },
                  {
                    "name": "for",
                    "line_number": 249
                  },
                  {
                    "name": "switch",
                    "line_number": 251
                  },
                  {
                    "name": "I_Error",
                    "line_number": 255
                  },
                  {
                    "name": "for",
                    "line_number": 265
                  },
                  {
                    "name": "if",
                    "line_number": 266
                  },
                  {
                    "name": "I_Error",
                    "line_number": 267
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 277
                  },
                  {
                    "name": "sizeof",
                    "line_number": 277
                  },
                  {
                    "name": "memcpy",
                    "line_number": 278
                  },
                  {
                    "name": "sizeof",
                    "line_number": 278
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 191
                  },
                  {
                    "type": "if",
                    "line_number": 196
                  },
                  {
                    "type": "for",
                    "line_number": 204
                  },
                  {
                    "type": "for",
                    "line_number": 207
                  },
                  {
                    "type": "for",
                    "line_number": 216
                  },
                  {
                    "type": "for",
                    "line_number": 217
                  },
                  {
                    "type": "if",
                    "line_number": 219
                  },
                  {
                    "type": "if",
                    "line_number": 224
                  },
                  {
                    "type": "else",
                    "line_number": 226
                  },
                  {
                    "type": "if",
                    "line_number": 231
                  },
                  {
                    "type": "for",
                    "line_number": 240
                  },
                  {
                    "type": "if",
                    "line_number": 241
                  },
                  {
                    "type": "for",
                    "line_number": 249
                  },
                  {
                    "type": "for",
                    "line_number": 254
                  },
                  {
                    "type": "for",
                    "line_number": 256
                  },
                  {
                    "type": "for",
                    "line_number": 265
                  },
                  {
                    "type": "if",
                    "line_number": 266
                  },
                  {
                    "type": "for",
                    "line_number": 274
                  }
                ],
                "complexity": 12,
                "inputs": [
                  "namelist"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "Z_Malloc",
                  "for",
                  "if",
                  "memset",
                  "I_Error",
                  "sizeof",
                  "R_InstallSpriteLump",
                  "W_GetNumForName",
                  "memcpy",
                  "switch"
                ]
              },
              {
                "name": "for",
                "return_type": "Just compare 4 characters as ints",
                "parameters": [
                  {
                    "type": "i=0 ; i<numsprites ;",
                    "name": "i++"
                  }
                ],
                "start_line": 206,
                "end_line": 278,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "memset",
                    "line_number": 209
                  },
                  {
                    "name": "sizeof",
                    "line_number": 209
                  },
                  {
                    "name": "for",
                    "line_number": 216
                  },
                  {
                    "name": "if",
                    "line_number": 218
                  },
                  {
                    "name": "if",
                    "line_number": 223
                  },
                  {
                    "name": "W_GetNumForName",
                    "line_number": 224
                  },
                  {
                    "name": "R_InstallSpriteLump",
                    "line_number": 228
                  },
                  {
                    "name": "if",
                    "line_number": 230
                  },
                  {
                    "name": "R_InstallSpriteLump",
                    "line_number": 234
                  },
                  {
                    "name": "if",
                    "line_number": 240
                  },
                  {
                    "name": "for",
                    "line_number": 248
                  },
                  {
                    "name": "switch",
                    "line_number": 250
                  },
                  {
                    "name": "I_Error",
                    "line_number": 254
                  },
                  {
                    "name": "for",
                    "line_number": 264
                  },
                  {
                    "name": "if",
                    "line_number": 265
                  },
                  {
                    "name": "I_Error",
                    "line_number": 266
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 276
                  },
                  {
                    "name": "sizeof",
                    "line_number": 276
                  },
                  {
                    "name": "memcpy",
                    "line_number": 277
                  },
                  {
                    "name": "sizeof",
                    "line_number": 277
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 215
                  },
                  {
                    "type": "for",
                    "line_number": 216
                  },
                  {
                    "type": "if",
                    "line_number": 218
                  },
                  {
                    "type": "if",
                    "line_number": 223
                  },
                  {
                    "type": "else",
                    "line_number": 225
                  },
                  {
                    "type": "if",
                    "line_number": 230
                  },
                  {
                    "type": "for",
                    "line_number": 239
                  },
                  {
                    "type": "if",
                    "line_number": 240
                  },
                  {
                    "type": "for",
                    "line_number": 248
                  },
                  {
                    "type": "for",
                    "line_number": 253
                  },
                  {
                    "type": "for",
                    "line_number": 255
                  },
                  {
                    "type": "for",
                    "line_number": 264
                  },
                  {
                    "type": "if",
                    "line_number": 265
                  },
                  {
                    "type": "for",
                    "line_number": 273
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "i++"
                ],
                "outputs": [
                  "Just compare 4 characters as ints"
                ],
                "dependencies": [
                  "Z_Malloc",
                  "for",
                  "if",
                  "memset",
                  "I_Error",
                  "sizeof",
                  "R_InstallSpriteLump",
                  "W_GetNumForName",
                  "memcpy",
                  "switch"
                ]
              },
              {
                "name": "for",
                "return_type": "filling in the frames for whatever is found",
                "parameters": [
                  {
                    "type": "l=start+1 ; l<end ;",
                    "name": "l++"
                  }
                ],
                "start_line": 216,
                "end_line": 237,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 218
                  },
                  {
                    "name": "if",
                    "line_number": 223
                  },
                  {
                    "name": "W_GetNumForName",
                    "line_number": 224
                  },
                  {
                    "name": "R_InstallSpriteLump",
                    "line_number": 228
                  },
                  {
                    "name": "if",
                    "line_number": 230
                  },
                  {
                    "name": "R_InstallSpriteLump",
                    "line_number": 234
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 218
                  },
                  {
                    "type": "if",
                    "line_number": 223
                  },
                  {
                    "type": "else",
                    "line_number": 225
                  },
                  {
                    "type": "if",
                    "line_number": 230
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "l++"
                ],
                "outputs": [
                  "filling in the frames for whatever is found"
                ],
                "dependencies": [
                  "R_InstallSpriteLump",
                  "W_GetNumForName",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "check the frames that were found for completeness",
                "parameters": [
                  {
                    "type": "maxframe ==",
                    "name": "-1"
                  }
                ],
                "start_line": 240,
                "end_line": 244,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "-1"
                ],
                "outputs": [
                  "check the frames that were found for completeness"
                ],
                "dependencies": []
              },
              {
                "name": "R_InitSprites",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char**",
                    "name": "namelist"
                  }
                ],
                "start_line": 299,
                "end_line": 309,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 301
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 303
                  },
                  {
                    "name": "R_InitSpriteDefs",
                    "line_number": 308
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 303
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "namelist"
                ],
                "outputs": [],
                "dependencies": [
                  "R_InitSpriteDefs",
                  "for"
                ]
              },
              {
                "name": "R_ClearSprites",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 317,
                "end_line": 320,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "R_DrawMaskedColumn",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "column_t*",
                    "name": "column"
                  }
                ],
                "start_line": 351,
                "end_line": 388,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "topscreen",
                    "array_size": null,
                    "line_number": 353
                  },
                  {
                    "type": "int",
                    "name": "bottomscreen",
                    "array_size": null,
                    "line_number": 354
                  },
                  {
                    "type": "fixed_t",
                    "name": "basetexturemid",
                    "array_size": null,
                    "line_number": 355
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 359
                  },
                  {
                    "name": "if",
                    "line_number": 369
                  },
                  {
                    "name": "if",
                    "line_number": 371
                  },
                  {
                    "name": "if",
                    "line_number": 374
                  },
                  {
                    "name": "or",
                    "line_number": 381
                  },
                  {
                    "name": "colfunc",
                    "line_number": 382
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 359
                  },
                  {
                    "type": "for",
                    "line_number": 362
                  },
                  {
                    "type": "if",
                    "line_number": 369
                  },
                  {
                    "type": "if",
                    "line_number": 371
                  },
                  {
                    "type": "if",
                    "line_number": 374
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "column"
                ],
                "outputs": [],
                "dependencies": [
                  "colfunc",
                  "or",
                  "if",
                  "for"
                ]
              },
              {
                "name": "R_DrawVisSprite",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "vissprite_t*",
                    "name": "vis"
                  },
                  {
                    "type": "int",
                    "name": "x1"
                  },
                  {
                    "type": "int",
                    "name": "x2"
                  }
                ],
                "start_line": 396,
                "end_line": 439,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "texturecolumn",
                    "array_size": null,
                    "line_number": 399
                  },
                  {
                    "type": "fixed_t",
                    "name": "frac",
                    "array_size": null,
                    "line_number": 400
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 404
                  },
                  {
                    "name": "if",
                    "line_number": 408
                  },
                  {
                    "name": "if",
                    "line_number": 413
                  },
                  {
                    "name": "abs",
                    "line_number": 420
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 424
                  },
                  {
                    "name": "for",
                    "line_number": 426
                  },
                  {
                    "name": "if",
                    "line_number": 430
                  },
                  {
                    "name": "SHORT",
                    "line_number": 430
                  },
                  {
                    "name": "I_Error",
                    "line_number": 431
                  },
                  {
                    "name": "LONG",
                    "line_number": 434
                  },
                  {
                    "name": "R_DrawMaskedColumn",
                    "line_number": 435
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 408
                  },
                  {
                    "type": "if",
                    "line_number": 413
                  },
                  {
                    "type": "for",
                    "line_number": 426
                  },
                  {
                    "type": "if",
                    "line_number": 430
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "vis",
                  "x1",
                  "x2"
                ],
                "outputs": [],
                "dependencies": [
                  "abs",
                  "R_DrawMaskedColumn",
                  "for",
                  "if",
                  "I_Error",
                  "W_CacheLumpNum",
                  "LONG",
                  "SHORT",
                  "FixedMul"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "vis->mobjflags &",
                    "name": "MF_TRANSLATION"
                  }
                ],
                "start_line": 417,
                "end_line": 422,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "MF_TRANSLATION"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "R_ProjectSprite",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "thing"
                  }
                ],
                "start_line": 452,
                "end_line": 604,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "tr_x",
                    "array_size": null,
                    "line_number": 454
                  },
                  {
                    "type": "fixed_t",
                    "name": "tr_y",
                    "array_size": null,
                    "line_number": 455
                  },
                  {
                    "type": "fixed_t",
                    "name": "gxt",
                    "array_size": null,
                    "line_number": 457
                  },
                  {
                    "type": "fixed_t",
                    "name": "gyt",
                    "array_size": null,
                    "line_number": 458
                  },
                  {
                    "type": "fixed_t",
                    "name": "tx",
                    "array_size": null,
                    "line_number": 460
                  },
                  {
                    "type": "fixed_t",
                    "name": "tz",
                    "array_size": null,
                    "line_number": 461
                  },
                  {
                    "type": "fixed_t",
                    "name": "xscale",
                    "array_size": null,
                    "line_number": 463
                  },
                  {
                    "type": "int",
                    "name": "x1",
                    "array_size": null,
                    "line_number": 465
                  },
                  {
                    "type": "int",
                    "name": "x2",
                    "array_size": null,
                    "line_number": 466
                  },
                  {
                    "type": "int",
                    "name": "lump",
                    "array_size": null,
                    "line_number": 470
                  },
                  {
                    "type": "unsigned",
                    "name": "rot",
                    "array_size": null,
                    "line_number": 472
                  },
                  {
                    "type": "boolean",
                    "name": "flip",
                    "array_size": null,
                    "line_number": 473
                  },
                  {
                    "type": "int",
                    "name": "index",
                    "array_size": null,
                    "line_number": 475
                  },
                  {
                    "type": "angle_t",
                    "name": "ang",
                    "array_size": null,
                    "line_number": 479
                  },
                  {
                    "type": "fixed_t",
                    "name": "iscale",
                    "array_size": null,
                    "line_number": 480
                  }
                ],
                "function_calls": [
                  {
                    "name": "FixedMul",
                    "line_number": 486
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 487
                  },
                  {
                    "name": "if",
                    "line_number": 492
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 495
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 497
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 498
                  },
                  {
                    "name": "if",
                    "line_number": 502
                  },
                  {
                    "name": "abs",
                    "line_number": 502
                  },
                  {
                    "name": "if",
                    "line_number": 507
                  },
                  {
                    "name": "I_Error",
                    "line_number": 508
                  },
                  {
                    "name": "if",
                    "line_number": 513
                  },
                  {
                    "name": "I_Error",
                    "line_number": 514
                  },
                  {
                    "name": "if",
                    "line_number": 519
                  },
                  {
                    "name": "R_PointToAngle",
                    "line_number": 522
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 536
                  },
                  {
                    "name": "if",
                    "line_number": 539
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 543
                  },
                  {
                    "name": "if",
                    "line_number": 546
                  },
                  {
                    "name": "R_NewVisSprite",
                    "line_number": 550
                  },
                  {
                    "name": "FixedDiv",
                    "line_number": 560
                  },
                  {
                    "name": "if",
                    "line_number": 562
                  },
                  {
                    "name": "if",
                    "line_number": 573
                  },
                  {
                    "name": "if",
                    "line_number": 578
                  },
                  {
                    "name": "if",
                    "line_number": 583
                  },
                  {
                    "name": "if",
                    "line_number": 588
                  },
                  {
                    "name": "if",
                    "line_number": 599
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 492
                  },
                  {
                    "type": "if",
                    "line_number": 502
                  },
                  {
                    "type": "for",
                    "line_number": 505
                  },
                  {
                    "type": "if",
                    "line_number": 507
                  },
                  {
                    "type": "if",
                    "line_number": 513
                  },
                  {
                    "type": "if",
                    "line_number": 519
                  },
                  {
                    "type": "else",
                    "line_number": 527
                  },
                  {
                    "type": "for",
                    "line_number": 529
                  },
                  {
                    "type": "if",
                    "line_number": 539
                  },
                  {
                    "type": "if",
                    "line_number": 546
                  },
                  {
                    "type": "if",
                    "line_number": 562
                  },
                  {
                    "type": "else",
                    "line_number": 567
                  },
                  {
                    "type": "if",
                    "line_number": 573
                  },
                  {
                    "type": "if",
                    "line_number": 578
                  },
                  {
                    "type": "if",
                    "line_number": 583
                  },
                  {
                    "type": "if",
                    "line_number": 588
                  },
                  {
                    "type": "else",
                    "line_number": 594
                  },
                  {
                    "type": "if",
                    "line_number": 599
                  }
                ],
                "complexity": 12,
                "inputs": [
                  "thing"
                ],
                "outputs": [],
                "dependencies": [
                  "abs",
                  "if",
                  "I_Error",
                  "R_PointToAngle",
                  "FixedDiv",
                  "R_NewVisSprite",
                  "FixedMul"
                ]
              },
              {
                "name": "if",
                "return_type": "get light level",
                "parameters": [
                  {
                    "type": "thing->flags &",
                    "name": "MF_SHADOW"
                  }
                ],
                "start_line": 577,
                "end_line": 581,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "MF_SHADOW"
                ],
                "outputs": [
                  "get light level"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "",
                    "name": "fixedcolormap"
                  }
                ],
                "start_line": 583,
                "end_line": 587,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "fixedcolormap"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "thing->frame &",
                    "name": "FF_FULLBRIGHT"
                  }
                ],
                "start_line": 588,
                "end_line": 592,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "FF_FULLBRIGHT"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "R_AddSprites",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "sector_t*",
                    "name": "sec"
                  }
                ],
                "start_line": 613,
                "end_line": 640,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "lightnum",
                    "array_size": null,
                    "line_number": 616
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 622
                  },
                  {
                    "name": "if",
                    "line_number": 630
                  },
                  {
                    "name": "if",
                    "line_number": 632
                  },
                  {
                    "name": "for",
                    "line_number": 638
                  },
                  {
                    "name": "R_ProjectSprite",
                    "line_number": 639
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 622
                  },
                  {
                    "type": "if",
                    "line_number": 630
                  },
                  {
                    "type": "if",
                    "line_number": 632
                  },
                  {
                    "type": "else",
                    "line_number": 634
                  },
                  {
                    "type": "for",
                    "line_number": 638
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "sec"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "R_ProjectSprite",
                  "if"
                ]
              },
              {
                "name": "R_DrawPSprite",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "pspdef_t*",
                    "name": "psp"
                  }
                ],
                "start_line": 646,
                "end_line": 739,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "tx",
                    "array_size": null,
                    "line_number": 648
                  },
                  {
                    "type": "int",
                    "name": "x1",
                    "array_size": null,
                    "line_number": 649
                  },
                  {
                    "type": "int",
                    "name": "x2",
                    "array_size": null,
                    "line_number": 650
                  },
                  {
                    "type": "int",
                    "name": "lump",
                    "array_size": null,
                    "line_number": 653
                  },
                  {
                    "type": "boolean",
                    "name": "flip",
                    "array_size": null,
                    "line_number": 654
                  },
                  {
                    "type": "vissprite_t",
                    "name": "avis",
                    "array_size": null,
                    "line_number": 656
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 660
                  },
                  {
                    "name": "I_Error",
                    "line_number": 661
                  },
                  {
                    "name": "if",
                    "line_number": 666
                  },
                  {
                    "name": "I_Error",
                    "line_number": 667
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 679
                  },
                  {
                    "name": "if",
                    "line_number": 682
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 686
                  },
                  {
                    "name": "if",
                    "line_number": 689
                  },
                  {
                    "name": "if",
                    "line_number": 700
                  },
                  {
                    "name": "if",
                    "line_number": 711
                  },
                  {
                    "name": "if",
                    "line_number": 716
                  },
                  {
                    "name": "if",
                    "line_number": 722
                  },
                  {
                    "name": "if",
                    "line_number": 727
                  },
                  {
                    "name": "R_DrawVisSprite",
                    "line_number": 738
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 660
                  },
                  {
                    "type": "if",
                    "line_number": 666
                  },
                  {
                    "type": "if",
                    "line_number": 682
                  },
                  {
                    "type": "if",
                    "line_number": 689
                  },
                  {
                    "type": "if",
                    "line_number": 700
                  },
                  {
                    "type": "else",
                    "line_number": 705
                  },
                  {
                    "type": "if",
                    "line_number": 711
                  },
                  {
                    "type": "if",
                    "line_number": 716
                  },
                  {
                    "type": "if",
                    "line_number": 722
                  },
                  {
                    "type": "if",
                    "line_number": 727
                  },
                  {
                    "type": "else",
                    "line_number": 732
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "psp"
                ],
                "outputs": [],
                "dependencies": [
                  "R_DrawVisSprite",
                  "I_Error",
                  "FixedMul",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "",
                    "name": "fixedcolormap"
                  }
                ],
                "start_line": 722,
                "end_line": 726,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "fixedcolormap"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "psp->state->frame &",
                    "name": "FF_FULLBRIGHT"
                  }
                ],
                "start_line": 727,
                "end_line": 731,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "FF_FULLBRIGHT"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "R_DrawPlayerSprites",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 746,
                "end_line": 776,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 748
                  },
                  {
                    "type": "int",
                    "name": "lightnum",
                    "array_size": null,
                    "line_number": 749
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 757
                  },
                  {
                    "name": "if",
                    "line_number": 759
                  },
                  {
                    "name": "for",
                    "line_number": 769
                  },
                  {
                    "name": "if",
                    "line_number": 773
                  },
                  {
                    "name": "R_DrawPSprite",
                    "line_number": 774
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 757
                  },
                  {
                    "type": "if",
                    "line_number": 759
                  },
                  {
                    "type": "else",
                    "line_number": 761
                  },
                  {
                    "type": "for",
                    "line_number": 769
                  },
                  {
                    "type": "if",
                    "line_number": 773
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "R_DrawPSprite",
                  "if"
                ]
              },
              {
                "name": "for",
                "return_type": "add all active psprites",
                "parameters": [
                  {
                    "type": "",
                    "name": "i=0"
                  },
                  {
                    "type": "psp=viewplayer->psprites; i<NUMPSPRITES;",
                    "name": "i++"
                  },
                  {
                    "type": "",
                    "name": "psp++"
                  }
                ],
                "start_line": 768,
                "end_line": 772,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 770
                  },
                  {
                    "name": "R_DrawPSprite",
                    "line_number": 771
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 770
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "i=0",
                  "i++",
                  "psp++"
                ],
                "outputs": [
                  "add all active psprites"
                ],
                "dependencies": [
                  "R_DrawPSprite",
                  "if"
                ]
              },
              {
                "name": "R_SortVisSprites",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 787,
                "end_line": 835,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 789
                  },
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 790
                  },
                  {
                    "type": "vissprite_t",
                    "name": "unsorted",
                    "array_size": null,
                    "line_number": 793
                  },
                  {
                    "type": "fixed_t",
                    "name": "bestscale",
                    "array_size": null,
                    "line_number": 794
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 800
                  },
                  {
                    "name": "for",
                    "line_number": 803
                  },
                  {
                    "name": "for",
                    "line_number": 817
                  },
                  {
                    "name": "for",
                    "line_number": 820
                  },
                  {
                    "name": "if",
                    "line_number": 822
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 800
                  },
                  {
                    "type": "for",
                    "line_number": 803
                  },
                  {
                    "type": "for",
                    "line_number": 817
                  },
                  {
                    "type": "for",
                    "line_number": 820
                  },
                  {
                    "type": "if",
                    "line_number": 822
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "if"
                ]
              },
              {
                "name": "R_DrawSprite",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "vissprite_t*",
                    "name": "spr"
                  }
                ],
                "start_line": 842,
                "end_line": 950,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 847
                  },
                  {
                    "type": "int",
                    "name": "r1",
                    "array_size": null,
                    "line_number": 848
                  },
                  {
                    "type": "int",
                    "name": "r2",
                    "array_size": null,
                    "line_number": 849
                  },
                  {
                    "type": "fixed_t",
                    "name": "scale",
                    "array_size": null,
                    "line_number": 850
                  },
                  {
                    "type": "fixed_t",
                    "name": "lowscale",
                    "array_size": null,
                    "line_number": 851
                  },
                  {
                    "type": "int",
                    "name": "silhouette",
                    "array_size": null,
                    "line_number": 852
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 854
                  },
                  {
                    "name": "for",
                    "line_number": 860
                  },
                  {
                    "name": "if",
                    "line_number": 863
                  },
                  {
                    "name": "if",
                    "line_number": 875
                  },
                  {
                    "name": "if",
                    "line_number": 886
                  },
                  {
                    "name": "R_PointOnSegSide",
                    "line_number": 888
                  },
                  {
                    "name": "if",
                    "line_number": 891
                  },
                  {
                    "name": "R_RenderMaskedSegRange",
                    "line_number": 892
                  },
                  {
                    "name": "if",
                    "line_number": 901
                  },
                  {
                    "name": "if",
                    "line_number": 904
                  },
                  {
                    "name": "if",
                    "line_number": 907
                  },
                  {
                    "name": "for",
                    "line_number": 910
                  },
                  {
                    "name": "if",
                    "line_number": 911
                  },
                  {
                    "name": "if",
                    "line_number": 914
                  },
                  {
                    "name": "for",
                    "line_number": 917
                  },
                  {
                    "name": "if",
                    "line_number": 918
                  },
                  {
                    "name": "if",
                    "line_number": 921
                  },
                  {
                    "name": "for",
                    "line_number": 924
                  },
                  {
                    "name": "if",
                    "line_number": 926
                  },
                  {
                    "name": "if",
                    "line_number": 928
                  },
                  {
                    "name": "for",
                    "line_number": 938
                  },
                  {
                    "name": "if",
                    "line_number": 940
                  },
                  {
                    "name": "if",
                    "line_number": 943
                  },
                  {
                    "name": "R_DrawVisSprite",
                    "line_number": 949
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 854
                  },
                  {
                    "type": "for",
                    "line_number": 857
                  },
                  {
                    "type": "for",
                    "line_number": 860
                  },
                  {
                    "type": "if",
                    "line_number": 862
                  },
                  {
                    "type": "if",
                    "line_number": 863
                  },
                  {
                    "type": "if",
                    "line_number": 875
                  },
                  {
                    "type": "else",
                    "line_number": 880
                  },
                  {
                    "type": "if",
                    "line_number": 886
                  },
                  {
                    "type": "if",
                    "line_number": 891
                  },
                  {
                    "type": "if",
                    "line_number": 901
                  },
                  {
                    "type": "if",
                    "line_number": 904
                  },
                  {
                    "type": "if",
                    "line_number": 907
                  },
                  {
                    "type": "for",
                    "line_number": 910
                  },
                  {
                    "type": "if",
                    "line_number": 911
                  },
                  {
                    "type": "if",
                    "line_number": 914
                  },
                  {
                    "type": "for",
                    "line_number": 917
                  },
                  {
                    "type": "if",
                    "line_number": 918
                  },
                  {
                    "type": "if",
                    "line_number": 921
                  },
                  {
                    "type": "for",
                    "line_number": 924
                  },
                  {
                    "type": "if",
                    "line_number": 926
                  },
                  {
                    "type": "if",
                    "line_number": 928
                  },
                  {
                    "type": "for",
                    "line_number": 937
                  },
                  {
                    "type": "for",
                    "line_number": 938
                  },
                  {
                    "type": "if",
                    "line_number": 940
                  },
                  {
                    "type": "if",
                    "line_number": 943
                  }
                ],
                "complexity": 25,
                "inputs": [
                  "spr"
                ],
                "outputs": [],
                "dependencies": [
                  "R_RenderMaskedSegRange",
                  "if",
                  "for",
                  "R_PointOnSegSide",
                  "R_DrawVisSprite"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "silhouette ==",
                    "name": "2"
                  }
                ],
                "start_line": 914,
                "end_line": 920,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 917
                  },
                  {
                    "name": "if",
                    "line_number": 918
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 917
                  },
                  {
                    "type": "if",
                    "line_number": 918
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "2"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "silhouette ==",
                    "name": "3"
                  }
                ],
                "start_line": 921,
                "end_line": 931,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 924
                  },
                  {
                    "name": "if",
                    "line_number": 926
                  },
                  {
                    "name": "if",
                    "line_number": 928
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 924
                  },
                  {
                    "type": "if",
                    "line_number": 926
                  },
                  {
                    "type": "if",
                    "line_number": 928
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "3"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "for",
                "return_type": "both",
                "parameters": [
                  {
                    "type": "x=r1 ; x<=r2 ;",
                    "name": "x++"
                  }
                ],
                "start_line": 923,
                "end_line": 929,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 925
                  },
                  {
                    "name": "if",
                    "line_number": 927
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 925
                  },
                  {
                    "type": "if",
                    "line_number": 927
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "x++"
                ],
                "outputs": [
                  "both"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "for",
                "return_type": "check for unclipped columns",
                "parameters": [
                  {
                    "type": "x = spr->x1 ; x<=spr->x2 ;",
                    "name": "x++"
                  }
                ],
                "start_line": 937,
                "end_line": 944,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 939
                  },
                  {
                    "name": "if",
                    "line_number": 942
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 939
                  },
                  {
                    "type": "if",
                    "line_number": 942
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "x++"
                ],
                "outputs": [
                  "check for unclipped columns"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "R_DrawMasked",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 958,
                "end_line": 986,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "R_SortVisSprites",
                    "line_number": 963
                  },
                  {
                    "name": "if",
                    "line_number": 965
                  },
                  {
                    "name": "for",
                    "line_number": 968
                  },
                  {
                    "name": "R_DrawSprite",
                    "line_number": 973
                  },
                  {
                    "name": "for",
                    "line_number": 978
                  },
                  {
                    "name": "if",
                    "line_number": 979
                  },
                  {
                    "name": "R_RenderMaskedSegRange",
                    "line_number": 980
                  },
                  {
                    "name": "if",
                    "line_number": 984
                  },
                  {
                    "name": "R_DrawPlayerSprites",
                    "line_number": 985
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 965
                  },
                  {
                    "type": "for",
                    "line_number": 968
                  },
                  {
                    "type": "for",
                    "line_number": 978
                  },
                  {
                    "type": "if",
                    "line_number": 979
                  },
                  {
                    "type": "if",
                    "line_number": 984
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "R_RenderMaskedSegRange",
                  "R_DrawSprite",
                  "for",
                  "if",
                  "R_SortVisSprites",
                  "R_DrawPlayerSprites"
                ]
              },
              {
                "name": "for",
                "return_type": "draw all vissprites back to front",
                "parameters": [
                  {
                    "type": "spr = vsprsortedhead.next ; spr != &vsprsortedhead ;",
                    "name": "spr=spr->next"
                  }
                ],
                "start_line": 967,
                "end_line": 971,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "R_DrawSprite",
                    "line_number": 970
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "spr=spr->next"
                ],
                "outputs": [
                  "draw all vissprites back to front"
                ],
                "dependencies": [
                  "R_DrawSprite"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "x1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 56
              },
              {
                "name": "x2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 57
              },
              {
                "name": "column",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 59
              },
              {
                "name": "topclip",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 60
              },
              {
                "name": "bottomclip",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 61
              },
              {
                "name": "pspritescale",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 74
              },
              {
                "name": "pspriteiscale",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 75
              },
              {
                "name": "numsprites",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 92
              },
              {
                "name": "sprtemp",
                "type": "spriteframe_t",
                "storage_class": null,
                "array_size": "29",
                "line_number": 94
              },
              {
                "name": "maxframe",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 95
              },
              {
                "name": "r",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 112
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 180
              },
              {
                "name": "l",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 181
              },
              {
                "name": "intname",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 182
              },
              {
                "name": "frame",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 183
              },
              {
                "name": "rotation",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 184
              },
              {
                "name": "start",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 185
              },
              {
                "name": "end",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 186
              },
              {
                "name": "patched",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 187
              },
              {
                "name": "newvissprite",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 291
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 301
              },
              {
                "name": "overflowsprite",
                "type": "vissprite_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 326
              },
              {
                "name": "spryscale",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 348
              },
              {
                "name": "sprtopscreen",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 349
              },
              {
                "name": "topscreen",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 353
              },
              {
                "name": "bottomscreen",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 354
              },
              {
                "name": "basetexturemid",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 355
              },
              {
                "name": "texturecolumn",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 403
              },
              {
                "name": "frac",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 404
              },
              {
                "name": "tr_x",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 454
              },
              {
                "name": "tr_y",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 455
              },
              {
                "name": "gxt",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 457
              },
              {
                "name": "gyt",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 458
              },
              {
                "name": "tx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 460
              },
              {
                "name": "tz",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 461
              },
              {
                "name": "xscale",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 463
              },
              {
                "name": "x1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 465
              },
              {
                "name": "x2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 466
              },
              {
                "name": "lump",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 470
              },
              {
                "name": "rot",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 472
              },
              {
                "name": "flip",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 473
              },
              {
                "name": "index",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 475
              },
              {
                "name": "ang",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 479
              },
              {
                "name": "iscale",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 480
              },
              {
                "name": "lightnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 616
              },
              {
                "name": "tx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 648
              },
              {
                "name": "x1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 649
              },
              {
                "name": "x2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 650
              },
              {
                "name": "lump",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 653
              },
              {
                "name": "flip",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 654
              },
              {
                "name": "avis",
                "type": "vissprite_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 656
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 748
              },
              {
                "name": "lightnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 749
              },
              {
                "name": "vsprsortedhead",
                "type": "vissprite_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 784
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 789
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 790
              },
              {
                "name": "unsorted",
                "type": "vissprite_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 793
              },
              {
                "name": "bestscale",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 794
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 847
              },
              {
                "name": "r1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 848
              },
              {
                "name": "r2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 849
              },
              {
                "name": "scale",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 850
              },
              {
                "name": "lowscale",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 851
              },
              {
                "name": "silhouette",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 852
              }
            ],
            "defines": [
              {
                "name": "MINZ",
                "value": "(FRACUNIT*4)",
                "line_number": 46
              },
              {
                "name": "BASEYCENTER",
                "value": "100",
                "line_number": 47
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/r_things.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of functions",
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "r_things.h",
          "type": "file",
          "size": 1845,
          "last_modified": "2024-09-05T16:00:05.325427",
          "path": "linuxdoom-1.10/r_things.h",
          "readme": "# r_things.h\n\nThis file contains functionality related to r_things.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "vsprsortedhead",
                "type": "vissprite_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 35
              },
              {
                "name": "spryscale",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 45
              },
              {
                "name": "sprtopscreen",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 46
              },
              {
                "name": "pspritescale",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 48
              },
              {
                "name": "pspriteiscale",
                "type": "fixed_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 49
              }
            ],
            "defines": [
              {
                "name": "MAXVISSPRITES",
                "value": "128",
                "line_number": 31
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/r_things.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "sounds.c",
          "type": "file",
          "size": 6878,
          "last_modified": "2024-09-05T16:00:05.401580",
          "path": "linuxdoom-1.10/sounds.c",
          "readme": "# sounds.c\n\nThis file contains functionality related to sounds.",
          "dependencies": [
            "sounds.h",
            "doomtype.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/sounds.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "sounds.h",
          "type": "file",
          "size": 4939,
          "last_modified": "2024-09-05T16:00:05.426581",
          "path": "linuxdoom-1.10/sounds.h",
          "readme": "# sounds.h\n\nThis file contains functionality related to sounds.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "sfxinfo_t",
                "type": "typedef struct sfxinfo_struct",
                "storage_class": null,
                "array_size": null,
                "line_number": 30
              },
              {
                "name": "singularity",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 38
              },
              {
                "name": "priority",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 41
              },
              {
                "name": "pitch",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 47
              },
              {
                "name": "volume",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 50
              },
              {
                "name": "usefulness",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 58
              },
              {
                "name": "lumpnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 61
              },
              {
                "name": "lumpnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 76
              },
              {
                "name": "handle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 82
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/sounds.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "st_lib.c",
          "type": "file",
          "size": 4793,
          "last_modified": "2024-09-05T16:00:05.451738",
          "path": "linuxdoom-1.10/st_lib.c",
          "readme": "# st_lib.c\n\nThis file contains functionality related to st_lib.",
          "dependencies": [
            "st_stuff.h",
            "w_wad.h",
            "m_swap.h",
            "r_local.h",
            "ctype.h",
            "z_zone.h",
            "i_system.h",
            "st_lib.h",
            "doomdef.h",
            "v_video.h"
          ],
          "inputs": [
            "p",
            "bi",
            "on",
            "per",
            "pl",
            "width",
            "il",
            "numdigits--",
            "refresh",
            "mi",
            "i",
            "x",
            "y",
            "n",
            "void",
            "num",
            "percent",
            "inum",
            "b",
            "val"
          ],
          "outputs": [
            "draw the new number"
          ],
          "content": {
            "functions": [
              {
                "name": "STlib_init",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 58,
                "end_line": 61,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 60
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpName"
                ]
              },
              {
                "name": "STlib_initNum",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "st_number_t*",
                    "name": "n"
                  },
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "patch_t**",
                    "name": "pl"
                  },
                  {
                    "type": "int*",
                    "name": "num"
                  },
                  {
                    "type": "boolean*",
                    "name": "on"
                  },
                  {
                    "type": "int",
                    "name": "width"
                  }
                ],
                "start_line": 65,
                "end_line": 74,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "n",
                  "x",
                  "y",
                  "pl",
                  "num",
                  "on",
                  "width"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "STlib_drawNum",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "st_number_t*",
                    "name": "n"
                  },
                  {
                    "type": "boolean",
                    "name": "refresh"
                  }
                ],
                "start_line": 90,
                "end_line": 145,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "neg",
                    "array_size": null,
                    "line_number": 100
                  }
                ],
                "function_calls": [
                  {
                    "name": "SHORT",
                    "line_number": 96
                  },
                  {
                    "name": "SHORT",
                    "line_number": 97
                  },
                  {
                    "name": "if",
                    "line_number": 106
                  },
                  {
                    "name": "if",
                    "line_number": 108
                  },
                  {
                    "name": "if",
                    "line_number": 110
                  },
                  {
                    "name": "if",
                    "line_number": 119
                  },
                  {
                    "name": "I_Error",
                    "line_number": 120
                  },
                  {
                    "name": "V_CopyRect",
                    "line_number": 122
                  },
                  {
                    "name": "if",
                    "line_number": 125
                  },
                  {
                    "name": "if",
                    "line_number": 131
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 132
                  },
                  {
                    "name": "while",
                    "line_number": 135
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 138
                  },
                  {
                    "name": "if",
                    "line_number": 143
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 144
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 106
                  },
                  {
                    "type": "if",
                    "line_number": 108
                  },
                  {
                    "type": "if",
                    "line_number": 110
                  },
                  {
                    "type": "if",
                    "line_number": 119
                  },
                  {
                    "type": "if",
                    "line_number": 124
                  },
                  {
                    "type": "if",
                    "line_number": 125
                  },
                  {
                    "type": "if",
                    "line_number": 131
                  },
                  {
                    "type": "while",
                    "line_number": 135
                  },
                  {
                    "type": "if",
                    "line_number": 142
                  },
                  {
                    "type": "if",
                    "line_number": 143
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "n",
                  "refresh"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "V_DrawPatch",
                  "if",
                  "I_Error",
                  "V_CopyRect",
                  "SHORT"
                ]
              },
              {
                "name": "while",
                "return_type": "draw the new number",
                "parameters": [
                  {
                    "type": "num &&",
                    "name": "numdigits--"
                  }
                ],
                "start_line": 137,
                "end_line": 142,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "V_DrawPatch",
                    "line_number": 140
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "numdigits--"
                ],
                "outputs": [
                  "draw the new number"
                ],
                "dependencies": [
                  "V_DrawPatch"
                ]
              },
              {
                "name": "STlib_updateNum",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "st_number_t*",
                    "name": "n"
                  },
                  {
                    "type": "boolean",
                    "name": "refresh"
                  }
                ],
                "start_line": 152,
                "end_line": 155,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 154
                  },
                  {
                    "name": "STlib_drawNum",
                    "line_number": 154
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 154
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "n",
                  "refresh"
                ],
                "outputs": [],
                "dependencies": [
                  "STlib_drawNum",
                  "if"
                ]
              },
              {
                "name": "STlib_initPercent",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "st_percent_t*",
                    "name": "p"
                  },
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "patch_t**",
                    "name": "pl"
                  },
                  {
                    "type": "int*",
                    "name": "num"
                  },
                  {
                    "type": "boolean*",
                    "name": "on"
                  },
                  {
                    "type": "patch_t*",
                    "name": "percent"
                  }
                ],
                "start_line": 162,
                "end_line": 166,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "STlib_initNum",
                    "line_number": 164
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "p",
                  "x",
                  "y",
                  "pl",
                  "num",
                  "on",
                  "percent"
                ],
                "outputs": [],
                "dependencies": [
                  "STlib_initNum"
                ]
              },
              {
                "name": "STlib_updatePercent",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "st_percent_t*",
                    "name": "per"
                  },
                  {
                    "type": "int",
                    "name": "refresh"
                  }
                ],
                "start_line": 179,
                "end_line": 185,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 181
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 182
                  },
                  {
                    "name": "STlib_updateNum",
                    "line_number": 184
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 181
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "per",
                  "refresh"
                ],
                "outputs": [],
                "dependencies": [
                  "V_DrawPatch",
                  "STlib_updateNum",
                  "if"
                ]
              },
              {
                "name": "STlib_initMultIcon",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "st_multicon_t*",
                    "name": "i"
                  },
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "patch_t**",
                    "name": "il"
                  },
                  {
                    "type": "int*",
                    "name": "inum"
                  },
                  {
                    "type": "boolean*",
                    "name": "on"
                  }
                ],
                "start_line": 192,
                "end_line": 200,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i",
                  "x",
                  "y",
                  "il",
                  "inum",
                  "on"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "STlib_updateMultIcon",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "st_multicon_t*",
                    "name": "mi"
                  },
                  {
                    "type": "boolean",
                    "name": "refresh"
                  }
                ],
                "start_line": 211,
                "end_line": 237,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "w",
                    "array_size": null,
                    "line_number": 213
                  },
                  {
                    "type": "int",
                    "name": "h",
                    "array_size": null,
                    "line_number": 214
                  },
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 215
                  },
                  {
                    "type": "int",
                    "name": "y",
                    "array_size": null,
                    "line_number": 216
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 218
                  },
                  {
                    "name": "if",
                    "line_number": 222
                  },
                  {
                    "name": "SHORT",
                    "line_number": 224
                  },
                  {
                    "name": "SHORT",
                    "line_number": 225
                  },
                  {
                    "name": "SHORT",
                    "line_number": 226
                  },
                  {
                    "name": "SHORT",
                    "line_number": 227
                  },
                  {
                    "name": "if",
                    "line_number": 229
                  },
                  {
                    "name": "I_Error",
                    "line_number": 230
                  },
                  {
                    "name": "V_CopyRect",
                    "line_number": 232
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 234
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 218
                  },
                  {
                    "type": "if",
                    "line_number": 222
                  },
                  {
                    "type": "if",
                    "line_number": 229
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "mi",
                  "refresh"
                ],
                "outputs": [],
                "dependencies": [
                  "V_DrawPatch",
                  "if",
                  "I_Error",
                  "V_CopyRect",
                  "SHORT"
                ]
              },
              {
                "name": "STlib_initBinIcon",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "st_binicon_t*",
                    "name": "b"
                  },
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "patch_t*",
                    "name": "i"
                  },
                  {
                    "type": "boolean*",
                    "name": "val"
                  },
                  {
                    "type": "boolean*",
                    "name": "on"
                  }
                ],
                "start_line": 244,
                "end_line": 252,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "b",
                  "x",
                  "y",
                  "i",
                  "val",
                  "on"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "STlib_updateBinIcon",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "st_binicon_t*",
                    "name": "bi"
                  },
                  {
                    "type": "boolean",
                    "name": "refresh"
                  }
                ],
                "start_line": 263,
                "end_line": 289,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 265
                  },
                  {
                    "type": "int",
                    "name": "y",
                    "array_size": null,
                    "line_number": 266
                  },
                  {
                    "type": "int",
                    "name": "w",
                    "array_size": null,
                    "line_number": 267
                  },
                  {
                    "type": "int",
                    "name": "h",
                    "array_size": null,
                    "line_number": 268
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 270
                  },
                  {
                    "name": "SHORT",
                    "line_number": 273
                  },
                  {
                    "name": "SHORT",
                    "line_number": 274
                  },
                  {
                    "name": "SHORT",
                    "line_number": 275
                  },
                  {
                    "name": "SHORT",
                    "line_number": 276
                  },
                  {
                    "name": "if",
                    "line_number": 278
                  },
                  {
                    "name": "I_Error",
                    "line_number": 279
                  },
                  {
                    "name": "if",
                    "line_number": 281
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 282
                  },
                  {
                    "name": "V_CopyRect",
                    "line_number": 284
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 270
                  },
                  {
                    "type": "if",
                    "line_number": 278
                  },
                  {
                    "type": "if",
                    "line_number": 281
                  },
                  {
                    "type": "else",
                    "line_number": 283
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "bi",
                  "refresh"
                ],
                "outputs": [],
                "dependencies": [
                  "V_DrawPatch",
                  "if",
                  "I_Error",
                  "V_CopyRect",
                  "SHORT"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "automapactive",
                "type": "boolean",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 47
              },
              {
                "name": "neg",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 103
              },
              {
                "name": "w",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 216
              },
              {
                "name": "h",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 217
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 218
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 219
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 268
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 269
              },
              {
                "name": "w",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 270
              },
              {
                "name": "h",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 271
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/st_lib.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "st_lib.h",
          "type": "file",
          "size": 3650,
          "last_modified": "2024-09-05T16:00:05.475736",
          "path": "linuxdoom-1.10/st_lib.h",
          "readme": "# st_lib.h\n\nThis file contains functionality related to st_lib.",
          "dependencies": [
            "r_defs.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 48
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 49
              },
              {
                "name": "width",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 52
              },
              {
                "name": "oldnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 55
              },
              {
                "name": "data",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 68
              },
              {
                "name": "n",
                "type": "st_number_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 79
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 92
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 93
              },
              {
                "name": "oldinum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 96
              },
              {
                "name": "data",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 109
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 121
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 122
              },
              {
                "name": "oldval",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 125
              },
              {
                "name": "data",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 136
              }
            ],
            "defines": [
              {
                "name": "BG",
                "value": "4",
                "line_number": 33
              },
              {
                "name": "FG",
                "value": "0",
                "line_number": 34
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/st_lib.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "st_stuff.c",
          "type": "file",
          "size": 30424,
          "last_modified": "2024-09-05T16:00:05.501734",
          "path": "linuxdoom-1.10/st_stuff.c",
          "readme": "# st_stuff.c\n\nThis file contains functionality related to st_stuff.",
          "dependencies": [
            "stdio.h",
            "v_video.h",
            "p_inter.h",
            "r_local.h",
            "i_video.h",
            "m_cheat.h",
            "g_game.h",
            "doomdef.h",
            "st_stuff.h",
            "w_wad.h",
            "p_local.h",
            "z_zone.h",
            "s_sound.h",
            "st_lib.h",
            "am_map.h",
            "m_random.h",
            "sounds.h",
            "i_system.h",
            "doomstat.h",
            "dstrings.h"
          ],
          "inputs": [
            "i=0;i<6;i++",
            "i=0;i<NUMCARDS;i++",
            "i",
            "!plyr->health",
            "!--lastattackdown",
            "ev_keydown",
            "i=0;i<10;i++",
            "!st_facecount",
            "plyr->bonuscount",
            "fullscreen",
            "ev",
            "void",
            "refresh",
            "plyr->attackdown",
            "plyr->damagecount",
            "i=0;i<3;i++"
          ],
          "outputs": [
            "tall and short",
            "key cards",
            "getting hurt because of your own damn stupidity",
            "weapons owned",
            "dead",
            "int",
            "up cheats",
            "boolean",
            "update keycard multiple widgets",
            "rapid firing",
            "arms ownership widgets",
            "look left or look right if the facecount has timed out",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "ST_refreshBackground",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 499,
                "end_line": 512,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 502
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 504
                  },
                  {
                    "name": "if",
                    "line_number": 506
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 507
                  },
                  {
                    "name": "V_CopyRect",
                    "line_number": 509
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 502
                  },
                  {
                    "type": "if",
                    "line_number": 506
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "V_CopyRect",
                  "V_DrawPatch",
                  "if"
                ]
              },
              {
                "name": "ST_Responder",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "event_t*",
                    "name": "ev"
                  }
                ],
                "start_line": 517,
                "end_line": 1471,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 519
                  },
                  {
                    "type": "char",
                    "name": "buf",
                    "array_size": "3",
                    "line_number": 597
                  },
                  {
                    "type": "int",
                    "name": "musnum",
                    "array_size": null,
                    "line_number": 598
                  },
                  {
                    "type": "char",
                    "name": "buf",
                    "array_size": "3",
                    "line_number": 677
                  },
                  {
                    "type": "int",
                    "name": "epsd",
                    "array_size": null,
                    "line_number": 678
                  },
                  {
                    "type": "int",
                    "name": "map",
                    "array_size": null,
                    "line_number": 679
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 696
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 699
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 704
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 708
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 712
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 716
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 723
                  },
                  {
                    "type": "int",
                    "name": "health",
                    "array_size": null,
                    "line_number": 730
                  },
                  {
                    "type": "static int",
                    "name": "lastcalc",
                    "array_size": null,
                    "line_number": 731
                  },
                  {
                    "type": "return",
                    "name": "lastcalc",
                    "array_size": null,
                    "line_number": 741
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 753
                  },
                  {
                    "type": "angle_t",
                    "name": "badguyangle",
                    "array_size": null,
                    "line_number": 754
                  },
                  {
                    "type": "angle_t",
                    "name": "diffang",
                    "array_size": null,
                    "line_number": 755
                  },
                  {
                    "type": "boolean",
                    "name": "doevilgrin",
                    "array_size": null,
                    "line_number": 758
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 926
                  },
                  {
                    "type": "int",
                    "name": "palette",
                    "array_size": null,
                    "line_number": 1002
                  },
                  {
                    "type": "int",
                    "name": "cnt",
                    "array_size": null,
                    "line_number": 1004
                  },
                  {
                    "type": "int",
                    "name": "bzc",
                    "array_size": null,
                    "line_number": 1005
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1055
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1126
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 1127
                  },
                  {
                    "type": "int",
                    "name": "facenum",
                    "array_size": null,
                    "line_number": 1128
                  },
                  {
                    "type": "char",
                    "name": "namebuf",
                    "array_size": "9",
                    "line_number": 1130
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1209
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1251
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1284
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 522
                  },
                  {
                    "name": "switch",
                    "line_number": 525
                  },
                  {
                    "name": "fprintf",
                    "line_number": 533
                  },
                  {
                    "name": "if",
                    "line_number": 540
                  },
                  {
                    "name": "if",
                    "line_number": 542
                  },
                  {
                    "name": "if",
                    "line_number": 545
                  },
                  {
                    "name": "if",
                    "line_number": 548
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 548
                  },
                  {
                    "name": "if",
                    "line_number": 551
                  },
                  {
                    "name": "if",
                    "line_number": 553
                  },
                  {
                    "name": "if",
                    "line_number": 563
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 563
                  },
                  {
                    "name": "for",
                    "line_number": 568
                  },
                  {
                    "name": "for",
                    "line_number": 571
                  },
                  {
                    "name": "if",
                    "line_number": 577
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 577
                  },
                  {
                    "name": "for",
                    "line_number": 582
                  },
                  {
                    "name": "for",
                    "line_number": 585
                  },
                  {
                    "name": "for",
                    "line_number": 588
                  },
                  {
                    "name": "if",
                    "line_number": 594
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 594
                  },
                  {
                    "name": "cht_GetParam",
                    "line_number": 601
                  },
                  {
                    "name": "if",
                    "line_number": 603
                  },
                  {
                    "name": "if",
                    "line_number": 607
                  },
                  {
                    "name": "S_ChangeMusic",
                    "line_number": 610
                  },
                  {
                    "name": "if",
                    "line_number": 616
                  },
                  {
                    "name": "S_ChangeMusic",
                    "line_number": 619
                  },
                  {
                    "name": "if",
                    "line_number": 624
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 624
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 625
                  },
                  {
                    "name": "if",
                    "line_number": 629
                  },
                  {
                    "name": "for",
                    "line_number": 635
                  },
                  {
                    "name": "if",
                    "line_number": 637
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 637
                  },
                  {
                    "name": "if",
                    "line_number": 639
                  },
                  {
                    "name": "P_GivePower",
                    "line_number": 640
                  },
                  {
                    "name": "if",
                    "line_number": 641
                  },
                  {
                    "name": "if",
                    "line_number": 651
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 651
                  },
                  {
                    "name": "if",
                    "line_number": 656
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 656
                  },
                  {
                    "name": "if",
                    "line_number": 663
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 663
                  },
                  {
                    "name": "sprintf",
                    "line_number": 666
                  },
                  {
                    "name": "if",
                    "line_number": 675
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 675
                  },
                  {
                    "name": "cht_GetParam",
                    "line_number": 681
                  },
                  {
                    "name": "if",
                    "line_number": 683
                  },
                  {
                    "name": "if",
                    "line_number": 695
                  },
                  {
                    "name": "if",
                    "line_number": 698
                  },
                  {
                    "name": "if",
                    "line_number": 702
                  },
                  {
                    "name": "if",
                    "line_number": 706
                  },
                  {
                    "name": "if",
                    "line_number": 710
                  },
                  {
                    "name": "if",
                    "line_number": 714
                  },
                  {
                    "name": "G_DeferedInitNew",
                    "line_number": 720
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 728
                  },
                  {
                    "name": "if",
                    "line_number": 736
                  },
                  {
                    "name": "ST_updateFaceWidget",
                    "line_number": 751
                  },
                  {
                    "name": "if",
                    "line_number": 760
                  },
                  {
                    "name": "if",
                    "line_number": 763
                  },
                  {
                    "name": "if",
                    "line_number": 771
                  },
                  {
                    "name": "if",
                    "line_number": 773
                  },
                  {
                    "name": "for",
                    "line_number": 778
                  },
                  {
                    "name": "if",
                    "line_number": 780
                  },
                  {
                    "name": "if",
                    "line_number": 786
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 791
                  },
                  {
                    "name": "if",
                    "line_number": 797
                  },
                  {
                    "name": "if",
                    "line_number": 799
                  },
                  {
                    "name": "if",
                    "line_number": 806
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 809
                  },
                  {
                    "name": "R_PointToAngle2",
                    "line_number": 813
                  },
                  {
                    "name": "if",
                    "line_number": 818
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 833
                  },
                  {
                    "name": "if",
                    "line_number": 835
                  },
                  {
                    "name": "if",
                    "line_number": 840
                  },
                  {
                    "name": "if",
                    "line_number": 854
                  },
                  {
                    "name": "if",
                    "line_number": 857
                  },
                  {
                    "name": "if",
                    "line_number": 859
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 863
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 869
                  },
                  {
                    "name": "if",
                    "line_number": 876
                  },
                  {
                    "name": "if",
                    "line_number": 879
                  },
                  {
                    "name": "if",
                    "line_number": 881
                  },
                  {
                    "name": "if",
                    "line_number": 883
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 886
                  },
                  {
                    "name": "if",
                    "line_number": 896
                  },
                  {
                    "name": "if",
                    "line_number": 899
                  },
                  {
                    "name": "if",
                    "line_number": 912
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 914
                  },
                  {
                    "name": "ST_updateWidgets",
                    "line_number": 923
                  },
                  {
                    "name": "if",
                    "line_number": 929
                  },
                  {
                    "name": "if",
                    "line_number": 931
                  },
                  {
                    "name": "if",
                    "line_number": 938
                  },
                  {
                    "name": "if",
                    "line_number": 940
                  },
                  {
                    "name": "if",
                    "line_number": 946
                  },
                  {
                    "name": "STlib_updateNum",
                    "line_number": 947
                  },
                  {
                    "name": "for",
                    "line_number": 952
                  },
                  {
                    "name": "if",
                    "line_number": 956
                  },
                  {
                    "name": "ST_updateFaceWidget",
                    "line_number": 961
                  },
                  {
                    "name": "for",
                    "line_number": 973
                  },
                  {
                    "name": "if",
                    "line_number": 975
                  },
                  {
                    "name": "if",
                    "line_number": 982
                  },
                  {
                    "name": "ST_Ticker",
                    "line_number": 987
                  },
                  {
                    "name": "M_Random",
                    "line_number": 991
                  },
                  {
                    "name": "ST_updateWidgets",
                    "line_number": 992
                  },
                  {
                    "name": "ST_doPaletteStuff",
                    "line_number": 999
                  },
                  {
                    "name": "if",
                    "line_number": 1009
                  },
                  {
                    "name": "if",
                    "line_number": 1014
                  },
                  {
                    "name": "if",
                    "line_number": 1018
                  },
                  {
                    "name": "if",
                    "line_number": 1022
                  },
                  {
                    "name": "if",
                    "line_number": 1028
                  },
                  {
                    "name": "if",
                    "line_number": 1032
                  },
                  {
                    "name": "if",
                    "line_number": 1038
                  },
                  {
                    "name": "if",
                    "line_number": 1044
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 1047
                  },
                  {
                    "name": "I_SetPalette",
                    "line_number": 1048
                  },
                  {
                    "name": "ST_drawWidgets",
                    "line_number": 1053
                  },
                  {
                    "name": "STlib_updateNum",
                    "line_number": 1063
                  },
                  {
                    "name": "for",
                    "line_number": 1065
                  },
                  {
                    "name": "STlib_updateNum",
                    "line_number": 1067
                  },
                  {
                    "name": "STlib_updateNum",
                    "line_number": 1068
                  },
                  {
                    "name": "STlib_updatePercent",
                    "line_number": 1071
                  },
                  {
                    "name": "STlib_updatePercent",
                    "line_number": 1072
                  },
                  {
                    "name": "STlib_updateBinIcon",
                    "line_number": 1074
                  },
                  {
                    "name": "for",
                    "line_number": 1076
                  },
                  {
                    "name": "STlib_updateMultIcon",
                    "line_number": 1077
                  },
                  {
                    "name": "STlib_updateMultIcon",
                    "line_number": 1079
                  },
                  {
                    "name": "for",
                    "line_number": 1081
                  },
                  {
                    "name": "STlib_updateMultIcon",
                    "line_number": 1082
                  },
                  {
                    "name": "STlib_updateNum",
                    "line_number": 1084
                  },
                  {
                    "name": "ST_doRefresh",
                    "line_number": 1088
                  },
                  {
                    "name": "ST_refreshBackground",
                    "line_number": 1094
                  },
                  {
                    "name": "ST_drawWidgets",
                    "line_number": 1097
                  },
                  {
                    "name": "ST_diffDraw",
                    "line_number": 1101
                  },
                  {
                    "name": "ST_drawWidgets",
                    "line_number": 1104
                  },
                  {
                    "name": "ST_Drawer",
                    "line_number": 1107
                  },
                  {
                    "name": "ST_doPaletteStuff",
                    "line_number": 1114
                  },
                  {
                    "name": "ST_Start",
                    "line_number": 1116
                  },
                  {
                    "name": "if",
                    "line_number": 1117
                  },
                  {
                    "name": "ST_doRefresh",
                    "line_number": 1117
                  },
                  {
                    "name": "ST_diffDraw",
                    "line_number": 1119
                  },
                  {
                    "name": "ST_loadGraphics",
                    "line_number": 1123
                  },
                  {
                    "name": "for",
                    "line_number": 1133
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1135
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1136
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1138
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1139
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1144
                  },
                  {
                    "name": "for",
                    "line_number": 1147
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1149
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1150
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1154
                  },
                  {
                    "name": "for",
                    "line_number": 1157
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1159
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1162
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1169
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1170
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1173
                  },
                  {
                    "name": "for",
                    "line_number": 1177
                  },
                  {
                    "name": "for",
                    "line_number": 1179
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1181
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1182
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1184
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1185
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1186
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1187
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1188
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1189
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1190
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1191
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1192
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1193
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1195
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1196
                  },
                  {
                    "name": "ST_loadData",
                    "line_number": 1200
                  },
                  {
                    "name": "W_GetNumForName",
                    "line_number": 1202
                  },
                  {
                    "name": "ST_loadGraphics",
                    "line_number": 1203
                  },
                  {
                    "name": "ST_unloadGraphics",
                    "line_number": 1206
                  },
                  {
                    "name": "for",
                    "line_number": 1212
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1214
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1215
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1218
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1221
                  },
                  {
                    "name": "for",
                    "line_number": 1224
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1225
                  },
                  {
                    "name": "for",
                    "line_number": 1228
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1229
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1231
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1232
                  },
                  {
                    "name": "for",
                    "line_number": 1234
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1235
                  },
                  {
                    "name": "ST_unloadData",
                    "line_number": 1243
                  },
                  {
                    "name": "ST_unloadGraphics",
                    "line_number": 1245
                  },
                  {
                    "name": "ST_initData",
                    "line_number": 1248
                  },
                  {
                    "name": "for",
                    "line_number": 1269
                  },
                  {
                    "name": "for",
                    "line_number": 1272
                  },
                  {
                    "name": "STlib_init",
                    "line_number": 1275
                  },
                  {
                    "name": "ST_createWidgets",
                    "line_number": 1281
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1287
                  },
                  {
                    "name": "STlib_initPercent",
                    "line_number": 1299
                  },
                  {
                    "name": "STlib_initBinIcon",
                    "line_number": 1308
                  },
                  {
                    "name": "for",
                    "line_number": 1316
                  },
                  {
                    "name": "STlib_initMultIcon",
                    "line_number": 1318
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1326
                  },
                  {
                    "name": "STlib_initMultIcon",
                    "line_number": 1335
                  },
                  {
                    "name": "STlib_initPercent",
                    "line_number": 1343
                  },
                  {
                    "name": "STlib_initMultIcon",
                    "line_number": 1351
                  },
                  {
                    "name": "STlib_initMultIcon",
                    "line_number": 1358
                  },
                  {
                    "name": "STlib_initMultIcon",
                    "line_number": 1365
                  },
                  {
                    "name": "count",
                    "line_number": 1372
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1373
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1381
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1389
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1397
                  },
                  {
                    "name": "count",
                    "line_number": 1405
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1406
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1414
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1422
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1430
                  },
                  {
                    "name": "ST_Start",
                    "line_number": 1443
                  },
                  {
                    "name": "if",
                    "line_number": 1446
                  },
                  {
                    "name": "ST_Stop",
                    "line_number": 1447
                  },
                  {
                    "name": "ST_initData",
                    "line_number": 1449
                  },
                  {
                    "name": "ST_createWidgets",
                    "line_number": 1450
                  },
                  {
                    "name": "ST_Stop",
                    "line_number": 1455
                  },
                  {
                    "name": "if",
                    "line_number": 1457
                  },
                  {
                    "name": "I_SetPalette",
                    "line_number": 1460
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 1460
                  },
                  {
                    "name": "ST_Init",
                    "line_number": 1465
                  },
                  {
                    "name": "ST_loadData",
                    "line_number": 1468
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 1469
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 522
                  },
                  {
                    "type": "if",
                    "line_number": 539
                  },
                  {
                    "type": "if",
                    "line_number": 540
                  },
                  {
                    "type": "if",
                    "line_number": 542
                  },
                  {
                    "type": "for",
                    "line_number": 544
                  },
                  {
                    "type": "if",
                    "line_number": 545
                  },
                  {
                    "type": "for",
                    "line_number": 547
                  },
                  {
                    "type": "if",
                    "line_number": 548
                  },
                  {
                    "type": "if",
                    "line_number": 551
                  },
                  {
                    "type": "if",
                    "line_number": 553
                  },
                  {
                    "type": "else",
                    "line_number": 559
                  },
                  {
                    "type": "for",
                    "line_number": 562
                  },
                  {
                    "type": "if",
                    "line_number": 563
                  },
                  {
                    "type": "for",
                    "line_number": 568
                  },
                  {
                    "type": "for",
                    "line_number": 571
                  },
                  {
                    "type": "for",
                    "line_number": 576
                  },
                  {
                    "type": "if",
                    "line_number": 577
                  },
                  {
                    "type": "for",
                    "line_number": 582
                  },
                  {
                    "type": "for",
                    "line_number": 585
                  },
                  {
                    "type": "for",
                    "line_number": 588
                  },
                  {
                    "type": "for",
                    "line_number": 593
                  },
                  {
                    "type": "if",
                    "line_number": 594
                  },
                  {
                    "type": "if",
                    "line_number": 603
                  },
                  {
                    "type": "if",
                    "line_number": 607
                  },
                  {
                    "type": "else",
                    "line_number": 609
                  },
                  {
                    "type": "else",
                    "line_number": 612
                  },
                  {
                    "type": "if",
                    "line_number": 616
                  },
                  {
                    "type": "else",
                    "line_number": 618
                  },
                  {
                    "type": "if",
                    "line_number": 624
                  },
                  {
                    "type": "if",
                    "line_number": 629
                  },
                  {
                    "type": "else",
                    "line_number": 631
                  },
                  {
                    "type": "for",
                    "line_number": 635
                  },
                  {
                    "type": "if",
                    "line_number": 637
                  },
                  {
                    "type": "if",
                    "line_number": 639
                  },
                  {
                    "type": "if",
                    "line_number": 641
                  },
                  {
                    "type": "else",
                    "line_number": 643
                  },
                  {
                    "type": "if",
                    "line_number": 651
                  },
                  {
                    "type": "if",
                    "line_number": 656
                  },
                  {
                    "type": "for",
                    "line_number": 662
                  },
                  {
                    "type": "if",
                    "line_number": 663
                  },
                  {
                    "type": "if",
                    "line_number": 675
                  },
                  {
                    "type": "if",
                    "line_number": 683
                  },
                  {
                    "type": "else",
                    "line_number": 688
                  },
                  {
                    "type": "if",
                    "line_number": 695
                  },
                  {
                    "type": "if",
                    "line_number": 698
                  },
                  {
                    "type": "if",
                    "line_number": 702
                  },
                  {
                    "type": "if",
                    "line_number": 706
                  },
                  {
                    "type": "if",
                    "line_number": 710
                  },
                  {
                    "type": "if",
                    "line_number": 714
                  },
                  {
                    "type": "if",
                    "line_number": 736
                  },
                  {
                    "type": "if",
                    "line_number": 760
                  },
                  {
                    "type": "if",
                    "line_number": 763
                  },
                  {
                    "type": "if",
                    "line_number": 771
                  },
                  {
                    "type": "if",
                    "line_number": 773
                  },
                  {
                    "type": "for",
                    "line_number": 778
                  },
                  {
                    "type": "if",
                    "line_number": 780
                  },
                  {
                    "type": "if",
                    "line_number": 786
                  },
                  {
                    "type": "if",
                    "line_number": 788
                  },
                  {
                    "type": "if",
                    "line_number": 797
                  },
                  {
                    "type": "if",
                    "line_number": 799
                  },
                  {
                    "type": "if",
                    "line_number": 806
                  },
                  {
                    "type": "else",
                    "line_number": 811
                  },
                  {
                    "type": "if",
                    "line_number": 818
                  },
                  {
                    "type": "else",
                    "line_number": 824
                  },
                  {
                    "type": "if",
                    "line_number": 835
                  },
                  {
                    "type": "if",
                    "line_number": 840
                  },
                  {
                    "type": "else",
                    "line_number": 845
                  },
                  {
                    "type": "if",
                    "line_number": 854
                  },
                  {
                    "type": "if",
                    "line_number": 857
                  },
                  {
                    "type": "if",
                    "line_number": 859
                  },
                  {
                    "type": "else",
                    "line_number": 865
                  },
                  {
                    "type": "if",
                    "line_number": 876
                  },
                  {
                    "type": "if",
                    "line_number": 879
                  },
                  {
                    "type": "if",
                    "line_number": 881
                  },
                  {
                    "type": "if",
                    "line_number": 883
                  },
                  {
                    "type": "else",
                    "line_number": 891
                  },
                  {
                    "type": "if",
                    "line_number": 896
                  },
                  {
                    "type": "if",
                    "line_number": 899
                  },
                  {
                    "type": "if",
                    "line_number": 911
                  },
                  {
                    "type": "if",
                    "line_number": 912
                  },
                  {
                    "type": "if",
                    "line_number": 928
                  },
                  {
                    "type": "if",
                    "line_number": 929
                  },
                  {
                    "type": "if",
                    "line_number": 931
                  },
                  {
                    "type": "else",
                    "line_number": 933
                  },
                  {
                    "type": "if",
                    "line_number": 938
                  },
                  {
                    "type": "if",
                    "line_number": 940
                  },
                  {
                    "type": "if",
                    "line_number": 946
                  },
                  {
                    "type": "for",
                    "line_number": 952
                  },
                  {
                    "type": "if",
                    "line_number": 956
                  },
                  {
                    "type": "if",
                    "line_number": 960
                  },
                  {
                    "type": "for",
                    "line_number": 973
                  },
                  {
                    "type": "if",
                    "line_number": 975
                  },
                  {
                    "type": "else",
                    "line_number": 977
                  },
                  {
                    "type": "if",
                    "line_number": 981
                  },
                  {
                    "type": "if",
                    "line_number": 982
                  },
                  {
                    "type": "if",
                    "line_number": 1009
                  },
                  {
                    "type": "if",
                    "line_number": 1014
                  },
                  {
                    "type": "if",
                    "line_number": 1018
                  },
                  {
                    "type": "if",
                    "line_number": 1022
                  },
                  {
                    "type": "if",
                    "line_number": 1028
                  },
                  {
                    "type": "if",
                    "line_number": 1032
                  },
                  {
                    "type": "if",
                    "line_number": 1038
                  },
                  {
                    "type": "else",
                    "line_number": 1041
                  },
                  {
                    "type": "if",
                    "line_number": 1044
                  },
                  {
                    "type": "for",
                    "line_number": 1065
                  },
                  {
                    "type": "for",
                    "line_number": 1076
                  },
                  {
                    "type": "for",
                    "line_number": 1081
                  },
                  {
                    "type": "if",
                    "line_number": 1117
                  },
                  {
                    "type": "else",
                    "line_number": 1119
                  },
                  {
                    "type": "for",
                    "line_number": 1133
                  },
                  {
                    "type": "for",
                    "line_number": 1147
                  },
                  {
                    "type": "for",
                    "line_number": 1157
                  },
                  {
                    "type": "for",
                    "line_number": 1168
                  },
                  {
                    "type": "for",
                    "line_number": 1177
                  },
                  {
                    "type": "for",
                    "line_number": 1179
                  },
                  {
                    "type": "for",
                    "line_number": 1212
                  },
                  {
                    "type": "for",
                    "line_number": 1224
                  },
                  {
                    "type": "for",
                    "line_number": 1228
                  },
                  {
                    "type": "for",
                    "line_number": 1234
                  },
                  {
                    "type": "for",
                    "line_number": 1269
                  },
                  {
                    "type": "for",
                    "line_number": 1272
                  },
                  {
                    "type": "for",
                    "line_number": 1316
                  },
                  {
                    "type": "if",
                    "line_number": 1446
                  },
                  {
                    "type": "if",
                    "line_number": 1457
                  }
                ],
                "complexity": 89,
                "inputs": [
                  "ev"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "ST_diffDraw",
                  "I_SetPalette",
                  "Z_Malloc",
                  "ST_drawWidgets",
                  "S_ChangeMusic",
                  "ST_initData",
                  "STlib_updateBinIcon",
                  "ST_doRefresh",
                  "ST_doPaletteStuff",
                  "STlib_updateNum",
                  "STlib_initPercent",
                  "ST_refreshBackground",
                  "fprintf",
                  "W_CacheLumpName",
                  "P_GivePower",
                  "ST_createWidgets",
                  "for",
                  "STlib_init",
                  "ST_Init",
                  "ST_unloadData",
                  "sprintf",
                  "switch",
                  "STlib_initMultIcon",
                  "ST_calcPainOffset",
                  "ST_Stop",
                  "ST_Drawer",
                  "STlib_updatePercent",
                  "cht_CheckCheat",
                  "count",
                  "W_CacheLumpNum",
                  "Z_ChangeTag",
                  "STlib_initNum",
                  "W_GetNumForName",
                  "M_Random",
                  "ST_Start",
                  "ST_loadData",
                  "STlib_initBinIcon",
                  "if",
                  "STlib_updateMultIcon",
                  "cht_GetParam",
                  "R_PointToAngle2",
                  "ST_updateWidgets",
                  "G_DeferedInitNew",
                  "ST_loadGraphics",
                  "ST_Ticker",
                  "ST_updateFaceWidget",
                  "ST_unloadGraphics"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "ev->type ==",
                    "name": "ev_keydown"
                  }
                ],
                "start_line": 541,
                "end_line": 725,
                "local_variables": [
                  {
                    "type": "char",
                    "name": "buf",
                    "array_size": "3",
                    "line_number": 598
                  },
                  {
                    "type": "int",
                    "name": "musnum",
                    "array_size": null,
                    "line_number": 599
                  },
                  {
                    "type": "char",
                    "name": "buf",
                    "array_size": "3",
                    "line_number": 678
                  },
                  {
                    "type": "int",
                    "name": "epsd",
                    "array_size": null,
                    "line_number": 679
                  },
                  {
                    "type": "int",
                    "name": "map",
                    "array_size": null,
                    "line_number": 680
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 697
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 700
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 705
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 709
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 713
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 717
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 724
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 543
                  },
                  {
                    "name": "if",
                    "line_number": 546
                  },
                  {
                    "name": "if",
                    "line_number": 549
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 549
                  },
                  {
                    "name": "if",
                    "line_number": 552
                  },
                  {
                    "name": "if",
                    "line_number": 554
                  },
                  {
                    "name": "if",
                    "line_number": 564
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 564
                  },
                  {
                    "name": "for",
                    "line_number": 569
                  },
                  {
                    "name": "for",
                    "line_number": 572
                  },
                  {
                    "name": "if",
                    "line_number": 578
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 578
                  },
                  {
                    "name": "for",
                    "line_number": 583
                  },
                  {
                    "name": "for",
                    "line_number": 586
                  },
                  {
                    "name": "for",
                    "line_number": 589
                  },
                  {
                    "name": "if",
                    "line_number": 595
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 595
                  },
                  {
                    "name": "cht_GetParam",
                    "line_number": 602
                  },
                  {
                    "name": "if",
                    "line_number": 604
                  },
                  {
                    "name": "if",
                    "line_number": 608
                  },
                  {
                    "name": "S_ChangeMusic",
                    "line_number": 611
                  },
                  {
                    "name": "if",
                    "line_number": 617
                  },
                  {
                    "name": "S_ChangeMusic",
                    "line_number": 620
                  },
                  {
                    "name": "if",
                    "line_number": 625
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 625
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 626
                  },
                  {
                    "name": "if",
                    "line_number": 630
                  },
                  {
                    "name": "for",
                    "line_number": 636
                  },
                  {
                    "name": "if",
                    "line_number": 638
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 638
                  },
                  {
                    "name": "if",
                    "line_number": 640
                  },
                  {
                    "name": "P_GivePower",
                    "line_number": 641
                  },
                  {
                    "name": "if",
                    "line_number": 642
                  },
                  {
                    "name": "if",
                    "line_number": 652
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 652
                  },
                  {
                    "name": "if",
                    "line_number": 657
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 657
                  },
                  {
                    "name": "if",
                    "line_number": 664
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 664
                  },
                  {
                    "name": "sprintf",
                    "line_number": 667
                  },
                  {
                    "name": "if",
                    "line_number": 676
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 676
                  },
                  {
                    "name": "cht_GetParam",
                    "line_number": 682
                  },
                  {
                    "name": "if",
                    "line_number": 684
                  },
                  {
                    "name": "if",
                    "line_number": 696
                  },
                  {
                    "name": "if",
                    "line_number": 699
                  },
                  {
                    "name": "if",
                    "line_number": 703
                  },
                  {
                    "name": "if",
                    "line_number": 707
                  },
                  {
                    "name": "if",
                    "line_number": 711
                  },
                  {
                    "name": "if",
                    "line_number": 715
                  },
                  {
                    "name": "G_DeferedInitNew",
                    "line_number": 721
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 543
                  },
                  {
                    "type": "for",
                    "line_number": 545
                  },
                  {
                    "type": "if",
                    "line_number": 546
                  },
                  {
                    "type": "for",
                    "line_number": 548
                  },
                  {
                    "type": "if",
                    "line_number": 549
                  },
                  {
                    "type": "if",
                    "line_number": 552
                  },
                  {
                    "type": "if",
                    "line_number": 554
                  },
                  {
                    "type": "else",
                    "line_number": 560
                  },
                  {
                    "type": "for",
                    "line_number": 563
                  },
                  {
                    "type": "if",
                    "line_number": 564
                  },
                  {
                    "type": "for",
                    "line_number": 569
                  },
                  {
                    "type": "for",
                    "line_number": 572
                  },
                  {
                    "type": "for",
                    "line_number": 577
                  },
                  {
                    "type": "if",
                    "line_number": 578
                  },
                  {
                    "type": "for",
                    "line_number": 583
                  },
                  {
                    "type": "for",
                    "line_number": 586
                  },
                  {
                    "type": "for",
                    "line_number": 589
                  },
                  {
                    "type": "for",
                    "line_number": 594
                  },
                  {
                    "type": "if",
                    "line_number": 595
                  },
                  {
                    "type": "if",
                    "line_number": 604
                  },
                  {
                    "type": "if",
                    "line_number": 608
                  },
                  {
                    "type": "else",
                    "line_number": 610
                  },
                  {
                    "type": "else",
                    "line_number": 613
                  },
                  {
                    "type": "if",
                    "line_number": 617
                  },
                  {
                    "type": "else",
                    "line_number": 619
                  },
                  {
                    "type": "if",
                    "line_number": 625
                  },
                  {
                    "type": "if",
                    "line_number": 630
                  },
                  {
                    "type": "else",
                    "line_number": 632
                  },
                  {
                    "type": "for",
                    "line_number": 636
                  },
                  {
                    "type": "if",
                    "line_number": 638
                  },
                  {
                    "type": "if",
                    "line_number": 640
                  },
                  {
                    "type": "if",
                    "line_number": 642
                  },
                  {
                    "type": "else",
                    "line_number": 644
                  },
                  {
                    "type": "if",
                    "line_number": 652
                  },
                  {
                    "type": "if",
                    "line_number": 657
                  },
                  {
                    "type": "for",
                    "line_number": 663
                  },
                  {
                    "type": "if",
                    "line_number": 664
                  },
                  {
                    "type": "if",
                    "line_number": 676
                  },
                  {
                    "type": "if",
                    "line_number": 684
                  },
                  {
                    "type": "else",
                    "line_number": 689
                  },
                  {
                    "type": "if",
                    "line_number": 696
                  },
                  {
                    "type": "if",
                    "line_number": 699
                  },
                  {
                    "type": "if",
                    "line_number": 703
                  },
                  {
                    "type": "if",
                    "line_number": 707
                  },
                  {
                    "type": "if",
                    "line_number": 711
                  },
                  {
                    "type": "if",
                    "line_number": 715
                  }
                ],
                "complexity": 31,
                "inputs": [
                  "ev_keydown"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "P_GivePower",
                  "for",
                  "if",
                  "S_ChangeMusic",
                  "cht_CheckCheat",
                  "cht_GetParam",
                  "G_DeferedInitNew",
                  "sprintf"
                ]
              },
              {
                "name": "for",
                "return_type": "up cheats",
                "parameters": [
                  {
                    "type": "",
                    "name": "i=0;i<6;i++"
                  }
                ],
                "start_line": 635,
                "end_line": 648,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 637
                  },
                  {
                    "name": "cht_CheckCheat",
                    "line_number": 637
                  },
                  {
                    "name": "if",
                    "line_number": 639
                  },
                  {
                    "name": "P_GivePower",
                    "line_number": 640
                  },
                  {
                    "name": "if",
                    "line_number": 641
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 637
                  },
                  {
                    "type": "if",
                    "line_number": 639
                  },
                  {
                    "type": "if",
                    "line_number": 641
                  },
                  {
                    "type": "else",
                    "line_number": 643
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "i=0;i<6;i++"
                ],
                "outputs": [
                  "up cheats"
                ],
                "dependencies": [
                  "cht_CheckCheat",
                  "P_GivePower",
                  "if"
                ]
              },
              {
                "name": "ST_calcPainOffset",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 729,
                "end_line": 743,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "health",
                    "array_size": null,
                    "line_number": 731
                  },
                  {
                    "type": "static int",
                    "name": "lastcalc",
                    "array_size": null,
                    "line_number": 732
                  },
                  {
                    "type": "return",
                    "name": "lastcalc",
                    "array_size": null,
                    "line_number": 742
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 737
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 737
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "ST_updateFaceWidget",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 752,
                "end_line": 922,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 754
                  },
                  {
                    "type": "angle_t",
                    "name": "badguyangle",
                    "array_size": null,
                    "line_number": 755
                  },
                  {
                    "type": "angle_t",
                    "name": "diffang",
                    "array_size": null,
                    "line_number": 756
                  },
                  {
                    "type": "boolean",
                    "name": "doevilgrin",
                    "array_size": null,
                    "line_number": 759
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 761
                  },
                  {
                    "name": "if",
                    "line_number": 764
                  },
                  {
                    "name": "if",
                    "line_number": 772
                  },
                  {
                    "name": "if",
                    "line_number": 774
                  },
                  {
                    "name": "for",
                    "line_number": 779
                  },
                  {
                    "name": "if",
                    "line_number": 781
                  },
                  {
                    "name": "if",
                    "line_number": 787
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 792
                  },
                  {
                    "name": "if",
                    "line_number": 798
                  },
                  {
                    "name": "if",
                    "line_number": 800
                  },
                  {
                    "name": "if",
                    "line_number": 807
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 810
                  },
                  {
                    "name": "R_PointToAngle2",
                    "line_number": 814
                  },
                  {
                    "name": "if",
                    "line_number": 819
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 834
                  },
                  {
                    "name": "if",
                    "line_number": 836
                  },
                  {
                    "name": "if",
                    "line_number": 841
                  },
                  {
                    "name": "if",
                    "line_number": 855
                  },
                  {
                    "name": "if",
                    "line_number": 858
                  },
                  {
                    "name": "if",
                    "line_number": 860
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 864
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 870
                  },
                  {
                    "name": "if",
                    "line_number": 877
                  },
                  {
                    "name": "if",
                    "line_number": 880
                  },
                  {
                    "name": "if",
                    "line_number": 882
                  },
                  {
                    "name": "if",
                    "line_number": 884
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 887
                  },
                  {
                    "name": "if",
                    "line_number": 897
                  },
                  {
                    "name": "if",
                    "line_number": 900
                  },
                  {
                    "name": "if",
                    "line_number": 913
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 915
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 761
                  },
                  {
                    "type": "if",
                    "line_number": 764
                  },
                  {
                    "type": "if",
                    "line_number": 772
                  },
                  {
                    "type": "if",
                    "line_number": 774
                  },
                  {
                    "type": "for",
                    "line_number": 779
                  },
                  {
                    "type": "if",
                    "line_number": 781
                  },
                  {
                    "type": "if",
                    "line_number": 787
                  },
                  {
                    "type": "if",
                    "line_number": 789
                  },
                  {
                    "type": "if",
                    "line_number": 798
                  },
                  {
                    "type": "if",
                    "line_number": 800
                  },
                  {
                    "type": "if",
                    "line_number": 807
                  },
                  {
                    "type": "else",
                    "line_number": 812
                  },
                  {
                    "type": "if",
                    "line_number": 819
                  },
                  {
                    "type": "else",
                    "line_number": 825
                  },
                  {
                    "type": "if",
                    "line_number": 836
                  },
                  {
                    "type": "if",
                    "line_number": 841
                  },
                  {
                    "type": "else",
                    "line_number": 846
                  },
                  {
                    "type": "if",
                    "line_number": 855
                  },
                  {
                    "type": "if",
                    "line_number": 858
                  },
                  {
                    "type": "if",
                    "line_number": 860
                  },
                  {
                    "type": "else",
                    "line_number": 866
                  },
                  {
                    "type": "if",
                    "line_number": 877
                  },
                  {
                    "type": "if",
                    "line_number": 880
                  },
                  {
                    "type": "if",
                    "line_number": 882
                  },
                  {
                    "type": "if",
                    "line_number": 884
                  },
                  {
                    "type": "else",
                    "line_number": 892
                  },
                  {
                    "type": "if",
                    "line_number": 897
                  },
                  {
                    "type": "if",
                    "line_number": 900
                  },
                  {
                    "type": "if",
                    "line_number": 912
                  },
                  {
                    "type": "if",
                    "line_number": 913
                  }
                ],
                "complexity": 25,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "R_PointToAngle2",
                  "ST_calcPainOffset",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "dead",
                "parameters": [
                  {
                    "type": "",
                    "name": "!plyr->health"
                  }
                ],
                "start_line": 763,
                "end_line": 768,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "!plyr->health"
                ],
                "outputs": [
                  "dead"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "",
                    "name": "i"
                  }
                ],
                "start_line": 841,
                "end_line": 845,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "getting hurt because of your own damn stupidity",
                "parameters": [
                  {
                    "type": "",
                    "name": "plyr->damagecount"
                  }
                ],
                "start_line": 857,
                "end_line": 872,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 859
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 863
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 869
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 859
                  },
                  {
                    "type": "else",
                    "line_number": 865
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "plyr->damagecount"
                ],
                "outputs": [
                  "getting hurt because of your own damn stupidity"
                ],
                "dependencies": [
                  "ST_calcPainOffset",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "rapid firing",
                "parameters": [
                  {
                    "type": "",
                    "name": "plyr->attackdown"
                  }
                ],
                "start_line": 879,
                "end_line": 890,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 881
                  },
                  {
                    "name": "if",
                    "line_number": 883
                  },
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 886
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 881
                  },
                  {
                    "type": "if",
                    "line_number": 883
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "plyr->attackdown"
                ],
                "outputs": [
                  "rapid firing"
                ],
                "dependencies": [
                  "ST_calcPainOffset",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "",
                    "name": "!--lastattackdown"
                  }
                ],
                "start_line": 884,
                "end_line": 890,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 887
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "!--lastattackdown"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "ST_calcPainOffset"
                ]
              },
              {
                "name": "if",
                "return_type": "look left or look right if the facecount has timed out",
                "parameters": [
                  {
                    "type": "",
                    "name": "!st_facecount"
                  }
                ],
                "start_line": 912,
                "end_line": 917,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "ST_calcPainOffset",
                    "line_number": 914
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "!st_facecount"
                ],
                "outputs": [
                  "look left or look right if the facecount has timed out"
                ],
                "dependencies": [
                  "ST_calcPainOffset"
                ]
              },
              {
                "name": "ST_updateWidgets",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 924,
                "end_line": 986,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 927
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 930
                  },
                  {
                    "name": "if",
                    "line_number": 932
                  },
                  {
                    "name": "if",
                    "line_number": 939
                  },
                  {
                    "name": "if",
                    "line_number": 941
                  },
                  {
                    "name": "if",
                    "line_number": 947
                  },
                  {
                    "name": "STlib_updateNum",
                    "line_number": 948
                  },
                  {
                    "name": "for",
                    "line_number": 953
                  },
                  {
                    "name": "if",
                    "line_number": 957
                  },
                  {
                    "name": "ST_updateFaceWidget",
                    "line_number": 962
                  },
                  {
                    "name": "for",
                    "line_number": 974
                  },
                  {
                    "name": "if",
                    "line_number": 976
                  },
                  {
                    "name": "if",
                    "line_number": 983
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 929
                  },
                  {
                    "type": "if",
                    "line_number": 930
                  },
                  {
                    "type": "if",
                    "line_number": 932
                  },
                  {
                    "type": "else",
                    "line_number": 934
                  },
                  {
                    "type": "if",
                    "line_number": 939
                  },
                  {
                    "type": "if",
                    "line_number": 941
                  },
                  {
                    "type": "if",
                    "line_number": 947
                  },
                  {
                    "type": "for",
                    "line_number": 953
                  },
                  {
                    "type": "if",
                    "line_number": 957
                  },
                  {
                    "type": "if",
                    "line_number": 961
                  },
                  {
                    "type": "for",
                    "line_number": 974
                  },
                  {
                    "type": "if",
                    "line_number": 976
                  },
                  {
                    "type": "else",
                    "line_number": 978
                  },
                  {
                    "type": "if",
                    "line_number": 982
                  },
                  {
                    "type": "if",
                    "line_number": 983
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "ST_updateFaceWidget",
                  "STlib_updateNum",
                  "if"
                ]
              },
              {
                "name": "for",
                "return_type": "update keycard multiple widgets",
                "parameters": [
                  {
                    "type": "",
                    "name": "i=0;i<3;i++"
                  }
                ],
                "start_line": 952,
                "end_line": 958,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 956
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 956
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "i=0;i<3;i++"
                ],
                "outputs": [
                  "update keycard multiple widgets"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "ST_Ticker",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 988,
                "end_line": 996,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "M_Random",
                    "line_number": 992
                  },
                  {
                    "name": "ST_updateWidgets",
                    "line_number": 993
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "ST_updateWidgets",
                  "M_Random"
                ]
              },
              {
                "name": "ST_doPaletteStuff",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1000,
                "end_line": 1052,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "palette",
                    "array_size": null,
                    "line_number": 1003
                  },
                  {
                    "type": "int",
                    "name": "cnt",
                    "array_size": null,
                    "line_number": 1005
                  },
                  {
                    "type": "int",
                    "name": "bzc",
                    "array_size": null,
                    "line_number": 1006
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1010
                  },
                  {
                    "name": "if",
                    "line_number": 1015
                  },
                  {
                    "name": "if",
                    "line_number": 1019
                  },
                  {
                    "name": "if",
                    "line_number": 1023
                  },
                  {
                    "name": "if",
                    "line_number": 1029
                  },
                  {
                    "name": "if",
                    "line_number": 1033
                  },
                  {
                    "name": "if",
                    "line_number": 1039
                  },
                  {
                    "name": "if",
                    "line_number": 1045
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 1048
                  },
                  {
                    "name": "I_SetPalette",
                    "line_number": 1049
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1010
                  },
                  {
                    "type": "if",
                    "line_number": 1015
                  },
                  {
                    "type": "if",
                    "line_number": 1019
                  },
                  {
                    "type": "if",
                    "line_number": 1023
                  },
                  {
                    "type": "if",
                    "line_number": 1029
                  },
                  {
                    "type": "if",
                    "line_number": 1033
                  },
                  {
                    "type": "if",
                    "line_number": 1039
                  },
                  {
                    "type": "else",
                    "line_number": 1042
                  },
                  {
                    "type": "if",
                    "line_number": 1045
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpNum",
                  "I_SetPalette",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "",
                    "name": "plyr->bonuscount"
                  }
                ],
                "start_line": 1029,
                "end_line": 1037,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1033
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1033
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "plyr->bonuscount"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "ST_drawWidgets",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "boolean",
                    "name": "refresh"
                  }
                ],
                "start_line": 1054,
                "end_line": 1087,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1056
                  }
                ],
                "function_calls": [
                  {
                    "name": "STlib_updateNum",
                    "line_number": 1064
                  },
                  {
                    "name": "for",
                    "line_number": 1066
                  },
                  {
                    "name": "STlib_updateNum",
                    "line_number": 1068
                  },
                  {
                    "name": "STlib_updateNum",
                    "line_number": 1069
                  },
                  {
                    "name": "STlib_updatePercent",
                    "line_number": 1072
                  },
                  {
                    "name": "STlib_updatePercent",
                    "line_number": 1073
                  },
                  {
                    "name": "STlib_updateBinIcon",
                    "line_number": 1075
                  },
                  {
                    "name": "for",
                    "line_number": 1077
                  },
                  {
                    "name": "STlib_updateMultIcon",
                    "line_number": 1078
                  },
                  {
                    "name": "STlib_updateMultIcon",
                    "line_number": 1080
                  },
                  {
                    "name": "for",
                    "line_number": 1082
                  },
                  {
                    "name": "STlib_updateMultIcon",
                    "line_number": 1083
                  },
                  {
                    "name": "STlib_updateNum",
                    "line_number": 1085
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1066
                  },
                  {
                    "type": "for",
                    "line_number": 1077
                  },
                  {
                    "type": "for",
                    "line_number": 1082
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "refresh"
                ],
                "outputs": [],
                "dependencies": [
                  "STlib_updatePercent",
                  "STlib_updateMultIcon",
                  "for",
                  "STlib_updateBinIcon",
                  "STlib_updateNum"
                ]
              },
              {
                "name": "ST_doRefresh",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1089,
                "end_line": 1100,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "ST_refreshBackground",
                    "line_number": 1095
                  },
                  {
                    "name": "ST_drawWidgets",
                    "line_number": 1098
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "ST_drawWidgets",
                  "ST_refreshBackground"
                ]
              },
              {
                "name": "ST_diffDraw",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1102,
                "end_line": 1106,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "ST_drawWidgets",
                    "line_number": 1105
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "ST_drawWidgets"
                ]
              },
              {
                "name": "ST_Drawer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "boolean",
                    "name": "fullscreen"
                  },
                  {
                    "type": "boolean",
                    "name": "refresh"
                  }
                ],
                "start_line": 1108,
                "end_line": 1122,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "ST_doPaletteStuff",
                    "line_number": 1115
                  },
                  {
                    "name": "ST_Start",
                    "line_number": 1117
                  },
                  {
                    "name": "if",
                    "line_number": 1118
                  },
                  {
                    "name": "ST_doRefresh",
                    "line_number": 1118
                  },
                  {
                    "name": "ST_diffDraw",
                    "line_number": 1120
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1118
                  },
                  {
                    "type": "else",
                    "line_number": 1120
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "fullscreen",
                  "refresh"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "ST_doRefresh",
                  "ST_doPaletteStuff",
                  "ST_diffDraw",
                  "ST_Start"
                ]
              },
              {
                "name": "ST_loadGraphics",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1124,
                "end_line": 1199,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1127
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 1128
                  },
                  {
                    "type": "int",
                    "name": "facenum",
                    "array_size": null,
                    "line_number": 1129
                  },
                  {
                    "type": "char",
                    "name": "namebuf",
                    "array_size": "9",
                    "line_number": 1131
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1134
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1136
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1137
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1139
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1140
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1145
                  },
                  {
                    "name": "for",
                    "line_number": 1148
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1150
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1151
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1155
                  },
                  {
                    "name": "for",
                    "line_number": 1158
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1160
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1163
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1170
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1171
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1174
                  },
                  {
                    "name": "for",
                    "line_number": 1178
                  },
                  {
                    "name": "for",
                    "line_number": 1180
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1182
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1183
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1185
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1186
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1187
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1188
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1189
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1190
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1191
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1192
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1193
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1194
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1196
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1197
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1134
                  },
                  {
                    "type": "for",
                    "line_number": 1148
                  },
                  {
                    "type": "for",
                    "line_number": 1158
                  },
                  {
                    "type": "for",
                    "line_number": 1169
                  },
                  {
                    "type": "for",
                    "line_number": 1178
                  },
                  {
                    "type": "for",
                    "line_number": 1180
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "sprintf",
                  "W_CacheLumpName",
                  "for"
                ]
              },
              {
                "name": "for",
                "return_type": "tall and short",
                "parameters": [
                  {
                    "type": "",
                    "name": "i=0;i<10;i++"
                  }
                ],
                "start_line": 1133,
                "end_line": 1140,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "sprintf",
                    "line_number": 1135
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1136
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1138
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1139
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i=0;i<10;i++"
                ],
                "outputs": [
                  "tall and short"
                ],
                "dependencies": [
                  "sprintf",
                  "W_CacheLumpName"
                ]
              },
              {
                "name": "for",
                "return_type": "key cards",
                "parameters": [
                  {
                    "type": "",
                    "name": "i=0;i<NUMCARDS;i++"
                  }
                ],
                "start_line": 1147,
                "end_line": 1151,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "sprintf",
                    "line_number": 1149
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1150
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i=0;i<NUMCARDS;i++"
                ],
                "outputs": [
                  "key cards"
                ],
                "dependencies": [
                  "sprintf",
                  "W_CacheLumpName"
                ]
              },
              {
                "name": "for",
                "return_type": "arms ownership widgets",
                "parameters": [
                  {
                    "type": "",
                    "name": "i=0;i<6;i++"
                  }
                ],
                "start_line": 1157,
                "end_line": 1166,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "sprintf",
                    "line_number": 1159
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1162
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i=0;i<6;i++"
                ],
                "outputs": [
                  "arms ownership widgets"
                ],
                "dependencies": [
                  "sprintf",
                  "W_CacheLumpName"
                ]
              },
              {
                "name": "ST_loadData",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1201,
                "end_line": 1205,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "W_GetNumForName",
                    "line_number": 1203
                  },
                  {
                    "name": "ST_loadGraphics",
                    "line_number": 1204
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_GetNumForName",
                  "ST_loadGraphics"
                ]
              },
              {
                "name": "ST_unloadGraphics",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1207,
                "end_line": 1242,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1210
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1213
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1215
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1216
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1219
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1222
                  },
                  {
                    "name": "for",
                    "line_number": 1225
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1226
                  },
                  {
                    "name": "for",
                    "line_number": 1229
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1230
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1232
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1233
                  },
                  {
                    "name": "for",
                    "line_number": 1235
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1236
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1213
                  },
                  {
                    "type": "for",
                    "line_number": 1225
                  },
                  {
                    "type": "for",
                    "line_number": 1229
                  },
                  {
                    "type": "for",
                    "line_number": 1235
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "Z_ChangeTag",
                  "for"
                ]
              },
              {
                "name": "for",
                "return_type": "tall and short",
                "parameters": [
                  {
                    "type": "",
                    "name": "i=0;i<10;i++"
                  }
                ],
                "start_line": 1212,
                "end_line": 1216,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1214
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1215
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i=0;i<10;i++"
                ],
                "outputs": [
                  "tall and short"
                ],
                "dependencies": [
                  "Z_ChangeTag"
                ]
              },
              {
                "name": "ST_unloadData",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1244,
                "end_line": 1247,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "ST_unloadGraphics",
                    "line_number": 1246
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "ST_unloadGraphics"
                ]
              },
              {
                "name": "ST_initData",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1249,
                "end_line": 1278,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1252
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1270
                  },
                  {
                    "name": "for",
                    "line_number": 1273
                  },
                  {
                    "name": "STlib_init",
                    "line_number": 1276
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1270
                  },
                  {
                    "type": "for",
                    "line_number": 1273
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "STlib_init",
                  "for"
                ]
              },
              {
                "name": "ST_createWidgets",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1282,
                "end_line": 1439,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1285
                  }
                ],
                "function_calls": [
                  {
                    "name": "STlib_initNum",
                    "line_number": 1288
                  },
                  {
                    "name": "STlib_initPercent",
                    "line_number": 1300
                  },
                  {
                    "name": "STlib_initBinIcon",
                    "line_number": 1309
                  },
                  {
                    "name": "for",
                    "line_number": 1317
                  },
                  {
                    "name": "STlib_initMultIcon",
                    "line_number": 1319
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1327
                  },
                  {
                    "name": "STlib_initMultIcon",
                    "line_number": 1336
                  },
                  {
                    "name": "STlib_initPercent",
                    "line_number": 1344
                  },
                  {
                    "name": "STlib_initMultIcon",
                    "line_number": 1352
                  },
                  {
                    "name": "STlib_initMultIcon",
                    "line_number": 1359
                  },
                  {
                    "name": "STlib_initMultIcon",
                    "line_number": 1366
                  },
                  {
                    "name": "count",
                    "line_number": 1373
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1374
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1382
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1390
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1398
                  },
                  {
                    "name": "count",
                    "line_number": 1406
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1407
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1415
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1423
                  },
                  {
                    "name": "STlib_initNum",
                    "line_number": 1431
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1317
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "STlib_initBinIcon",
                  "for",
                  "count",
                  "STlib_initNum",
                  "STlib_initPercent",
                  "STlib_initMultIcon"
                ]
              },
              {
                "name": "for",
                "return_type": "weapons owned",
                "parameters": [
                  {
                    "type": "",
                    "name": "i=0;i<6;i++"
                  }
                ],
                "start_line": 1316,
                "end_line": 1323,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "STlib_initMultIcon",
                    "line_number": 1318
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i=0;i<6;i++"
                ],
                "outputs": [
                  "weapons owned"
                ],
                "dependencies": [
                  "STlib_initMultIcon"
                ]
              },
              {
                "name": "ST_Start",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1444,
                "end_line": 1454,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1447
                  },
                  {
                    "name": "ST_Stop",
                    "line_number": 1448
                  },
                  {
                    "name": "ST_initData",
                    "line_number": 1450
                  },
                  {
                    "name": "ST_createWidgets",
                    "line_number": 1451
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1447
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "ST_Stop",
                  "ST_createWidgets",
                  "ST_initData",
                  "if"
                ]
              },
              {
                "name": "ST_Stop",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1456,
                "end_line": 1464,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1458
                  },
                  {
                    "name": "I_SetPalette",
                    "line_number": 1461
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 1461
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1458
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "W_CacheLumpNum",
                  "I_SetPalette",
                  "if"
                ]
              },
              {
                "name": "ST_Init",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1466,
                "end_line": 1471,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "ST_loadData",
                    "line_number": 1469
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 1470
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "ST_loadData",
                  "Z_Malloc"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "st_firsttime",
                "type": "boolean",
                "storage_class": "static",
                "array_size": null,
                "line_number": 273
              },
              {
                "name": "lu_palette",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 279
              },
              {
                "name": "st_clock",
                "type": "unsigned int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 282
              },
              {
                "name": "st_chatstate",
                "type": "st_chatstateenum_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 288
              },
              {
                "name": "st_gamestate",
                "type": "st_stateenum_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 291
              },
              {
                "name": "st_statusbaron",
                "type": "boolean",
                "storage_class": "static",
                "array_size": null,
                "line_number": 294
              },
              {
                "name": "st_chat",
                "type": "boolean",
                "storage_class": "static",
                "array_size": null,
                "line_number": 297
              },
              {
                "name": "st_oldchat",
                "type": "boolean",
                "storage_class": "static",
                "array_size": null,
                "line_number": 300
              },
              {
                "name": "st_cursoron",
                "type": "boolean",
                "storage_class": "static",
                "array_size": null,
                "line_number": 303
              },
              {
                "name": "st_notdeathmatch",
                "type": "boolean",
                "storage_class": "static",
                "array_size": null,
                "line_number": 306
              },
              {
                "name": "st_armson",
                "type": "boolean",
                "storage_class": "static",
                "array_size": null,
                "line_number": 309
              },
              {
                "name": "st_fragson",
                "type": "boolean",
                "storage_class": "static",
                "array_size": null,
                "line_number": 312
              },
              {
                "name": "w_ready",
                "type": "st_number_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 342
              },
              {
                "name": "w_frags",
                "type": "st_number_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 345
              },
              {
                "name": "w_health",
                "type": "st_percent_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 348
              },
              {
                "name": "w_armsbg",
                "type": "st_binicon_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 351
              },
              {
                "name": "w_arms",
                "type": "st_multicon_t",
                "storage_class": "static",
                "array_size": "6",
                "line_number": 355
              },
              {
                "name": "w_faces",
                "type": "st_multicon_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 358
              },
              {
                "name": "w_keyboxes",
                "type": "st_multicon_t",
                "storage_class": "static",
                "array_size": "3",
                "line_number": 361
              },
              {
                "name": "w_armor",
                "type": "st_percent_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 364
              },
              {
                "name": "w_ammo",
                "type": "st_number_t",
                "storage_class": "static",
                "array_size": "4",
                "line_number": 367
              },
              {
                "name": "w_maxammo",
                "type": "st_number_t",
                "storage_class": "static",
                "array_size": "4",
                "line_number": 370
              },
              {
                "name": "st_fragscount",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 375
              },
              {
                "name": "keyboxes",
                "type": "int",
                "storage_class": "static",
                "array_size": "3",
                "line_number": 390
              },
              {
                "name": "st_randomnumber",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 393
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 520
              },
              {
                "name": "buf",
                "type": "char",
                "storage_class": null,
                "array_size": "3",
                "line_number": 598
              },
              {
                "name": "musnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 599
              },
              {
                "name": "buf",
                "type": "char",
                "storage_class": null,
                "array_size": "3",
                "line_number": 678
              },
              {
                "name": "epsd",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 679
              },
              {
                "name": "map",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 680
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 697
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 700
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 705
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 709
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 713
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 717
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 724
              },
              {
                "name": "health",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 731
              },
              {
                "name": "lastcalc",
                "type": "static int",
                "storage_class": null,
                "array_size": null,
                "line_number": 732
              },
              {
                "name": "lastcalc",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 742
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 754
              },
              {
                "name": "badguyangle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 755
              },
              {
                "name": "diffang",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 756
              },
              {
                "name": "doevilgrin",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 759
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 927
              },
              {
                "name": "palette",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1003
              },
              {
                "name": "cnt",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1005
              },
              {
                "name": "bzc",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1006
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1056
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1127
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1128
              },
              {
                "name": "facenum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1129
              },
              {
                "name": "namebuf",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 1131
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1210
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1252
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1285
              }
            ],
            "defines": [
              {
                "name": "STARTREDPALS",
                "value": "1",
                "line_number": 71
              },
              {
                "name": "STARTBONUSPALS",
                "value": "9",
                "line_number": 72
              },
              {
                "name": "NUMREDPALS",
                "value": "8",
                "line_number": 73
              },
              {
                "name": "NUMBONUSPALS",
                "value": "4",
                "line_number": 74
              },
              {
                "name": "RADIATIONPAL",
                "value": "13",
                "line_number": 76
              },
              {
                "name": "ST_FACEPROBABILITY",
                "value": "96",
                "line_number": 80
              },
              {
                "name": "ST_TOGGLECHAT",
                "value": "KEY_ENTER",
                "line_number": 83
              },
              {
                "name": "ST_X",
                "value": "0",
                "line_number": 86
              },
              {
                "name": "ST_X2",
                "value": "104",
                "line_number": 87
              },
              {
                "name": "ST_FX",
                "value": "143",
                "line_number": 89
              },
              {
                "name": "ST_FY",
                "value": "169",
                "line_number": 90
              },
              {
                "name": "ST_TALLNUMWIDTH",
                "value": "(tallnum[0]->width)",
                "line_number": 94
              },
              {
                "name": "ST_NUMPAINFACES",
                "value": "5",
                "line_number": 97
              },
              {
                "name": "ST_NUMSTRAIGHTFACES",
                "value": "3",
                "line_number": 98
              },
              {
                "name": "ST_NUMTURNFACES",
                "value": "2",
                "line_number": 99
              },
              {
                "name": "ST_NUMSPECIALFACES",
                "value": "3",
                "line_number": 100
              },
              {
                "name": "ST_FACESTRIDE",
                "value": "\\",
                "line_number": 102
              },
              {
                "name": "ST_NUMEXTRAFACES",
                "value": "2",
                "line_number": 105
              },
              {
                "name": "ST_NUMFACES",
                "value": "\\",
                "line_number": 107
              },
              {
                "name": "ST_TURNOFFSET",
                "value": "(ST_NUMSTRAIGHTFACES)",
                "line_number": 110
              },
              {
                "name": "ST_OUCHOFFSET",
                "value": "(ST_TURNOFFSET + ST_NUMTURNFACES)",
                "line_number": 111
              },
              {
                "name": "ST_EVILGRINOFFSET",
                "value": "(ST_OUCHOFFSET + 1)",
                "line_number": 112
              },
              {
                "name": "ST_RAMPAGEOFFSET",
                "value": "(ST_EVILGRINOFFSET + 1)",
                "line_number": 113
              },
              {
                "name": "ST_GODFACE",
                "value": "(ST_NUMPAINFACES*ST_FACESTRIDE)",
                "line_number": 114
              },
              {
                "name": "ST_DEADFACE",
                "value": "(ST_GODFACE+1)",
                "line_number": 115
              },
              {
                "name": "ST_FACESX",
                "value": "143",
                "line_number": 117
              },
              {
                "name": "ST_FACESY",
                "value": "168",
                "line_number": 118
              },
              {
                "name": "ST_EVILGRINCOUNT",
                "value": "(2*TICRATE)",
                "line_number": 120
              },
              {
                "name": "ST_STRAIGHTFACECOUNT",
                "value": "(TICRATE/2)",
                "line_number": 121
              },
              {
                "name": "ST_TURNCOUNT",
                "value": "(1*TICRATE)",
                "line_number": 122
              },
              {
                "name": "ST_OUCHCOUNT",
                "value": "(1*TICRATE)",
                "line_number": 123
              },
              {
                "name": "ST_RAMPAGEDELAY",
                "value": "(2*TICRATE)",
                "line_number": 124
              },
              {
                "name": "ST_MUCHPAIN",
                "value": "20",
                "line_number": 126
              },
              {
                "name": "ST_AMMOWIDTH",
                "value": "3",
                "line_number": 138
              },
              {
                "name": "ST_AMMOX",
                "value": "44",
                "line_number": 139
              },
              {
                "name": "ST_AMMOY",
                "value": "171",
                "line_number": 140
              },
              {
                "name": "ST_HEALTHWIDTH",
                "value": "3",
                "line_number": 143
              },
              {
                "name": "ST_HEALTHX",
                "value": "90",
                "line_number": 144
              },
              {
                "name": "ST_HEALTHY",
                "value": "171",
                "line_number": 145
              },
              {
                "name": "ST_ARMSX",
                "value": "111",
                "line_number": 148
              },
              {
                "name": "ST_ARMSY",
                "value": "172",
                "line_number": 149
              },
              {
                "name": "ST_ARMSBGX",
                "value": "104",
                "line_number": 150
              },
              {
                "name": "ST_ARMSBGY",
                "value": "168",
                "line_number": 151
              },
              {
                "name": "ST_ARMSXSPACE",
                "value": "12",
                "line_number": 152
              },
              {
                "name": "ST_ARMSYSPACE",
                "value": "10",
                "line_number": 153
              },
              {
                "name": "ST_FRAGSX",
                "value": "138",
                "line_number": 156
              },
              {
                "name": "ST_FRAGSY",
                "value": "171",
                "line_number": 157
              },
              {
                "name": "ST_FRAGSWIDTH",
                "value": "2",
                "line_number": 158
              },
              {
                "name": "ST_ARMORWIDTH",
                "value": "3",
                "line_number": 161
              },
              {
                "name": "ST_ARMORX",
                "value": "221",
                "line_number": 162
              },
              {
                "name": "ST_ARMORY",
                "value": "171",
                "line_number": 163
              },
              {
                "name": "ST_KEY0WIDTH",
                "value": "8",
                "line_number": 166
              },
              {
                "name": "ST_KEY0HEIGHT",
                "value": "5",
                "line_number": 167
              },
              {
                "name": "ST_KEY0X",
                "value": "239",
                "line_number": 168
              },
              {
                "name": "ST_KEY0Y",
                "value": "171",
                "line_number": 169
              },
              {
                "name": "ST_KEY1WIDTH",
                "value": "ST_KEY0WIDTH",
                "line_number": 170
              },
              {
                "name": "ST_KEY1X",
                "value": "239",
                "line_number": 171
              },
              {
                "name": "ST_KEY1Y",
                "value": "181",
                "line_number": 172
              },
              {
                "name": "ST_KEY2WIDTH",
                "value": "ST_KEY0WIDTH",
                "line_number": 173
              },
              {
                "name": "ST_KEY2X",
                "value": "239",
                "line_number": 174
              },
              {
                "name": "ST_KEY2Y",
                "value": "191",
                "line_number": 175
              },
              {
                "name": "ST_AMMO0WIDTH",
                "value": "3",
                "line_number": 178
              },
              {
                "name": "ST_AMMO0HEIGHT",
                "value": "6",
                "line_number": 179
              },
              {
                "name": "ST_AMMO0X",
                "value": "288",
                "line_number": 180
              },
              {
                "name": "ST_AMMO0Y",
                "value": "173",
                "line_number": 181
              },
              {
                "name": "ST_AMMO1WIDTH",
                "value": "ST_AMMO0WIDTH",
                "line_number": 182
              },
              {
                "name": "ST_AMMO1X",
                "value": "288",
                "line_number": 183
              },
              {
                "name": "ST_AMMO1Y",
                "value": "179",
                "line_number": 184
              },
              {
                "name": "ST_AMMO2WIDTH",
                "value": "ST_AMMO0WIDTH",
                "line_number": 185
              },
              {
                "name": "ST_AMMO2X",
                "value": "288",
                "line_number": 186
              },
              {
                "name": "ST_AMMO2Y",
                "value": "191",
                "line_number": 187
              },
              {
                "name": "ST_AMMO3WIDTH",
                "value": "ST_AMMO0WIDTH",
                "line_number": 188
              },
              {
                "name": "ST_AMMO3X",
                "value": "288",
                "line_number": 189
              },
              {
                "name": "ST_AMMO3Y",
                "value": "185",
                "line_number": 190
              },
              {
                "name": "ST_MAXAMMO0WIDTH",
                "value": "3",
                "line_number": 194
              },
              {
                "name": "ST_MAXAMMO0HEIGHT",
                "value": "5",
                "line_number": 195
              },
              {
                "name": "ST_MAXAMMO0X",
                "value": "314",
                "line_number": 196
              },
              {
                "name": "ST_MAXAMMO0Y",
                "value": "173",
                "line_number": 197
              },
              {
                "name": "ST_MAXAMMO1WIDTH",
                "value": "ST_MAXAMMO0WIDTH",
                "line_number": 198
              },
              {
                "name": "ST_MAXAMMO1X",
                "value": "314",
                "line_number": 199
              },
              {
                "name": "ST_MAXAMMO1Y",
                "value": "179",
                "line_number": 200
              },
              {
                "name": "ST_MAXAMMO2WIDTH",
                "value": "ST_MAXAMMO0WIDTH",
                "line_number": 201
              },
              {
                "name": "ST_MAXAMMO2X",
                "value": "314",
                "line_number": 202
              },
              {
                "name": "ST_MAXAMMO2Y",
                "value": "191",
                "line_number": 203
              },
              {
                "name": "ST_MAXAMMO3WIDTH",
                "value": "ST_MAXAMMO0WIDTH",
                "line_number": 204
              },
              {
                "name": "ST_MAXAMMO3X",
                "value": "314",
                "line_number": 205
              },
              {
                "name": "ST_MAXAMMO3Y",
                "value": "185",
                "line_number": 206
              },
              {
                "name": "ST_WEAPON0X",
                "value": "110",
                "line_number": 209
              },
              {
                "name": "ST_WEAPON0Y",
                "value": "172",
                "line_number": 210
              },
              {
                "name": "ST_WEAPON1X",
                "value": "122",
                "line_number": 213
              },
              {
                "name": "ST_WEAPON1Y",
                "value": "172",
                "line_number": 214
              },
              {
                "name": "ST_WEAPON2X",
                "value": "134",
                "line_number": 217
              },
              {
                "name": "ST_WEAPON2Y",
                "value": "172",
                "line_number": 218
              },
              {
                "name": "ST_WEAPON3X",
                "value": "110",
                "line_number": 221
              },
              {
                "name": "ST_WEAPON3Y",
                "value": "181",
                "line_number": 222
              },
              {
                "name": "ST_WEAPON4X",
                "value": "122",
                "line_number": 225
              },
              {
                "name": "ST_WEAPON4Y",
                "value": "181",
                "line_number": 226
              },
              {
                "name": "ST_WEAPON5X",
                "value": "134",
                "line_number": 229
              },
              {
                "name": "ST_WEAPON5Y",
                "value": "181",
                "line_number": 230
              },
              {
                "name": "ST_WPNSX",
                "value": "109",
                "line_number": 233
              },
              {
                "name": "ST_WPNSY",
                "value": "191",
                "line_number": 234
              },
              {
                "name": "ST_DETHX",
                "value": "109",
                "line_number": 237
              },
              {
                "name": "ST_DETHY",
                "value": "191",
                "line_number": 238
              },
              {
                "name": "ST_MSGTEXTX",
                "value": "0",
                "line_number": 244
              },
              {
                "name": "ST_MSGTEXTY",
                "value": "0",
                "line_number": 245
              },
              {
                "name": "ST_MSGWIDTH",
                "value": "52",
                "line_number": 247
              },
              {
                "name": "ST_MSGHEIGHT",
                "value": "1",
                "line_number": 249
              },
              {
                "name": "ST_OUTTEXTX",
                "value": "0",
                "line_number": 251
              },
              {
                "name": "ST_OUTTEXTY",
                "value": "6",
                "line_number": 252
              },
              {
                "name": "ST_OUTWIDTH",
                "value": "52",
                "line_number": 255
              },
              {
                "name": "ST_OUTHEIGHT",
                "value": "1",
                "line_number": 257
              },
              {
                "name": "ST_MAPWIDTH",
                "value": "\\",
                "line_number": 259
              },
              {
                "name": "ST_MAPTITLEX",
                "value": "\\",
                "line_number": 262
              },
              {
                "name": "ST_MAPTITLEY",
                "value": "0",
                "line_number": 265
              },
              {
                "name": "ST_MAPHEIGHT",
                "value": "1",
                "line_number": 266
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/st_stuff.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of functions",
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "st_stuff.h",
          "type": "file",
          "size": 1874,
          "last_modified": "2024-09-05T16:00:05.525737",
          "path": "linuxdoom-1.10/st_stuff.h",
          "readme": "# st_stuff.h\n\nThis file contains functionality related to st_stuff.",
          "dependencies": [
            "d_event.h",
            "doomtype.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": [
              {
                "name": "ST_HEIGHT",
                "value": "32*SCREEN_MUL",
                "line_number": 32
              },
              {
                "name": "ST_WIDTH",
                "value": "SCREENWIDTH",
                "line_number": 33
              },
              {
                "name": "ST_Y",
                "value": "(SCREENHEIGHT - ST_HEIGHT)",
                "line_number": 34
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/st_stuff.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "s_sound.c",
          "type": "file",
          "size": 16626,
          "last_modified": "2024-09-05T16:00:05.351566",
          "path": "linuxdoom-1.10/s_sound.c",
          "readme": "# s_sound.c\n\nThis file contains functionality related to s_sound.",
          "dependencies": [
            "m_random.h",
            "w_wad.h",
            "stdio.h",
            "p_local.h",
            "sounds.h",
            "z_zone.h",
            "i_system.h",
            "stdlib.h",
            "doomstat.h",
            "s_sound.h",
            "doomdef.h",
            "i_sound.h"
          ],
          "inputs": [
            "looping",
            "cnum",
            "m_id",
            "musicVolume",
            "!music->lumpnum",
            "sfx_tink",
            "sfxVolume",
            "numChannels",
            "sfx_id",
            "sfx->link",
            "musicnum",
            "i++",
            "cnum++",
            "vol",
            "c->origin",
            "origin",
            "source",
            "pitch",
            "*origin",
            "players[consoleplayer].mo",
            "sep",
            "snd_SfxVolume",
            "void",
            "8",
            "sfx_sawhit",
            "listener_p",
            "listener",
            "!sfx->data",
            "S_CLOSE_DIST",
            "sfxinfo",
            "origin_p",
            "volume"
          ],
          "outputs": [
            "modify the params",
            "None available",
            "Initialize sound parameters",
            "hacks to vary the sfx pitches",
            "int",
            "cache data if necessary",
            "volume calculation",
            "get lumpnum if neccessary",
            "if other channels are playing the sound",
            "Find an open channel",
            "or modify their params",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "S_Init",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "sfxVolume"
                  },
                  {
                    "type": "int",
                    "name": "musicVolume"
                  }
                ],
                "start_line": 161,
                "end_line": 190,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 163
                  }
                ],
                "function_calls": [
                  {
                    "name": "fprintf",
                    "line_number": 165
                  },
                  {
                    "name": "I_SetChannels",
                    "line_number": 168
                  },
                  {
                    "name": "S_SetSfxVolume",
                    "line_number": 170
                  },
                  {
                    "name": "S_SetMusicVolume",
                    "line_number": 172
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 178
                  },
                  {
                    "name": "sizeof",
                    "line_number": 178
                  },
                  {
                    "name": "for",
                    "line_number": 181
                  },
                  {
                    "name": "cached",
                    "line_number": 187
                  },
                  {
                    "name": "for",
                    "line_number": 188
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 174
                  },
                  {
                    "type": "for",
                    "line_number": 180
                  },
                  {
                    "type": "for",
                    "line_number": 181
                  },
                  {
                    "type": "for",
                    "line_number": 188
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "sfxVolume",
                  "musicVolume"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "Z_Malloc",
                  "S_SetSfxVolume",
                  "for",
                  "cached",
                  "sizeof",
                  "S_SetMusicVolume",
                  "I_SetChannels"
                ]
              },
              {
                "name": "S_Start",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 202,
                "end_line": 248,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "cnum",
                    "array_size": null,
                    "line_number": 204
                  },
                  {
                    "type": "int",
                    "name": "mnum",
                    "array_size": null,
                    "line_number": 205
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 209
                  },
                  {
                    "name": "if",
                    "line_number": 210
                  },
                  {
                    "name": "S_StopChannel",
                    "line_number": 211
                  },
                  {
                    "name": "if",
                    "line_number": 216
                  },
                  {
                    "name": "if",
                    "line_number": 235
                  },
                  {
                    "name": "if",
                    "line_number": 242
                  },
                  {
                    "name": "S_ChangeMusic",
                    "line_number": 245
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 209
                  },
                  {
                    "type": "if",
                    "line_number": 210
                  },
                  {
                    "type": "for",
                    "line_number": 213
                  },
                  {
                    "type": "if",
                    "line_number": 216
                  },
                  {
                    "type": "else",
                    "line_number": 218
                  },
                  {
                    "type": "if",
                    "line_number": 235
                  },
                  {
                    "type": "else",
                    "line_number": 237
                  },
                  {
                    "type": "if",
                    "line_number": 242
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "S_StopChannel",
                  "S_ChangeMusic",
                  "if",
                  "for"
                ]
              },
              {
                "name": "S_StartSoundAtVolume",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "void*",
                    "name": "origin_p"
                  },
                  {
                    "type": "int",
                    "name": "sfx_id"
                  },
                  {
                    "type": "int",
                    "name": "volume"
                  }
                ],
                "start_line": 254,
                "end_line": 391,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "rc",
                    "array_size": null,
                    "line_number": 257
                  },
                  {
                    "type": "int",
                    "name": "sep",
                    "array_size": null,
                    "line_number": 258
                  },
                  {
                    "type": "int",
                    "name": "pitch",
                    "array_size": null,
                    "line_number": 259
                  },
                  {
                    "type": "int",
                    "name": "priority",
                    "array_size": null,
                    "line_number": 260
                  },
                  {
                    "type": "int",
                    "name": "cnum",
                    "array_size": null,
                    "line_number": 262
                  }
                ],
                "function_calls": [
                  {
                    "name": "fprintf",
                    "line_number": 268
                  },
                  {
                    "name": "d",
                    "line_number": 269
                  },
                  {
                    "name": "if",
                    "line_number": 273
                  },
                  {
                    "name": "I_Error",
                    "line_number": 274
                  },
                  {
                    "name": "if",
                    "line_number": 279
                  },
                  {
                    "name": "if",
                    "line_number": 285
                  },
                  {
                    "name": "if",
                    "line_number": 288
                  },
                  {
                    "name": "if",
                    "line_number": 300
                  },
                  {
                    "name": "S_AdjustSoundParams",
                    "line_number": 302
                  },
                  {
                    "name": "if",
                    "line_number": 308
                  },
                  {
                    "name": "if",
                    "line_number": 314
                  },
                  {
                    "name": "if",
                    "line_number": 323
                  },
                  {
                    "name": "M_Random",
                    "line_number": 326
                  },
                  {
                    "name": "if",
                    "line_number": 328
                  },
                  {
                    "name": "if",
                    "line_number": 330
                  },
                  {
                    "name": "if",
                    "line_number": 333
                  },
                  {
                    "name": "M_Random",
                    "line_number": 336
                  },
                  {
                    "name": "if",
                    "line_number": 338
                  },
                  {
                    "name": "if",
                    "line_number": 340
                  },
                  {
                    "name": "S_StopSound",
                    "line_number": 345
                  },
                  {
                    "name": "S_getChannel",
                    "line_number": 348
                  },
                  {
                    "name": "if",
                    "line_number": 350
                  },
                  {
                    "name": "if",
                    "line_number": 360
                  },
                  {
                    "name": "I_GetSfxLumpNum",
                    "line_number": 361
                  },
                  {
                    "name": "if",
                    "line_number": 365
                  },
                  {
                    "name": "fprintf",
                    "line_number": 367
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 371
                  },
                  {
                    "name": "fprintf",
                    "line_number": 372
                  },
                  {
                    "name": "d",
                    "line_number": 373
                  },
                  {
                    "name": "if",
                    "line_number": 380
                  },
                  {
                    "name": "I_StartSound",
                    "line_number": 385
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 272
                  },
                  {
                    "type": "if",
                    "line_number": 273
                  },
                  {
                    "type": "if",
                    "line_number": 279
                  },
                  {
                    "type": "if",
                    "line_number": 285
                  },
                  {
                    "type": "if",
                    "line_number": 288
                  },
                  {
                    "type": "else",
                    "line_number": 291
                  },
                  {
                    "type": "if",
                    "line_number": 298
                  },
                  {
                    "type": "if",
                    "line_number": 299
                  },
                  {
                    "type": "if",
                    "line_number": 300
                  },
                  {
                    "type": "if",
                    "line_number": 308
                  },
                  {
                    "type": "if",
                    "line_number": 314
                  },
                  {
                    "type": "else",
                    "line_number": 317
                  },
                  {
                    "type": "if",
                    "line_number": 323
                  },
                  {
                    "type": "if",
                    "line_number": 328
                  },
                  {
                    "type": "if",
                    "line_number": 330
                  },
                  {
                    "type": "if",
                    "line_number": 333
                  },
                  {
                    "type": "if",
                    "line_number": 338
                  },
                  {
                    "type": "if",
                    "line_number": 340
                  },
                  {
                    "type": "if",
                    "line_number": 350
                  },
                  {
                    "type": "if",
                    "line_number": 359
                  },
                  {
                    "type": "if",
                    "line_number": 360
                  },
                  {
                    "type": "if",
                    "line_number": 364
                  },
                  {
                    "type": "if",
                    "line_number": 365
                  },
                  {
                    "type": "if",
                    "line_number": 380
                  }
                ],
                "complexity": 18,
                "inputs": [
                  "origin_p",
                  "sfx_id",
                  "volume"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "I_GetSfxLumpNum",
                  "if",
                  "I_Error",
                  "W_CacheLumpNum",
                  "I_StartSound",
                  "d",
                  "M_Random",
                  "S_StopSound",
                  "S_AdjustSoundParams",
                  "S_getChannel"
                ]
              },
              {
                "name": "if",
                "return_type": "Initialize sound parameters",
                "parameters": [
                  {
                    "type": "",
                    "name": "sfx->link"
                  }
                ],
                "start_line": 282,
                "end_line": 293,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 288
                  },
                  {
                    "name": "if",
                    "line_number": 291
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 288
                  },
                  {
                    "type": "if",
                    "line_number": 291
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "sfx->link"
                ],
                "outputs": [
                  "Initialize sound parameters"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "modify the params",
                "parameters": [
                  {
                    "type": "origin && origin !=",
                    "name": "players[consoleplayer].mo"
                  }
                ],
                "start_line": 303,
                "end_line": 319,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_AdjustSoundParams",
                    "line_number": 305
                  },
                  {
                    "name": "if",
                    "line_number": 311
                  },
                  {
                    "name": "if",
                    "line_number": 317
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 311
                  },
                  {
                    "type": "if",
                    "line_number": 317
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "players[consoleplayer].mo"
                ],
                "outputs": [
                  "modify the params"
                ],
                "dependencies": [
                  "S_AdjustSoundParams",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "hacks to vary the sfx pitches",
                "parameters": [
                  {
                    "type": "sfx_id >= sfx_sawup && sfx_id <=",
                    "name": "sfx_sawhit"
                  }
                ],
                "start_line": 326,
                "end_line": 334,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "M_Random",
                    "line_number": 328
                  },
                  {
                    "name": "if",
                    "line_number": 330
                  },
                  {
                    "name": "if",
                    "line_number": 332
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 330
                  },
                  {
                    "type": "if",
                    "line_number": 332
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "sfx_sawhit"
                ],
                "outputs": [
                  "hacks to vary the sfx pitches"
                ],
                "dependencies": [
                  "if",
                  "M_Random"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "sfx_id != sfx_itemup && sfx_id !=",
                    "name": "sfx_tink"
                  }
                ],
                "start_line": 337,
                "end_line": 345,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "M_Random",
                    "line_number": 339
                  },
                  {
                    "name": "if",
                    "line_number": 341
                  },
                  {
                    "name": "if",
                    "line_number": 343
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 341
                  },
                  {
                    "type": "if",
                    "line_number": 343
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "sfx_tink"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "if",
                  "M_Random"
                ]
              },
              {
                "name": "if",
                "return_type": "cache data if necessary",
                "parameters": [
                  {
                    "type": "",
                    "name": "!sfx->data"
                  }
                ],
                "start_line": 368,
                "end_line": 379,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "fprintf",
                    "line_number": 370
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 374
                  },
                  {
                    "name": "fprintf",
                    "line_number": 375
                  },
                  {
                    "name": "d",
                    "line_number": 376
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "!sfx->data"
                ],
                "outputs": [
                  "cache data if necessary"
                ],
                "dependencies": [
                  "fprintf",
                  "d",
                  "W_CacheLumpNum"
                ]
              },
              {
                "name": "S_StartSound",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "void*",
                    "name": "origin"
                  },
                  {
                    "type": "int",
                    "name": "sfx_id"
                  }
                ],
                "start_line": 397,
                "end_line": 463,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 410
                  },
                  {
                    "type": "int",
                    "name": "n",
                    "array_size": null,
                    "line_number": 411
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 400
                  },
                  {
                    "name": "S_StartSoundAtVolume",
                    "line_number": 404
                  },
                  {
                    "name": "if",
                    "line_number": 417
                  },
                  {
                    "name": "for",
                    "line_number": 421
                  },
                  {
                    "name": "if",
                    "line_number": 422
                  },
                  {
                    "name": "fprintf",
                    "line_number": 423
                  },
                  {
                    "name": "if",
                    "line_number": 431
                  },
                  {
                    "name": "for",
                    "line_number": 434
                  },
                  {
                    "name": "if",
                    "line_number": 436
                  },
                  {
                    "name": "if",
                    "line_number": 441
                  },
                  {
                    "name": "for",
                    "line_number": 443
                  },
                  {
                    "name": "if",
                    "line_number": 445
                  },
                  {
                    "name": "fprintf",
                    "line_number": 449
                  },
                  {
                    "name": "fprintf",
                    "line_number": 457
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 400
                  },
                  {
                    "type": "if",
                    "line_number": 417
                  },
                  {
                    "type": "for",
                    "line_number": 421
                  },
                  {
                    "type": "if",
                    "line_number": 422
                  },
                  {
                    "type": "for",
                    "line_number": 424
                  },
                  {
                    "type": "if",
                    "line_number": 431
                  },
                  {
                    "type": "for",
                    "line_number": 434
                  },
                  {
                    "type": "if",
                    "line_number": 436
                  },
                  {
                    "type": "if",
                    "line_number": 441
                  },
                  {
                    "type": "for",
                    "line_number": 443
                  },
                  {
                    "type": "if",
                    "line_number": 445
                  }
                ],
                "complexity": 16,
                "inputs": [
                  "origin",
                  "sfx_id"
                ],
                "outputs": [],
                "dependencies": [
                  "S_StartSoundAtVolume",
                  "for",
                  "fprintf",
                  "if"
                ]
              },
              {
                "name": "S_StopSound",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "void",
                    "name": "*origin"
                  }
                ],
                "start_line": 471,
                "end_line": 484,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "cnum",
                    "array_size": null,
                    "line_number": 474
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 476
                  },
                  {
                    "name": "if",
                    "line_number": 478
                  },
                  {
                    "name": "S_StopChannel",
                    "line_number": 480
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 476
                  },
                  {
                    "type": "if",
                    "line_number": 478
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "*origin"
                ],
                "outputs": [],
                "dependencies": [
                  "S_StopChannel",
                  "if",
                  "for"
                ]
              },
              {
                "name": "S_PauseSound",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 497,
                "end_line": 504,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 499
                  },
                  {
                    "name": "I_PauseSong",
                    "line_number": 501
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 499
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "I_PauseSong",
                  "if"
                ]
              },
              {
                "name": "S_ResumeSound",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 506,
                "end_line": 513,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 508
                  },
                  {
                    "name": "I_ResumeSong",
                    "line_number": 510
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 508
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "I_ResumeSong",
                  "if"
                ]
              },
              {
                "name": "S_UpdateSounds",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "void*",
                    "name": "listener_p"
                  }
                ],
                "start_line": 519,
                "end_line": 613,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "audible",
                    "array_size": null,
                    "line_number": 521
                  },
                  {
                    "type": "int",
                    "name": "cnum",
                    "array_size": null,
                    "line_number": 522
                  },
                  {
                    "type": "int",
                    "name": "volume",
                    "array_size": null,
                    "line_number": 523
                  },
                  {
                    "type": "int",
                    "name": "sep",
                    "array_size": null,
                    "line_number": 524
                  },
                  {
                    "type": "int",
                    "name": "pitch",
                    "array_size": null,
                    "line_number": 525
                  }
                ],
                "function_calls": [
                  {
                    "name": "16bit",
                    "line_number": 534
                  },
                  {
                    "name": "if",
                    "line_number": 536
                  },
                  {
                    "name": "for",
                    "line_number": 538
                  },
                  {
                    "name": "if",
                    "line_number": 540
                  },
                  {
                    "name": "if",
                    "line_number": 543
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 545
                  },
                  {
                    "name": "for",
                    "line_number": 553
                  },
                  {
                    "name": "if",
                    "line_number": 558
                  },
                  {
                    "name": "if",
                    "line_number": 560
                  },
                  {
                    "name": "I_SoundIsPlaying",
                    "line_number": 560
                  },
                  {
                    "name": "if",
                    "line_number": 567
                  },
                  {
                    "name": "if",
                    "line_number": 571
                  },
                  {
                    "name": "S_StopChannel",
                    "line_number": 573
                  },
                  {
                    "name": "if",
                    "line_number": 576
                  },
                  {
                    "name": "if",
                    "line_number": 584
                  },
                  {
                    "name": "S_AdjustSoundParams",
                    "line_number": 586
                  },
                  {
                    "name": "if",
                    "line_number": 592
                  },
                  {
                    "name": "S_StopChannel",
                    "line_number": 594
                  },
                  {
                    "name": "I_UpdateSoundParams",
                    "line_number": 597
                  },
                  {
                    "name": "S_StopChannel",
                    "line_number": 604
                  },
                  {
                    "name": "if",
                    "line_number": 609
                  },
                  {
                    "name": "I_QrySongPlaying",
                    "line_number": 610
                  },
                  {
                    "name": "S_StopMusic",
                    "line_number": 612
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 534
                  },
                  {
                    "type": "if",
                    "line_number": 536
                  },
                  {
                    "type": "for",
                    "line_number": 538
                  },
                  {
                    "type": "if",
                    "line_number": 540
                  },
                  {
                    "type": "if",
                    "line_number": 543
                  },
                  {
                    "type": "for",
                    "line_number": 553
                  },
                  {
                    "type": "if",
                    "line_number": 558
                  },
                  {
                    "type": "if",
                    "line_number": 560
                  },
                  {
                    "type": "if",
                    "line_number": 567
                  },
                  {
                    "type": "if",
                    "line_number": 571
                  },
                  {
                    "type": "if",
                    "line_number": 576
                  },
                  {
                    "type": "for",
                    "line_number": 582
                  },
                  {
                    "type": "if",
                    "line_number": 584
                  },
                  {
                    "type": "if",
                    "line_number": 592
                  },
                  {
                    "type": "else",
                    "line_number": 596
                  },
                  {
                    "type": "else",
                    "line_number": 600
                  },
                  {
                    "type": "if",
                    "line_number": 602
                  },
                  {
                    "type": "if",
                    "line_number": 608
                  },
                  {
                    "type": "if",
                    "line_number": 609
                  }
                ],
                "complexity": 12,
                "inputs": [
                  "listener_p"
                ],
                "outputs": [],
                "dependencies": [
                  "I_UpdateSoundParams",
                  "for",
                  "if",
                  "I_SoundIsPlaying",
                  "S_StopMusic",
                  "Z_ChangeTag",
                  "S_StopChannel",
                  "I_QrySongPlaying",
                  "16bit",
                  "S_AdjustSoundParams"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "volume >",
                    "name": "snd_SfxVolume"
                  }
                ],
                "start_line": 576,
                "end_line": 579,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "snd_SfxVolume"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "or modify their params",
                "parameters": [
                  {
                    "type": "c->origin && listener_p !=",
                    "name": "c->origin"
                  }
                ],
                "start_line": 583,
                "end_line": 597,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_AdjustSoundParams",
                    "line_number": 585
                  },
                  {
                    "name": "if",
                    "line_number": 591
                  },
                  {
                    "name": "S_StopChannel",
                    "line_number": 593
                  },
                  {
                    "name": "I_UpdateSoundParams",
                    "line_number": 596
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 591
                  },
                  {
                    "type": "else",
                    "line_number": 595
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "c->origin"
                ],
                "outputs": [
                  "or modify their params"
                ],
                "dependencies": [
                  "S_StopChannel",
                  "I_UpdateSoundParams",
                  "S_AdjustSoundParams",
                  "if"
                ]
              },
              {
                "name": "S_SetMusicVolume",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "volume"
                  }
                ],
                "start_line": 616,
                "end_line": 627,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 618
                  },
                  {
                    "name": "I_Error",
                    "line_number": 620
                  },
                  {
                    "name": "I_SetMusicVolume",
                    "line_number": 624
                  },
                  {
                    "name": "I_SetMusicVolume",
                    "line_number": 625
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 618
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "volume"
                ],
                "outputs": [],
                "dependencies": [
                  "I_SetMusicVolume",
                  "I_Error",
                  "if"
                ]
              },
              {
                "name": "S_SetSfxVolume",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "volume"
                  }
                ],
                "start_line": 631,
                "end_line": 639,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 634
                  },
                  {
                    "name": "I_Error",
                    "line_number": 635
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 634
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "volume"
                ],
                "outputs": [],
                "dependencies": [
                  "I_Error",
                  "if"
                ]
              },
              {
                "name": "S_StartMusic",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "m_id"
                  }
                ],
                "start_line": 644,
                "end_line": 647,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_ChangeMusic",
                    "line_number": 646
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "m_id"
                ],
                "outputs": [],
                "dependencies": [
                  "S_ChangeMusic"
                ]
              },
              {
                "name": "S_ChangeMusic",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "musicnum"
                  },
                  {
                    "type": "int",
                    "name": "looping"
                  }
                ],
                "start_line": 649,
                "end_line": 683,
                "local_variables": [
                  {
                    "type": "char",
                    "name": "namebuf",
                    "array_size": "9",
                    "line_number": 652
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 654
                  },
                  {
                    "name": "I_Error",
                    "line_number": 657
                  },
                  {
                    "name": "if",
                    "line_number": 662
                  },
                  {
                    "name": "S_StopMusic",
                    "line_number": 666
                  },
                  {
                    "name": "if",
                    "line_number": 669
                  },
                  {
                    "name": "sprintf",
                    "line_number": 671
                  },
                  {
                    "name": "W_GetNumForName",
                    "line_number": 672
                  },
                  {
                    "name": "W_CacheLumpNum",
                    "line_number": 676
                  },
                  {
                    "name": "I_RegisterSong",
                    "line_number": 677
                  },
                  {
                    "name": "I_PlaySong",
                    "line_number": 680
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 654
                  },
                  {
                    "type": "else",
                    "line_number": 659
                  },
                  {
                    "type": "if",
                    "line_number": 662
                  },
                  {
                    "type": "if",
                    "line_number": 668
                  },
                  {
                    "type": "if",
                    "line_number": 669
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "musicnum",
                  "looping"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "I_RegisterSong",
                  "I_Error",
                  "W_CacheLumpNum",
                  "W_GetNumForName",
                  "sprintf",
                  "S_StopMusic",
                  "I_PlaySong"
                ]
              },
              {
                "name": "if",
                "return_type": "get lumpnum if neccessary",
                "parameters": [
                  {
                    "type": "",
                    "name": "!music->lumpnum"
                  }
                ],
                "start_line": 671,
                "end_line": 675,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "sprintf",
                    "line_number": 673
                  },
                  {
                    "name": "W_GetNumForName",
                    "line_number": 674
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "!music->lumpnum"
                ],
                "outputs": [
                  "get lumpnum if neccessary"
                ],
                "dependencies": [
                  "sprintf",
                  "W_GetNumForName"
                ]
              },
              {
                "name": "S_StopMusic",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 689,
                "end_line": 703,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 691
                  },
                  {
                    "name": "if",
                    "line_number": 693
                  },
                  {
                    "name": "I_ResumeSong",
                    "line_number": 694
                  },
                  {
                    "name": "I_StopSong",
                    "line_number": 696
                  },
                  {
                    "name": "I_UnRegisterSong",
                    "line_number": 697
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 698
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 691
                  },
                  {
                    "type": "if",
                    "line_number": 693
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "I_ResumeSong",
                  "if",
                  "Z_ChangeTag",
                  "I_StopSong",
                  "I_UnRegisterSong"
                ]
              },
              {
                "name": "S_StopChannel",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "cnum"
                  }
                ],
                "start_line": 708,
                "end_line": 742,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 711
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 714
                  },
                  {
                    "name": "if",
                    "line_number": 717
                  },
                  {
                    "name": "I_SoundIsPlaying",
                    "line_number": 717
                  },
                  {
                    "name": "if",
                    "line_number": 720
                  },
                  {
                    "name": "fprintf",
                    "line_number": 721
                  },
                  {
                    "name": "I_StopSound",
                    "line_number": 723
                  },
                  {
                    "name": "for",
                    "line_number": 728
                  },
                  {
                    "name": "if",
                    "line_number": 730
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 714
                  },
                  {
                    "type": "if",
                    "line_number": 717
                  },
                  {
                    "type": "if",
                    "line_number": 720
                  },
                  {
                    "type": "if",
                    "line_number": 727
                  },
                  {
                    "type": "for",
                    "line_number": 728
                  },
                  {
                    "type": "if",
                    "line_number": 730
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "cnum"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "for",
                  "if",
                  "I_SoundIsPlaying",
                  "I_StopSound"
                ]
              },
              {
                "name": "for",
                "return_type": "if other channels are playing the sound",
                "parameters": [
                  {
                    "type": "i=0 ; i<numChannels ;",
                    "name": "i++"
                  }
                ],
                "start_line": 727,
                "end_line": 734,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 729
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 729
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "i++"
                ],
                "outputs": [
                  "if other channels are playing the sound"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "S_AdjustSoundParams",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "mobj_t*",
                    "name": "listener"
                  },
                  {
                    "type": "mobj_t*",
                    "name": "source"
                  },
                  {
                    "type": "int*",
                    "name": "vol"
                  },
                  {
                    "type": "int*",
                    "name": "sep"
                  },
                  {
                    "type": "int*",
                    "name": "pitch"
                  }
                ],
                "start_line": 752,
                "end_line": 812,
                "local_variables": [
                  {
                    "type": "fixed_t",
                    "name": "approx_dist",
                    "array_size": null,
                    "line_number": 754
                  },
                  {
                    "type": "fixed_t",
                    "name": "adx",
                    "array_size": null,
                    "line_number": 755
                  },
                  {
                    "type": "fixed_t",
                    "name": "ady",
                    "array_size": null,
                    "line_number": 756
                  },
                  {
                    "type": "angle_t",
                    "name": "angle",
                    "array_size": null,
                    "line_number": 757
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 770
                  }
                ],
                "function_calls": [
                  {
                    "name": "abs",
                    "line_number": 761
                  },
                  {
                    "name": "abs",
                    "line_number": 762
                  },
                  {
                    "name": "if",
                    "line_number": 767
                  },
                  {
                    "name": "R_PointToAngle2",
                    "line_number": 774
                  },
                  {
                    "name": "if",
                    "line_number": 779
                  },
                  {
                    "name": "FixedMul",
                    "line_number": 787
                  },
                  {
                    "name": "if",
                    "line_number": 790
                  },
                  {
                    "name": "if",
                    "line_number": 794
                  },
                  {
                    "name": "if",
                    "line_number": 796
                  },
                  {
                    "name": "return",
                    "line_number": 811
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 760
                  },
                  {
                    "type": "if",
                    "line_number": 767
                  },
                  {
                    "type": "if",
                    "line_number": 779
                  },
                  {
                    "type": "else",
                    "line_number": 781
                  },
                  {
                    "type": "if",
                    "line_number": 790
                  },
                  {
                    "type": "if",
                    "line_number": 794
                  },
                  {
                    "type": "if",
                    "line_number": 796
                  },
                  {
                    "type": "else",
                    "line_number": 803
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "listener",
                  "source",
                  "vol",
                  "sep",
                  "pitch"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "abs",
                  "return",
                  "if",
                  "R_PointToAngle2",
                  "FixedMul"
                ]
              },
              {
                "name": "if",
                "return_type": "volume calculation",
                "parameters": [
                  {
                    "type": "approx_dist <",
                    "name": "S_CLOSE_DIST"
                  }
                ],
                "start_line": 795,
                "end_line": 798,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "S_CLOSE_DIST"
                ],
                "outputs": [
                  "volume calculation"
                ],
                "dependencies": []
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "gamemap ==",
                    "name": "8"
                  }
                ],
                "start_line": 800,
                "end_line": 808,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 802
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 802
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "8"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "S_getChannel",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "void*",
                    "name": "origin"
                  },
                  {
                    "type": "sfxinfo_t*",
                    "name": "sfxinfo"
                  }
                ],
                "start_line": 827,
                "end_line": 872,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "cnum",
                    "array_size": null,
                    "line_number": 830
                  },
                  {
                    "type": "return",
                    "name": "cnum",
                    "array_size": null,
                    "line_number": 871
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 835
                  },
                  {
                    "name": "if",
                    "line_number": 837
                  },
                  {
                    "name": "if",
                    "line_number": 839
                  },
                  {
                    "name": "S_StopChannel",
                    "line_number": 841
                  },
                  {
                    "name": "if",
                    "line_number": 847
                  },
                  {
                    "name": "for",
                    "line_number": 850
                  },
                  {
                    "name": "if",
                    "line_number": 851
                  },
                  {
                    "name": "if",
                    "line_number": 853
                  },
                  {
                    "name": "S_StopChannel",
                    "line_number": 861
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 835
                  },
                  {
                    "type": "if",
                    "line_number": 837
                  },
                  {
                    "type": "if",
                    "line_number": 839
                  },
                  {
                    "type": "if",
                    "line_number": 847
                  },
                  {
                    "type": "for",
                    "line_number": 849
                  },
                  {
                    "type": "for",
                    "line_number": 850
                  },
                  {
                    "type": "if",
                    "line_number": 851
                  },
                  {
                    "type": "if",
                    "line_number": 853
                  },
                  {
                    "type": "else",
                    "line_number": 858
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "origin",
                  "sfxinfo"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "S_StopChannel",
                  "if",
                  "for"
                ]
              },
              {
                "name": "for",
                "return_type": "Find an open channel",
                "parameters": [
                  {
                    "type": "cnum=0 ; cnum<numChannels ;",
                    "name": "cnum++"
                  }
                ],
                "start_line": 837,
                "end_line": 846,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 839
                  },
                  {
                    "name": "if",
                    "line_number": 841
                  },
                  {
                    "name": "S_StopChannel",
                    "line_number": 843
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 839
                  },
                  {
                    "type": "if",
                    "line_number": 841
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "cnum++"
                ],
                "outputs": [
                  "Find an open channel"
                ],
                "dependencies": [
                  "S_StopChannel",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "origin && channels[cnum].origin ==",
                    "name": "origin"
                  }
                ],
                "start_line": 842,
                "end_line": 846,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "S_StopChannel",
                    "line_number": 844
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "origin"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "S_StopChannel"
                ]
              },
              {
                "name": "if",
                "return_type": "None available",
                "parameters": [
                  {
                    "type": "cnum ==",
                    "name": "numChannels"
                  }
                ],
                "start_line": 849,
                "end_line": 865,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 852
                  },
                  {
                    "name": "if",
                    "line_number": 853
                  },
                  {
                    "name": "if",
                    "line_number": 855
                  },
                  {
                    "name": "S_StopChannel",
                    "line_number": 863
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 851
                  },
                  {
                    "type": "for",
                    "line_number": 852
                  },
                  {
                    "type": "if",
                    "line_number": 853
                  },
                  {
                    "type": "if",
                    "line_number": 855
                  },
                  {
                    "type": "else",
                    "line_number": 860
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "numChannels"
                ],
                "outputs": [
                  "None available"
                ],
                "dependencies": [
                  "S_StopChannel",
                  "if",
                  "for"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "snd_MusicDevice",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 85
              },
              {
                "name": "snd_SfxDevice",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 86
              },
              {
                "name": "snd_DesiredMusicDevice",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 88
              },
              {
                "name": "snd_DesiredSfxDevice",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 89
              },
              {
                "name": "handle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 102
              },
              {
                "name": "mus_paused",
                "type": "boolean",
                "storage_class": "static",
                "array_size": null,
                "line_number": 121
              },
              {
                "name": "numChannels",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 129
              },
              {
                "name": "nextcleanup",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 131
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 165
              },
              {
                "name": "cnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 204
              },
              {
                "name": "mnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 205
              },
              {
                "name": "rc",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 261
              },
              {
                "name": "sep",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 262
              },
              {
                "name": "pitch",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 263
              },
              {
                "name": "priority",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 264
              },
              {
                "name": "cnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 266
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 413
              },
              {
                "name": "n",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 414
              },
              {
                "name": "cnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 474
              },
              {
                "name": "audible",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 521
              },
              {
                "name": "cnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 522
              },
              {
                "name": "volume",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 523
              },
              {
                "name": "sep",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 524
              },
              {
                "name": "pitch",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 525
              },
              {
                "name": "namebuf",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 655
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 711
              },
              {
                "name": "approx_dist",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 760
              },
              {
                "name": "adx",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 761
              },
              {
                "name": "ady",
                "type": "fixed_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 762
              },
              {
                "name": "angle",
                "type": "angle_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 763
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 776
              },
              {
                "name": "cnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 833
              },
              {
                "name": "cnum",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 874
              }
            ],
            "defines": [
              {
                "name": "S_MAX_VOLUME",
                "value": "127",
                "line_number": 51
              },
              {
                "name": "S_CLIPPING_DIST",
                "value": "(1200*0x10000)",
                "line_number": 55
              },
              {
                "name": "S_CLOSE_DIST",
                "value": "(160*0x10000)",
                "line_number": 61
              },
              {
                "name": "S_ATTENUATOR",
                "value": "((S_CLIPPING_DIST-S_CLOSE_DIST)>>FRACBITS)",
                "line_number": 64
              },
              {
                "name": "NORM_VOLUME",
                "value": "snd_MaxVolume",
                "line_number": 67
              },
              {
                "name": "NORM_PITCH",
                "value": "128",
                "line_number": 69
              },
              {
                "name": "NORM_PRIORITY",
                "value": "64",
                "line_number": 70
              },
              {
                "name": "NORM_SEP",
                "value": "128",
                "line_number": 71
              },
              {
                "name": "S_PITCH_PERTURB",
                "value": "1",
                "line_number": 73
              },
              {
                "name": "S_STEREO_SWING",
                "value": "(96*0x10000)",
                "line_number": 74
              },
              {
                "name": "S_IFRACVOL",
                "value": "30",
                "line_number": 77
              },
              {
                "name": "NA",
                "value": "0",
                "line_number": 79
              },
              {
                "name": "S_NUMCHANNELS",
                "value": "2",
                "line_number": 80
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/s_sound.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of functions",
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "s_sound.h",
          "type": "file",
          "size": 2172,
          "last_modified": "2024-09-05T16:00:05.376567",
          "path": "linuxdoom-1.10/s_sound.h",
          "readme": "# s_sound.h\n\nThis file contains functionality related to s_sound.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/s_sound.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "tables.c",
          "type": "file",
          "size": 124254,
          "last_modified": "2024-09-05T16:00:05.551836",
          "path": "linuxdoom-1.10/tables.c",
          "readme": "# tables.c\n\nThis file contains functionality related to tables.",
          "dependencies": [
            "tables.h"
          ],
          "inputs": [
            "den",
            "num"
          ],
          "outputs": [
            "int"
          ],
          "content": {
            "functions": [
              {
                "name": "SlopeDiv",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "unsigned",
                    "name": "num"
                  },
                  {
                    "type": "unsigned",
                    "name": "den"
                  }
                ],
                "start_line": 49,
                "end_line": 59,
                "local_variables": [
                  {
                    "type": "unsigned",
                    "name": "ans",
                    "array_size": null,
                    "line_number": 51
                  },
                  {
                    "type": "return",
                    "name": "SLOPERANGE",
                    "array_size": null,
                    "line_number": 54
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 53
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 53
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "num",
                  "den"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "if"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "ans",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 54
              },
              {
                "name": "SLOPERANGE",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 57
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/tables.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "tables.h",
          "type": "file",
          "size": 2291,
          "last_modified": "2024-09-05T16:00:05.576836",
          "path": "linuxdoom-1.10/tables.h",
          "readme": "# tables.h\n\nThis file contains functionality related to tables.",
          "dependencies": [
            "math.h",
            "m_fixed.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "angle_t",
                "type": "typedef unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 78
              },
              {
                "name": "2049",
                "type": "Effective size is",
                "storage_class": null,
                "array_size": null,
                "line_number": 81
              }
            ],
            "defines": [
              {
                "name": "PI",
                "value": "3.141592657",
                "line_number": 44
              },
              {
                "name": "FINEANGLES",
                "value": "8192",
                "line_number": 50
              },
              {
                "name": "FINEMASK",
                "value": "(FINEANGLES-1)",
                "line_number": 51
              },
              {
                "name": "ANGLETOFINESHIFT",
                "value": "19",
                "line_number": 55
              },
              {
                "name": "ANG45",
                "value": "0x20000000",
                "line_number": 68
              },
              {
                "name": "ANG90",
                "value": "0x40000000",
                "line_number": 69
              },
              {
                "name": "ANG180",
                "value": "0x80000000",
                "line_number": 70
              },
              {
                "name": "ANG270",
                "value": "0xc0000000",
                "line_number": 71
              },
              {
                "name": "SLOPERANGE",
                "value": "2048",
                "line_number": 74
              },
              {
                "name": "SLOPEBITS",
                "value": "11",
                "line_number": 75
              },
              {
                "name": "DBITS",
                "value": "(FRACBITS-SLOPEBITS)",
                "line_number": 76
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/tables.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "v_video.c",
          "type": "file",
          "size": 12827,
          "last_modified": "2024-09-05T16:00:05.602838",
          "path": "linuxdoom-1.10/v_video.c",
          "readme": "# v_video.c\n\nThis file contains functionality related to v_video.",
          "dependencies": [
            "m_bbox.h",
            "m_swap.h",
            "r_local.h",
            "i_system.h",
            "doomdef.h",
            "doomdata.h",
            "v_video.h"
          ],
          "inputs": [
            "desty",
            "destx",
            "scrn",
            "x",
            "srcy",
            "y",
            "width",
            "0xff",
            "destscrn",
            "height",
            "srcx",
            "void",
            "srcscrn",
            "patch",
            "src",
            "dest"
          ],
          "outputs": [
            "step through the posts in a column"
          ],
          "content": {
            "functions": [
              {
                "name": "V_MarkRect",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "int",
                    "name": "width"
                  },
                  {
                    "type": "int",
                    "name": "height"
                  }
                ],
                "start_line": 142,
                "end_line": 146,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "M_AddToBox",
                    "line_number": 144
                  },
                  {
                    "name": "M_AddToBox",
                    "line_number": 145
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "x",
                  "y",
                  "width",
                  "height"
                ],
                "outputs": [],
                "dependencies": [
                  "M_AddToBox"
                ]
              },
              {
                "name": "V_CopyRect",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "srcx"
                  },
                  {
                    "type": "int",
                    "name": "srcy"
                  },
                  {
                    "type": "int",
                    "name": "srcscrn"
                  },
                  {
                    "type": "int",
                    "name": "width"
                  },
                  {
                    "type": "int",
                    "name": "height"
                  },
                  {
                    "type": "int",
                    "name": "destx"
                  },
                  {
                    "type": "int",
                    "name": "desty"
                  },
                  {
                    "type": "int",
                    "name": "destscrn"
                  }
                ],
                "start_line": 157,
                "end_line": 187,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 163
                  },
                  {
                    "name": "I_Error",
                    "line_number": 173
                  },
                  {
                    "name": "V_MarkRect",
                    "line_number": 176
                  },
                  {
                    "name": "for",
                    "line_number": 181
                  },
                  {
                    "name": "memcpy",
                    "line_number": 183
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 163
                  },
                  {
                    "type": "for",
                    "line_number": 181
                  }
                ],
                "complexity": 11,
                "inputs": [
                  "srcx",
                  "srcy",
                  "srcscrn",
                  "width",
                  "height",
                  "destx",
                  "desty",
                  "destscrn"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "if",
                  "I_Error",
                  "memcpy",
                  "V_MarkRect"
                ]
              },
              {
                "name": "V_DrawPatch",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "int",
                    "name": "scrn"
                  },
                  {
                    "type": "patch_t*",
                    "name": "patch"
                  }
                ],
                "start_line": 203,
                "end_line": 258,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 206
                  },
                  {
                    "type": "int",
                    "name": "col",
                    "array_size": null,
                    "line_number": 207
                  },
                  {
                    "type": "int",
                    "name": "w",
                    "array_size": null,
                    "line_number": 212
                  }
                ],
                "function_calls": [
                  {
                    "name": "SHORT",
                    "line_number": 214
                  },
                  {
                    "name": "SHORT",
                    "line_number": 215
                  },
                  {
                    "name": "if",
                    "line_number": 217
                  },
                  {
                    "name": "SHORT",
                    "line_number": 218
                  },
                  {
                    "name": "SHORT",
                    "line_number": 220
                  },
                  {
                    "name": "fprintf",
                    "line_number": 223
                  },
                  {
                    "name": "fprintf",
                    "line_number": 225
                  },
                  {
                    "name": "patch",
                    "line_number": 225
                  },
                  {
                    "name": "if",
                    "line_number": 230
                  },
                  {
                    "name": "V_MarkRect",
                    "line_number": 231
                  },
                  {
                    "name": "SHORT",
                    "line_number": 231
                  },
                  {
                    "name": "SHORT",
                    "line_number": 231
                  },
                  {
                    "name": "SHORT",
                    "line_number": 236
                  },
                  {
                    "name": "for",
                    "line_number": 238
                  },
                  {
                    "name": "LONG",
                    "line_number": 240
                  },
                  {
                    "name": "while",
                    "line_number": 243
                  },
                  {
                    "name": "while",
                    "line_number": 249
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 217
                  },
                  {
                    "type": "if",
                    "line_number": 230
                  },
                  {
                    "type": "for",
                    "line_number": 238
                  },
                  {
                    "type": "while",
                    "line_number": 243
                  },
                  {
                    "type": "while",
                    "line_number": 249
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "x",
                  "y",
                  "scrn",
                  "patch"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "while",
                  "if",
                  "for",
                  "LONG",
                  "SHORT",
                  "patch",
                  "V_MarkRect"
                ]
              },
              {
                "name": "while",
                "return_type": "step through the posts in a column",
                "parameters": [
                  {
                    "type": "column->topdelta !=",
                    "name": "0xff"
                  }
                ],
                "start_line": 247,
                "end_line": 260,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 253
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 253
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "0xff"
                ],
                "outputs": [
                  "step through the posts in a column"
                ],
                "dependencies": [
                  "while"
                ]
              },
              {
                "name": "V_DrawPatchFlipped",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "int",
                    "name": "scrn"
                  },
                  {
                    "type": "patch_t*",
                    "name": "patch"
                  }
                ],
                "start_line": 270,
                "end_line": 323,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 273
                  },
                  {
                    "type": "int",
                    "name": "col",
                    "array_size": null,
                    "line_number": 274
                  },
                  {
                    "type": "int",
                    "name": "w",
                    "array_size": null,
                    "line_number": 279
                  }
                ],
                "function_calls": [
                  {
                    "name": "SHORT",
                    "line_number": 281
                  },
                  {
                    "name": "SHORT",
                    "line_number": 282
                  },
                  {
                    "name": "if",
                    "line_number": 284
                  },
                  {
                    "name": "SHORT",
                    "line_number": 285
                  },
                  {
                    "name": "SHORT",
                    "line_number": 287
                  },
                  {
                    "name": "fprintf",
                    "line_number": 290
                  },
                  {
                    "name": "I_Error",
                    "line_number": 291
                  },
                  {
                    "name": "if",
                    "line_number": 295
                  },
                  {
                    "name": "V_MarkRect",
                    "line_number": 296
                  },
                  {
                    "name": "SHORT",
                    "line_number": 296
                  },
                  {
                    "name": "SHORT",
                    "line_number": 296
                  },
                  {
                    "name": "SHORT",
                    "line_number": 301
                  },
                  {
                    "name": "for",
                    "line_number": 303
                  },
                  {
                    "name": "LONG",
                    "line_number": 305
                  },
                  {
                    "name": "while",
                    "line_number": 308
                  },
                  {
                    "name": "while",
                    "line_number": 314
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 284
                  },
                  {
                    "type": "if",
                    "line_number": 295
                  },
                  {
                    "type": "for",
                    "line_number": 303
                  },
                  {
                    "type": "while",
                    "line_number": 308
                  },
                  {
                    "type": "while",
                    "line_number": 314
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "x",
                  "y",
                  "scrn",
                  "patch"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "while",
                  "if",
                  "for",
                  "I_Error",
                  "LONG",
                  "SHORT",
                  "V_MarkRect"
                ]
              },
              {
                "name": "while",
                "return_type": "step through the posts in a column",
                "parameters": [
                  {
                    "type": "column->topdelta !=",
                    "name": "0xff"
                  }
                ],
                "start_line": 312,
                "end_line": 325,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 318
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 318
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "0xff"
                ],
                "outputs": [
                  "step through the posts in a column"
                ],
                "dependencies": [
                  "while"
                ]
              },
              {
                "name": "V_DrawPatchDirect",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "int",
                    "name": "scrn"
                  },
                  {
                    "type": "patch_t*",
                    "name": "patch"
                  }
                ],
                "start_line": 336,
                "end_line": 391,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 341
                  },
                  {
                    "type": "int",
                    "name": "col",
                    "array_size": null,
                    "line_number": 342
                  },
                  {
                    "type": "int",
                    "name": "w",
                    "array_size": null,
                    "line_number": 347
                  }
                ],
                "function_calls": [
                  {
                    "name": "V_DrawPatch",
                    "line_number": 338
                  },
                  {
                    "name": "SHORT",
                    "line_number": 349
                  },
                  {
                    "name": "SHORT",
                    "line_number": 350
                  },
                  {
                    "name": "if",
                    "line_number": 353
                  },
                  {
                    "name": "SHORT",
                    "line_number": 354
                  },
                  {
                    "name": "SHORT",
                    "line_number": 356
                  },
                  {
                    "name": "I_Error",
                    "line_number": 359
                  },
                  {
                    "name": "V_MarkRect",
                    "line_number": 363
                  },
                  {
                    "name": "SHORT",
                    "line_number": 363
                  },
                  {
                    "name": "SHORT",
                    "line_number": 363
                  },
                  {
                    "name": "SHORT",
                    "line_number": 366
                  },
                  {
                    "name": "for",
                    "line_number": 367
                  },
                  {
                    "name": "outp",
                    "line_number": 369
                  },
                  {
                    "name": "LONG",
                    "line_number": 370
                  },
                  {
                    "name": "while",
                    "line_number": 374
                  },
                  {
                    "name": "while",
                    "line_number": 380
                  },
                  {
                    "name": "if",
                    "line_number": 388
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 353
                  },
                  {
                    "type": "for",
                    "line_number": 367
                  },
                  {
                    "type": "while",
                    "line_number": 374
                  },
                  {
                    "type": "while",
                    "line_number": 380
                  },
                  {
                    "type": "if",
                    "line_number": 388
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "x",
                  "y",
                  "scrn",
                  "patch"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "V_DrawPatch",
                  "if",
                  "for",
                  "outp",
                  "I_Error",
                  "LONG",
                  "SHORT",
                  "V_MarkRect"
                ]
              },
              {
                "name": "while",
                "return_type": "step through the posts in a column",
                "parameters": [
                  {
                    "type": "column->topdelta !=",
                    "name": "0xff"
                  }
                ],
                "start_line": 377,
                "end_line": 390,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 383
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 383
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "0xff"
                ],
                "outputs": [
                  "step through the posts in a column"
                ],
                "dependencies": [
                  "while"
                ]
              },
              {
                "name": "V_DrawBlock",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "int",
                    "name": "scrn"
                  },
                  {
                    "type": "int",
                    "name": "width"
                  },
                  {
                    "type": "int",
                    "name": "height"
                  },
                  {
                    "type": "byte*",
                    "name": "src"
                  }
                ],
                "start_line": 404,
                "end_line": 429,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 409
                  },
                  {
                    "name": "I_Error",
                    "line_number": 415
                  },
                  {
                    "name": "V_MarkRect",
                    "line_number": 419
                  },
                  {
                    "name": "while",
                    "line_number": 423
                  },
                  {
                    "name": "memcpy",
                    "line_number": 425
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 409
                  },
                  {
                    "type": "while",
                    "line_number": 423
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "x",
                  "y",
                  "scrn",
                  "width",
                  "height",
                  "src"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "if",
                  "I_Error",
                  "memcpy",
                  "V_MarkRect"
                ]
              },
              {
                "name": "V_GetBlock",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "int",
                    "name": "scrn"
                  },
                  {
                    "type": "int",
                    "name": "width"
                  },
                  {
                    "type": "int",
                    "name": "height"
                  },
                  {
                    "type": "byte*",
                    "name": "dest"
                  }
                ],
                "start_line": 444,
                "end_line": 467,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 449
                  },
                  {
                    "name": "I_Error",
                    "line_number": 455
                  },
                  {
                    "name": "while",
                    "line_number": 461
                  },
                  {
                    "name": "memcpy",
                    "line_number": 463
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 449
                  },
                  {
                    "type": "while",
                    "line_number": 461
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "x",
                  "y",
                  "scrn",
                  "width",
                  "height",
                  "dest"
                ],
                "outputs": [],
                "dependencies": [
                  "memcpy",
                  "while",
                  "I_Error",
                  "if"
                ]
              },
              {
                "name": "V_Init",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 482,
                "end_line": 493,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 484
                  }
                ],
                "function_calls": [
                  {
                    "name": "I_AllocLow",
                    "line_number": 489
                  },
                  {
                    "name": "for",
                    "line_number": 491
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 491
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "I_AllocLow",
                  "for"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "dirtybox",
                "type": "int",
                "storage_class": null,
                "array_size": "4",
                "line_number": 46
              },
              {
                "name": "usegamma",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 137
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 211
              },
              {
                "name": "col",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 212
              },
              {
                "name": "w",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 217
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 278
              },
              {
                "name": "col",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 279
              },
              {
                "name": "w",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 284
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 346
              },
              {
                "name": "col",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 347
              },
              {
                "name": "w",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 352
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 484
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/v_video.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "v_video.h",
          "type": "file",
          "size": 2132,
          "last_modified": "2024-09-05T16:00:05.625837",
          "path": "linuxdoom-1.10/v_video.h",
          "readme": "# v_video.h\n\nThis file contains functionality related to v_video.",
          "dependencies": [
            "doomdef.h",
            "doomtype.h",
            "r_data.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "dirtybox",
                "type": "int",
                "storage_class": "extern",
                "array_size": "4",
                "line_number": 49
              },
              {
                "name": "usegamma",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 52
              }
            ],
            "defines": [
              {
                "name": "CENTERY",
                "value": "(SCREENHEIGHT/2)",
                "line_number": 39
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/v_video.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "wi_stuff.c",
          "type": "file",
          "size": 33830,
          "last_modified": "2024-09-05T16:00:05.702360",
          "path": "linuxdoom-1.10/wi_stuff.c",
          "readme": "# wi_stuff.c\n\nThis file contains functionality related to wi_stuff.",
          "dependencies": [
            "wi_stuff.h",
            "m_random.h",
            "w_wad.h",
            "stdio.h",
            "m_swap.h",
            "r_local.h",
            "sounds.h",
            "z_zone.h",
            "i_system.h",
            "doomstat.h",
            "g_game.h",
            "s_sound.h",
            "v_video.h"
          ],
          "inputs": [
            "p",
            "commercial",
            "i=0",
            "CJ",
            "10",
            "i++",
            "playernum",
            "digits",
            "c[]",
            "1",
            "x",
            "digits--",
            "y",
            "n",
            "8",
            "void",
            "4",
            "wbstartstruct",
            "t",
            "player++",
            "ev",
            "6"
          ],
          "outputs": [
            "draw the new number",
            "ifdef RANGECHECKING",
            "location of level",
            "int",
            "check for button presses to skip delays",
            "boolean",
            "Updates stuff each tick\nvoid",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "0",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 181,
                "end_line": 182,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "1",
                    "line_number": 182
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "1"
                ]
              },
              {
                "name": "1",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 182,
                "end_line": 183,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "2",
                    "line_number": 183
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "2"
                ]
              },
              {
                "name": "2",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 183,
                "end_line": 184,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "3",
                    "line_number": 184
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "3"
                ]
              },
              {
                "name": "3",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 184,
                "end_line": 185,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "4",
                    "line_number": 185
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "4"
                ]
              },
              {
                "name": "4",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 185,
                "end_line": 186,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "5",
                    "line_number": 186
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "5"
                ]
              },
              {
                "name": "5",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 186,
                "end_line": 187,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "6",
                    "line_number": 187
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "6"
                ]
              },
              {
                "name": "6",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 187,
                "end_line": 188,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "7",
                    "line_number": 188
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "7"
                ]
              },
              {
                "name": "7",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 188,
                "end_line": 189,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "8",
                    "line_number": 189
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "8"
                ]
              },
              {
                "name": "0",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 194,
                "end_line": 195,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "1",
                    "line_number": 195
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "1"
                ]
              },
              {
                "name": "1",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 195,
                "end_line": 196,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "2",
                    "line_number": 196
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "2"
                ]
              },
              {
                "name": "2",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 196,
                "end_line": 197,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "3",
                    "line_number": 197
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "3"
                ]
              },
              {
                "name": "3",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 197,
                "end_line": 198,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "4",
                    "line_number": 198
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "4"
                ]
              },
              {
                "name": "4",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 198,
                "end_line": 199,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "5",
                    "line_number": 199
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "5"
                ]
              },
              {
                "name": "5",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 199,
                "end_line": 200,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "6",
                    "line_number": 200
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "6"
                ]
              },
              {
                "name": "6",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 200,
                "end_line": 201,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "7",
                    "line_number": 201
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "7"
                ]
              },
              {
                "name": "7",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 201,
                "end_line": 202,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "8",
                    "line_number": 202
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "8"
                ]
              },
              {
                "name": "0",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 207,
                "end_line": 208,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "1",
                    "line_number": 208
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "1"
                ]
              },
              {
                "name": "1",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 208,
                "end_line": 209,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "2",
                    "line_number": 209
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "2"
                ]
              },
              {
                "name": "2",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 209,
                "end_line": 210,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "3",
                    "line_number": 210
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "3"
                ]
              },
              {
                "name": "3",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 210,
                "end_line": 211,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "4",
                    "line_number": 211
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "4"
                ]
              },
              {
                "name": "4",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 211,
                "end_line": 212,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "5",
                    "line_number": 212
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "5"
                ]
              },
              {
                "name": "5",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 212,
                "end_line": 213,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "6",
                    "line_number": 213
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "6"
                ]
              },
              {
                "name": "6",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 213,
                "end_line": 214,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "7",
                    "line_number": 214
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "7"
                ]
              },
              {
                "name": "7",
                "return_type": "location of level",
                "parameters": [
                  {
                    "type": "",
                    "name": "CJ"
                  }
                ],
                "start_line": 214,
                "end_line": 215,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "8",
                    "line_number": 215
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "CJ"
                ],
                "outputs": [
                  "location of level"
                ],
                "dependencies": [
                  "8"
                ]
              },
              {
                "name": "WI_slamBackground",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 406,
                "end_line": 410,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "memcpy",
                    "line_number": 408
                  },
                  {
                    "name": "V_MarkRect",
                    "line_number": 409
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "memcpy",
                  "V_MarkRect"
                ]
              },
              {
                "name": "WI_Responder",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "event_t*",
                    "name": "ev"
                  }
                ],
                "start_line": 414,
                "end_line": 417,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 416
                  }
                ],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "ev"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": []
              },
              {
                "name": "WI_drawLF",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 421,
                "end_line": 434,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "V_DrawPatch",
                    "line_number": 426
                  },
                  {
                    "name": "SHORT",
                    "line_number": 426
                  },
                  {
                    "name": "SHORT",
                    "line_number": 430
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 432
                  },
                  {
                    "name": "SHORT",
                    "line_number": 432
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "SHORT",
                  "V_DrawPatch"
                ]
              },
              {
                "name": "WI_drawEL",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 439,
                "end_line": 453,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "V_DrawPatch",
                    "line_number": 444
                  },
                  {
                    "name": "SHORT",
                    "line_number": 444
                  },
                  {
                    "name": "SHORT",
                    "line_number": 448
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 450
                  },
                  {
                    "name": "SHORT",
                    "line_number": 450
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "SHORT",
                  "V_DrawPatch"
                ]
              },
              {
                "name": "WI_drawOnLnode",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "n"
                  },
                  {
                    "type": "patch_t*",
                    "name": "c[]"
                  }
                ],
                "start_line": 455,
                "end_line": 496,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 458
                  },
                  {
                    "type": "int",
                    "name": "left",
                    "array_size": null,
                    "line_number": 459
                  },
                  {
                    "type": "int",
                    "name": "top",
                    "array_size": null,
                    "line_number": 460
                  },
                  {
                    "type": "int",
                    "name": "right",
                    "array_size": null,
                    "line_number": 461
                  },
                  {
                    "type": "int",
                    "name": "bottom",
                    "array_size": null,
                    "line_number": 462
                  }
                ],
                "function_calls": [
                  {
                    "name": "SHORT",
                    "line_number": 468
                  },
                  {
                    "name": "SHORT",
                    "line_number": 469
                  },
                  {
                    "name": "SHORT",
                    "line_number": 470
                  },
                  {
                    "name": "SHORT",
                    "line_number": 471
                  },
                  {
                    "name": "if",
                    "line_number": 473
                  },
                  {
                    "name": "while",
                    "line_number": 484
                  },
                  {
                    "name": "if",
                    "line_number": 486
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 488
                  },
                  {
                    "name": "printf",
                    "line_number": 494
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 473
                  },
                  {
                    "type": "else",
                    "line_number": 480
                  },
                  {
                    "type": "while",
                    "line_number": 484
                  },
                  {
                    "type": "if",
                    "line_number": 486
                  },
                  {
                    "type": "else",
                    "line_number": 491
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "n",
                  "c[]"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "V_DrawPatch",
                  "if",
                  "printf",
                  "SHORT"
                ]
              },
              {
                "name": "WI_initAnimatedBack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 503,
                "end_line": 530,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 505
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 508
                  },
                  {
                    "name": "if",
                    "line_number": 511
                  },
                  {
                    "name": "for",
                    "line_number": 514
                  },
                  {
                    "name": "if",
                    "line_number": 522
                  },
                  {
                    "name": "M_Random",
                    "line_number": 523
                  },
                  {
                    "name": "if",
                    "line_number": 524
                  },
                  {
                    "name": "M_Random",
                    "line_number": 525
                  },
                  {
                    "name": "if",
                    "line_number": 526
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 508
                  },
                  {
                    "type": "if",
                    "line_number": 511
                  },
                  {
                    "type": "for",
                    "line_number": 514
                  },
                  {
                    "type": "if",
                    "line_number": 522
                  },
                  {
                    "type": "if",
                    "line_number": 524
                  },
                  {
                    "type": "if",
                    "line_number": 526
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "M_Random",
                  "if"
                ]
              },
              {
                "name": "WI_updateAnimatedBack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 532,
                "end_line": 581,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 534
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 537
                  },
                  {
                    "name": "if",
                    "line_number": 540
                  },
                  {
                    "name": "for",
                    "line_number": 543
                  },
                  {
                    "name": "if",
                    "line_number": 547
                  },
                  {
                    "name": "switch",
                    "line_number": 549
                  },
                  {
                    "name": "if",
                    "line_number": 552
                  },
                  {
                    "name": "if",
                    "line_number": 558
                  },
                  {
                    "name": "M_Random",
                    "line_number": 561
                  },
                  {
                    "name": "if",
                    "line_number": 568
                  },
                  {
                    "name": "if",
                    "line_number": 572
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 537
                  },
                  {
                    "type": "if",
                    "line_number": 540
                  },
                  {
                    "type": "for",
                    "line_number": 543
                  },
                  {
                    "type": "if",
                    "line_number": 547
                  },
                  {
                    "type": "if",
                    "line_number": 552
                  },
                  {
                    "type": "if",
                    "line_number": 558
                  },
                  {
                    "type": "else",
                    "line_number": 563
                  },
                  {
                    "type": "for",
                    "line_number": 567
                  },
                  {
                    "type": "if",
                    "line_number": 568
                  },
                  {
                    "type": "if",
                    "line_number": 572
                  }
                ],
                "complexity": 10,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "switch",
                  "M_Random",
                  "if"
                ]
              },
              {
                "name": "WI_drawAnimatedBack",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 583,
                "end_line": 602,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 585
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 588
                  },
                  {
                    "name": "if",
                    "line_number": 591
                  },
                  {
                    "name": "for",
                    "line_number": 594
                  },
                  {
                    "name": "if",
                    "line_number": 598
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 599
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 588
                  },
                  {
                    "type": "if",
                    "line_number": 591
                  },
                  {
                    "type": "for",
                    "line_number": 594
                  },
                  {
                    "type": "if",
                    "line_number": 598
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "for",
                  "V_DrawPatch",
                  "if"
                ]
              },
              {
                "name": "WI_drawNum",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "int",
                    "name": "n"
                  },
                  {
                    "type": "int",
                    "name": "digits"
                  }
                ],
                "start_line": 611,
                "end_line": 661,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "neg",
                    "array_size": null,
                    "line_number": 615
                  },
                  {
                    "type": "int",
                    "name": "temp",
                    "array_size": null,
                    "line_number": 616
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 645
                  },
                  {
                    "type": "return",
                    "name": "x",
                    "array_size": null,
                    "line_number": 659
                  }
                ],
                "function_calls": [
                  {
                    "name": "SHORT",
                    "line_number": 614
                  },
                  {
                    "name": "if",
                    "line_number": 618
                  },
                  {
                    "name": "if",
                    "line_number": 620
                  },
                  {
                    "name": "while",
                    "line_number": 631
                  },
                  {
                    "name": "if",
                    "line_number": 640
                  },
                  {
                    "name": "if",
                    "line_number": 644
                  },
                  {
                    "name": "while",
                    "line_number": 648
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 651
                  },
                  {
                    "name": "if",
                    "line_number": 656
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 657
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 618
                  },
                  {
                    "type": "if",
                    "line_number": 620
                  },
                  {
                    "type": "else",
                    "line_number": 625
                  },
                  {
                    "type": "while",
                    "line_number": 631
                  },
                  {
                    "type": "if",
                    "line_number": 640
                  },
                  {
                    "type": "if",
                    "line_number": 643
                  },
                  {
                    "type": "if",
                    "line_number": 644
                  },
                  {
                    "type": "while",
                    "line_number": 648
                  },
                  {
                    "type": "if",
                    "line_number": 655
                  },
                  {
                    "type": "if",
                    "line_number": 656
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "x",
                  "y",
                  "n",
                  "digits"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "SHORT",
                  "while",
                  "V_DrawPatch",
                  "if"
                ]
              },
              {
                "name": "while",
                "return_type": "draw the new number",
                "parameters": [
                  {
                    "type": "",
                    "name": "digits--"
                  }
                ],
                "start_line": 652,
                "end_line": 657,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "V_DrawPatch",
                    "line_number": 655
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "digits--"
                ],
                "outputs": [
                  "draw the new number"
                ],
                "dependencies": [
                  "V_DrawPatch"
                ]
              },
              {
                "name": "WI_drawPercent",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "int",
                    "name": "p"
                  }
                ],
                "start_line": 668,
                "end_line": 675,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 670
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 673
                  },
                  {
                    "name": "WI_drawNum",
                    "line_number": 674
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 670
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "x",
                  "y",
                  "p"
                ],
                "outputs": [],
                "dependencies": [
                  "WI_drawNum",
                  "V_DrawPatch",
                  "if"
                ]
              },
              {
                "name": "WI_drawTime",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "x"
                  },
                  {
                    "type": "int",
                    "name": "y"
                  },
                  {
                    "type": "int",
                    "name": "t"
                  }
                ],
                "start_line": 687,
                "end_line": 717,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "div",
                    "array_size": null,
                    "line_number": 690
                  },
                  {
                    "type": "int",
                    "name": "n",
                    "array_size": null,
                    "line_number": 691
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 693
                  },
                  {
                    "name": "if",
                    "line_number": 696
                  },
                  {
                    "name": "WI_drawNum",
                    "line_number": 703
                  },
                  {
                    "name": "SHORT",
                    "line_number": 703
                  },
                  {
                    "name": "if",
                    "line_number": 707
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 708
                  },
                  {
                    "name": "while",
                    "line_number": 710
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 715
                  },
                  {
                    "name": "SHORT",
                    "line_number": 715
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 693
                  },
                  {
                    "type": "if",
                    "line_number": 696
                  },
                  {
                    "type": "if",
                    "line_number": 707
                  },
                  {
                    "type": "while",
                    "line_number": 710
                  },
                  {
                    "type": "else",
                    "line_number": 712
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "x",
                  "y",
                  "t"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "V_DrawPatch",
                  "if",
                  "WI_drawNum",
                  "SHORT"
                ]
              },
              {
                "name": "WI_End",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 724,
                "end_line": 728,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "WI_unloadData",
                    "line_number": 726
                  },
                  {
                    "name": "WI_unloadData",
                    "line_number": 727
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "WI_unloadData"
                ]
              },
              {
                "name": "WI_initNoState",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 730,
                "end_line": 735,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "WI_updateNoState",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 737,
                "end_line": 748,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "WI_updateAnimatedBack",
                    "line_number": 740
                  },
                  {
                    "name": "if",
                    "line_number": 742
                  },
                  {
                    "name": "WI_End",
                    "line_number": 744
                  },
                  {
                    "name": "G_WorldDone",
                    "line_number": 745
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 742
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "G_WorldDone",
                  "WI_End",
                  "WI_updateAnimatedBack",
                  "if"
                ]
              },
              {
                "name": "WI_initShowNextLoc",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 752,
                "end_line": 759,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "WI_initAnimatedBack",
                    "line_number": 758
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "WI_initAnimatedBack"
                ]
              },
              {
                "name": "WI_updateShowNextLoc",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 761,
                "end_line": 769,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "WI_updateAnimatedBack",
                    "line_number": 763
                  },
                  {
                    "name": "if",
                    "line_number": 765
                  },
                  {
                    "name": "WI_initNoState",
                    "line_number": 766
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 765
                  },
                  {
                    "type": "else",
                    "line_number": 767
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "WI_initNoState",
                  "WI_updateAnimatedBack",
                  "if"
                ]
              },
              {
                "name": "WI_drawShowNextLoc",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 771,
                "end_line": 810,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 774
                  },
                  {
                    "type": "int",
                    "name": "last",
                    "array_size": null,
                    "line_number": 775
                  }
                ],
                "function_calls": [
                  {
                    "name": "WI_slamBackground",
                    "line_number": 777
                  },
                  {
                    "name": "WI_drawAnimatedBack",
                    "line_number": 780
                  },
                  {
                    "name": "if",
                    "line_number": 782
                  },
                  {
                    "name": "if",
                    "line_number": 784
                  },
                  {
                    "name": "WI_drawEL",
                    "line_number": 786
                  },
                  {
                    "name": "for",
                    "line_number": 793
                  },
                  {
                    "name": "WI_drawOnLnode",
                    "line_number": 794
                  },
                  {
                    "name": "if",
                    "line_number": 797
                  },
                  {
                    "name": "WI_drawOnLnode",
                    "line_number": 798
                  },
                  {
                    "name": "if",
                    "line_number": 801
                  },
                  {
                    "name": "WI_drawOnLnode",
                    "line_number": 802
                  },
                  {
                    "name": "if",
                    "line_number": 806
                  },
                  {
                    "name": "WI_drawEL",
                    "line_number": 808
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 782
                  },
                  {
                    "type": "if",
                    "line_number": 784
                  },
                  {
                    "type": "for",
                    "line_number": 793
                  },
                  {
                    "type": "if",
                    "line_number": 797
                  },
                  {
                    "type": "if",
                    "line_number": 801
                  },
                  {
                    "type": "if",
                    "line_number": 806
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "WI_drawAnimatedBack",
                  "for",
                  "if",
                  "WI_slamBackground",
                  "WI_drawOnLnode",
                  "WI_drawEL"
                ]
              },
              {
                "name": "WI_drawNoState",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 812,
                "end_line": 816,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "WI_drawShowNextLoc",
                    "line_number": 815
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "WI_drawShowNextLoc"
                ]
              },
              {
                "name": "WI_fragSum",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "playernum"
                  }
                ],
                "start_line": 818,
                "end_line": 839,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 820
                  },
                  {
                    "type": "return",
                    "name": "frags",
                    "array_size": null,
                    "line_number": 838
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 823
                  },
                  {
                    "name": "if",
                    "line_number": 825
                  },
                  {
                    "name": "if",
                    "line_number": 835
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 823
                  },
                  {
                    "type": "if",
                    "line_number": 825
                  },
                  {
                    "type": "if",
                    "line_number": 835
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "playernum"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "WI_initDeathmatchStats",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 849,
                "end_line": 874,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 852
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 853
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 861
                  },
                  {
                    "name": "if",
                    "line_number": 863
                  },
                  {
                    "name": "for",
                    "line_number": 865
                  },
                  {
                    "name": "if",
                    "line_number": 866
                  },
                  {
                    "name": "WI_initAnimatedBack",
                    "line_number": 873
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 861
                  },
                  {
                    "type": "if",
                    "line_number": 863
                  },
                  {
                    "type": "for",
                    "line_number": 865
                  },
                  {
                    "type": "if",
                    "line_number": 866
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "WI_initAnimatedBack",
                  "if",
                  "for"
                ]
              },
              {
                "name": "WI_updateDeathmatchStats",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 878,
                "end_line": 977,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 881
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 882
                  },
                  {
                    "type": "boolean",
                    "name": "stillticking",
                    "array_size": null,
                    "line_number": 884
                  }
                ],
                "function_calls": [
                  {
                    "name": "WI_updateAnimatedBack",
                    "line_number": 886
                  },
                  {
                    "name": "if",
                    "line_number": 888
                  },
                  {
                    "name": "for",
                    "line_number": 892
                  },
                  {
                    "name": "if",
                    "line_number": 894
                  },
                  {
                    "name": "for",
                    "line_number": 896
                  },
                  {
                    "name": "if",
                    "line_number": 897
                  },
                  {
                    "name": "WI_fragSum",
                    "line_number": 900
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 905
                  },
                  {
                    "name": "if",
                    "line_number": 910
                  },
                  {
                    "name": "if",
                    "line_number": 912
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 913
                  },
                  {
                    "name": "for",
                    "line_number": 917
                  },
                  {
                    "name": "if",
                    "line_number": 919
                  },
                  {
                    "name": "for",
                    "line_number": 921
                  },
                  {
                    "name": "if",
                    "line_number": 923
                  },
                  {
                    "name": "if",
                    "line_number": 926
                  },
                  {
                    "name": "if",
                    "line_number": 931
                  },
                  {
                    "name": "if",
                    "line_number": 934
                  },
                  {
                    "name": "WI_fragSum",
                    "line_number": 940
                  },
                  {
                    "name": "if",
                    "line_number": 942
                  },
                  {
                    "name": "if",
                    "line_number": 945
                  },
                  {
                    "name": "if",
                    "line_number": 950
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 952
                  },
                  {
                    "name": "if",
                    "line_number": 957
                  },
                  {
                    "name": "if",
                    "line_number": 959
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 961
                  },
                  {
                    "name": "if",
                    "line_number": 963
                  },
                  {
                    "name": "WI_initNoState",
                    "line_number": 964
                  },
                  {
                    "name": "WI_initShowNextLoc",
                    "line_number": 966
                  },
                  {
                    "name": "if",
                    "line_number": 969
                  },
                  {
                    "name": "if",
                    "line_number": 971
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 888
                  },
                  {
                    "type": "for",
                    "line_number": 892
                  },
                  {
                    "type": "if",
                    "line_number": 894
                  },
                  {
                    "type": "for",
                    "line_number": 896
                  },
                  {
                    "type": "if",
                    "line_number": 897
                  },
                  {
                    "type": "if",
                    "line_number": 910
                  },
                  {
                    "type": "if",
                    "line_number": 912
                  },
                  {
                    "type": "for",
                    "line_number": 917
                  },
                  {
                    "type": "if",
                    "line_number": 919
                  },
                  {
                    "type": "for",
                    "line_number": 921
                  },
                  {
                    "type": "if",
                    "line_number": 923
                  },
                  {
                    "type": "if",
                    "line_number": 926
                  },
                  {
                    "type": "else",
                    "line_number": 928
                  },
                  {
                    "type": "if",
                    "line_number": 931
                  },
                  {
                    "type": "if",
                    "line_number": 934
                  },
                  {
                    "type": "if",
                    "line_number": 942
                  },
                  {
                    "type": "if",
                    "line_number": 945
                  },
                  {
                    "type": "if",
                    "line_number": 950
                  },
                  {
                    "type": "if",
                    "line_number": 957
                  },
                  {
                    "type": "if",
                    "line_number": 959
                  },
                  {
                    "type": "if",
                    "line_number": 963
                  },
                  {
                    "type": "else",
                    "line_number": 965
                  },
                  {
                    "type": "if",
                    "line_number": 969
                  },
                  {
                    "type": "if",
                    "line_number": 971
                  }
                ],
                "complexity": 22,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "WI_initShowNextLoc",
                  "WI_fragSum",
                  "for",
                  "if",
                  "WI_updateAnimatedBack",
                  "WI_initNoState",
                  "S_StartSound"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "dm_state ==",
                    "name": "4"
                  }
                ],
                "start_line": 957,
                "end_line": 968,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 959
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 961
                  },
                  {
                    "name": "if",
                    "line_number": 963
                  },
                  {
                    "name": "WI_initNoState",
                    "line_number": 964
                  },
                  {
                    "name": "WI_initShowNextLoc",
                    "line_number": 966
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 959
                  },
                  {
                    "type": "if",
                    "line_number": 963
                  },
                  {
                    "type": "else",
                    "line_number": 965
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "4"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "WI_initShowNextLoc",
                  "WI_initNoState",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "dm_state &",
                    "name": "1"
                  }
                ],
                "start_line": 969,
                "end_line": 976,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 971
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 971
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "1"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "WI_drawDeathmatchStats",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 981,
                "end_line": 1072,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 984
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 985
                  },
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 986
                  },
                  {
                    "type": "int",
                    "name": "y",
                    "array_size": null,
                    "line_number": 987
                  },
                  {
                    "type": "int",
                    "name": "w",
                    "array_size": null,
                    "line_number": 988
                  },
                  {
                    "type": "int",
                    "name": "lh",
                    "array_size": null,
                    "line_number": 990
                  }
                ],
                "function_calls": [
                  {
                    "name": "WI_slamBackground",
                    "line_number": 994
                  },
                  {
                    "name": "WI_drawAnimatedBack",
                    "line_number": 997
                  },
                  {
                    "name": "WI_drawLF",
                    "line_number": 998
                  },
                  {
                    "name": "titles",
                    "line_number": 1000
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1001
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1001
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1006
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1007
                  },
                  {
                    "name": "for",
                    "line_number": 1013
                  },
                  {
                    "name": "if",
                    "line_number": 1015
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1017
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1017
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1022
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1022
                  },
                  {
                    "name": "if",
                    "line_number": 1027
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1029
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1029
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1034
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1034
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1042
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1042
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1044
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1044
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1053
                  },
                  {
                    "name": "for",
                    "line_number": 1055
                  },
                  {
                    "name": "if",
                    "line_number": 1059
                  },
                  {
                    "name": "for",
                    "line_number": 1061
                  },
                  {
                    "name": "if",
                    "line_number": 1063
                  },
                  {
                    "name": "WI_drawNum",
                    "line_number": 1064
                  },
                  {
                    "name": "WI_drawNum",
                    "line_number": 1068
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1013
                  },
                  {
                    "type": "if",
                    "line_number": 1015
                  },
                  {
                    "type": "if",
                    "line_number": 1027
                  },
                  {
                    "type": "else",
                    "line_number": 1040
                  },
                  {
                    "type": "for",
                    "line_number": 1055
                  },
                  {
                    "type": "if",
                    "line_number": 1059
                  },
                  {
                    "type": "for",
                    "line_number": 1061
                  },
                  {
                    "type": "if",
                    "line_number": 1063
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "V_DrawPatch",
                  "WI_drawLF",
                  "WI_drawAnimatedBack",
                  "for",
                  "if",
                  "WI_slamBackground",
                  "titles",
                  "WI_drawNum",
                  "SHORT"
                ]
              },
              {
                "name": "WI_initNetgameStats",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1078,
                "end_line": 1102,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1081
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1089
                  },
                  {
                    "name": "if",
                    "line_number": 1091
                  },
                  {
                    "name": "WI_fragSum",
                    "line_number": 1096
                  },
                  {
                    "name": "WI_initAnimatedBack",
                    "line_number": 1101
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1089
                  },
                  {
                    "type": "if",
                    "line_number": 1091
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "WI_initAnimatedBack",
                  "if",
                  "WI_fragSum",
                  "for"
                ]
              },
              {
                "name": "WI_updateNetgameStats",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1106,
                "end_line": 1257,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1109
                  },
                  {
                    "type": "int",
                    "name": "fsum",
                    "array_size": null,
                    "line_number": 1110
                  },
                  {
                    "type": "boolean",
                    "name": "stillticking",
                    "array_size": null,
                    "line_number": 1112
                  }
                ],
                "function_calls": [
                  {
                    "name": "WI_updateAnimatedBack",
                    "line_number": 1114
                  },
                  {
                    "name": "if",
                    "line_number": 1116
                  },
                  {
                    "name": "for",
                    "line_number": 1120
                  },
                  {
                    "name": "if",
                    "line_number": 1122
                  },
                  {
                    "name": "if",
                    "line_number": 1129
                  },
                  {
                    "name": "WI_fragSum",
                    "line_number": 1130
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1132
                  },
                  {
                    "name": "if",
                    "line_number": 1136
                  },
                  {
                    "name": "if",
                    "line_number": 1138
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1139
                  },
                  {
                    "name": "for",
                    "line_number": 1143
                  },
                  {
                    "name": "if",
                    "line_number": 1145
                  },
                  {
                    "name": "if",
                    "line_number": 1150
                  },
                  {
                    "name": "if",
                    "line_number": 1156
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1158
                  },
                  {
                    "name": "if",
                    "line_number": 1162
                  },
                  {
                    "name": "if",
                    "line_number": 1164
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1165
                  },
                  {
                    "name": "for",
                    "line_number": 1169
                  },
                  {
                    "name": "if",
                    "line_number": 1171
                  },
                  {
                    "name": "if",
                    "line_number": 1175
                  },
                  {
                    "name": "if",
                    "line_number": 1180
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1182
                  },
                  {
                    "name": "if",
                    "line_number": 1186
                  },
                  {
                    "name": "if",
                    "line_number": 1188
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1189
                  },
                  {
                    "name": "for",
                    "line_number": 1193
                  },
                  {
                    "name": "if",
                    "line_number": 1195
                  },
                  {
                    "name": "if",
                    "line_number": 1200
                  },
                  {
                    "name": "if",
                    "line_number": 1206
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1208
                  },
                  {
                    "name": "if",
                    "line_number": 1212
                  },
                  {
                    "name": "if",
                    "line_number": 1214
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1215
                  },
                  {
                    "name": "for",
                    "line_number": 1219
                  },
                  {
                    "name": "if",
                    "line_number": 1221
                  },
                  {
                    "name": "if",
                    "line_number": 1226
                  },
                  {
                    "name": "WI_fragSum",
                    "line_number": 1226
                  },
                  {
                    "name": "if",
                    "line_number": 1232
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1234
                  },
                  {
                    "name": "if",
                    "line_number": 1238
                  },
                  {
                    "name": "if",
                    "line_number": 1240
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1242
                  },
                  {
                    "name": "if",
                    "line_number": 1243
                  },
                  {
                    "name": "WI_initNoState",
                    "line_number": 1244
                  },
                  {
                    "name": "WI_initShowNextLoc",
                    "line_number": 1246
                  },
                  {
                    "name": "if",
                    "line_number": 1249
                  },
                  {
                    "name": "if",
                    "line_number": 1251
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1116
                  },
                  {
                    "type": "for",
                    "line_number": 1120
                  },
                  {
                    "type": "if",
                    "line_number": 1122
                  },
                  {
                    "type": "if",
                    "line_number": 1129
                  },
                  {
                    "type": "if",
                    "line_number": 1136
                  },
                  {
                    "type": "if",
                    "line_number": 1138
                  },
                  {
                    "type": "for",
                    "line_number": 1143
                  },
                  {
                    "type": "if",
                    "line_number": 1145
                  },
                  {
                    "type": "if",
                    "line_number": 1150
                  },
                  {
                    "type": "else",
                    "line_number": 1152
                  },
                  {
                    "type": "if",
                    "line_number": 1156
                  },
                  {
                    "type": "if",
                    "line_number": 1162
                  },
                  {
                    "type": "if",
                    "line_number": 1164
                  },
                  {
                    "type": "for",
                    "line_number": 1169
                  },
                  {
                    "type": "if",
                    "line_number": 1171
                  },
                  {
                    "type": "if",
                    "line_number": 1175
                  },
                  {
                    "type": "else",
                    "line_number": 1177
                  },
                  {
                    "type": "if",
                    "line_number": 1180
                  },
                  {
                    "type": "if",
                    "line_number": 1186
                  },
                  {
                    "type": "if",
                    "line_number": 1188
                  },
                  {
                    "type": "for",
                    "line_number": 1193
                  },
                  {
                    "type": "if",
                    "line_number": 1195
                  },
                  {
                    "type": "if",
                    "line_number": 1200
                  },
                  {
                    "type": "else",
                    "line_number": 1202
                  },
                  {
                    "type": "if",
                    "line_number": 1206
                  },
                  {
                    "type": "if",
                    "line_number": 1212
                  },
                  {
                    "type": "if",
                    "line_number": 1214
                  },
                  {
                    "type": "for",
                    "line_number": 1219
                  },
                  {
                    "type": "if",
                    "line_number": 1221
                  },
                  {
                    "type": "if",
                    "line_number": 1226
                  },
                  {
                    "type": "else",
                    "line_number": 1228
                  },
                  {
                    "type": "if",
                    "line_number": 1232
                  },
                  {
                    "type": "if",
                    "line_number": 1238
                  },
                  {
                    "type": "if",
                    "line_number": 1240
                  },
                  {
                    "type": "if",
                    "line_number": 1243
                  },
                  {
                    "type": "else",
                    "line_number": 1245
                  },
                  {
                    "type": "if",
                    "line_number": 1249
                  },
                  {
                    "type": "if",
                    "line_number": 1251
                  }
                ],
                "complexity": 29,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "WI_initShowNextLoc",
                  "WI_fragSum",
                  "for",
                  "if",
                  "WI_updateAnimatedBack",
                  "WI_initNoState",
                  "S_StartSound"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "ng_state ==",
                    "name": "4"
                  }
                ],
                "start_line": 1162,
                "end_line": 1185,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1164
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1165
                  },
                  {
                    "name": "for",
                    "line_number": 1169
                  },
                  {
                    "name": "if",
                    "line_number": 1171
                  },
                  {
                    "name": "if",
                    "line_number": 1175
                  },
                  {
                    "name": "if",
                    "line_number": 1180
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1182
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1164
                  },
                  {
                    "type": "for",
                    "line_number": 1169
                  },
                  {
                    "type": "if",
                    "line_number": 1171
                  },
                  {
                    "type": "if",
                    "line_number": 1175
                  },
                  {
                    "type": "else",
                    "line_number": 1177
                  },
                  {
                    "type": "if",
                    "line_number": 1180
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "4"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "for",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "ng_state ==",
                    "name": "6"
                  }
                ],
                "start_line": 1186,
                "end_line": 1211,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1188
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1189
                  },
                  {
                    "name": "for",
                    "line_number": 1193
                  },
                  {
                    "name": "if",
                    "line_number": 1195
                  },
                  {
                    "name": "if",
                    "line_number": 1200
                  },
                  {
                    "name": "if",
                    "line_number": 1206
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1208
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1188
                  },
                  {
                    "type": "for",
                    "line_number": 1193
                  },
                  {
                    "type": "if",
                    "line_number": 1195
                  },
                  {
                    "type": "if",
                    "line_number": 1200
                  },
                  {
                    "type": "else",
                    "line_number": 1202
                  },
                  {
                    "type": "if",
                    "line_number": 1206
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "6"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "for",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "ng_state ==",
                    "name": "8"
                  }
                ],
                "start_line": 1212,
                "end_line": 1237,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1214
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1215
                  },
                  {
                    "name": "for",
                    "line_number": 1219
                  },
                  {
                    "name": "if",
                    "line_number": 1221
                  },
                  {
                    "name": "if",
                    "line_number": 1226
                  },
                  {
                    "name": "WI_fragSum",
                    "line_number": 1226
                  },
                  {
                    "name": "if",
                    "line_number": 1232
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1234
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1214
                  },
                  {
                    "type": "for",
                    "line_number": 1219
                  },
                  {
                    "type": "if",
                    "line_number": 1221
                  },
                  {
                    "type": "if",
                    "line_number": 1226
                  },
                  {
                    "type": "else",
                    "line_number": 1228
                  },
                  {
                    "type": "if",
                    "line_number": 1232
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "8"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "for",
                  "WI_fragSum",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "ng_state ==",
                    "name": "10"
                  }
                ],
                "start_line": 1238,
                "end_line": 1248,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1240
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1242
                  },
                  {
                    "name": "if",
                    "line_number": 1243
                  },
                  {
                    "name": "WI_initNoState",
                    "line_number": 1244
                  },
                  {
                    "name": "WI_initShowNextLoc",
                    "line_number": 1246
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1240
                  },
                  {
                    "type": "if",
                    "line_number": 1243
                  },
                  {
                    "type": "else",
                    "line_number": 1245
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "10"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "WI_initShowNextLoc",
                  "WI_initNoState",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "ng_state &",
                    "name": "1"
                  }
                ],
                "start_line": 1249,
                "end_line": 1256,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1251
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1251
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "1"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "WI_drawNetgameStats",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1261,
                "end_line": 1314,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1263
                  },
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": null,
                    "line_number": 1264
                  },
                  {
                    "type": "int",
                    "name": "y",
                    "array_size": null,
                    "line_number": 1265
                  }
                ],
                "function_calls": [
                  {
                    "name": "SHORT",
                    "line_number": 1266
                  },
                  {
                    "name": "WI_slamBackground",
                    "line_number": 1268
                  },
                  {
                    "name": "WI_drawAnimatedBack",
                    "line_number": 1271
                  },
                  {
                    "name": "WI_drawLF",
                    "line_number": 1273
                  },
                  {
                    "name": "titles",
                    "line_number": 1275
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1276
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1276
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1279
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1279
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1282
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1282
                  },
                  {
                    "name": "if",
                    "line_number": 1285
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1286
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1286
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1290
                  },
                  {
                    "name": "for",
                    "line_number": 1292
                  },
                  {
                    "name": "if",
                    "line_number": 1294
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1298
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1298
                  },
                  {
                    "name": "if",
                    "line_number": 1300
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1301
                  },
                  {
                    "name": "SHORT",
                    "line_number": 1301
                  },
                  {
                    "name": "WI_drawPercent",
                    "line_number": 1304
                  },
                  {
                    "name": "WI_drawPercent",
                    "line_number": 1305
                  },
                  {
                    "name": "WI_drawPercent",
                    "line_number": 1306
                  },
                  {
                    "name": "if",
                    "line_number": 1308
                  },
                  {
                    "name": "WI_drawNum",
                    "line_number": 1309
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1285
                  },
                  {
                    "type": "for",
                    "line_number": 1292
                  },
                  {
                    "type": "if",
                    "line_number": 1294
                  },
                  {
                    "type": "if",
                    "line_number": 1300
                  },
                  {
                    "type": "if",
                    "line_number": 1308
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "V_DrawPatch",
                  "WI_drawLF",
                  "WI_drawAnimatedBack",
                  "if",
                  "for",
                  "WI_slamBackground",
                  "titles",
                  "WI_drawNum",
                  "WI_drawPercent",
                  "SHORT"
                ]
              },
              {
                "name": "WI_initStats",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1318,
                "end_line": 1328,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "WI_initAnimatedBack",
                    "line_number": 1327
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "WI_initAnimatedBack"
                ]
              },
              {
                "name": "WI_updateStats",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1330,
                "end_line": 1434,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "WI_updateAnimatedBack",
                    "line_number": 1333
                  },
                  {
                    "name": "if",
                    "line_number": 1335
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1343
                  },
                  {
                    "name": "if",
                    "line_number": 1347
                  },
                  {
                    "name": "if",
                    "line_number": 1351
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1352
                  },
                  {
                    "name": "if",
                    "line_number": 1354
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1357
                  },
                  {
                    "name": "if",
                    "line_number": 1361
                  },
                  {
                    "name": "if",
                    "line_number": 1365
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1366
                  },
                  {
                    "name": "if",
                    "line_number": 1368
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1371
                  },
                  {
                    "name": "if",
                    "line_number": 1375
                  },
                  {
                    "name": "if",
                    "line_number": 1379
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1380
                  },
                  {
                    "name": "if",
                    "line_number": 1382
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1385
                  },
                  {
                    "name": "if",
                    "line_number": 1390
                  },
                  {
                    "name": "if",
                    "line_number": 1392
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1393
                  },
                  {
                    "name": "if",
                    "line_number": 1397
                  },
                  {
                    "name": "if",
                    "line_number": 1402
                  },
                  {
                    "name": "if",
                    "line_number": 1406
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1408
                  },
                  {
                    "name": "if",
                    "line_number": 1413
                  },
                  {
                    "name": "if",
                    "line_number": 1415
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1417
                  },
                  {
                    "name": "if",
                    "line_number": 1419
                  },
                  {
                    "name": "WI_initNoState",
                    "line_number": 1420
                  },
                  {
                    "name": "WI_initShowNextLoc",
                    "line_number": 1422
                  },
                  {
                    "name": "if",
                    "line_number": 1425
                  },
                  {
                    "name": "if",
                    "line_number": 1427
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1335
                  },
                  {
                    "type": "if",
                    "line_number": 1347
                  },
                  {
                    "type": "if",
                    "line_number": 1351
                  },
                  {
                    "type": "if",
                    "line_number": 1354
                  },
                  {
                    "type": "if",
                    "line_number": 1361
                  },
                  {
                    "type": "if",
                    "line_number": 1365
                  },
                  {
                    "type": "if",
                    "line_number": 1368
                  },
                  {
                    "type": "if",
                    "line_number": 1375
                  },
                  {
                    "type": "if",
                    "line_number": 1379
                  },
                  {
                    "type": "if",
                    "line_number": 1382
                  },
                  {
                    "type": "if",
                    "line_number": 1390
                  },
                  {
                    "type": "if",
                    "line_number": 1392
                  },
                  {
                    "type": "if",
                    "line_number": 1397
                  },
                  {
                    "type": "if",
                    "line_number": 1402
                  },
                  {
                    "type": "if",
                    "line_number": 1406
                  },
                  {
                    "type": "if",
                    "line_number": 1413
                  },
                  {
                    "type": "if",
                    "line_number": 1415
                  },
                  {
                    "type": "if",
                    "line_number": 1419
                  },
                  {
                    "type": "else",
                    "line_number": 1421
                  },
                  {
                    "type": "if",
                    "line_number": 1425
                  },
                  {
                    "type": "if",
                    "line_number": 1427
                  }
                ],
                "complexity": 16,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "WI_initShowNextLoc",
                  "if",
                  "WI_initNoState",
                  "WI_updateAnimatedBack",
                  "S_StartSound"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "sp_state ==",
                    "name": "4"
                  }
                ],
                "start_line": 1361,
                "end_line": 1374,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1365
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1366
                  },
                  {
                    "name": "if",
                    "line_number": 1368
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1371
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1365
                  },
                  {
                    "type": "if",
                    "line_number": 1368
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "4"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "sp_state ==",
                    "name": "6"
                  }
                ],
                "start_line": 1375,
                "end_line": 1388,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1379
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1380
                  },
                  {
                    "name": "if",
                    "line_number": 1382
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1385
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1379
                  },
                  {
                    "type": "if",
                    "line_number": 1382
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "6"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "sp_state ==",
                    "name": "8"
                  }
                ],
                "start_line": 1390,
                "end_line": 1412,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1392
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1393
                  },
                  {
                    "name": "if",
                    "line_number": 1397
                  },
                  {
                    "name": "if",
                    "line_number": 1402
                  },
                  {
                    "name": "if",
                    "line_number": 1406
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1408
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1392
                  },
                  {
                    "type": "if",
                    "line_number": 1397
                  },
                  {
                    "type": "if",
                    "line_number": 1402
                  },
                  {
                    "type": "if",
                    "line_number": 1406
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "8"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "sp_state ==",
                    "name": "10"
                  }
                ],
                "start_line": 1413,
                "end_line": 1424,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1415
                  },
                  {
                    "name": "S_StartSound",
                    "line_number": 1417
                  },
                  {
                    "name": "if",
                    "line_number": 1419
                  },
                  {
                    "name": "WI_initNoState",
                    "line_number": 1420
                  },
                  {
                    "name": "WI_initShowNextLoc",
                    "line_number": 1422
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1415
                  },
                  {
                    "type": "if",
                    "line_number": 1419
                  },
                  {
                    "type": "else",
                    "line_number": 1421
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "10"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "WI_initShowNextLoc",
                  "WI_initNoState",
                  "S_StartSound",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "sp_state &",
                    "name": "1"
                  }
                ],
                "start_line": 1425,
                "end_line": 1432,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1427
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1427
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "1"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "WI_drawStats",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1436,
                "end_line": 1468,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "lh",
                    "array_size": null,
                    "line_number": 1439
                  }
                ],
                "function_calls": [
                  {
                    "name": "SHORT",
                    "line_number": 1441
                  },
                  {
                    "name": "WI_slamBackground",
                    "line_number": 1443
                  },
                  {
                    "name": "WI_drawAnimatedBack",
                    "line_number": 1446
                  },
                  {
                    "name": "WI_drawLF",
                    "line_number": 1448
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1450
                  },
                  {
                    "name": "WI_drawPercent",
                    "line_number": 1451
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1453
                  },
                  {
                    "name": "WI_drawPercent",
                    "line_number": 1454
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1456
                  },
                  {
                    "name": "WI_drawPercent",
                    "line_number": 1457
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1459
                  },
                  {
                    "name": "WI_drawTime",
                    "line_number": 1460
                  },
                  {
                    "name": "if",
                    "line_number": 1462
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1464
                  },
                  {
                    "name": "WI_drawTime",
                    "line_number": 1465
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1462
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "V_DrawPatch",
                  "WI_drawLF",
                  "WI_drawAnimatedBack",
                  "if",
                  "WI_slamBackground",
                  "WI_drawTime",
                  "WI_drawPercent",
                  "SHORT"
                ]
              },
              {
                "name": "WI_checkForAccelerate",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1470,
                "end_line": 1498,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1472
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 1476
                  },
                  {
                    "name": "if",
                    "line_number": 1478
                  },
                  {
                    "name": "if",
                    "line_number": 1480
                  },
                  {
                    "name": "if",
                    "line_number": 1482
                  },
                  {
                    "name": "if",
                    "line_number": 1488
                  },
                  {
                    "name": "if",
                    "line_number": 1490
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1475
                  },
                  {
                    "type": "for",
                    "line_number": 1476
                  },
                  {
                    "type": "if",
                    "line_number": 1478
                  },
                  {
                    "type": "if",
                    "line_number": 1480
                  },
                  {
                    "type": "if",
                    "line_number": 1482
                  },
                  {
                    "type": "else",
                    "line_number": 1486
                  },
                  {
                    "type": "if",
                    "line_number": 1488
                  },
                  {
                    "type": "if",
                    "line_number": 1490
                  },
                  {
                    "type": "else",
                    "line_number": 1494
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "for",
                "return_type": "check for button presses to skip delays",
                "parameters": [
                  {
                    "type": "",
                    "name": "i=0"
                  },
                  {
                    "type": "player = players ; i<MAXPLAYERS ;",
                    "name": "i++"
                  },
                  {
                    "type": "",
                    "name": "player++"
                  }
                ],
                "start_line": 1475,
                "end_line": 1496,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1477
                  },
                  {
                    "name": "if",
                    "line_number": 1479
                  },
                  {
                    "name": "if",
                    "line_number": 1481
                  },
                  {
                    "name": "if",
                    "line_number": 1487
                  },
                  {
                    "name": "if",
                    "line_number": 1489
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1477
                  },
                  {
                    "type": "if",
                    "line_number": 1479
                  },
                  {
                    "type": "if",
                    "line_number": 1481
                  },
                  {
                    "type": "else",
                    "line_number": 1485
                  },
                  {
                    "type": "if",
                    "line_number": 1487
                  },
                  {
                    "type": "if",
                    "line_number": 1489
                  },
                  {
                    "type": "else",
                    "line_number": 1493
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "i=0",
                  "i++",
                  "player++"
                ],
                "outputs": [
                  "check for button presses to skip delays"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "WI_Ticker",
                "return_type": "Updates stuff each tick\nvoid",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1502,
                "end_line": 1535,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1507
                  },
                  {
                    "name": "if",
                    "line_number": 1510
                  },
                  {
                    "name": "S_ChangeMusic",
                    "line_number": 1511
                  },
                  {
                    "name": "S_ChangeMusic",
                    "line_number": 1513
                  },
                  {
                    "name": "WI_checkForAccelerate",
                    "line_number": 1516
                  },
                  {
                    "name": "switch",
                    "line_number": 1518
                  },
                  {
                    "name": "if",
                    "line_number": 1521
                  },
                  {
                    "name": "WI_updateDeathmatchStats",
                    "line_number": 1521
                  },
                  {
                    "name": "if",
                    "line_number": 1522
                  },
                  {
                    "name": "WI_updateNetgameStats",
                    "line_number": 1522
                  },
                  {
                    "name": "WI_updateStats",
                    "line_number": 1523
                  },
                  {
                    "name": "WI_updateShowNextLoc",
                    "line_number": 1527
                  },
                  {
                    "name": "WI_updateNoState",
                    "line_number": 1531
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1504
                  },
                  {
                    "type": "if",
                    "line_number": 1507
                  },
                  {
                    "type": "if",
                    "line_number": 1510
                  },
                  {
                    "type": "else",
                    "line_number": 1512
                  },
                  {
                    "type": "if",
                    "line_number": 1521
                  },
                  {
                    "type": "if",
                    "line_number": 1522
                  },
                  {
                    "type": "else",
                    "line_number": 1523
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "Updates stuff each tick\nvoid"
                ],
                "dependencies": [
                  "WI_updateNoState",
                  "WI_updateDeathmatchStats",
                  "if",
                  "S_ChangeMusic",
                  "WI_updateNetgameStats",
                  "WI_updateStats",
                  "WI_updateShowNextLoc",
                  "WI_checkForAccelerate",
                  "switch"
                ]
              },
              {
                "name": "WI_loadData",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1538,
                "end_line": 1706,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1540
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 1541
                  },
                  {
                    "type": "char",
                    "name": "name",
                    "array_size": "9",
                    "line_number": 1542
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1545
                  },
                  {
                    "name": "strcpy",
                    "line_number": 1546
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1548
                  },
                  {
                    "name": "if",
                    "line_number": 1550
                  },
                  {
                    "name": "if",
                    "line_number": 1552
                  },
                  {
                    "name": "strcpy",
                    "line_number": 1553
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1557
                  },
                  {
                    "name": "V_DrawPatch",
                    "line_number": 1558
                  },
                  {
                    "name": "if",
                    "line_number": 1562
                  },
                  {
                    "name": "while",
                    "line_number": 1565
                  },
                  {
                    "name": "if",
                    "line_number": 1572
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 1575
                  },
                  {
                    "name": "sizeof",
                    "line_number": 1575
                  },
                  {
                    "name": "for",
                    "line_number": 1577
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1579
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1580
                  },
                  {
                    "name": "Z_Malloc",
                    "line_number": 1585
                  },
                  {
                    "name": "sizeof",
                    "line_number": 1585
                  },
                  {
                    "name": "for",
                    "line_number": 1587
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1589
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1590
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1594
                  },
                  {
                    "name": "here",
                    "line_number": 1596
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1597
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1600
                  },
                  {
                    "name": "if",
                    "line_number": 1602
                  },
                  {
                    "name": "for",
                    "line_number": 1604
                  },
                  {
                    "name": "for",
                    "line_number": 1607
                  },
                  {
                    "name": "if",
                    "line_number": 1610
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1613
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1614
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1627
                  },
                  {
                    "name": "for",
                    "line_number": 1629
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1632
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1633
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1637
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1640
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1643
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1646
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1649
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1652
                  },
                  {
                    "name": "if",
                    "line_number": 1655
                  },
                  {
                    "name": "if",
                    "line_number": 1658
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1659
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1661
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1663
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1666
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1669
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1672
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1675
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1678
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1681
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1684
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1687
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1690
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1693
                  },
                  {
                    "name": "for",
                    "line_number": 1695
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1698
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1699
                  },
                  {
                    "name": "sprintf",
                    "line_number": 1702
                  },
                  {
                    "name": "W_CacheLumpName",
                    "line_number": 1703
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1545
                  },
                  {
                    "type": "else",
                    "line_number": 1547
                  },
                  {
                    "type": "if",
                    "line_number": 1550
                  },
                  {
                    "type": "if",
                    "line_number": 1552
                  },
                  {
                    "type": "if",
                    "line_number": 1562
                  },
                  {
                    "type": "while",
                    "line_number": 1565
                  },
                  {
                    "type": "if",
                    "line_number": 1572
                  },
                  {
                    "type": "for",
                    "line_number": 1577
                  },
                  {
                    "type": "else",
                    "line_number": 1583
                  },
                  {
                    "type": "for",
                    "line_number": 1587
                  },
                  {
                    "type": "if",
                    "line_number": 1602
                  },
                  {
                    "type": "for",
                    "line_number": 1604
                  },
                  {
                    "type": "for",
                    "line_number": 1607
                  },
                  {
                    "type": "if",
                    "line_number": 1610
                  },
                  {
                    "type": "else",
                    "line_number": 1616
                  },
                  {
                    "type": "for",
                    "line_number": 1629
                  },
                  {
                    "type": "if",
                    "line_number": 1655
                  },
                  {
                    "type": "if",
                    "line_number": 1658
                  },
                  {
                    "type": "else",
                    "line_number": 1660
                  },
                  {
                    "type": "else",
                    "line_number": 1662
                  },
                  {
                    "type": "for",
                    "line_number": 1695
                  }
                ],
                "complexity": 15,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "W_CacheLumpName",
                  "V_DrawPatch",
                  "Z_Malloc",
                  "strcpy",
                  "if",
                  "for",
                  "sizeof",
                  "here",
                  "sprintf"
                ]
              },
              {
                "name": "WI_unloadData",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1708,
                "end_line": 1770,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 1710
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 1711
                  }
                ],
                "function_calls": [
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1713
                  },
                  {
                    "name": "for",
                    "line_number": 1715
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1716
                  },
                  {
                    "name": "if",
                    "line_number": 1718
                  },
                  {
                    "name": "for",
                    "line_number": 1720
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1721
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1725
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1726
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1728
                  },
                  {
                    "name": "for",
                    "line_number": 1730
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1731
                  },
                  {
                    "name": "if",
                    "line_number": 1733
                  },
                  {
                    "name": "for",
                    "line_number": 1735
                  },
                  {
                    "name": "if",
                    "line_number": 1737
                  },
                  {
                    "name": "for",
                    "line_number": 1738
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1739
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 1744
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1746
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1747
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1748
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1749
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1750
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1751
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1752
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1753
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1754
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1755
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1756
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1757
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1759
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1760
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1761
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1762
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1763
                  },
                  {
                    "name": "for",
                    "line_number": 1765
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1766
                  },
                  {
                    "name": "for",
                    "line_number": 1768
                  },
                  {
                    "name": "Z_ChangeTag",
                    "line_number": 1769
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 1715
                  },
                  {
                    "type": "if",
                    "line_number": 1718
                  },
                  {
                    "type": "for",
                    "line_number": 1720
                  },
                  {
                    "type": "else",
                    "line_number": 1723
                  },
                  {
                    "type": "for",
                    "line_number": 1730
                  },
                  {
                    "type": "if",
                    "line_number": 1733
                  },
                  {
                    "type": "for",
                    "line_number": 1735
                  },
                  {
                    "type": "if",
                    "line_number": 1737
                  },
                  {
                    "type": "for",
                    "line_number": 1738
                  },
                  {
                    "type": "for",
                    "line_number": 1765
                  },
                  {
                    "type": "for",
                    "line_number": 1768
                  }
                ],
                "complexity": 11,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "Z_ChangeTag",
                  "if",
                  "Z_Free",
                  "for"
                ]
              },
              {
                "name": "WI_Drawer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 1772,
                "end_line": 1793,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "switch",
                    "line_number": 1774
                  },
                  {
                    "name": "if",
                    "line_number": 1777
                  },
                  {
                    "name": "WI_drawDeathmatchStats",
                    "line_number": 1778
                  },
                  {
                    "name": "if",
                    "line_number": 1779
                  },
                  {
                    "name": "WI_drawNetgameStats",
                    "line_number": 1780
                  },
                  {
                    "name": "WI_drawStats",
                    "line_number": 1782
                  },
                  {
                    "name": "WI_drawShowNextLoc",
                    "line_number": 1786
                  },
                  {
                    "name": "WI_drawNoState",
                    "line_number": 1790
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1777
                  },
                  {
                    "type": "if",
                    "line_number": 1779
                  },
                  {
                    "type": "else",
                    "line_number": 1781
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "WI_drawNoState",
                  "WI_drawDeathmatchStats",
                  "WI_drawStats",
                  "WI_drawShowNextLoc",
                  "switch",
                  "WI_drawNetgameStats"
                ]
              },
              {
                "name": "WI_initVariables",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "wbstartstruct_t*",
                    "name": "wbstartstruct"
                  }
                ],
                "start_line": 1796,
                "end_line": 1836,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1802
                  },
                  {
                    "name": "if",
                    "line_number": 1804
                  },
                  {
                    "name": "RNGCHECK",
                    "line_number": 1805
                  },
                  {
                    "name": "RNGCHECK",
                    "line_number": 1807
                  },
                  {
                    "name": "RNGCHECK",
                    "line_number": 1811
                  },
                  {
                    "name": "RNGCHECK",
                    "line_number": 1812
                  },
                  {
                    "name": "RNGCHECK",
                    "line_number": 1814
                  },
                  {
                    "name": "RNGCHECK",
                    "line_number": 1815
                  },
                  {
                    "name": "if",
                    "line_number": 1824
                  },
                  {
                    "name": "if",
                    "line_number": 1827
                  },
                  {
                    "name": "if",
                    "line_number": 1830
                  },
                  {
                    "name": "if",
                    "line_number": 1833
                  },
                  {
                    "name": "if",
                    "line_number": 1834
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1802
                  },
                  {
                    "type": "if",
                    "line_number": 1804
                  },
                  {
                    "type": "else",
                    "line_number": 1806
                  },
                  {
                    "type": "else",
                    "line_number": 1809
                  },
                  {
                    "type": "if",
                    "line_number": 1824
                  },
                  {
                    "type": "if",
                    "line_number": 1827
                  },
                  {
                    "type": "if",
                    "line_number": 1830
                  },
                  {
                    "type": "if",
                    "line_number": 1833
                  },
                  {
                    "type": "if",
                    "line_number": 1834
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "wbstartstruct"
                ],
                "outputs": [],
                "dependencies": [
                  "RNGCHECK",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "ifdef RANGECHECKING",
                "parameters": [
                  {
                    "type": "gamemode !=",
                    "name": "commercial"
                  }
                ],
                "start_line": 1801,
                "end_line": 1807,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 1803
                  },
                  {
                    "name": "RNGCHECK",
                    "line_number": 1804
                  },
                  {
                    "name": "RNGCHECK",
                    "line_number": 1806
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1803
                  },
                  {
                    "type": "else",
                    "line_number": 1805
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "commercial"
                ],
                "outputs": [
                  "ifdef RANGECHECKING"
                ],
                "dependencies": [
                  "RNGCHECK",
                  "if"
                ]
              },
              {
                "name": "WI_Start",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "wbstartstruct_t*",
                    "name": "wbstartstruct"
                  }
                ],
                "start_line": 1838,
                "end_line": 1850,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "WI_initVariables",
                    "line_number": 1841
                  },
                  {
                    "name": "WI_loadData",
                    "line_number": 1842
                  },
                  {
                    "name": "if",
                    "line_number": 1844
                  },
                  {
                    "name": "WI_initDeathmatchStats",
                    "line_number": 1845
                  },
                  {
                    "name": "if",
                    "line_number": 1846
                  },
                  {
                    "name": "WI_initNetgameStats",
                    "line_number": 1847
                  },
                  {
                    "name": "WI_initStats",
                    "line_number": 1849
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 1844
                  },
                  {
                    "type": "if",
                    "line_number": 1846
                  },
                  {
                    "type": "else",
                    "line_number": 1848
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "wbstartstruct"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "WI_initNetgameStats",
                  "WI_initStats",
                  "WI_initVariables",
                  "WI_loadData",
                  "WI_initDeathmatchStats"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 124
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 125
              },
              {
                "name": "type",
                "type": "animenum_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 136
              },
              {
                "name": "period",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 139
              },
              {
                "name": "nanims",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 142
              },
              {
                "name": "loc",
                "type": "point_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 145
              },
              {
                "name": "data1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 150
              },
              {
                "name": "data2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 155
              },
              {
                "name": "nexttic",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 163
              },
              {
                "name": "lastdrawn",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 166
              },
              {
                "name": "ctr",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 169
              },
              {
                "name": "state",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 172
              },
              {
                "name": "acceleratestage",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 304
              },
              {
                "name": "me",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 307
              },
              {
                "name": "state",
                "type": "stateenum_t",
                "storage_class": "static",
                "array_size": null,
                "line_number": 310
              },
              {
                "name": "cnt",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 318
              },
              {
                "name": "bcnt",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 321
              },
              {
                "name": "firstrefresh",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 324
              },
              {
                "name": "cnt_time",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 329
              },
              {
                "name": "cnt_par",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 330
              },
              {
                "name": "cnt_pause",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 331
              },
              {
                "name": "NUMCMAPS",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 334
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 416
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 461
              },
              {
                "name": "left",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 462
              },
              {
                "name": "top",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 463
              },
              {
                "name": "right",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 464
              },
              {
                "name": "bottom",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 465
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 505
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 534
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 585
              },
              {
                "name": "neg",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 620
              },
              {
                "name": "temp",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 621
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 650
              },
              {
                "name": "x",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 664
              },
              {
                "name": "div",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 694
              },
              {
                "name": "n",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 695
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 774
              },
              {
                "name": "last",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 775
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 820
              },
              {
                "name": "frags",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 838
              },
              {
                "name": "dm_state",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 843
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 852
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 853
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 881
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 882
              },
              {
                "name": "stillticking",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 884
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 984
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 985
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 986
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 987
              },
              {
                "name": "w",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 988
              },
              {
                "name": "lh",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 990
              },
              {
                "name": "dofrags",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 1075
              },
              {
                "name": "ng_state",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 1076
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1081
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1109
              },
              {
                "name": "fsum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1110
              },
              {
                "name": "stillticking",
                "type": "boolean",
                "storage_class": null,
                "array_size": null,
                "line_number": 1112
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1263
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1264
              },
              {
                "name": "y",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1265
              },
              {
                "name": "sp_state",
                "type": "int",
                "storage_class": "static",
                "array_size": null,
                "line_number": 1316
              },
              {
                "name": "lh",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1439
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1472
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1540
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1541
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 1542
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1710
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 1711
              }
            ],
            "defines": [
              {
                "name": "NUMEPISODES",
                "value": "4",
                "line_number": 66
              },
              {
                "name": "NUMMAPS",
                "value": "9",
                "line_number": 67
              },
              {
                "name": "WI_TITLEY",
                "value": "2",
                "line_number": 80
              },
              {
                "name": "WI_SPACINGY",
                "value": "33",
                "line_number": 81
              },
              {
                "name": "SP_STATSX",
                "value": "50",
                "line_number": 84
              },
              {
                "name": "SP_STATSY",
                "value": "50",
                "line_number": 85
              },
              {
                "name": "SP_TIMEX",
                "value": "16",
                "line_number": 87
              },
              {
                "name": "SP_TIMEY",
                "value": "(SCREENHEIGHT-32)",
                "line_number": 88
              },
              {
                "name": "NG_STATSY",
                "value": "50",
                "line_number": 92
              },
              {
                "name": "NG_STATSX",
                "value": "(32 + SHORT(star->width)/2 + 32*!dofrags)",
                "line_number": 93
              },
              {
                "name": "NG_SPACINGX",
                "value": "64",
                "line_number": 95
              },
              {
                "name": "DM_MATRIXX",
                "value": "42",
                "line_number": 99
              },
              {
                "name": "DM_MATRIXY",
                "value": "68",
                "line_number": 100
              },
              {
                "name": "DM_SPACINGX",
                "value": "40",
                "line_number": 102
              },
              {
                "name": "DM_TOTALSX",
                "value": "269",
                "line_number": 104
              },
              {
                "name": "DM_KILLERSX",
                "value": "10",
                "line_number": 106
              },
              {
                "name": "DM_KILLERSY",
                "value": "100",
                "line_number": 107
              },
              {
                "name": "DM_VICTIMSX",
                "value": "5",
                "line_number": 108
              },
              {
                "name": "DM_VICTIMSY",
                "value": "50",
                "line_number": 109
              },
              {
                "name": "FB",
                "value": "0",
                "line_number": 285
              },
              {
                "name": "SP_KILLS",
                "value": "0",
                "line_number": 289
              },
              {
                "name": "SP_ITEMS",
                "value": "2",
                "line_number": 290
              },
              {
                "name": "SP_SECRET",
                "value": "4",
                "line_number": 291
              },
              {
                "name": "SP_FRAGS",
                "value": "6",
                "line_number": 292
              },
              {
                "name": "SP_TIME",
                "value": "8",
                "line_number": 293
              },
              {
                "name": "SP_PAR",
                "value": "ST_TIME",
                "line_number": 294
              },
              {
                "name": "SP_PAUSE",
                "value": "1",
                "line_number": 296
              },
              {
                "name": "SHOWNEXTLOCDELAY",
                "value": "4",
                "line_number": 299
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/wi_stuff.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of functions",
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "wi_stuff.h",
          "type": "file",
          "size": 1360,
          "last_modified": "2024-09-05T16:00:05.726362",
          "path": "linuxdoom-1.10/wi_stuff.h",
          "readme": "# wi_stuff.h\n\nThis file contains functionality related to wi_stuff.",
          "dependencies": [
            "doomdef.h",
            "v_video.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/wi_stuff.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "w_wad.c",
          "type": "file",
          "size": 10411,
          "last_modified": "2024-09-05T16:00:05.652357",
          "path": "linuxdoom-1.10/w_wad.c",
          "readme": "# w_wad.c\n\nThis file contains functionality related to w_wad.",
          "dependencies": [
            "unistd.h",
            "string.h",
            "fcntl.h",
            "w_wad.h",
            "sys/types.h",
            "alloca.h",
            "sys/stat.h",
            "doomtype.h",
            "m_swap.h",
            "ctype.h",
            "z_zone.h",
            "i_system.h",
            "malloc.h"
          ],
          "inputs": [
            "*filename",
            "handle",
            "lump",
            "s",
            "name",
            "filenames",
            "void",
            "filename",
            "path",
            "dest"
          ],
          "outputs": [
            "int",
            "define strcmpi\tstrcasecmp\n\nvoid"
          ],
          "content": {
            "functions": [
              {
                "name": "strupr",
                "return_type": "define strcmpi\tstrcasecmp\n\nvoid",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "s"
                  }
                ],
                "start_line": 67,
                "end_line": 70,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 69
                  },
                  {
                    "name": "toupper",
                    "line_number": 69
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 69
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "s"
                ],
                "outputs": [
                  "define strcmpi\tstrcasecmp\n\nvoid"
                ],
                "dependencies": [
                  "toupper",
                  "while"
                ]
              },
              {
                "name": "filelength",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "handle"
                  }
                ],
                "start_line": 74,
                "end_line": 82,
                "local_variables": [
                  {
                    "type": "struct stat",
                    "name": "fileinfo",
                    "array_size": null,
                    "line_number": 76
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 78
                  },
                  {
                    "name": "fstat",
                    "line_number": 78
                  },
                  {
                    "name": "I_Error",
                    "line_number": 79
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 78
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "handle"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "fstat",
                  "I_Error",
                  "if"
                ]
              },
              {
                "name": "ExtractFileBase",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "path"
                  },
                  {
                    "type": "char*",
                    "name": "dest"
                  }
                ],
                "start_line": 85,
                "end_line": 111,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "length",
                    "array_size": null,
                    "line_number": 88
                  }
                ],
                "function_calls": [
                  {
                    "name": "strlen",
                    "line_number": 90
                  },
                  {
                    "name": "while",
                    "line_number": 93
                  },
                  {
                    "name": "memset",
                    "line_number": 101
                  },
                  {
                    "name": "while",
                    "line_number": 104
                  },
                  {
                    "name": "if",
                    "line_number": 106
                  },
                  {
                    "name": "I_Error",
                    "line_number": 107
                  },
                  {
                    "name": "toupper",
                    "line_number": 109
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 93
                  },
                  {
                    "type": "while",
                    "line_number": 104
                  },
                  {
                    "type": "if",
                    "line_number": 106
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "path",
                  "dest"
                ],
                "outputs": [],
                "dependencies": [
                  "strlen",
                  "while",
                  "if",
                  "memset",
                  "I_Error",
                  "toupper"
                ]
              },
              {
                "name": "W_AddFile",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char",
                    "name": "*filename"
                  }
                ],
                "start_line": 141,
                "end_line": 226,
                "local_variables": [
                  {
                    "type": "wadinfo_t",
                    "name": "header",
                    "array_size": null,
                    "line_number": 143
                  },
                  {
                    "type": "unsigned",
                    "name": "i",
                    "array_size": null,
                    "line_number": 145
                  },
                  {
                    "type": "int",
                    "name": "handle",
                    "array_size": null,
                    "line_number": 146
                  },
                  {
                    "type": "int",
                    "name": "length",
                    "array_size": null,
                    "line_number": 147
                  },
                  {
                    "type": "int",
                    "name": "startlump",
                    "array_size": null,
                    "line_number": 148
                  },
                  {
                    "type": "filelump_t",
                    "name": "singleinfo",
                    "array_size": null,
                    "line_number": 150
                  },
                  {
                    "type": "int",
                    "name": "storehandle",
                    "array_size": null,
                    "line_number": 151
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 156
                  },
                  {
                    "name": "if",
                    "line_number": 163
                  },
                  {
                    "name": "open",
                    "line_number": 163
                  },
                  {
                    "name": "printf",
                    "line_number": 165
                  },
                  {
                    "name": "printf",
                    "line_number": 169
                  },
                  {
                    "name": "if",
                    "line_number": 172
                  },
                  {
                    "name": "strcmpi",
                    "line_number": 172
                  },
                  {
                    "name": "strlen",
                    "line_number": 172
                  },
                  {
                    "name": "LONG",
                    "line_number": 177
                  },
                  {
                    "name": "filelength",
                    "line_number": 177
                  },
                  {
                    "name": "ExtractFileBase",
                    "line_number": 178
                  },
                  {
                    "name": "read",
                    "line_number": 184
                  },
                  {
                    "name": "sizeof",
                    "line_number": 184
                  },
                  {
                    "name": "if",
                    "line_number": 185
                  },
                  {
                    "name": "strncmp",
                    "line_number": 185
                  },
                  {
                    "name": "if",
                    "line_number": 188
                  },
                  {
                    "name": "strncmp",
                    "line_number": 188
                  },
                  {
                    "name": "I_Error",
                    "line_number": 190
                  },
                  {
                    "name": "LONG",
                    "line_number": 196
                  },
                  {
                    "name": "LONG",
                    "line_number": 197
                  },
                  {
                    "name": "sizeof",
                    "line_number": 198
                  },
                  {
                    "name": "alloca",
                    "line_number": 199
                  },
                  {
                    "name": "lseek",
                    "line_number": 200
                  },
                  {
                    "name": "read",
                    "line_number": 201
                  },
                  {
                    "name": "realloc",
                    "line_number": 207
                  },
                  {
                    "name": "sizeof",
                    "line_number": 207
                  },
                  {
                    "name": "if",
                    "line_number": 209
                  },
                  {
                    "name": "I_Error",
                    "line_number": 210
                  },
                  {
                    "name": "for",
                    "line_number": 216
                  },
                  {
                    "name": "LONG",
                    "line_number": 219
                  },
                  {
                    "name": "LONG",
                    "line_number": 220
                  },
                  {
                    "name": "strncpy",
                    "line_number": 221
                  },
                  {
                    "name": "if",
                    "line_number": 224
                  },
                  {
                    "name": "close",
                    "line_number": 225
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 156
                  },
                  {
                    "type": "if",
                    "line_number": 163
                  },
                  {
                    "type": "if",
                    "line_number": 172
                  },
                  {
                    "type": "else",
                    "line_number": 181
                  },
                  {
                    "type": "if",
                    "line_number": 185
                  },
                  {
                    "type": "if",
                    "line_number": 188
                  },
                  {
                    "type": "if",
                    "line_number": 209
                  },
                  {
                    "type": "for",
                    "line_number": 216
                  },
                  {
                    "type": "if",
                    "line_number": 224
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "*filename"
                ],
                "outputs": [],
                "dependencies": [
                  "strlen",
                  "alloca",
                  "strncpy",
                  "open",
                  "if",
                  "filelength",
                  "for",
                  "lseek",
                  "ExtractFileBase",
                  "I_Error",
                  "sizeof",
                  "close",
                  "LONG",
                  "realloc",
                  "printf",
                  "read",
                  "strcmpi",
                  "strncmp"
                ]
              },
              {
                "name": "W_Reload",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 236,
                "end_line": 275,
                "local_variables": [
                  {
                    "type": "wadinfo_t",
                    "name": "header",
                    "array_size": null,
                    "line_number": 238
                  },
                  {
                    "type": "int",
                    "name": "lumpcount",
                    "array_size": null,
                    "line_number": 239
                  },
                  {
                    "type": "unsigned",
                    "name": "i",
                    "array_size": null,
                    "line_number": 241
                  },
                  {
                    "type": "int",
                    "name": "handle",
                    "array_size": null,
                    "line_number": 242
                  },
                  {
                    "type": "int",
                    "name": "length",
                    "array_size": null,
                    "line_number": 243
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 246
                  },
                  {
                    "name": "if",
                    "line_number": 249
                  },
                  {
                    "name": "open",
                    "line_number": 249
                  },
                  {
                    "name": "I_Error",
                    "line_number": 250
                  },
                  {
                    "name": "read",
                    "line_number": 252
                  },
                  {
                    "name": "sizeof",
                    "line_number": 252
                  },
                  {
                    "name": "LONG",
                    "line_number": 253
                  },
                  {
                    "name": "LONG",
                    "line_number": 254
                  },
                  {
                    "name": "sizeof",
                    "line_number": 255
                  },
                  {
                    "name": "alloca",
                    "line_number": 256
                  },
                  {
                    "name": "lseek",
                    "line_number": 257
                  },
                  {
                    "name": "read",
                    "line_number": 258
                  },
                  {
                    "name": "for",
                    "line_number": 263
                  },
                  {
                    "name": "if",
                    "line_number": 267
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 268
                  },
                  {
                    "name": "LONG",
                    "line_number": 270
                  },
                  {
                    "name": "LONG",
                    "line_number": 271
                  },
                  {
                    "name": "close",
                    "line_number": 274
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 246
                  },
                  {
                    "type": "if",
                    "line_number": 249
                  },
                  {
                    "type": "for",
                    "line_number": 263
                  },
                  {
                    "type": "if",
                    "line_number": 267
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "alloca",
                  "Z_Free",
                  "open",
                  "if",
                  "for",
                  "lseek",
                  "I_Error",
                  "sizeof",
                  "close",
                  "LONG",
                  "read"
                ]
              },
              {
                "name": "W_InitMultipleFiles",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char**",
                    "name": "filenames"
                  }
                ],
                "start_line": 292,
                "end_line": 316,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "size",
                    "array_size": null,
                    "line_number": 294
                  }
                ],
                "function_calls": [
                  {
                    "name": "malloc",
                    "line_number": 300
                  },
                  {
                    "name": "for",
                    "line_number": 302
                  },
                  {
                    "name": "W_AddFile",
                    "line_number": 303
                  },
                  {
                    "name": "if",
                    "line_number": 305
                  },
                  {
                    "name": "I_Error",
                    "line_number": 306
                  },
                  {
                    "name": "sizeof",
                    "line_number": 309
                  },
                  {
                    "name": "malloc",
                    "line_number": 310
                  },
                  {
                    "name": "if",
                    "line_number": 312
                  },
                  {
                    "name": "I_Error",
                    "line_number": 313
                  },
                  {
                    "name": "memset",
                    "line_number": 315
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 302
                  },
                  {
                    "type": "if",
                    "line_number": 305
                  },
                  {
                    "type": "if",
                    "line_number": 312
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "filenames"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "W_AddFile",
                  "for",
                  "memset",
                  "I_Error",
                  "sizeof",
                  "malloc"
                ]
              },
              {
                "name": "W_InitFile",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "filename"
                  }
                ],
                "start_line": 325,
                "end_line": 332,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "W_InitMultipleFiles",
                    "line_number": 331
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "filename"
                ],
                "outputs": [],
                "dependencies": [
                  "W_InitMultipleFiles"
                ]
              },
              {
                "name": "W_NumLumps",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 339,
                "end_line": 342,
                "local_variables": [
                  {
                    "type": "return",
                    "name": "numlumps",
                    "array_size": null,
                    "line_number": 341
                  }
                ],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": []
              },
              {
                "name": "W_CheckNumForName",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "name"
                  }
                ],
                "start_line": 351,
                "end_line": 390,
                "local_variables": [
                  {
                    "type": "char",
                    "name": "s",
                    "array_size": "9",
                    "line_number": 354
                  },
                  {
                    "type": "int",
                    "name": "x",
                    "array_size": "2",
                    "line_number": 355
                  },
                  {
                    "type": "int",
                    "name": "v1",
                    "array_size": null,
                    "line_number": 359
                  },
                  {
                    "type": "int",
                    "name": "v2",
                    "array_size": null,
                    "line_number": 360
                  }
                ],
                "function_calls": [
                  {
                    "name": "strncpy",
                    "line_number": 364
                  },
                  {
                    "name": "strupr",
                    "line_number": 370
                  },
                  {
                    "name": "while",
                    "line_number": 379
                  },
                  {
                    "name": "if",
                    "line_number": 381
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 363
                  },
                  {
                    "type": "while",
                    "line_number": 379
                  },
                  {
                    "type": "if",
                    "line_number": 381
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "name"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "strupr",
                  "while",
                  "strncpy",
                  "if"
                ]
              },
              {
                "name": "W_GetNumForName",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "name"
                  }
                ],
                "start_line": 399,
                "end_line": 409,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 401
                  },
                  {
                    "type": "return",
                    "name": "i",
                    "array_size": null,
                    "line_number": 408
                  }
                ],
                "function_calls": [
                  {
                    "name": "W_CheckNumForName",
                    "line_number": 403
                  },
                  {
                    "name": "if",
                    "line_number": 405
                  },
                  {
                    "name": "I_Error",
                    "line_number": 406
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 405
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "name"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "I_Error",
                  "W_CheckNumForName",
                  "if"
                ]
              },
              {
                "name": "W_LumpLength",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "lump"
                  }
                ],
                "start_line": 416,
                "end_line": 422,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 418
                  },
                  {
                    "name": "I_Error",
                    "line_number": 419
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 418
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "lump"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "I_Error",
                  "if"
                ]
              },
              {
                "name": "W_ReadLump",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "lump"
                  },
                  {
                    "type": "void*",
                    "name": "dest"
                  }
                ],
                "start_line": 431,
                "end_line": 464,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 433
                  },
                  {
                    "type": "int",
                    "name": "handle",
                    "array_size": null,
                    "line_number": 435
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 437
                  },
                  {
                    "name": "I_Error",
                    "line_number": 438
                  },
                  {
                    "name": "I_BeginRead",
                    "line_number": 442
                  },
                  {
                    "name": "if",
                    "line_number": 444
                  },
                  {
                    "name": "if",
                    "line_number": 447
                  },
                  {
                    "name": "open",
                    "line_number": 447
                  },
                  {
                    "name": "I_Error",
                    "line_number": 448
                  },
                  {
                    "name": "lseek",
                    "line_number": 453
                  },
                  {
                    "name": "read",
                    "line_number": 454
                  },
                  {
                    "name": "if",
                    "line_number": 456
                  },
                  {
                    "name": "I_Error",
                    "line_number": 457
                  },
                  {
                    "name": "if",
                    "line_number": 460
                  },
                  {
                    "name": "close",
                    "line_number": 461
                  },
                  {
                    "name": "I_EndRead",
                    "line_number": 463
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 437
                  },
                  {
                    "type": "if",
                    "line_number": 444
                  },
                  {
                    "type": "if",
                    "line_number": 447
                  },
                  {
                    "type": "else",
                    "line_number": 450
                  },
                  {
                    "type": "if",
                    "line_number": 456
                  },
                  {
                    "type": "if",
                    "line_number": 460
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "lump",
                  "dest"
                ],
                "outputs": [],
                "dependencies": [
                  "read",
                  "open",
                  "if",
                  "I_Error",
                  "close",
                  "I_EndRead",
                  "I_BeginRead",
                  "lseek"
                ]
              },
              {
                "name": "W_Profile",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 522,
                "end_line": 575,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 524
                  },
                  {
                    "type": "char",
                    "name": "ch",
                    "array_size": null,
                    "line_number": 527
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 529
                  },
                  {
                    "type": "char",
                    "name": "name",
                    "array_size": "9",
                    "line_number": 530
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 533
                  },
                  {
                    "name": "if",
                    "line_number": 536
                  },
                  {
                    "name": "sizeof",
                    "line_number": 543
                  },
                  {
                    "name": "if",
                    "line_number": 544
                  },
                  {
                    "name": "fopen",
                    "line_number": 553
                  },
                  {
                    "name": "for",
                    "line_number": 556
                  },
                  {
                    "name": "memcpy",
                    "line_number": 558
                  },
                  {
                    "name": "for",
                    "line_number": 560
                  },
                  {
                    "name": "if",
                    "line_number": 561
                  },
                  {
                    "name": "for",
                    "line_number": 564
                  },
                  {
                    "name": "fprintf",
                    "line_number": 567
                  },
                  {
                    "name": "for",
                    "line_number": 569
                  },
                  {
                    "name": "fprintf",
                    "line_number": 570
                  },
                  {
                    "name": "fprintf",
                    "line_number": 572
                  },
                  {
                    "name": "fclose",
                    "line_number": 574
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 533
                  },
                  {
                    "type": "if",
                    "line_number": 536
                  },
                  {
                    "type": "else",
                    "line_number": 541
                  },
                  {
                    "type": "if",
                    "line_number": 544
                  },
                  {
                    "type": "else",
                    "line_number": 546
                  },
                  {
                    "type": "for",
                    "line_number": 556
                  },
                  {
                    "type": "for",
                    "line_number": 560
                  },
                  {
                    "type": "if",
                    "line_number": 561
                  },
                  {
                    "type": "for",
                    "line_number": 564
                  },
                  {
                    "type": "for",
                    "line_number": 569
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "if",
                  "for",
                  "fopen",
                  "sizeof",
                  "fclose",
                  "memcpy"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "numlumps",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 62
              },
              {
                "name": "fileinfo",
                "type": "struct stat",
                "storage_class": null,
                "array_size": null,
                "line_number": 76
              },
              {
                "name": "length",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 91
              },
              {
                "name": "reloadlump",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 137
              },
              {
                "name": "header",
                "type": "wadinfo_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 143
              },
              {
                "name": "i",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 145
              },
              {
                "name": "handle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 146
              },
              {
                "name": "length",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 147
              },
              {
                "name": "startlump",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 148
              },
              {
                "name": "singleinfo",
                "type": "filelump_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 150
              },
              {
                "name": "storehandle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 151
              },
              {
                "name": "header",
                "type": "wadinfo_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 238
              },
              {
                "name": "lumpcount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 239
              },
              {
                "name": "i",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 241
              },
              {
                "name": "handle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 242
              },
              {
                "name": "length",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 243
              },
              {
                "name": "size",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 294
              },
              {
                "name": "numlumps",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 341
              },
              {
                "name": "s",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 354
              },
              {
                "name": "x",
                "type": "int",
                "storage_class": null,
                "array_size": "2",
                "line_number": 355
              },
              {
                "name": "v1",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 359
              },
              {
                "name": "v2",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 360
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 401
              },
              {
                "name": "i",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 408
              },
              {
                "name": "c",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 436
              },
              {
                "name": "handle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 438
              },
              {
                "name": "profilecount",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 520
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 524
              },
              {
                "name": "ch",
                "type": "char",
                "storage_class": null,
                "array_size": null,
                "line_number": 527
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 529
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "9",
                "line_number": 530
              }
            ],
            "defines": [
              {
                "name": "O_BINARY",
                "value": "0",
                "line_number": 38
              },
              {
                "name": "strcmpi",
                "value": "strcasecmp",
                "line_number": 67
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/w_wad.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "w_wad.h",
          "type": "file",
          "size": 1755,
          "last_modified": "2024-09-05T16:00:05.676358",
          "path": "linuxdoom-1.10/w_wad.h",
          "readme": "# w_wad.h\n\nThis file contains functionality related to w_wad.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "identification",
                "type": "char",
                "storage_class": null,
                "array_size": "4",
                "line_number": 38
              },
              {
                "name": "numlumps",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 39
              },
              {
                "name": "infotableofs",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 40
              },
              {
                "name": "filepos",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 47
              },
              {
                "name": "size",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 48
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "8",
                "line_number": 49
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "8",
                "line_number": 58
              },
              {
                "name": "handle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 59
              },
              {
                "name": "position",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 60
              },
              {
                "name": "size",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 61
              },
              {
                "name": "numlumps",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 67
              }
            ],
            "defines": []
          },
          "source_code_path": "linuxdoom-1.10/w_wad.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "z_zone.c",
          "type": "file",
          "size": 9400,
          "last_modified": "2024-09-05T16:00:05.752878",
          "path": "linuxdoom-1.10/z_zone.c",
          "readme": "# z_zone.c\n\nThis file contains functionality related to z_zone.",
          "dependencies": [
            "doomdef.h",
            "z_zone.h",
            "i_system.h"
          ],
          "inputs": [
            "hightag",
            "lowtag",
            "tag",
            "void",
            "f",
            "zone",
            "ptr"
          ],
          "outputs": [
            "int"
          ],
          "content": {
            "functions": [
              {
                "name": "Z_ClearZone",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "memzone_t*",
                    "name": "zone"
                  }
                ],
                "start_line": 67,
                "end_line": 86,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "sizeof",
                    "line_number": 74
                  },
                  {
                    "name": "sizeof",
                    "line_number": 85
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "zone"
                ],
                "outputs": [],
                "dependencies": [
                  "sizeof"
                ]
              },
              {
                "name": "Z_Init",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 93,
                "end_line": 116,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "size",
                    "array_size": null,
                    "line_number": 96
                  }
                ],
                "function_calls": [
                  {
                    "name": "I_ZoneBase",
                    "line_number": 98
                  },
                  {
                    "name": "sizeof",
                    "line_number": 104
                  },
                  {
                    "name": "sizeof",
                    "line_number": 115
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "I_ZoneBase",
                  "sizeof"
                ]
              },
              {
                "name": "Z_Free",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "void*",
                    "name": "ptr"
                  }
                ],
                "start_line": 122,
                "end_line": 172,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "sizeof",
                    "line_number": 127
                  },
                  {
                    "name": "if",
                    "line_number": 129
                  },
                  {
                    "name": "I_Error",
                    "line_number": 130
                  },
                  {
                    "name": "if",
                    "line_number": 132
                  },
                  {
                    "name": "if",
                    "line_number": 148
                  },
                  {
                    "name": "if",
                    "line_number": 155
                  },
                  {
                    "name": "if",
                    "line_number": 162
                  },
                  {
                    "name": "if",
                    "line_number": 169
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 129
                  },
                  {
                    "type": "if",
                    "line_number": 132
                  },
                  {
                    "type": "if",
                    "line_number": 148
                  },
                  {
                    "type": "if",
                    "line_number": 155
                  },
                  {
                    "type": "if",
                    "line_number": 162
                  },
                  {
                    "type": "if",
                    "line_number": 169
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "ptr"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "I_Error",
                  "sizeof"
                ]
              },
              {
                "name": "Z_FreeTags",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "lowtag"
                  },
                  {
                    "type": "int",
                    "name": "hightag"
                  }
                ],
                "start_line": 296,
                "end_line": 315,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 301
                  },
                  {
                    "name": "if",
                    "line_number": 309
                  },
                  {
                    "name": "if",
                    "line_number": 312
                  },
                  {
                    "name": "Z_Free",
                    "line_number": 313
                  },
                  {
                    "name": "sizeof",
                    "line_number": 313
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 301
                  },
                  {
                    "type": "if",
                    "line_number": 309
                  },
                  {
                    "type": "if",
                    "line_number": 312
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "lowtag",
                  "hightag"
                ],
                "outputs": [],
                "dependencies": [
                  "sizeof",
                  "if",
                  "Z_Free",
                  "for"
                ]
              },
              {
                "name": "Z_DumpHeap",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "lowtag"
                  },
                  {
                    "type": "int",
                    "name": "hightag"
                  }
                ],
                "start_line": 326,
                "end_line": 357,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "printf",
                    "line_number": 330
                  },
                  {
                    "name": "printf",
                    "line_number": 333
                  },
                  {
                    "name": "for",
                    "line_number": 336
                  },
                  {
                    "name": "if",
                    "line_number": 338
                  },
                  {
                    "name": "printf",
                    "line_number": 339
                  },
                  {
                    "name": "if",
                    "line_number": 342
                  },
                  {
                    "name": "if",
                    "line_number": 348
                  },
                  {
                    "name": "printf",
                    "line_number": 349
                  },
                  {
                    "name": "if",
                    "line_number": 351
                  },
                  {
                    "name": "printf",
                    "line_number": 352
                  },
                  {
                    "name": "if",
                    "line_number": 354
                  },
                  {
                    "name": "printf",
                    "line_number": 355
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 336
                  },
                  {
                    "type": "if",
                    "line_number": 338
                  },
                  {
                    "type": "if",
                    "line_number": 342
                  },
                  {
                    "type": "if",
                    "line_number": 348
                  },
                  {
                    "type": "if",
                    "line_number": 351
                  },
                  {
                    "type": "if",
                    "line_number": 354
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "lowtag",
                  "hightag"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "printf",
                  "for"
                ]
              },
              {
                "name": "Z_FileDumpHeap",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "FILE*",
                    "name": "f"
                  }
                ],
                "start_line": 366,
                "end_line": 392,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "fprintf",
                    "line_number": 370
                  },
                  {
                    "name": "for",
                    "line_number": 372
                  },
                  {
                    "name": "fprintf",
                    "line_number": 374
                  },
                  {
                    "name": "if",
                    "line_number": 377
                  },
                  {
                    "name": "if",
                    "line_number": 383
                  },
                  {
                    "name": "fprintf",
                    "line_number": 384
                  },
                  {
                    "name": "if",
                    "line_number": 386
                  },
                  {
                    "name": "fprintf",
                    "line_number": 387
                  },
                  {
                    "name": "if",
                    "line_number": 389
                  },
                  {
                    "name": "fprintf",
                    "line_number": 390
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 372
                  },
                  {
                    "type": "if",
                    "line_number": 377
                  },
                  {
                    "type": "if",
                    "line_number": 383
                  },
                  {
                    "type": "if",
                    "line_number": 386
                  },
                  {
                    "type": "if",
                    "line_number": 389
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "f"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "if",
                  "for"
                ]
              },
              {
                "name": "Z_CheckHeap",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 399,
                "end_line": 420,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 403
                  },
                  {
                    "name": "if",
                    "line_number": 405
                  },
                  {
                    "name": "if",
                    "line_number": 411
                  },
                  {
                    "name": "I_Error",
                    "line_number": 412
                  },
                  {
                    "name": "if",
                    "line_number": 414
                  },
                  {
                    "name": "I_Error",
                    "line_number": 415
                  },
                  {
                    "name": "if",
                    "line_number": 417
                  },
                  {
                    "name": "I_Error",
                    "line_number": 418
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 403
                  },
                  {
                    "type": "if",
                    "line_number": 405
                  },
                  {
                    "type": "if",
                    "line_number": 411
                  },
                  {
                    "type": "if",
                    "line_number": 414
                  },
                  {
                    "type": "if",
                    "line_number": 417
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "I_Error",
                  "for"
                ]
              },
              {
                "name": "Z_ChangeTag2",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "void*",
                    "name": "ptr"
                  },
                  {
                    "type": "int",
                    "name": "tag"
                  }
                ],
                "start_line": 428,
                "end_line": 441,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "sizeof",
                    "line_number": 432
                  },
                  {
                    "name": "if",
                    "line_number": 434
                  },
                  {
                    "name": "I_Error",
                    "line_number": 435
                  },
                  {
                    "name": "if",
                    "line_number": 437
                  },
                  {
                    "name": "I_Error",
                    "line_number": 438
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 434
                  },
                  {
                    "type": "if",
                    "line_number": 437
                  },
                  {
                    "type": "for",
                    "line_number": 438
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "ptr",
                  "tag"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "I_Error",
                  "sizeof"
                ]
              },
              {
                "name": "Z_FreeMemory",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 451,
                "end_line": 466,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "free",
                    "array_size": null,
                    "line_number": 454
                  },
                  {
                    "type": "return",
                    "name": "free",
                    "array_size": null,
                    "line_number": 465
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 458
                  },
                  {
                    "name": "if",
                    "line_number": 462
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 458
                  },
                  {
                    "type": "if",
                    "line_number": 462
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "if",
                  "for"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "size",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 49
              },
              {
                "name": "blocklist",
                "type": "memblock_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 52
              },
              {
                "name": "size",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 96
              },
              {
                "name": "extra",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 189
              },
              {
                "name": "free",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 454
              },
              {
                "name": "free",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 465
              }
            ],
            "defines": [
              {
                "name": "ZONEID",
                "value": "0x1d4a11",
                "line_number": 43
              },
              {
                "name": "MINFRAGMENT",
                "value": "64",
                "line_number": 180
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/z_zone.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "z_zone.h",
          "type": "file",
          "size": 2486,
          "last_modified": "2024-09-05T16:00:05.776880",
          "path": "linuxdoom-1.10/z_zone.h",
          "readme": "# z_zone.h\n\nThis file contains functionality related to z_zone.",
          "dependencies": [
            "stdio.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "size",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 60
              },
              {
                "name": "tag",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 62
              },
              {
                "name": "id",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 63
              }
            ],
            "defines": [
              {
                "name": "PU_STATIC",
                "value": "1\t// static entire execution time",
                "line_number": 36
              },
              {
                "name": "PU_SOUND",
                "value": "2\t// static while playing",
                "line_number": 37
              },
              {
                "name": "PU_MUSIC",
                "value": "3\t// static while playing",
                "line_number": 38
              },
              {
                "name": "PU_DAVE",
                "value": "4\t// anything else Dave wants static",
                "line_number": 39
              },
              {
                "name": "PU_LEVEL",
                "value": "50\t// static until level exited",
                "line_number": 40
              },
              {
                "name": "PU_LEVSPEC",
                "value": "51      // a special thinker in a level",
                "line_number": 41
              },
              {
                "name": "PU_PURGELEVEL",
                "value": "100",
                "line_number": 43
              },
              {
                "name": "PU_CACHE",
                "value": "101",
                "line_number": 44
              }
            ]
          },
          "source_code_path": "linuxdoom-1.10/z_zone.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        }
      ]
    },
    {
      "name": "sersrc",
      "type": "directory",
      "children": [
        {
          "name": "DOOMNET.C",
          "type": "file",
          "size": 2354,
          "last_modified": "2024-09-05T16:00:05.903951",
          "path": "sersrc/DOOMNET.C",
          "readme": "# DOOMNET.C\n\nThis file contains functionality related to DOOMNET.",
          "dependencies": [
            "ser_frch.h",
            "process.h",
            "string.h",
            "stdio.h",
            "dos.h",
            "doomnet.h",
            "stdlib.h",
            "io.h",
            "serstr.h"
          ],
          "inputs": [
            "void",
            "*check"
          ],
          "outputs": [
            "int"
          ],
          "content": {
            "functions": [
              {
                "name": "CheckParm",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "char",
                    "name": "*check"
                  }
                ],
                "start_line": 35,
                "end_line": 44,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 37
                  },
                  {
                    "type": "return",
                    "name": "i",
                    "array_size": null,
                    "line_number": 41
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 43
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 39
                  },
                  {
                    "name": "if",
                    "line_number": 40
                  },
                  {
                    "name": "stricmp",
                    "line_number": 40
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 39
                  },
                  {
                    "type": "if",
                    "line_number": 40
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "*check"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "stricmp",
                  "if",
                  "for"
                ]
              },
              {
                "name": "LaunchDOOM",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 65,
                "end_line": 124,
                "local_variables": [
                  {
                    "type": "char",
                    "name": "adrstring",
                    "array_size": "10",
                    "line_number": 68
                  },
                  {
                    "type": "long",
                    "name": "flatadr",
                    "array_size": null,
                    "line_number": 69
                  },
                  {
                    "type": "int",
                    "name": "p",
                    "array_size": null,
                    "line_number": 70
                  }
                ],
                "function_calls": [
                  {
                    "name": "CheckParm",
                    "line_number": 77
                  },
                  {
                    "name": "if",
                    "line_number": 79
                  },
                  {
                    "name": "sscanf",
                    "line_number": 81
                  },
                  {
                    "name": "for",
                    "line_number": 85
                  },
                  {
                    "name": "if",
                    "line_number": 88
                  },
                  {
                    "name": "if",
                    "line_number": 91
                  },
                  {
                    "name": "printf",
                    "line_number": 93
                  },
                  {
                    "name": "printf",
                    "line_number": 97
                  },
                  {
                    "name": "getvect",
                    "line_number": 99
                  },
                  {
                    "name": "setvect",
                    "line_number": 100
                  },
                  {
                    "name": "memcpy",
                    "line_number": 104
                  },
                  {
                    "name": "sprintf",
                    "line_number": 107
                  },
                  {
                    "name": "spawnv",
                    "line_number": 111
                  },
                  {
                    "name": "if",
                    "line_number": 112
                  },
                  {
                    "name": "access",
                    "line_number": 112
                  },
                  {
                    "name": "spawnv",
                    "line_number": 113
                  },
                  {
                    "name": "spawnv",
                    "line_number": 115
                  },
                  {
                    "name": "printf",
                    "line_number": 118
                  },
                  {
                    "name": "printf",
                    "line_number": 120
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 73
                  },
                  {
                    "type": "if",
                    "line_number": 79
                  },
                  {
                    "type": "else",
                    "line_number": 83
                  },
                  {
                    "type": "for",
                    "line_number": 85
                  },
                  {
                    "type": "if",
                    "line_number": 88
                  },
                  {
                    "type": "if",
                    "line_number": 91
                  },
                  {
                    "type": "for",
                    "line_number": 103
                  },
                  {
                    "type": "if",
                    "line_number": 112
                  },
                  {
                    "type": "else",
                    "line_number": 114
                  },
                  {
                    "type": "else",
                    "line_number": 119
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "setvect",
                  "for",
                  "if",
                  "CheckParm",
                  "sscanf",
                  "printf",
                  "memcpy",
                  "sprintf",
                  "spawnv",
                  "getvect",
                  "access"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "myargc",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 14
              },
              {
                "name": "doomcom",
                "type": "doomcom_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 17
              },
              {
                "name": "vectorishooked",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 18
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 37
              },
              {
                "name": "i",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 41
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 43
              },
              {
                "name": "numnodes",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 54
              },
              {
                "name": "ticdup",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 55
              },
              {
                "name": "extratics",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 56
              },
              {
                "name": "consoleplayer",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 58
              },
              {
                "name": "numplayers",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 59
              },
              {
                "name": "angleoffset",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 60
              },
              {
                "name": "drone",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 61
              },
              {
                "name": "adrstring",
                "type": "char",
                "storage_class": null,
                "array_size": "10",
                "line_number": 68
              },
              {
                "name": "flatadr",
                "type": "long",
                "storage_class": null,
                "array_size": null,
                "line_number": 69
              },
              {
                "name": "p",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 70
              }
            ],
            "defines": []
          },
          "source_code_path": "sersrc/DOOMNET.C",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "DOOMNET.H",
          "type": "file",
          "size": 1458,
          "last_modified": "2024-09-05T16:00:05.927948",
          "path": "sersrc/DOOMNET.H",
          "readme": "# DOOMNET.H\n\nThis file contains functionality related to DOOMNET.",
          "dependencies": [],
          "inputs": [
            "r",
            "g",
            "b"
          ],
          "outputs": [
            "define"
          ],
          "content": {
            "functions": [
              {
                "name": "I_ColorBlack",
                "return_type": "define",
                "parameters": [
                  {
                    "type": "",
                    "name": "r"
                  },
                  {
                    "type": "",
                    "name": "g"
                  },
                  {
                    "type": "",
                    "name": "b"
                  }
                ],
                "start_line": 7,
                "end_line": 8,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "outp",
                    "line_number": 8
                  },
                  {
                    "name": "outp",
                    "line_number": 8
                  },
                  {
                    "name": "outp",
                    "line_number": 8
                  },
                  {
                    "name": "outp",
                    "line_number": 8
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "r",
                  "g",
                  "b"
                ],
                "outputs": [
                  "define"
                ],
                "dependencies": [
                  "outp"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "id",
                "type": "long",
                "storage_class": null,
                "array_size": null,
                "line_number": 23
              },
              {
                "name": "intnum",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 24
              },
              {
                "name": "command",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 27
              },
              {
                "name": "remotenode",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 28
              },
              {
                "name": "datalength",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 29
              },
              {
                "name": "numnodes",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 32
              },
              {
                "name": "ticdup",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 33
              },
              {
                "name": "extratics",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 34
              },
              {
                "name": "deathmatch",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 35
              },
              {
                "name": "savegame",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 36
              },
              {
                "name": "episode",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 37
              },
              {
                "name": "map",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 38
              },
              {
                "name": "skill",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 39
              },
              {
                "name": "consoleplayer",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 42
              },
              {
                "name": "numplayers",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 43
              },
              {
                "name": "angleoffset",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 44
              },
              {
                "name": "drone",
                "type": "short",
                "storage_class": null,
                "array_size": null,
                "line_number": 45
              },
              {
                "name": "data",
                "type": "char",
                "storage_class": null,
                "array_size": "512",
                "line_number": 48
              },
              {
                "name": "doomcom",
                "type": "doomcom_t",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 53
              },
              {
                "name": "vectorishooked",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 55
              }
            ],
            "defines": [
              {
                "name": "PEL_WRITE_ADR",
                "value": "0x3c8",
                "line_number": 4
              },
              {
                "name": "PEL_DATA",
                "value": "0x3c9",
                "line_number": 5
              },
              {
                "name": "MAXNETNODES",
                "value": "8\t\t\t// max computers in a game",
                "line_number": 12
              },
              {
                "name": "MAXPLAYERS",
                "value": "4\t\t\t// 4 players max + drones",
                "line_number": 13
              },
              {
                "name": "CMD_SEND",
                "value": "1",
                "line_number": 16
              },
              {
                "name": "CMD_GET",
                "value": "2",
                "line_number": 17
              },
              {
                "name": "DOOMCOM_ID",
                "value": "0x12345678l",
                "line_number": 19
              }
            ]
          },
          "source_code_path": "sersrc/DOOMNET.H",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "PORT.C",
          "type": "file",
          "size": 6911,
          "last_modified": "2024-09-05T16:00:05.954060",
          "path": "sersrc/PORT.C",
          "readme": "# PORT.C\n\nThis file contains functionality related to PORT.",
          "dependencies": [
            "serstr.h",
            "ser_frch.h",
            "doomnet.h",
            "sersetup.h"
          ],
          "inputs": [
            "void",
            "c"
          ],
          "outputs": [
            "int",
            "void interrupt"
          ],
          "content": {
            "functions": [
              {
                "name": "GetUart",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 43,
                "end_line": 90,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "p",
                    "array_size": null,
                    "line_number": 50
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 52
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 52
                  },
                  {
                    "name": "if",
                    "line_number": 54
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 54
                  },
                  {
                    "name": "if",
                    "line_number": 56
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 56
                  },
                  {
                    "name": "int86x",
                    "line_number": 62
                  },
                  {
                    "name": "if",
                    "line_number": 63
                  },
                  {
                    "name": "if",
                    "line_number": 70
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 81
                  },
                  {
                    "name": "if",
                    "line_number": 82
                  },
                  {
                    "name": "sscanf",
                    "line_number": 83
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 84
                  },
                  {
                    "name": "if",
                    "line_number": 85
                  },
                  {
                    "name": "sscanf",
                    "line_number": 86
                  },
                  {
                    "name": "printf",
                    "line_number": 89
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 52
                  },
                  {
                    "type": "if",
                    "line_number": 54
                  },
                  {
                    "type": "if",
                    "line_number": 56
                  },
                  {
                    "type": "else",
                    "line_number": 58
                  },
                  {
                    "type": "if",
                    "line_number": 63
                  },
                  {
                    "type": "if",
                    "line_number": 70
                  },
                  {
                    "type": "else",
                    "line_number": 75
                  },
                  {
                    "type": "if",
                    "line_number": 82
                  },
                  {
                    "type": "if",
                    "line_number": 85
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "CheckParm",
                  "if",
                  "sscanf",
                  "int86x",
                  "printf"
                ]
              },
              {
                "name": "InitPort",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 103,
                "end_line": 222,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "mcr",
                    "array_size": null,
                    "line_number": 105
                  },
                  {
                    "type": "int",
                    "name": "temp",
                    "array_size": null,
                    "line_number": 106
                  },
                  {
                    "type": "int",
                    "name": "u",
                    "array_size": null,
                    "line_number": 107
                  }
                ],
                "function_calls": [
                  {
                    "name": "GetUart",
                    "line_number": 112
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 117
                  },
                  {
                    "name": "printf",
                    "line_number": 123
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 126
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 127
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 128
                  },
                  {
                    "name": "register",
                    "line_number": 130
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 131
                  },
                  {
                    "name": "register",
                    "line_number": 133
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 134
                  },
                  {
                    "name": "if",
                    "line_number": 139
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 139
                  },
                  {
                    "name": "printf",
                    "line_number": 143
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 147
                  },
                  {
                    "name": "INPUT",
                    "line_number": 149
                  },
                  {
                    "name": "if",
                    "line_number": 150
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 157
                  },
                  {
                    "name": "printf",
                    "line_number": 164
                  },
                  {
                    "name": "for",
                    "line_number": 165
                  },
                  {
                    "name": "INPUT",
                    "line_number": 166
                  },
                  {
                    "name": "switch",
                    "line_number": 170
                  },
                  {
                    "name": "INPUT",
                    "line_number": 170
                  },
                  {
                    "name": "INPUT",
                    "line_number": 173
                  },
                  {
                    "name": "INPUT",
                    "line_number": 177
                  },
                  {
                    "name": "INPUT",
                    "line_number": 184
                  },
                  {
                    "name": "while",
                    "line_number": 187
                  },
                  {
                    "name": "getvect",
                    "line_number": 195
                  },
                  {
                    "name": "if",
                    "line_number": 196
                  },
                  {
                    "name": "setvect",
                    "line_number": 198
                  },
                  {
                    "name": "printf",
                    "line_number": 199
                  },
                  {
                    "name": "setvect",
                    "line_number": 203
                  },
                  {
                    "name": "printf",
                    "line_number": 204
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 209
                  },
                  {
                    "name": "INPUT",
                    "line_number": 209
                  },
                  {
                    "name": "CLI",
                    "line_number": 211
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 215
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 219
                  },
                  {
                    "name": "STI",
                    "line_number": 221
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 137
                  },
                  {
                    "type": "if",
                    "line_number": 139
                  },
                  {
                    "type": "else",
                    "line_number": 145
                  },
                  {
                    "type": "if",
                    "line_number": 150
                  },
                  {
                    "type": "else",
                    "line_number": 154
                  },
                  {
                    "type": "for",
                    "line_number": 165
                  },
                  {
                    "type": "while",
                    "line_number": 187
                  },
                  {
                    "type": "if",
                    "line_number": 196
                  },
                  {
                    "type": "else",
                    "line_number": 201
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "setvect",
                  "while",
                  "if",
                  "CheckParm",
                  "for",
                  "register",
                  "CLI",
                  "OUTPUT",
                  "GetUart",
                  "INPUT",
                  "printf",
                  "STI",
                  "switch",
                  "getvect"
                ]
              },
              {
                "name": "ShutdownPort",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 233,
                "end_line": 253,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "u",
                    "array_size": null,
                    "line_number": 235
                  }
                ],
                "function_calls": [
                  {
                    "name": "OUTPUT",
                    "line_number": 237
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 238
                  },
                  {
                    "name": "for",
                    "line_number": 240
                  },
                  {
                    "name": "INPUT",
                    "line_number": 241
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 243
                  },
                  {
                    "name": "INPUT",
                    "line_number": 243
                  },
                  {
                    "name": "setvect",
                    "line_number": 245
                  },
                  {
                    "name": "int86",
                    "line_number": 252
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 240
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "setvect",
                  "for",
                  "OUTPUT",
                  "INPUT",
                  "int86"
                ]
              },
              {
                "name": "read_byte",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 256,
                "end_line": 265,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 258
                  },
                  {
                    "type": "return",
                    "name": "c",
                    "array_size": null,
                    "line_number": 264
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 260
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 260
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "write_byte",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "c"
                  }
                ],
                "start_line": 268,
                "end_line": 272,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "c"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "isr_8250",
                "return_type": "void interrupt",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 287,
                "end_line": 337,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 289
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 291
                  },
                  {
                    "name": "switch",
                    "line_number": 293
                  },
                  {
                    "name": "INPUT",
                    "line_number": 293
                  },
                  {
                    "name": "INPUT",
                    "line_number": 297
                  },
                  {
                    "name": "INPUT",
                    "line_number": 302
                  },
                  {
                    "name": "I_ColorBlack",
                    "line_number": 309
                  },
                  {
                    "name": "if",
                    "line_number": 310
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 314
                  },
                  {
                    "name": "I_ColorBlack",
                    "line_number": 322
                  },
                  {
                    "name": "INPUT",
                    "line_number": 323
                  },
                  {
                    "name": "I_ColorBlack",
                    "line_number": 332
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 333
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 291
                  },
                  {
                    "type": "if",
                    "line_number": 310
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "void interrupt"
                ],
                "dependencies": [
                  "while",
                  "if",
                  "I_ColorBlack",
                  "OUTPUT",
                  "INPUT",
                  "switch"
                ]
              },
              {
                "name": "isr_16550",
                "return_type": "void interrupt",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 348,
                "end_line": 404,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 350
                  },
                  {
                    "type": "int",
                    "name": "count",
                    "array_size": null,
                    "line_number": 351
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 353
                  },
                  {
                    "name": "switch",
                    "line_number": 355
                  },
                  {
                    "name": "INPUT",
                    "line_number": 355
                  },
                  {
                    "name": "INPUT",
                    "line_number": 359
                  },
                  {
                    "name": "INPUT",
                    "line_number": 364
                  },
                  {
                    "name": "I_ColorBlack",
                    "line_number": 371
                  },
                  {
                    "name": "while",
                    "line_number": 373
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 377
                  },
                  {
                    "name": "I_ColorBlack",
                    "line_number": 385
                  },
                  {
                    "name": "INPUT",
                    "line_number": 388
                  },
                  {
                    "name": "while",
                    "line_number": 391
                  },
                  {
                    "name": "INPUT",
                    "line_number": 391
                  },
                  {
                    "name": "I_ColorBlack",
                    "line_number": 399
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 400
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 353
                  },
                  {
                    "type": "while",
                    "line_number": 373
                  },
                  {
                    "type": "while",
                    "line_number": 391
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "void interrupt"
                ],
                "dependencies": [
                  "while",
                  "I_ColorBlack",
                  "OUTPUT",
                  "INPUT",
                  "switch"
                ]
              },
              {
                "name": "jump_start",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 416,
                "end_line": 426,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 418
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 420
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 424
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 420
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "OUTPUT",
                  "if"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "regs",
                "type": "union\tREGS",
                "storage_class": null,
                "array_size": null,
                "line_number": 14
              },
              {
                "name": "sregs",
                "type": "struct\tSREGS",
                "storage_class": null,
                "array_size": null,
                "line_number": 15
              },
              {
                "name": "uart",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 20
              },
              {
                "name": "irq",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 22
              },
              {
                "name": "irqintnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 28
              },
              {
                "name": "comport",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 30
              },
              {
                "name": "baudbits",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 32
              },
              {
                "name": "p",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 50
              },
              {
                "name": "mcr",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 105
              },
              {
                "name": "temp",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 106
              },
              {
                "name": "u",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 107
              },
              {
                "name": "u",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 235
              },
              {
                "name": "c",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 258
              },
              {
                "name": "c",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 264
              },
              {
                "name": "c",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 289
              },
              {
                "name": "c",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 350
              },
              {
                "name": "count",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 351
              },
              {
                "name": "c",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 418
              }
            ],
            "defines": []
          },
          "source_code_path": "sersrc/PORT.C",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "SERSETUP.C",
          "type": "file",
          "size": 10894,
          "last_modified": "2024-09-05T16:00:06.013056",
          "path": "sersrc/SERSETUP.C",
          "readme": "# SERSETUP.C\n\nThis file contains functionality related to SERSETUP.",
          "dependencies": [
            "serstr.h",
            "ser_frch.h",
            "DoomNet.h",
            "sersetup.h"
          ],
          "inputs": [
            "c==FRAMECHAR",
            "*dest",
            "count",
            "*resp",
            "*f",
            "...",
            "*error",
            "*buffer",
            "void",
            "*string",
            "CMD_GET",
            "len",
            "*str"
          ],
          "outputs": [
            "boolean",
            "void interrupt",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "I_Error",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char",
                    "name": "*string"
                  }
                ],
                "start_line": 28,
                "end_line": 32,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "printf",
                    "line_number": 30
                  },
                  {
                    "name": "exit",
                    "line_number": 31
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "*string"
                ],
                "outputs": [],
                "dependencies": [
                  "exit",
                  "printf"
                ]
              },
              {
                "name": "write_buffer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char",
                    "name": "*buffer"
                  },
                  {
                    "type": "unsigned int",
                    "name": "count"
                  }
                ],
                "start_line": 42,
                "end_line": 55,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 44
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 47
                  },
                  {
                    "name": "while",
                    "line_number": 50
                  },
                  {
                    "name": "write_byte",
                    "line_number": 51
                  },
                  {
                    "name": "if",
                    "line_number": 53
                  },
                  {
                    "name": "INPUT",
                    "line_number": 53
                  },
                  {
                    "name": "jump_start",
                    "line_number": 54
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 46
                  },
                  {
                    "type": "if",
                    "line_number": 47
                  },
                  {
                    "type": "while",
                    "line_number": 50
                  },
                  {
                    "type": "if",
                    "line_number": 53
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "*buffer",
                  "count"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "if",
                  "write_byte",
                  "INPUT",
                  "jump_start"
                ]
              },
              {
                "name": "Error",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char",
                    "name": "*error"
                  },
                  {
                    "type": "",
                    "name": "..."
                  }
                ],
                "start_line": 68,
                "end_line": 103,
                "local_variables": [
                  {
                    "type": "va_list",
                    "name": "argptr",
                    "array_size": null,
                    "line_number": 70
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 72
                  },
                  {
                    "name": "printf",
                    "line_number": 74
                  },
                  {
                    "name": "printf",
                    "line_number": 75
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 77
                  },
                  {
                    "name": "INPUT",
                    "line_number": 77
                  },
                  {
                    "name": "delay",
                    "line_number": 78
                  },
                  {
                    "name": "OUTPUT",
                    "line_number": 79
                  },
                  {
                    "name": "INPUT",
                    "line_number": 79
                  },
                  {
                    "name": "ModemCommand",
                    "line_number": 80
                  },
                  {
                    "name": "delay",
                    "line_number": 81
                  },
                  {
                    "name": "ModemCommand",
                    "line_number": 82
                  },
                  {
                    "name": "delay",
                    "line_number": 83
                  },
                  {
                    "name": "ShutdownPort",
                    "line_number": 87
                  },
                  {
                    "name": "if",
                    "line_number": 89
                  },
                  {
                    "name": "setvect",
                    "line_number": 90
                  },
                  {
                    "name": "if",
                    "line_number": 92
                  },
                  {
                    "name": "va_start",
                    "line_number": 94
                  },
                  {
                    "name": "vprintf",
                    "line_number": 95
                  },
                  {
                    "name": "va_end",
                    "line_number": 96
                  },
                  {
                    "name": "printf",
                    "line_number": 97
                  },
                  {
                    "name": "exit",
                    "line_number": 98
                  },
                  {
                    "name": "printf",
                    "line_number": 101
                  },
                  {
                    "name": "exit",
                    "line_number": 102
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 72
                  },
                  {
                    "type": "if",
                    "line_number": 89
                  },
                  {
                    "type": "if",
                    "line_number": 92
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "*error",
                  "..."
                ],
                "outputs": [],
                "dependencies": [
                  "setvect",
                  "exit",
                  "if",
                  "vprintf",
                  "delay",
                  "ShutdownPort",
                  "OUTPUT",
                  "INPUT",
                  "printf",
                  "va_start",
                  "va_end",
                  "ModemCommand"
                ]
              },
              {
                "name": "ReadPacket",
                "return_type": "boolean",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 122,
                "end_line": 168,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 124
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 132
                  },
                  {
                    "type": "return",
                    "name": "false",
                    "array_size": null,
                    "line_number": 145
                  },
                  {
                    "type": "return",
                    "name": "true",
                    "array_size": null,
                    "line_number": 153
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 128
                  },
                  {
                    "name": "if",
                    "line_number": 135
                  },
                  {
                    "name": "read_byte",
                    "line_number": 143
                  },
                  {
                    "name": "if",
                    "line_number": 144
                  },
                  {
                    "name": "printf",
                    "line_number": 146
                  },
                  {
                    "name": "if",
                    "line_number": 147
                  },
                  {
                    "name": "if",
                    "line_number": 150
                  },
                  {
                    "name": "if",
                    "line_number": 156
                  },
                  {
                    "name": "if",
                    "line_number": 162
                  },
                  {
                    "name": "while",
                    "line_number": 166
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 126
                  },
                  {
                    "type": "if",
                    "line_number": 128
                  },
                  {
                    "type": "if",
                    "line_number": 135
                  },
                  {
                    "type": "if",
                    "line_number": 144
                  },
                  {
                    "type": "if",
                    "line_number": 147
                  },
                  {
                    "type": "if",
                    "line_number": 150
                  },
                  {
                    "type": "if",
                    "line_number": 156
                  },
                  {
                    "type": "if",
                    "line_number": 159
                  },
                  {
                    "type": "if",
                    "line_number": 162
                  },
                  {
                    "type": "while",
                    "line_number": 166
                  }
                ],
                "complexity": 7,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "boolean"
                ],
                "dependencies": [
                  "while",
                  "read_byte",
                  "printf",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "",
                    "name": "c==FRAMECHAR"
                  }
                ],
                "start_line": 156,
                "end_line": 160,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 159
                  }
                ],
                "complexity": 1,
                "inputs": [
                  "c==FRAMECHAR"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": []
              },
              {
                "name": "WritePacket",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char",
                    "name": "*buffer"
                  },
                  {
                    "type": "int",
                    "name": "len"
                  }
                ],
                "start_line": 181,
                "end_line": 201,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "b",
                    "array_size": null,
                    "line_number": 183
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 187
                  },
                  {
                    "name": "while",
                    "line_number": 190
                  },
                  {
                    "name": "if",
                    "line_number": 192
                  },
                  {
                    "name": "write_buffer",
                    "line_number": 200
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 187
                  },
                  {
                    "type": "while",
                    "line_number": 190
                  },
                  {
                    "type": "if",
                    "line_number": 192
                  },
                  {
                    "type": "for",
                    "line_number": 193
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "*buffer",
                  "len"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "write_buffer",
                  "if"
                ]
              },
              {
                "name": "NetISR",
                "return_type": "void interrupt",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 212,
                "end_line": 234,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 214
                  },
                  {
                    "name": "I_ColorBlack",
                    "line_number": 216
                  },
                  {
                    "name": "WritePacket",
                    "line_number": 217
                  },
                  {
                    "name": "if",
                    "line_number": 219
                  },
                  {
                    "name": "I_ColorBlack",
                    "line_number": 221
                  },
                  {
                    "name": "if",
                    "line_number": 223
                  },
                  {
                    "name": "ReadPacket",
                    "line_number": 223
                  },
                  {
                    "name": "sizeof",
                    "line_number": 223
                  },
                  {
                    "name": "memcpy",
                    "line_number": 227
                  },
                  {
                    "name": "I_ColorBlack",
                    "line_number": 233
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 214
                  },
                  {
                    "type": "if",
                    "line_number": 219
                  },
                  {
                    "type": "if",
                    "line_number": 223
                  },
                  {
                    "type": "else",
                    "line_number": 229
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "void interrupt"
                ],
                "dependencies": [
                  "if",
                  "ReadPacket",
                  "I_ColorBlack",
                  "sizeof",
                  "memcpy",
                  "WritePacket"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "doomcom.command ==",
                    "name": "CMD_GET"
                  }
                ],
                "start_line": 219,
                "end_line": 232,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "I_ColorBlack",
                    "line_number": 221
                  },
                  {
                    "name": "if",
                    "line_number": 223
                  },
                  {
                    "name": "ReadPacket",
                    "line_number": 223
                  },
                  {
                    "name": "sizeof",
                    "line_number": 223
                  },
                  {
                    "name": "memcpy",
                    "line_number": 227
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 223
                  },
                  {
                    "type": "else",
                    "line_number": 229
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "CMD_GET"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "if",
                  "ReadPacket",
                  "I_ColorBlack",
                  "sizeof",
                  "memcpy"
                ]
              },
              {
                "name": "Connect",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 248,
                "end_line": 355,
                "local_variables": [
                  {
                    "type": "struct time",
                    "name": "time",
                    "array_size": null,
                    "line_number": 250
                  },
                  {
                    "type": "int",
                    "name": "oldsec",
                    "array_size": null,
                    "line_number": 251
                  },
                  {
                    "type": "char",
                    "name": "str",
                    "array_size": "20",
                    "line_number": 253
                  },
                  {
                    "type": "char",
                    "name": "idstr",
                    "array_size": "7",
                    "line_number": 254
                  },
                  {
                    "type": "char",
                    "name": "remoteidstr",
                    "array_size": "7",
                    "line_number": 255
                  },
                  {
                    "type": "unsigned long",
                    "name": "idnum",
                    "array_size": null,
                    "line_number": 256
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 257
                  }
                ],
                "function_calls": [
                  {
                    "name": "printf",
                    "line_number": 262
                  },
                  {
                    "name": "a",
                    "line_number": 265
                  },
                  {
                    "name": "if",
                    "line_number": 268
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 268
                  },
                  {
                    "name": "if",
                    "line_number": 270
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 270
                  },
                  {
                    "name": "gettime",
                    "line_number": 274
                  },
                  {
                    "name": "for",
                    "line_number": 276
                  },
                  {
                    "name": "while",
                    "line_number": 307
                  },
                  {
                    "name": "bioskey",
                    "line_number": 307
                  },
                  {
                    "name": "if",
                    "line_number": 309
                  },
                  {
                    "name": "bioskey",
                    "line_number": 309
                  },
                  {
                    "name": "Error",
                    "line_number": 310
                  },
                  {
                    "name": "if",
                    "line_number": 313
                  },
                  {
                    "name": "ReadPacket",
                    "line_number": 313
                  },
                  {
                    "name": "printf",
                    "line_number": 316
                  },
                  {
                    "name": "if",
                    "line_number": 317
                  },
                  {
                    "name": "if",
                    "line_number": 319
                  },
                  {
                    "name": "strncmp",
                    "line_number": 319
                  },
                  {
                    "name": "if",
                    "line_number": 321
                  },
                  {
                    "name": "strncmp",
                    "line_number": 321
                  },
                  {
                    "name": "Error",
                    "line_number": 322
                  },
                  {
                    "name": "strncpy",
                    "line_number": 323
                  },
                  {
                    "name": "gettime",
                    "line_number": 330
                  },
                  {
                    "name": "if",
                    "line_number": 331
                  },
                  {
                    "name": "sprintf",
                    "line_number": 334
                  },
                  {
                    "name": "WritePacket",
                    "line_number": 335
                  },
                  {
                    "name": "strlen",
                    "line_number": 335
                  },
                  {
                    "name": "printf",
                    "line_number": 336
                  },
                  {
                    "name": "while",
                    "line_number": 339
                  },
                  {
                    "name": "if",
                    "line_number": 344
                  },
                  {
                    "name": "strcmp",
                    "line_number": 344
                  },
                  {
                    "name": "while",
                    "line_number": 353
                  },
                  {
                    "name": "ReadPacket",
                    "line_number": 353
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 260
                  },
                  {
                    "type": "if",
                    "line_number": 268
                  },
                  {
                    "type": "if",
                    "line_number": 270
                  },
                  {
                    "type": "else",
                    "line_number": 272
                  },
                  {
                    "type": "for",
                    "line_number": 276
                  },
                  {
                    "type": "while",
                    "line_number": 307
                  },
                  {
                    "type": "if",
                    "line_number": 309
                  },
                  {
                    "type": "if",
                    "line_number": 313
                  },
                  {
                    "type": "if",
                    "line_number": 317
                  },
                  {
                    "type": "if",
                    "line_number": 319
                  },
                  {
                    "type": "if",
                    "line_number": 321
                  },
                  {
                    "type": "if",
                    "line_number": 331
                  },
                  {
                    "type": "while",
                    "line_number": 339
                  },
                  {
                    "type": "if",
                    "line_number": 344
                  },
                  {
                    "type": "else",
                    "line_number": 346
                  },
                  {
                    "type": "while",
                    "line_number": 353
                  }
                ],
                "complexity": 12,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "strlen",
                  "a",
                  "strncpy",
                  "WritePacket",
                  "CheckParm",
                  "if",
                  "for",
                  "bioskey",
                  "ReadPacket",
                  "strcmp",
                  "gettime",
                  "printf",
                  "strncmp",
                  "sprintf",
                  "Error"
                ]
              },
              {
                "name": "ModemCommand",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char",
                    "name": "*str"
                  }
                ],
                "start_line": 367,
                "end_line": 382,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "printf",
                    "line_number": 371
                  },
                  {
                    "name": "strlen",
                    "line_number": 372
                  },
                  {
                    "name": "for",
                    "line_number": 373
                  },
                  {
                    "name": "write_buffer",
                    "line_number": 375
                  },
                  {
                    "name": "printf",
                    "line_number": 376
                  },
                  {
                    "name": "delay",
                    "line_number": 377
                  },
                  {
                    "name": "write_buffer",
                    "line_number": 380
                  },
                  {
                    "name": "printf",
                    "line_number": 381
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 373
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "*str"
                ],
                "outputs": [],
                "dependencies": [
                  "strlen",
                  "write_buffer",
                  "for",
                  "delay",
                  "printf"
                ]
              },
              {
                "name": "ModemResponse",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char",
                    "name": "*resp"
                  }
                ],
                "start_line": 396,
                "end_line": 429,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 398
                  },
                  {
                    "type": "int",
                    "name": "respptr",
                    "array_size": null,
                    "line_number": 399
                  }
                ],
                "function_calls": [
                  {
                    "name": "printf",
                    "line_number": 403
                  },
                  {
                    "name": "while",
                    "line_number": 407
                  },
                  {
                    "name": "bioskey",
                    "line_number": 407
                  },
                  {
                    "name": "if",
                    "line_number": 409
                  },
                  {
                    "name": "bioskey",
                    "line_number": 409
                  },
                  {
                    "name": "Error",
                    "line_number": 410
                  },
                  {
                    "name": "read_byte",
                    "line_number": 412
                  },
                  {
                    "name": "if",
                    "line_number": 413
                  },
                  {
                    "name": "if",
                    "line_number": 415
                  },
                  {
                    "name": "printf",
                    "line_number": 418
                  },
                  {
                    "name": "if",
                    "line_number": 421
                  },
                  {
                    "name": "while",
                    "line_number": 426
                  },
                  {
                    "name": "while",
                    "line_number": 428
                  },
                  {
                    "name": "strncmp",
                    "line_number": 428
                  },
                  {
                    "name": "strlen",
                    "line_number": 428
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 407
                  },
                  {
                    "type": "if",
                    "line_number": 409
                  },
                  {
                    "type": "if",
                    "line_number": 413
                  },
                  {
                    "type": "if",
                    "line_number": 415
                  },
                  {
                    "type": "if",
                    "line_number": 421
                  },
                  {
                    "type": "while",
                    "line_number": 426
                  },
                  {
                    "type": "while",
                    "line_number": 428
                  }
                ],
                "complexity": 6,
                "inputs": [
                  "*resp"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "strlen",
                  "read_byte",
                  "if",
                  "bioskey",
                  "printf",
                  "strncmp",
                  "Error"
                ]
              },
              {
                "name": "ReadLine",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "FILE",
                    "name": "*f"
                  },
                  {
                    "type": "char",
                    "name": "*dest"
                  }
                ],
                "start_line": 440,
                "end_line": 452,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "c",
                    "array_size": null,
                    "line_number": 442
                  }
                ],
                "function_calls": [
                  {
                    "name": "fgetc",
                    "line_number": 446
                  },
                  {
                    "name": "if",
                    "line_number": 447
                  },
                  {
                    "name": "while",
                    "line_number": 450
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 447
                  },
                  {
                    "type": "while",
                    "line_number": 450
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "*f",
                  "*dest"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "if",
                  "fgetc"
                ]
              },
              {
                "name": "ReadModemCfg",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 463,
                "end_line": 482,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "mcr",
                    "array_size": null,
                    "line_number": 465
                  },
                  {
                    "type": "unsigned",
                    "name": "baud",
                    "array_size": null,
                    "line_number": 467
                  }
                ],
                "function_calls": [
                  {
                    "name": "fopen",
                    "line_number": 469
                  },
                  {
                    "name": "if",
                    "line_number": 470
                  },
                  {
                    "name": "Error",
                    "line_number": 471
                  },
                  {
                    "name": "ReadLine",
                    "line_number": 472
                  },
                  {
                    "name": "ReadLine",
                    "line_number": 473
                  },
                  {
                    "name": "ReadLine",
                    "line_number": 474
                  },
                  {
                    "name": "fclose",
                    "line_number": 475
                  },
                  {
                    "name": "atol",
                    "line_number": 477
                  },
                  {
                    "name": "if",
                    "line_number": 478
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 470
                  },
                  {
                    "type": "if",
                    "line_number": 478
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "if",
                  "fopen",
                  "fclose",
                  "ReadLine",
                  "atol",
                  "Error"
                ]
              },
              {
                "name": "Dial",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 493,
                "end_line": 508,
                "local_variables": [
                  {
                    "type": "char",
                    "name": "cmd",
                    "array_size": "80",
                    "line_number": 495
                  },
                  {
                    "type": "int",
                    "name": "p",
                    "array_size": null,
                    "line_number": 496
                  }
                ],
                "function_calls": [
                  {
                    "name": "ModemCommand",
                    "line_number": 498
                  },
                  {
                    "name": "ModemResponse",
                    "line_number": 499
                  },
                  {
                    "name": "printf",
                    "line_number": 501
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 502
                  },
                  {
                    "name": "sprintf",
                    "line_number": 503
                  },
                  {
                    "name": "ModemCommand",
                    "line_number": 505
                  },
                  {
                    "name": "ModemResponse",
                    "line_number": 506
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "CheckParm",
                  "ModemResponse",
                  "printf",
                  "sprintf",
                  "ModemCommand"
                ]
              },
              {
                "name": "Answer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 519,
                "end_line": 530,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "ModemCommand",
                    "line_number": 521
                  },
                  {
                    "name": "ModemResponse",
                    "line_number": 522
                  },
                  {
                    "name": "printf",
                    "line_number": 523
                  },
                  {
                    "name": "ModemResponse",
                    "line_number": 525
                  },
                  {
                    "name": "ModemCommand",
                    "line_number": 526
                  },
                  {
                    "name": "ModemResponse",
                    "line_number": 527
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "ModemResponse",
                  "printf",
                  "ModemCommand"
                ]
              },
              {
                "name": "FindResponseFile",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 537,
                "end_line": 602,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 539
                  },
                  {
                    "type": "int",
                    "name": "size",
                    "array_size": null,
                    "line_number": 546
                  },
                  {
                    "type": "int",
                    "name": "k",
                    "array_size": null,
                    "line_number": 547
                  },
                  {
                    "type": "int",
                    "name": "index",
                    "array_size": null,
                    "line_number": 548
                  },
                  {
                    "type": "int",
                    "name": "indexinfile",
                    "array_size": null,
                    "line_number": 549
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 542
                  },
                  {
                    "name": "if",
                    "line_number": 543
                  },
                  {
                    "name": "fopen",
                    "line_number": 556
                  },
                  {
                    "name": "if",
                    "line_number": 557
                  },
                  {
                    "name": "I_Error",
                    "line_number": 558
                  },
                  {
                    "name": "printf",
                    "line_number": 559
                  },
                  {
                    "name": "strupr",
                    "line_number": 559
                  },
                  {
                    "name": "fseek",
                    "line_number": 560
                  },
                  {
                    "name": "ftell",
                    "line_number": 561
                  },
                  {
                    "name": "fseek",
                    "line_number": 562
                  },
                  {
                    "name": "malloc",
                    "line_number": 563
                  },
                  {
                    "name": "fread",
                    "line_number": 564
                  },
                  {
                    "name": "fclose",
                    "line_number": 565
                  },
                  {
                    "name": "for",
                    "line_number": 568
                  },
                  {
                    "name": "malloc",
                    "line_number": 572
                  },
                  {
                    "name": "sizeof",
                    "line_number": 572
                  },
                  {
                    "name": "memset",
                    "line_number": 573
                  },
                  {
                    "name": "sizeof",
                    "line_number": 573
                  },
                  {
                    "name": "while",
                    "line_number": 582
                  },
                  {
                    "name": "while",
                    "line_number": 586
                  },
                  {
                    "name": "while",
                    "line_number": 589
                  },
                  {
                    "name": "for",
                    "line_number": 591
                  },
                  {
                    "name": "printf",
                    "line_number": 596
                  },
                  {
                    "name": "for",
                    "line_number": 597
                  },
                  {
                    "name": "printf",
                    "line_number": 598
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 542
                  },
                  {
                    "type": "if",
                    "line_number": 543
                  },
                  {
                    "type": "if",
                    "line_number": 557
                  },
                  {
                    "type": "for",
                    "line_number": 568
                  },
                  {
                    "type": "while",
                    "line_number": 582
                  },
                  {
                    "type": "while",
                    "line_number": 586
                  },
                  {
                    "type": "while",
                    "line_number": 589
                  },
                  {
                    "type": "for",
                    "line_number": 591
                  },
                  {
                    "type": "for",
                    "line_number": 597
                  }
                ],
                "complexity": 8,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "while",
                  "fseek",
                  "if",
                  "for",
                  "memset",
                  "I_Error",
                  "fopen",
                  "sizeof",
                  "malloc",
                  "fread",
                  "fclose",
                  "printf",
                  "ftell",
                  "strupr"
                ]
              },
              {
                "name": "main",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 614,
                "end_line": 679,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "p",
                    "array_size": null,
                    "line_number": 616
                  }
                ],
                "function_calls": [
                  {
                    "name": "printf",
                    "line_number": 627
                  },
                  {
                    "name": "FindResponseFile",
                    "line_number": 637
                  },
                  {
                    "name": "if",
                    "line_number": 651
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 651
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 651
                  },
                  {
                    "name": "ReadModemCfg",
                    "line_number": 652
                  },
                  {
                    "name": "if",
                    "line_number": 657
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 657
                  },
                  {
                    "name": "if",
                    "line_number": 658
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 658
                  },
                  {
                    "name": "if",
                    "line_number": 659
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 659
                  },
                  {
                    "name": "if",
                    "line_number": 660
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 660
                  },
                  {
                    "name": "if",
                    "line_number": 661
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 661
                  },
                  {
                    "name": "if",
                    "line_number": 662
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 662
                  },
                  {
                    "name": "InitPort",
                    "line_number": 664
                  },
                  {
                    "name": "if",
                    "line_number": 666
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 666
                  },
                  {
                    "name": "Dial",
                    "line_number": 667
                  },
                  {
                    "name": "if",
                    "line_number": 668
                  },
                  {
                    "name": "CheckParm",
                    "line_number": 668
                  },
                  {
                    "name": "Answer",
                    "line_number": 669
                  },
                  {
                    "name": "Connect",
                    "line_number": 671
                  },
                  {
                    "name": "LaunchDOOM",
                    "line_number": 676
                  },
                  {
                    "name": "Error",
                    "line_number": 678
                  }
                ],
                "control_flow": [
                  {
                    "type": "else",
                    "line_number": 631
                  },
                  {
                    "type": "if",
                    "line_number": 648
                  },
                  {
                    "type": "if",
                    "line_number": 651
                  },
                  {
                    "type": "if",
                    "line_number": 657
                  },
                  {
                    "type": "if",
                    "line_number": 658
                  },
                  {
                    "type": "if",
                    "line_number": 659
                  },
                  {
                    "type": "if",
                    "line_number": 660
                  },
                  {
                    "type": "if",
                    "line_number": 661
                  },
                  {
                    "type": "if",
                    "line_number": 662
                  },
                  {
                    "type": "if",
                    "line_number": 666
                  },
                  {
                    "type": "if",
                    "line_number": 668
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "LaunchDOOM",
                  "ReadModemCfg",
                  "CheckParm",
                  "if",
                  "InitPort",
                  "Connect",
                  "printf",
                  "FindResponseFile",
                  "Answer",
                  "Dial",
                  "Error"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "uart",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 11
              },
              {
                "name": "usemodem",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "baudbits",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 16
              },
              {
                "name": "myargc",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 20
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 44
              },
              {
                "name": "argptr",
                "type": "va_list",
                "storage_class": null,
                "array_size": null,
                "line_number": 70
              },
              {
                "name": "packetlen",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 118
              },
              {
                "name": "inescape",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 119
              },
              {
                "name": "newpacket",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 120
              },
              {
                "name": "c",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 124
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 132
              },
              {
                "name": "false",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 145
              },
              {
                "name": "true",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 153
              },
              {
                "name": "b",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 183
              },
              {
                "name": "time",
                "type": "struct time",
                "storage_class": null,
                "array_size": null,
                "line_number": 250
              },
              {
                "name": "oldsec",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 251
              },
              {
                "name": "str",
                "type": "char",
                "storage_class": null,
                "array_size": "20",
                "line_number": 253
              },
              {
                "name": "idstr",
                "type": "char",
                "storage_class": null,
                "array_size": "7",
                "line_number": 254
              },
              {
                "name": "remoteidstr",
                "type": "char",
                "storage_class": null,
                "array_size": "7",
                "line_number": 255
              },
              {
                "name": "idnum",
                "type": "unsigned long",
                "storage_class": null,
                "array_size": null,
                "line_number": 256
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 257
              },
              {
                "name": "response",
                "type": "char",
                "storage_class": null,
                "array_size": "80",
                "line_number": 394
              },
              {
                "name": "c",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 398
              },
              {
                "name": "respptr",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 399
              },
              {
                "name": "c",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 442
              },
              {
                "name": "mcr",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 465
              },
              {
                "name": "baud",
                "type": "unsigned",
                "storage_class": null,
                "array_size": null,
                "line_number": 467
              },
              {
                "name": "cmd",
                "type": "char",
                "storage_class": null,
                "array_size": "80",
                "line_number": 495
              },
              {
                "name": "p",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 496
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 539
              },
              {
                "name": "size",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 546
              },
              {
                "name": "k",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 547
              },
              {
                "name": "index",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 548
              },
              {
                "name": "indexinfile",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 549
              },
              {
                "name": "p",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 616
              }
            ],
            "defines": [
              {
                "name": "MAXPACKET",
                "value": "512",
                "line_number": 114
              },
              {
                "name": "FRAMECHAR",
                "value": "0x70",
                "line_number": 115
              }
            ]
          },
          "source_code_path": "sersrc/SERSETUP.C",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "SERSETUP.H",
          "type": "file",
          "size": 3612,
          "last_modified": "2024-09-05T16:00:06.036064",
          "path": "sersrc/SERSETUP.H",
          "readme": "# SERSETUP.H\n\nThis file contains functionality related to SERSETUP.",
          "dependencies": [
            "bios.h",
            "process.h",
            "string.h",
            "conio.h",
            "stdio.h",
            "dos.h",
            "stdarg.h",
            "ctype.h",
            "stdlib.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "byte",
                "type": "typedef unsigned char",
                "storage_class": null,
                "array_size": null,
                "line_number": 21
              },
              {
                "name": "argc",
                "type": "int",
                "storage_class": "extern",
                "array_size": null,
                "line_number": 101
              }
            ],
            "defines": [
              {
                "name": "TRANSMIT_HOLDING_REGISTER",
                "value": "0x00",
                "line_number": 24
              },
              {
                "name": "RECEIVE_BUFFER_REGISTER",
                "value": "0x00",
                "line_number": 25
              },
              {
                "name": "INTERRUPT_ENABLE_REGISTER",
                "value": "0x01",
                "line_number": 26
              },
              {
                "name": "IER_RX_DATA_READY",
                "value": "0x01",
                "line_number": 27
              },
              {
                "name": "IER_TX_HOLDING_REGISTER_EMPTY",
                "value": "0x02",
                "line_number": 28
              },
              {
                "name": "IER_LINE_STATUS",
                "value": "0x04",
                "line_number": 29
              },
              {
                "name": "IER_MODEM_STATUS",
                "value": "0x08",
                "line_number": 30
              },
              {
                "name": "INTERRUPT_ID_REGISTER",
                "value": "0x02",
                "line_number": 31
              },
              {
                "name": "IIR_MODEM_STATUS_INTERRUPT",
                "value": "0x00",
                "line_number": 32
              },
              {
                "name": "IIR_TX_HOLDING_REGISTER_INTERRUPT",
                "value": "0x02",
                "line_number": 33
              },
              {
                "name": "IIR_RX_DATA_READY_INTERRUPT",
                "value": "0x04",
                "line_number": 34
              },
              {
                "name": "IIR_LINE_STATUS_INTERRUPT",
                "value": "0x06",
                "line_number": 35
              },
              {
                "name": "FIFO_CONTROL_REGISTER",
                "value": "0x02",
                "line_number": 36
              },
              {
                "name": "FCR_FIFO_ENABLE",
                "value": "0x01",
                "line_number": 37
              },
              {
                "name": "FCR_RCVR_FIFO_RESET",
                "value": "0x02",
                "line_number": 38
              },
              {
                "name": "FCR_XMIT_FIFO_RESET",
                "value": "0x04",
                "line_number": 39
              },
              {
                "name": "FCR_RCVR_TRIGGER_LSB",
                "value": "0x40",
                "line_number": 40
              },
              {
                "name": "FCR_RCVR_TRIGGER_MSB",
                "value": "0x80",
                "line_number": 41
              },
              {
                "name": "FCR_TRIGGER_01",
                "value": "0x00",
                "line_number": 42
              },
              {
                "name": "FCR_TRIGGER_04",
                "value": "0x40",
                "line_number": 43
              },
              {
                "name": "FCR_TRIGGER_08",
                "value": "0x80",
                "line_number": 44
              },
              {
                "name": "FCR_TRIGGER_14",
                "value": "0xc0",
                "line_number": 45
              },
              {
                "name": "LINE_CONTROL_REGISTER",
                "value": "0x03",
                "line_number": 46
              },
              {
                "name": "LCR_WORD_LENGTH_MASK",
                "value": "0x03",
                "line_number": 47
              },
              {
                "name": "LCR_WORD_LENGTH_SELECT_0",
                "value": "0x01",
                "line_number": 48
              },
              {
                "name": "LCR_WORD_LENGTH_SELECT_1",
                "value": "0x02",
                "line_number": 49
              },
              {
                "name": "LCR_STOP_BITS",
                "value": "0x04",
                "line_number": 50
              },
              {
                "name": "LCR_PARITY_MASK",
                "value": "0x38",
                "line_number": 51
              },
              {
                "name": "LCR_PARITY_ENABLE",
                "value": "0x08",
                "line_number": 52
              },
              {
                "name": "LCR_EVEN_PARITY_SELECT",
                "value": "0x10",
                "line_number": 53
              },
              {
                "name": "LCR_STICK_PARITY",
                "value": "0x20",
                "line_number": 54
              },
              {
                "name": "LCR_SET_BREAK",
                "value": "0x40",
                "line_number": 55
              },
              {
                "name": "LCR_DLAB",
                "value": "0x80",
                "line_number": 56
              },
              {
                "name": "MODEM_CONTROL_REGISTER",
                "value": "0x04",
                "line_number": 57
              },
              {
                "name": "MCR_DTR",
                "value": "0x01",
                "line_number": 58
              },
              {
                "name": "MCR_RTS",
                "value": "0x02",
                "line_number": 59
              },
              {
                "name": "MCR_OUT1",
                "value": "0x04",
                "line_number": 60
              },
              {
                "name": "MCR_OUT2",
                "value": "0x08",
                "line_number": 61
              },
              {
                "name": "MCR_LOOPBACK",
                "value": "0x10",
                "line_number": 62
              },
              {
                "name": "LINE_STATUS_REGISTER",
                "value": "0x05",
                "line_number": 63
              },
              {
                "name": "LSR_DATA_READY",
                "value": "0x01",
                "line_number": 64
              },
              {
                "name": "LSR_OVERRUN_ERROR",
                "value": "0x02",
                "line_number": 65
              },
              {
                "name": "LSR_PARITY_ERROR",
                "value": "0x04",
                "line_number": 66
              },
              {
                "name": "LSR_FRAMING_ERROR",
                "value": "0x08",
                "line_number": 67
              },
              {
                "name": "LSR_BREAK_DETECT",
                "value": "0x10",
                "line_number": 68
              },
              {
                "name": "LSR_THRE",
                "value": "0x20",
                "line_number": 69
              },
              {
                "name": "MODEM_STATUS_REGISTER",
                "value": "0x06",
                "line_number": 70
              },
              {
                "name": "MSR_DELTA_CTS",
                "value": "0x01",
                "line_number": 71
              },
              {
                "name": "MSR_DELTA_DSR",
                "value": "0x02",
                "line_number": 72
              },
              {
                "name": "MSR_TERI",
                "value": "0x04",
                "line_number": 73
              },
              {
                "name": "MSR_DELTA_CD",
                "value": "0x08",
                "line_number": 74
              },
              {
                "name": "MSR_CTS",
                "value": "0x10",
                "line_number": 75
              },
              {
                "name": "MSR_DSR",
                "value": "0x20",
                "line_number": 76
              },
              {
                "name": "MSR_RI",
                "value": "0x40",
                "line_number": 77
              },
              {
                "name": "MSR_CD",
                "value": "0x80",
                "line_number": 78
              },
              {
                "name": "DIVISOR_LATCH_LOW",
                "value": "0x00",
                "line_number": 79
              },
              {
                "name": "DIVISOR_LATCH_HIGH",
                "value": "0x01",
                "line_number": 80
              },
              {
                "name": "QUESIZE",
                "value": "2048",
                "line_number": 84
              }
            ]
          },
          "source_code_path": "sersrc/SERSETUP.H",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "SERSTR.H",
          "type": "file",
          "size": 1058,
          "last_modified": "2024-09-05T16:00:06.060260",
          "path": "sersrc/SERSTR.H",
          "readme": "# SERSTR.H\n\nThis file contains functionality related to SERSTR.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [],
            "defines": [
              {
                "name": "STR_DROPDTR",
                "value": "\"Dropping DTR\"",
                "line_number": 1
              },
              {
                "name": "STR_CLEANEXIT",
                "value": "\"Clean exit from SERSETUP\"",
                "line_number": 2
              },
              {
                "name": "STR_ATTEMPT",
                "value": "\"Attempting to connect across serial link, press escape to abort.\"",
                "line_number": 3
              },
              {
                "name": "STR_NETABORT",
                "value": "\"Network game synchronization aborted.\"",
                "line_number": 4
              },
              {
                "name": "STR_DUPLICATE",
                "value": "\"Duplicate id string, try again or check modem init string.\"",
                "line_number": 5
              },
              {
                "name": "STR_MODEMCMD",
                "value": "\"Modem command : \"",
                "line_number": 6
              },
              {
                "name": "STR_MODEMRESP",
                "value": "\"Modem response: \"",
                "line_number": 7
              },
              {
                "name": "STR_RESPABORT",
                "value": "\"Modem response aborted.\"",
                "line_number": 8
              },
              {
                "name": "STR_CANTREAD",
                "value": "\"Couldn't read MODEM.CFG\"",
                "line_number": 9
              },
              {
                "name": "STR_DIALING",
                "value": "\"Dialing...\"",
                "line_number": 10
              },
              {
                "name": "STR_CONNECT",
                "value": "\"CONNECT\"",
                "line_number": 11
              },
              {
                "name": "STR_WAITRING",
                "value": "\"Waiting for ring...\"",
                "line_number": 12
              },
              {
                "name": "STR_RING",
                "value": "\"RING\"",
                "line_number": 13
              },
              {
                "name": "STR_NORESP",
                "value": "\"No such response file!\"",
                "line_number": 14
              },
              {
                "name": "STR_DOOMSERIAL",
                "value": "\"DOOM II SERIAL DEVICE DRIVER v1.4\"",
                "line_number": 15
              },
              {
                "name": "STR_WARNING",
                "value": "\\",
                "line_number": 16
              },
              {
                "name": "STR_COMM",
                "value": "\"Communicating with interrupt vector 0x%x\"",
                "line_number": 19
              },
              {
                "name": "STR_RETURNED",
                "value": "\"Returned from DOOM II\"",
                "line_number": 20
              },
              {
                "name": "STR_PORTSET",
                "value": "\"Setting port to %lu baud\"",
                "line_number": 21
              }
            ]
          },
          "source_code_path": "sersrc/SERSTR.H",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "SER_FRCH.H",
          "type": "file",
          "size": 1354,
          "last_modified": "2024-09-05T16:00:06.084258",
          "path": "sersrc/SER_FRCH.H",
          "readme": "# SER_FRCH.H\n\nThis file contains functionality related to SER_FRCH.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [],
            "defines": [
              {
                "name": "STR_DROPDTR",
                "value": "\"Abandon de DTR\"",
                "line_number": 1
              },
              {
                "name": "STR_CLEANEXIT",
                "value": "\"Sortie normale de SERSETUP\"",
                "line_number": 2
              },
              {
                "name": "STR_ATTEMPT",
                "value": "\"Tentative de connexion en srie, appuyez sur ESC pour annuler.\"",
                "line_number": 3
              },
              {
                "name": "STR_NETABORT",
                "value": "\"Synchronisation de jeu sur rseau annule.\"",
                "line_number": 4
              },
              {
                "name": "STR_DUPLICATE",
                "value": "\"Chane id en double. Ressayez ou vrifiez la chane d'initialistion du modem.\"",
                "line_number": 5
              },
              {
                "name": "STR_MODEMCMD",
                "value": "\"Commande du modem: \"",
                "line_number": 6
              },
              {
                "name": "STR_MODEMRESP",
                "value": "\"Rponse du modem: \"",
                "line_number": 7
              },
              {
                "name": "STR_RESPABORT",
                "value": "\"Rponse du modem annule.\"",
                "line_number": 8
              },
              {
                "name": "STR_CANTREAD",
                "value": "\"Lecture de MODEM.CFG impossible\"",
                "line_number": 9
              },
              {
                "name": "STR_DIALING",
                "value": "\"Composition du numro...\"",
                "line_number": 10
              },
              {
                "name": "STR_CONNECT",
                "value": "\"CONNECTION\"",
                "line_number": 11
              },
              {
                "name": "STR_WAITRING",
                "value": "\"Attente d'appel...\"",
                "line_number": 12
              },
              {
                "name": "STR_RING",
                "value": "\"APPEL\"",
                "line_number": 13
              },
              {
                "name": "STR_NORESP",
                "value": "\"Ce fichier de rponse n'existe pas!\"",
                "line_number": 14
              },
              {
                "name": "STR_DOOMSERIAL",
                "value": "\"GESTIONNAIRE DE LIAISON SERIE DOOM II v1.4\"",
                "line_number": 15
              },
              {
                "name": "STR_WARNING",
                "value": "\\",
                "line_number": 16
              },
              {
                "name": "STR_COMM",
                "value": "\"Communication avec le vecteur d'interruption 0x%x\"",
                "line_number": 19
              },
              {
                "name": "STR_RETURNED",
                "value": "\"Retour de DOOM II\"",
                "line_number": 20
              },
              {
                "name": "STR_PORTLOOK",
                "value": "\"Recherche de l'UART sur le port\"",
                "line_number": 21
              },
              {
                "name": "STR_UART8250",
                "value": "\"UART = 8250\"",
                "line_number": 22
              },
              {
                "name": "STR_UART16550",
                "value": "\"UART = 16550\"",
                "line_number": 23
              },
              {
                "name": "STR_CLEARPEND",
                "value": "\"Riinitilisation des interruptions en attente.\\n\"",
                "line_number": 24
              },
              {
                "name": "STR_PORTSET",
                "value": "\"Rglage du port  %lu baud\"",
                "line_number": 25
              }
            ]
          },
          "source_code_path": "sersrc/SER_FRCH.H",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        }
      ]
    },
    {
      "name": "sndserv",
      "type": "directory",
      "children": [
        {
          "name": "linux.c",
          "type": "file",
          "size": 2581,
          "last_modified": "2024-09-05T16:00:06.178779",
          "path": "sndserv/linux.c",
          "readme": "# linux.c\n\nThis file contains functionality related to linux.",
          "dependencies": [
            "unistd.h",
            "fcntl.h",
            "stdio.h",
            "soundsrv.h",
            "stdlib.h",
            "linux/soundcard.h"
          ],
          "inputs": [
            "samplecount",
            "samples",
            "samplesize",
            "fd",
            "samplerate",
            "void",
            "arg",
            "command"
          ],
          "outputs": [],
          "content": {
            "functions": [
              {
                "name": "myioctl",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "fd"
                  },
                  {
                    "type": "int",
                    "name": "command"
                  },
                  {
                    "type": "int*",
                    "name": "arg"
                  }
                ],
                "start_line": 49,
                "end_line": 61,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "rc",
                    "array_size": null,
                    "line_number": 51
                  },
                  {
                    "type": "extern int",
                    "name": "errno",
                    "array_size": null,
                    "line_number": 52
                  }
                ],
                "function_calls": [
                  {
                    "name": "ioctl",
                    "line_number": 54
                  },
                  {
                    "name": "if",
                    "line_number": 55
                  },
                  {
                    "name": "fprintf",
                    "line_number": 57
                  },
                  {
                    "name": "ioctl",
                    "line_number": 57
                  },
                  {
                    "name": "fprintf",
                    "line_number": 58
                  },
                  {
                    "name": "exit",
                    "line_number": 59
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 55
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "fd",
                  "command",
                  "arg"
                ],
                "outputs": [],
                "dependencies": [
                  "exit",
                  "fprintf",
                  "ioctl",
                  "if"
                ]
              },
              {
                "name": "I_InitMusic",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 67,
                "end_line": 69,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              },
              {
                "name": "I_InitSound",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "samplerate"
                  },
                  {
                    "type": "int",
                    "name": "samplesize"
                  }
                ],
                "start_line": 71,
                "end_line": 96,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 74
                  }
                ],
                "function_calls": [
                  {
                    "name": "open",
                    "line_number": 76
                  },
                  {
                    "name": "if",
                    "line_number": 77
                  },
                  {
                    "name": "fprintf",
                    "line_number": 78
                  },
                  {
                    "name": "myioctl",
                    "line_number": 82
                  },
                  {
                    "name": "myioctl",
                    "line_number": 84
                  },
                  {
                    "name": "myioctl",
                    "line_number": 86
                  },
                  {
                    "name": "myioctl",
                    "line_number": 88
                  },
                  {
                    "name": "myioctl",
                    "line_number": 90
                  },
                  {
                    "name": "if",
                    "line_number": 91
                  },
                  {
                    "name": "myioctl",
                    "line_number": 92
                  },
                  {
                    "name": "fprintf",
                    "line_number": 94
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 77
                  },
                  {
                    "type": "if",
                    "line_number": 91
                  },
                  {
                    "type": "else",
                    "line_number": 93
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "samplerate",
                  "samplesize"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "myioctl",
                  "open",
                  "if"
                ]
              },
              {
                "name": "I_SubmitOutputBuffer",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "void*",
                    "name": "samples"
                  },
                  {
                    "type": "int",
                    "name": "samplecount"
                  }
                ],
                "start_line": 101,
                "end_line": 104,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "write",
                    "line_number": 103
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "samples",
                  "samplecount"
                ],
                "outputs": [],
                "dependencies": [
                  "write"
                ]
              },
              {
                "name": "I_ShutdownSound",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 109,
                "end_line": 114,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "close",
                    "line_number": 112
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "close"
                ]
              },
              {
                "name": "I_ShutdownMusic",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 116,
                "end_line": 118,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": []
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "audio_fd",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 47
              },
              {
                "name": "rc",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 55
              },
              {
                "name": "errno",
                "type": "extern int",
                "storage_class": null,
                "array_size": null,
                "line_number": 56
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 77
              }
            ],
            "defines": []
          },
          "source_code_path": "sndserv/linux.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "Makefile",
          "type": "file",
          "size": 509,
          "last_modified": "2024-09-05T16:00:06.121258",
          "path": "sndserv/Makefile",
          "readme": "# Makefile\n\nThis file contains functionality related to Makefile.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [],
            "defines": []
          },
          "source_code_path": "sndserv/Makefile",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "sounds.c",
          "type": "file",
          "size": 7417,
          "last_modified": "2024-09-05T16:00:06.205780",
          "path": "sndserv/sounds.c",
          "readme": "# sounds.c\n\nThis file contains functionality related to sounds.",
          "dependencies": [
            "sounds.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "sndserv/sounds.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "sounds.h",
          "type": "file",
          "size": 4171,
          "last_modified": "2024-09-05T16:00:06.231780",
          "path": "sndserv/sounds.h",
          "readme": "# sounds.h\n\nThis file contains functionality related to sounds.",
          "dependencies": [
            "soundst.h"
          ],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "sndserv/sounds.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "soundsrv.c",
          "type": "file",
          "size": 15248,
          "last_modified": "2024-09-05T16:00:06.259317",
          "path": "sndserv/soundsrv.c",
          "readme": "# soundsrv.c\n\nThis file contains functionality related to soundsrv.",
          "dependencies": [
            "unistd.h",
            "sys/time.h",
            "fcntl.h",
            "math.h",
            "sys/types.h",
            "stdio.h",
            "soundsrv.h",
            "sys/stat.h",
            "sys/ioctl.h",
            "sounds.h",
            "wadread.h",
            "stdlib.h",
            "malloc.h"
          ],
          "inputs": [
            "step",
            "leftend",
            "0",
            "sfx_pistol",
            "sfxid",
            "c",
            "v",
            "seperation",
            "msg",
            "void",
            "num",
            "volume"
          ],
          "outputs": [
            "static void",
            "int",
            "mix into the mixing buffer",
            "only one at a time",
            "else"
          ],
          "content": {
            "functions": [
              {
                "name": "derror",
                "return_type": "static void",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "msg"
                  }
                ],
                "start_line": 136,
                "end_line": 140,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "fprintf",
                    "line_number": 138
                  },
                  {
                    "name": "exit",
                    "line_number": 139
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "msg"
                ],
                "outputs": [
                  "static void"
                ],
                "dependencies": [
                  "exit",
                  "fprintf"
                ]
              },
              {
                "name": "mix",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 142,
                "end_line": 299,
                "local_variables": [
                  {
                    "type": "register int",
                    "name": "dl",
                    "array_size": null,
                    "line_number": 145
                  },
                  {
                    "type": "register int",
                    "name": "dr",
                    "array_size": null,
                    "line_number": 146
                  },
                  {
                    "type": "register unsigned int",
                    "name": "sample",
                    "array_size": null,
                    "line_number": 147
                  },
                  {
                    "type": "int",
                    "name": "step",
                    "array_size": null,
                    "line_number": 153
                  },
                  {
                    "type": "return",
                    "name": "1",
                    "array_size": null,
                    "line_number": 298
                  }
                ],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 162
                  },
                  {
                    "name": "if",
                    "line_number": 168
                  },
                  {
                    "name": "if",
                    "line_number": 177
                  },
                  {
                    "name": "if",
                    "line_number": 181
                  },
                  {
                    "name": "if",
                    "line_number": 190
                  },
                  {
                    "name": "if",
                    "line_number": 194
                  },
                  {
                    "name": "if",
                    "line_number": 203
                  },
                  {
                    "name": "if",
                    "line_number": 207
                  },
                  {
                    "name": "if",
                    "line_number": 216
                  },
                  {
                    "name": "if",
                    "line_number": 220
                  },
                  {
                    "name": "if",
                    "line_number": 229
                  },
                  {
                    "name": "if",
                    "line_number": 233
                  },
                  {
                    "name": "if",
                    "line_number": 242
                  },
                  {
                    "name": "if",
                    "line_number": 246
                  },
                  {
                    "name": "if",
                    "line_number": 255
                  },
                  {
                    "name": "if",
                    "line_number": 258
                  },
                  {
                    "name": "if",
                    "line_number": 267
                  },
                  {
                    "name": "if",
                    "line_number": 272
                  },
                  {
                    "name": "if",
                    "line_number": 273
                  },
                  {
                    "name": "if",
                    "line_number": 276
                  },
                  {
                    "name": "if",
                    "line_number": 277
                  },
                  {
                    "name": "if",
                    "line_number": 280
                  },
                  {
                    "name": "if",
                    "line_number": 282
                  },
                  {
                    "name": "if",
                    "line_number": 287
                  },
                  {
                    "name": "if",
                    "line_number": 289
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 162
                  },
                  {
                    "type": "if",
                    "line_number": 168
                  },
                  {
                    "type": "if",
                    "line_number": 177
                  },
                  {
                    "type": "if",
                    "line_number": 181
                  },
                  {
                    "type": "if",
                    "line_number": 190
                  },
                  {
                    "type": "if",
                    "line_number": 194
                  },
                  {
                    "type": "if",
                    "line_number": 203
                  },
                  {
                    "type": "if",
                    "line_number": 207
                  },
                  {
                    "type": "if",
                    "line_number": 216
                  },
                  {
                    "type": "if",
                    "line_number": 220
                  },
                  {
                    "type": "if",
                    "line_number": 229
                  },
                  {
                    "type": "if",
                    "line_number": 233
                  },
                  {
                    "type": "if",
                    "line_number": 242
                  },
                  {
                    "type": "if",
                    "line_number": 246
                  },
                  {
                    "type": "if",
                    "line_number": 255
                  },
                  {
                    "type": "if",
                    "line_number": 258
                  },
                  {
                    "type": "if",
                    "line_number": 267
                  },
                  {
                    "type": "if",
                    "line_number": 272
                  },
                  {
                    "type": "if",
                    "line_number": 273
                  },
                  {
                    "type": "else",
                    "line_number": 274
                  },
                  {
                    "type": "if",
                    "line_number": 276
                  },
                  {
                    "type": "if",
                    "line_number": 277
                  },
                  {
                    "type": "else",
                    "line_number": 278
                  },
                  {
                    "type": "if",
                    "line_number": 280
                  },
                  {
                    "type": "if",
                    "line_number": 282
                  },
                  {
                    "type": "else",
                    "line_number": 284
                  },
                  {
                    "type": "if",
                    "line_number": 287
                  },
                  {
                    "type": "if",
                    "line_number": 289
                  },
                  {
                    "type": "else",
                    "line_number": 291
                  }
                ],
                "complexity": 20,
                "inputs": [
                  "void"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "while",
                  "if"
                ]
              },
              {
                "name": "while",
                "return_type": "mix into the mixing buffer",
                "parameters": [
                  {
                    "type": "leftout !=",
                    "name": "leftend"
                  }
                ],
                "start_line": 161,
                "end_line": 296,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 167
                  },
                  {
                    "name": "if",
                    "line_number": 176
                  },
                  {
                    "name": "if",
                    "line_number": 180
                  },
                  {
                    "name": "if",
                    "line_number": 189
                  },
                  {
                    "name": "if",
                    "line_number": 193
                  },
                  {
                    "name": "if",
                    "line_number": 202
                  },
                  {
                    "name": "if",
                    "line_number": 206
                  },
                  {
                    "name": "if",
                    "line_number": 215
                  },
                  {
                    "name": "if",
                    "line_number": 219
                  },
                  {
                    "name": "if",
                    "line_number": 228
                  },
                  {
                    "name": "if",
                    "line_number": 232
                  },
                  {
                    "name": "if",
                    "line_number": 241
                  },
                  {
                    "name": "if",
                    "line_number": 245
                  },
                  {
                    "name": "if",
                    "line_number": 254
                  },
                  {
                    "name": "if",
                    "line_number": 257
                  },
                  {
                    "name": "if",
                    "line_number": 266
                  },
                  {
                    "name": "if",
                    "line_number": 271
                  },
                  {
                    "name": "if",
                    "line_number": 272
                  },
                  {
                    "name": "if",
                    "line_number": 275
                  },
                  {
                    "name": "if",
                    "line_number": 276
                  },
                  {
                    "name": "if",
                    "line_number": 279
                  },
                  {
                    "name": "if",
                    "line_number": 281
                  },
                  {
                    "name": "if",
                    "line_number": 286
                  },
                  {
                    "name": "if",
                    "line_number": 288
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 167
                  },
                  {
                    "type": "if",
                    "line_number": 176
                  },
                  {
                    "type": "if",
                    "line_number": 180
                  },
                  {
                    "type": "if",
                    "line_number": 189
                  },
                  {
                    "type": "if",
                    "line_number": 193
                  },
                  {
                    "type": "if",
                    "line_number": 202
                  },
                  {
                    "type": "if",
                    "line_number": 206
                  },
                  {
                    "type": "if",
                    "line_number": 215
                  },
                  {
                    "type": "if",
                    "line_number": 219
                  },
                  {
                    "type": "if",
                    "line_number": 228
                  },
                  {
                    "type": "if",
                    "line_number": 232
                  },
                  {
                    "type": "if",
                    "line_number": 241
                  },
                  {
                    "type": "if",
                    "line_number": 245
                  },
                  {
                    "type": "if",
                    "line_number": 254
                  },
                  {
                    "type": "if",
                    "line_number": 257
                  },
                  {
                    "type": "if",
                    "line_number": 266
                  },
                  {
                    "type": "if",
                    "line_number": 271
                  },
                  {
                    "type": "if",
                    "line_number": 272
                  },
                  {
                    "type": "else",
                    "line_number": 273
                  },
                  {
                    "type": "if",
                    "line_number": 275
                  },
                  {
                    "type": "if",
                    "line_number": 276
                  },
                  {
                    "type": "else",
                    "line_number": 277
                  },
                  {
                    "type": "if",
                    "line_number": 279
                  },
                  {
                    "type": "if",
                    "line_number": 281
                  },
                  {
                    "type": "else",
                    "line_number": 283
                  },
                  {
                    "type": "if",
                    "line_number": 286
                  },
                  {
                    "type": "if",
                    "line_number": 288
                  },
                  {
                    "type": "else",
                    "line_number": 290
                  }
                ],
                "complexity": 19,
                "inputs": [
                  "leftend"
                ],
                "outputs": [
                  "mix into the mixing buffer"
                ],
                "dependencies": [
                  "if"
                ]
              },
              {
                "name": "grabdata",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "c"
                  },
                  {
                    "type": "char**",
                    "name": "v"
                  }
                ],
                "start_line": 303,
                "end_line": 400,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 305
                  }
                ],
                "function_calls": [
                  {
                    "name": "getenv",
                    "line_number": 317
                  },
                  {
                    "name": "if",
                    "line_number": 319
                  },
                  {
                    "name": "malloc",
                    "line_number": 322
                  },
                  {
                    "name": "strlen",
                    "line_number": 322
                  },
                  {
                    "name": "sprintf",
                    "line_number": 323
                  },
                  {
                    "name": "malloc",
                    "line_number": 325
                  },
                  {
                    "name": "strlen",
                    "line_number": 325
                  },
                  {
                    "name": "sprintf",
                    "line_number": 326
                  },
                  {
                    "name": "malloc",
                    "line_number": 328
                  },
                  {
                    "name": "strlen",
                    "line_number": 328
                  },
                  {
                    "name": "sprintf",
                    "line_number": 329
                  },
                  {
                    "name": "malloc",
                    "line_number": 331
                  },
                  {
                    "name": "strlen",
                    "line_number": 331
                  },
                  {
                    "name": "sprintf",
                    "line_number": 332
                  },
                  {
                    "name": "malloc",
                    "line_number": 334
                  },
                  {
                    "name": "strlen",
                    "line_number": 334
                  },
                  {
                    "name": "sprintf",
                    "line_number": 335
                  },
                  {
                    "name": "getenv",
                    "line_number": 337
                  },
                  {
                    "name": "if",
                    "line_number": 338
                  },
                  {
                    "name": "derror",
                    "line_number": 339
                  },
                  {
                    "name": "sprintf",
                    "line_number": 340
                  },
                  {
                    "name": "for",
                    "line_number": 343
                  },
                  {
                    "name": "if",
                    "line_number": 345
                  },
                  {
                    "name": "strcmp",
                    "line_number": 345
                  },
                  {
                    "name": "if",
                    "line_number": 354
                  },
                  {
                    "name": "access",
                    "line_number": 354
                  },
                  {
                    "name": "if",
                    "line_number": 356
                  },
                  {
                    "name": "access",
                    "line_number": 356
                  },
                  {
                    "name": "if",
                    "line_number": 358
                  },
                  {
                    "name": "access",
                    "line_number": 358
                  },
                  {
                    "name": "if",
                    "line_number": 360
                  },
                  {
                    "name": "access",
                    "line_number": 360
                  },
                  {
                    "name": "if",
                    "line_number": 362
                  },
                  {
                    "name": "access",
                    "line_number": 362
                  },
                  {
                    "name": "if",
                    "line_number": 364
                  },
                  {
                    "name": "access",
                    "line_number": 364
                  },
                  {
                    "name": "if",
                    "line_number": 366
                  },
                  {
                    "name": "access",
                    "line_number": 366
                  },
                  {
                    "name": "fprintf",
                    "line_number": 370
                  },
                  {
                    "name": "exit",
                    "line_number": 371
                  },
                  {
                    "name": "openwad",
                    "line_number": 375
                  },
                  {
                    "name": "if",
                    "line_number": 376
                  },
                  {
                    "name": "fprintf",
                    "line_number": 377
                  },
                  {
                    "name": "for",
                    "line_number": 379
                  },
                  {
                    "name": "if",
                    "line_number": 381
                  },
                  {
                    "name": "getsfx",
                    "line_number": 383
                  },
                  {
                    "name": "if",
                    "line_number": 384
                  },
                  {
                    "name": "sizeof",
                    "line_number": 387
                  },
                  {
                    "name": "sprintf",
                    "line_number": 393
                  },
                  {
                    "name": "open",
                    "line_number": 394
                  },
                  {
                    "name": "write",
                    "line_number": 395
                  },
                  {
                    "name": "close",
                    "line_number": 396
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 319
                  },
                  {
                    "type": "if",
                    "line_number": 338
                  },
                  {
                    "type": "for",
                    "line_number": 343
                  },
                  {
                    "type": "if",
                    "line_number": 345
                  },
                  {
                    "type": "if",
                    "line_number": 354
                  },
                  {
                    "type": "if",
                    "line_number": 356
                  },
                  {
                    "type": "if",
                    "line_number": 358
                  },
                  {
                    "type": "if",
                    "line_number": 360
                  },
                  {
                    "type": "if",
                    "line_number": 362
                  },
                  {
                    "type": "if",
                    "line_number": 364
                  },
                  {
                    "type": "if",
                    "line_number": 366
                  },
                  {
                    "type": "else",
                    "line_number": 368
                  },
                  {
                    "type": "if",
                    "line_number": 376
                  },
                  {
                    "type": "for",
                    "line_number": 379
                  },
                  {
                    "type": "if",
                    "line_number": 381
                  },
                  {
                    "type": "if",
                    "line_number": 384
                  },
                  {
                    "type": "else",
                    "line_number": 385
                  }
                ],
                "complexity": 9,
                "inputs": [
                  "c",
                  "v"
                ],
                "outputs": [],
                "dependencies": [
                  "exit",
                  "fprintf",
                  "strlen",
                  "open",
                  "if",
                  "for",
                  "strcmp",
                  "sizeof",
                  "getenv",
                  "close",
                  "malloc",
                  "openwad",
                  "write",
                  "sprintf",
                  "derror",
                  "getsfx",
                  "access"
                ]
              },
              {
                "name": "updatesounds",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 410,
                "end_line": 416,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "mix",
                    "line_number": 413
                  },
                  {
                    "name": "I_SubmitOutputBuffer",
                    "line_number": 414
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "mix",
                  "I_SubmitOutputBuffer"
                ]
              },
              {
                "name": "addsfx",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "sfxid"
                  },
                  {
                    "type": "int",
                    "name": "volume"
                  },
                  {
                    "type": "int",
                    "name": "step"
                  },
                  {
                    "type": "int",
                    "name": "seperation"
                  }
                ],
                "start_line": 418,
                "end_line": 504,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 422
                  },
                  {
                    "type": "int",
                    "name": "slot",
                    "array_size": null,
                    "line_number": 427
                  },
                  {
                    "type": "int",
                    "name": "rightvol",
                    "array_size": null,
                    "line_number": 428
                  },
                  {
                    "type": "int",
                    "name": "leftvol",
                    "array_size": null,
                    "line_number": 429
                  },
                  {
                    "type": "return",
                    "name": "rc",
                    "array_size": null,
                    "line_number": 502
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 433
                  },
                  {
                    "name": "for",
                    "line_number": 440
                  },
                  {
                    "name": "if",
                    "line_number": 442
                  },
                  {
                    "name": "for",
                    "line_number": 450
                  },
                  {
                    "name": "if",
                    "line_number": 452
                  },
                  {
                    "name": "if",
                    "line_number": 459
                  },
                  {
                    "name": "if",
                    "line_number": 467
                  },
                  {
                    "name": "if",
                    "line_number": 489
                  },
                  {
                    "name": "derror",
                    "line_number": 490
                  },
                  {
                    "name": "if",
                    "line_number": 492
                  },
                  {
                    "name": "derror",
                    "line_number": 493
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 433
                  },
                  {
                    "type": "for",
                    "line_number": 440
                  },
                  {
                    "type": "if",
                    "line_number": 442
                  },
                  {
                    "type": "for",
                    "line_number": 450
                  },
                  {
                    "type": "if",
                    "line_number": 452
                  },
                  {
                    "type": "if",
                    "line_number": 459
                  },
                  {
                    "type": "else",
                    "line_number": 461
                  },
                  {
                    "type": "if",
                    "line_number": 467
                  },
                  {
                    "type": "if",
                    "line_number": 489
                  },
                  {
                    "type": "if",
                    "line_number": 492
                  },
                  {
                    "type": "for",
                    "line_number": 496
                  }
                ],
                "complexity": 15,
                "inputs": [
                  "sfxid",
                  "volume",
                  "step",
                  "seperation"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "for",
                  "derror",
                  "if"
                ]
              },
              {
                "name": "if",
                "return_type": "only one at a time",
                "parameters": [
                  {
                    "type": "sfxid == sfx_sawup || sfxid == sfx_sawidl || sfxid == sfx_sawful || sfxid == sfx_sawhit || sfxid == sfx_stnmov || sfxid ==",
                    "name": "sfx_pistol"
                  }
                ],
                "start_line": 437,
                "end_line": 447,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 439
                  },
                  {
                    "name": "if",
                    "line_number": 441
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 439
                  },
                  {
                    "type": "if",
                    "line_number": 441
                  }
                ],
                "complexity": 3,
                "inputs": [
                  "sfx_pistol"
                ],
                "outputs": [
                  "only one at a time"
                ],
                "dependencies": [
                  "if",
                  "for"
                ]
              },
              {
                "name": "outputushort",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "int",
                    "name": "num"
                  }
                ],
                "start_line": 512,
                "end_line": 535,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 519
                  },
                  {
                    "name": "write",
                    "line_number": 521
                  },
                  {
                    "name": "write",
                    "line_number": 533
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 518
                  },
                  {
                    "type": "if",
                    "line_number": 519
                  },
                  {
                    "type": "else",
                    "line_number": 523
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "num"
                ],
                "outputs": [],
                "dependencies": [
                  "write",
                  "if"
                ]
              },
              {
                "name": "initdata",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 537,
                "end_line": 568,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 540
                  },
                  {
                    "type": "int",
                    "name": "j",
                    "array_size": null,
                    "line_number": 541
                  }
                ],
                "function_calls": [
                  {
                    "name": "for",
                    "line_number": 545
                  },
                  {
                    "name": "sizeof",
                    "line_number": 546
                  },
                  {
                    "name": "sizeof",
                    "line_number": 546
                  },
                  {
                    "name": "gettimeofday",
                    "line_number": 552
                  },
                  {
                    "name": "for",
                    "line_number": 554
                  },
                  {
                    "name": "pow",
                    "line_number": 555
                  },
                  {
                    "name": "for",
                    "line_number": 560
                  },
                  {
                    "name": "for",
                    "line_number": 561
                  },
                  {
                    "name": "for",
                    "line_number": 564
                  },
                  {
                    "name": "for",
                    "line_number": 565
                  }
                ],
                "control_flow": [
                  {
                    "type": "for",
                    "line_number": 545
                  },
                  {
                    "type": "for",
                    "line_number": 554
                  },
                  {
                    "type": "for",
                    "line_number": 560
                  },
                  {
                    "type": "for",
                    "line_number": 561
                  },
                  {
                    "type": "for",
                    "line_number": 564
                  },
                  {
                    "type": "for",
                    "line_number": 565
                  }
                ],
                "complexity": 5,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "gettimeofday",
                  "sizeof",
                  "pow",
                  "for"
                ]
              },
              {
                "name": "quit",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "",
                    "name": "void"
                  }
                ],
                "start_line": 573,
                "end_line": 578,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "I_ShutdownMusic",
                    "line_number": 575
                  },
                  {
                    "name": "I_ShutdownSound",
                    "line_number": 576
                  },
                  {
                    "name": "exit",
                    "line_number": 577
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "void"
                ],
                "outputs": [],
                "dependencies": [
                  "exit",
                  "I_ShutdownMusic",
                  "I_ShutdownSound"
                ]
              },
              {
                "name": "main",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "c"
                  },
                  {
                    "type": "char**",
                    "name": "v"
                  }
                ],
                "start_line": 587,
                "end_line": 737,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "rc",
                    "array_size": null,
                    "line_number": 591
                  },
                  {
                    "type": "int",
                    "name": "nrc",
                    "array_size": null,
                    "line_number": 592
                  },
                  {
                    "type": "int",
                    "name": "sndnum",
                    "array_size": null,
                    "line_number": 593
                  },
                  {
                    "type": "unsigned char",
                    "name": "commandbuf",
                    "array_size": "10",
                    "line_number": 596
                  },
                  {
                    "type": "int",
                    "name": "step",
                    "array_size": null,
                    "line_number": 600
                  },
                  {
                    "type": "int",
                    "name": "vol",
                    "array_size": null,
                    "line_number": 601
                  },
                  {
                    "type": "int",
                    "name": "sep",
                    "array_size": null,
                    "line_number": 602
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 604
                  },
                  {
                    "type": "int",
                    "name": "fd",
                    "array_size": null,
                    "line_number": 698
                  },
                  {
                    "type": "return",
                    "name": "0",
                    "array_size": null,
                    "line_number": 736
                  }
                ],
                "function_calls": [
                  {
                    "name": "grabdata",
                    "line_number": 608
                  },
                  {
                    "name": "initdata",
                    "line_number": 611
                  },
                  {
                    "name": "I_InitSound",
                    "line_number": 613
                  },
                  {
                    "name": "I_InitMusic",
                    "line_number": 615
                  },
                  {
                    "name": "if",
                    "line_number": 617
                  },
                  {
                    "name": "fprintf",
                    "line_number": 618
                  },
                  {
                    "name": "FD_ZERO",
                    "line_number": 621
                  },
                  {
                    "name": "FD_SET",
                    "line_number": 622
                  },
                  {
                    "name": "while",
                    "line_number": 624
                  },
                  {
                    "name": "if",
                    "line_number": 628
                  },
                  {
                    "name": "select",
                    "line_number": 632
                  },
                  {
                    "name": "if",
                    "line_number": 634
                  },
                  {
                    "name": "fprintf",
                    "line_number": 636
                  },
                  {
                    "name": "read",
                    "line_number": 638
                  },
                  {
                    "name": "if",
                    "line_number": 640
                  },
                  {
                    "name": "if",
                    "line_number": 647
                  },
                  {
                    "name": "fprintf",
                    "line_number": 648
                  },
                  {
                    "name": "switch",
                    "line_number": 650
                  },
                  {
                    "name": "read",
                    "line_number": 654
                  },
                  {
                    "name": "if",
                    "line_number": 656
                  },
                  {
                    "name": "fprintf",
                    "line_number": 659
                  },
                  {
                    "name": "addsfx",
                    "line_number": 686
                  },
                  {
                    "name": "outputushort",
                    "line_number": 688
                  },
                  {
                    "name": "read",
                    "line_number": 692
                  },
                  {
                    "name": "read",
                    "line_number": 699
                  },
                  {
                    "name": "open",
                    "line_number": 701
                  },
                  {
                    "name": "write",
                    "line_number": 705
                  },
                  {
                    "name": "close",
                    "line_number": 706
                  },
                  {
                    "name": "fprintf",
                    "line_number": 711
                  },
                  {
                    "name": "if",
                    "line_number": 716
                  },
                  {
                    "name": "quit",
                    "line_number": 718
                  },
                  {
                    "name": "while",
                    "line_number": 720
                  },
                  {
                    "name": "updatesounds",
                    "line_number": 723
                  },
                  {
                    "name": "if",
                    "line_number": 725
                  },
                  {
                    "name": "for",
                    "line_number": 727
                  },
                  {
                    "name": "if",
                    "line_number": 729
                  },
                  {
                    "name": "quit",
                    "line_number": 735
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 617
                  },
                  {
                    "type": "while",
                    "line_number": 624
                  },
                  {
                    "type": "if",
                    "line_number": 628
                  },
                  {
                    "type": "if",
                    "line_number": 634
                  },
                  {
                    "type": "if",
                    "line_number": 640
                  },
                  {
                    "type": "else",
                    "line_number": 645
                  },
                  {
                    "type": "if",
                    "line_number": 647
                  },
                  {
                    "type": "if",
                    "line_number": 656
                  },
                  {
                    "type": "if",
                    "line_number": 716
                  },
                  {
                    "type": "while",
                    "line_number": 720
                  },
                  {
                    "type": "if",
                    "line_number": 725
                  },
                  {
                    "type": "for",
                    "line_number": 727
                  },
                  {
                    "type": "if",
                    "line_number": 729
                  }
                ],
                "complexity": 11,
                "inputs": [
                  "c",
                  "v"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "FD_SET",
                  "write",
                  "fprintf",
                  "select",
                  "outputushort",
                  "open",
                  "for",
                  "addsfx",
                  "initdata",
                  "read",
                  "switch",
                  "updatesounds",
                  "grabdata",
                  "while",
                  "FD_ZERO",
                  "if",
                  "close",
                  "quit",
                  "I_InitSound",
                  "I_InitMusic"
                ]
              },
              {
                "name": "if",
                "return_type": "else",
                "parameters": [
                  {
                    "type": "rc <",
                    "name": "0"
                  }
                ],
                "start_line": 719,
                "end_line": 722,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "quit",
                    "line_number": 721
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "0"
                ],
                "outputs": [
                  "else"
                ],
                "dependencies": [
                  "quit"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "identification",
                "type": "char",
                "storage_class": null,
                "array_size": "4",
                "line_number": 66
              },
              {
                "name": "numlumps",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 67
              },
              {
                "name": "infotableofs",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 68
              },
              {
                "name": "filepos",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 75
              },
              {
                "name": "size",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 76
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "8",
                "line_number": 77
              },
              {
                "name": "numsounds",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 86
              },
              {
                "name": "longsound",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 89
              },
              {
                "name": "sfxdevice",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 98
              },
              {
                "name": "musdevice",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 101
              },
              {
                "name": "channelstep",
                "type": "unsigned int",
                "storage_class": null,
                "array_size": "8",
                "line_number": 107
              },
              {
                "name": "channelstepremainder",
                "type": "unsigned int",
                "storage_class": null,
                "array_size": "8",
                "line_number": 110
              },
              {
                "name": "channelstart",
                "type": "int",
                "storage_class": null,
                "array_size": "8",
                "line_number": 116
              },
              {
                "name": "channelhandles",
                "type": "int",
                "storage_class": null,
                "array_size": "8",
                "line_number": 119
              },
              {
                "name": "channelids",
                "type": "int",
                "storage_class": null,
                "array_size": "8",
                "line_number": 128
              },
              {
                "name": "steptable",
                "type": "int",
                "storage_class": null,
                "array_size": "256",
                "line_number": 132
              },
              {
                "name": "dl",
                "type": "register int",
                "storage_class": null,
                "array_size": null,
                "line_number": 145
              },
              {
                "name": "dr",
                "type": "register int",
                "storage_class": null,
                "array_size": null,
                "line_number": 146
              },
              {
                "name": "sample",
                "type": "register unsigned int",
                "storage_class": null,
                "array_size": null,
                "line_number": 147
              },
              {
                "name": "step",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 153
              },
              {
                "name": "1",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 298
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 308
              },
              {
                "name": "fd",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 394
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "10",
                "line_number": 395
              },
              {
                "name": "now",
                "type": "struct timeval",
                "storage_class": "static",
                "array_size": null,
                "line_number": 406
              },
              {
                "name": "whocares",
                "type": "struct timezone",
                "storage_class": "static",
                "array_size": null,
                "line_number": 408
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 427
              },
              {
                "name": "slot",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 432
              },
              {
                "name": "rightvol",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 433
              },
              {
                "name": "leftvol",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 434
              },
              {
                "name": "rc",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 507
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 540
              },
              {
                "name": "j",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 541
              },
              {
                "name": "fdset",
                "type": "fd_set",
                "storage_class": null,
                "array_size": null,
                "line_number": 582
              },
              {
                "name": "scratchset",
                "type": "fd_set",
                "storage_class": null,
                "array_size": null,
                "line_number": 583
              },
              {
                "name": "rc",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 594
              },
              {
                "name": "nrc",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 595
              },
              {
                "name": "sndnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 596
              },
              {
                "name": "commandbuf",
                "type": "unsigned char",
                "storage_class": null,
                "array_size": "10",
                "line_number": 599
              },
              {
                "name": "step",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 603
              },
              {
                "name": "vol",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 604
              },
              {
                "name": "sep",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 605
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 607
              },
              {
                "name": "fd",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 701
              },
              {
                "name": "0",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 739
              }
            ],
            "defines": []
          },
          "source_code_path": "sndserv/soundsrv.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "Functions with high cyclomatic complexity",
            "High number of global variables"
          ]
        },
        {
          "name": "soundsrv.h",
          "type": "file",
          "size": 1463,
          "last_modified": "2024-09-05T16:00:06.284317",
          "path": "sndserv/soundsrv.h",
          "readme": "# soundsrv.h\n\nThis file contains functionality related to soundsrv.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": [
              {
                "name": "SAMPLECOUNT",
                "value": "512",
                "line_number": 38
              },
              {
                "name": "MIXBUFFERSIZE",
                "value": "(SAMPLECOUNT*2*2)",
                "line_number": 39
              },
              {
                "name": "SPEED",
                "value": "11025",
                "line_number": 40
              }
            ]
          },
          "source_code_path": "sndserv/soundsrv.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        },
        {
          "name": "soundst.h",
          "type": "file",
          "size": 5502,
          "last_modified": "2024-09-05T16:00:06.308319",
          "path": "sndserv/soundst.h",
          "readme": "# soundst.h\n\nThis file contains functionality related to soundst.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "lumpnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 77
              },
              {
                "name": "handle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 83
              },
              {
                "name": "sfxinfo_t",
                "type": "typedef struct sfxinfo_struct",
                "storage_class": null,
                "array_size": null,
                "line_number": 92
              },
              {
                "name": "singularity",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 100
              },
              {
                "name": "priority",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 103
              },
              {
                "name": "pitch",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 109
              },
              {
                "name": "volume",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 112
              },
              {
                "name": "usefulness",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 120
              },
              {
                "name": "lumpnum",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 123
              },
              {
                "name": "handle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 137
              }
            ],
            "defines": [
              {
                "name": "S_MAX_VOLUME",
                "value": "127",
                "line_number": 39
              },
              {
                "name": "S_CLIPPING_DIST",
                "value": "(1200*0x10000)",
                "line_number": 43
              },
              {
                "name": "S_CLOSE_DIST",
                "value": "(200*0x10000)",
                "line_number": 46
              },
              {
                "name": "S_ATTENUATOR",
                "value": "((S_CLIPPING_DIST-S_CLOSE_DIST)>>FRACBITS)",
                "line_number": 49
              },
              {
                "name": "NORM_PITCH",
                "value": "128",
                "line_number": 51
              },
              {
                "name": "NORM_PRIORITY",
                "value": "64",
                "line_number": 52
              },
              {
                "name": "NORM_VOLUME",
                "value": "snd_MaxVolume",
                "line_number": 53
              },
              {
                "name": "S_PITCH_PERTURB",
                "value": "1",
                "line_number": 55
              },
              {
                "name": "NORM_SEP",
                "value": "128",
                "line_number": 56
              },
              {
                "name": "S_STEREO_SWING",
                "value": "(96*0x10000)",
                "line_number": 57
              },
              {
                "name": "S_IFRACVOL",
                "value": "30",
                "line_number": 60
              },
              {
                "name": "NA",
                "value": "0",
                "line_number": 62
              },
              {
                "name": "S_NUMCHANNELS",
                "value": "2",
                "line_number": 63
              },
              {
                "name": "FREQ_LOW",
                "value": "0x40",
                "line_number": 231
              },
              {
                "name": "FREQ_NORM",
                "value": "0x80",
                "line_number": 232
              },
              {
                "name": "FREQ_HIGH",
                "value": "0xff",
                "line_number": 233
              }
            ]
          },
          "source_code_path": "sndserv/soundst.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "wadread.c",
          "type": "file",
          "size": 5200,
          "last_modified": "2024-09-05T16:00:06.333318",
          "path": "sndserv/wadread.c",
          "readme": "# wadread.c\n\nThis file contains functionality related to wadread.",
          "dependencies": [
            "unistd.h",
            "string.h",
            "fcntl.h",
            "stdio.h",
            "soundsrv.h",
            "sys/stat.h",
            "wadread.h",
            "ctype.h",
            "stdlib.h",
            "malloc.h"
          ],
          "inputs": [
            "i++",
            "x",
            "handle",
            "*s",
            "msg",
            "wadname"
          ],
          "outputs": [
            "unsigned long",
            "process the table to make the endianness right and shift it down",
            "static void",
            "unsigned short",
            "int"
          ],
          "content": {
            "functions": [
              {
                "name": "SwapLONG",
                "return_type": "unsigned long",
                "parameters": [
                  {
                    "type": "unsigned long",
                    "name": "x"
                  }
                ],
                "start_line": 107,
                "end_line": 114,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "x"
                ],
                "outputs": [
                  "unsigned long"
                ],
                "dependencies": []
              },
              {
                "name": "SwapSHORT",
                "return_type": "unsigned short",
                "parameters": [
                  {
                    "type": "unsigned short",
                    "name": "x"
                  }
                ],
                "start_line": 116,
                "end_line": 120,
                "local_variables": [],
                "function_calls": [],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "x"
                ],
                "outputs": [
                  "unsigned short"
                ],
                "dependencies": []
              },
              {
                "name": "derror",
                "return_type": "static void",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "msg"
                  }
                ],
                "start_line": 127,
                "end_line": 131,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "fprintf",
                    "line_number": 129
                  },
                  {
                    "name": "exit",
                    "line_number": 130
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "msg"
                ],
                "outputs": [
                  "static void"
                ],
                "dependencies": [
                  "exit",
                  "fprintf"
                ]
              },
              {
                "name": "strupr",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char",
                    "name": "*s"
                  }
                ],
                "start_line": 134,
                "end_line": 138,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "while",
                    "line_number": 136
                  },
                  {
                    "name": "toupper",
                    "line_number": 137
                  }
                ],
                "control_flow": [
                  {
                    "type": "while",
                    "line_number": 136
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "*s"
                ],
                "outputs": [],
                "dependencies": [
                  "toupper",
                  "while"
                ]
              },
              {
                "name": "filelength",
                "return_type": "int",
                "parameters": [
                  {
                    "type": "int",
                    "name": "handle"
                  }
                ],
                "start_line": 140,
                "end_line": 148,
                "local_variables": [
                  {
                    "type": "struct stat",
                    "name": "fileinfo",
                    "array_size": null,
                    "line_number": 142
                  }
                ],
                "function_calls": [
                  {
                    "name": "if",
                    "line_number": 144
                  },
                  {
                    "name": "fstat",
                    "line_number": 144
                  },
                  {
                    "name": "fprintf",
                    "line_number": 145
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 144
                  }
                ],
                "complexity": 2,
                "inputs": [
                  "handle"
                ],
                "outputs": [
                  "int"
                ],
                "dependencies": [
                  "fstat",
                  "fprintf",
                  "if"
                ]
              },
              {
                "name": "openwad",
                "return_type": "void",
                "parameters": [
                  {
                    "type": "char*",
                    "name": "wadname"
                  }
                ],
                "start_line": 152,
                "end_line": 195,
                "local_variables": [
                  {
                    "type": "int",
                    "name": "wadfile",
                    "array_size": null,
                    "line_number": 155
                  },
                  {
                    "type": "int",
                    "name": "tableoffset",
                    "array_size": null,
                    "line_number": 156
                  },
                  {
                    "type": "int",
                    "name": "tablelength",
                    "array_size": null,
                    "line_number": 157
                  },
                  {
                    "type": "int",
                    "name": "tablefilelength",
                    "array_size": null,
                    "line_number": 158
                  },
                  {
                    "type": "int",
                    "name": "i",
                    "array_size": null,
                    "line_number": 159
                  },
                  {
                    "type": "wadinfo_t",
                    "name": "header",
                    "array_size": null,
                    "line_number": 160
                  }
                ],
                "function_calls": [
                  {
                    "name": "open",
                    "line_number": 164
                  },
                  {
                    "name": "if",
                    "line_number": 166
                  },
                  {
                    "name": "derror",
                    "line_number": 167
                  },
                  {
                    "name": "read",
                    "line_number": 169
                  },
                  {
                    "name": "if",
                    "line_number": 171
                  },
                  {
                    "name": "strncmp",
                    "line_number": 171
                  },
                  {
                    "name": "derror",
                    "line_number": 172
                  },
                  {
                    "name": "LONG",
                    "line_number": 174
                  },
                  {
                    "name": "LONG",
                    "line_number": 175
                  },
                  {
                    "name": "sizeof",
                    "line_number": 176
                  },
                  {
                    "name": "sizeof",
                    "line_number": 177
                  },
                  {
                    "name": "malloc",
                    "line_number": 178
                  },
                  {
                    "name": "lseek",
                    "line_number": 182
                  },
                  {
                    "name": "read",
                    "line_number": 183
                  },
                  {
                    "name": "for",
                    "line_number": 186
                  },
                  {
                    "name": "strncpy",
                    "line_number": 188
                  },
                  {
                    "name": "LONG",
                    "line_number": 190
                  },
                  {
                    "name": "LONG",
                    "line_number": 191
                  },
                  {
                    "name": "fprintf",
                    "line_number": 192
                  }
                ],
                "control_flow": [
                  {
                    "type": "if",
                    "line_number": 166
                  },
                  {
                    "type": "if",
                    "line_number": 171
                  },
                  {
                    "type": "for",
                    "line_number": 186
                  }
                ],
                "complexity": 4,
                "inputs": [
                  "wadname"
                ],
                "outputs": [],
                "dependencies": [
                  "fprintf",
                  "strncpy",
                  "open",
                  "if",
                  "for",
                  "lseek",
                  "sizeof",
                  "LONG",
                  "malloc",
                  "read",
                  "strncmp",
                  "derror"
                ]
              },
              {
                "name": "for",
                "return_type": "process the table to make the endianness right and shift it down",
                "parameters": [
                  {
                    "type": "i=0 ; i<numlumps ;",
                    "name": "i++"
                  }
                ],
                "start_line": 185,
                "end_line": 192,
                "local_variables": [],
                "function_calls": [
                  {
                    "name": "strncpy",
                    "line_number": 187
                  },
                  {
                    "name": "LONG",
                    "line_number": 189
                  },
                  {
                    "name": "LONG",
                    "line_number": 190
                  },
                  {
                    "name": "fprintf",
                    "line_number": 191
                  }
                ],
                "control_flow": [],
                "complexity": 1,
                "inputs": [
                  "i++"
                ],
                "outputs": [
                  "process the table to make the endianness right and shift it down"
                ],
                "dependencies": [
                  "fprintf",
                  "LONG",
                  "strncpy"
                ]
              }
            ],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              },
              {
                "name": "identification",
                "type": "char",
                "storage_class": null,
                "array_size": "4",
                "line_number": 59
              },
              {
                "name": "numlumps",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 60
              },
              {
                "name": "infotableofs",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 61
              },
              {
                "name": "filepos",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 67
              },
              {
                "name": "size",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 68
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "8",
                "line_number": 69
              },
              {
                "name": "handle",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 75
              },
              {
                "name": "filepos",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 76
              },
              {
                "name": "size",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 77
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "8",
                "line_number": 78
              },
              {
                "name": "numlumps",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 85
              },
              {
                "name": "fileinfo",
                "type": "struct stat",
                "storage_class": null,
                "array_size": null,
                "line_number": 142
              },
              {
                "name": "wadfile",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 155
              },
              {
                "name": "tableoffset",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 156
              },
              {
                "name": "tablelength",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 157
              },
              {
                "name": "tablefilelength",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 158
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 159
              },
              {
                "name": "header",
                "type": "wadinfo_t",
                "storage_class": null,
                "array_size": null,
                "line_number": 160
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 203
              },
              {
                "name": "lump",
                "type": "return",
                "storage_class": null,
                "array_size": null,
                "line_number": 226
              },
              {
                "name": "i",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 238
              },
              {
                "name": "size",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 239
              },
              {
                "name": "paddedsize",
                "type": "int",
                "storage_class": null,
                "array_size": null,
                "line_number": 240
              },
              {
                "name": "name",
                "type": "char",
                "storage_class": null,
                "array_size": "20",
                "line_number": 241
              }
            ],
            "defines": [
              {
                "name": "strcmpi",
                "value": "strcasecmp",
                "line_number": 90
              }
            ]
          },
          "source_code_path": "sndserv/wadread.c",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": [
            "High number of global variables"
          ]
        },
        {
          "name": "wadread.h",
          "type": "file",
          "size": 1844,
          "last_modified": "2024-09-05T16:00:06.357844",
          "path": "sndserv/wadread.h",
          "readme": "# wadread.h\n\nThis file contains functionality related to wadread.",
          "dependencies": [],
          "inputs": [],
          "outputs": [],
          "content": {
            "functions": [],
            "structs": [],
            "globals": [
              {
                "name": "WARRANTY",
                "type": "but WITHOUT ANY",
                "storage_class": null,
                "array_size": null,
                "line_number": 13
              }
            ],
            "defines": []
          },
          "source_code_path": "sndserv/wadread.h",
          "refactoring_potential": "To be analyzed by LLM",
          "optimization_opportunities": []
        }
      ]
    }
  ]
}